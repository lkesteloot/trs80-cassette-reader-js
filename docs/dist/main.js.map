{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/z80-base/src/index.ts","webpack:///./node_modules/teamten-ts-utils/src/index.ts","webpack:///./node_modules/strongly-typed-events/dist/index.js","webpack:///./node_modules/ste-core/dist/index.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/z80-disasm/src/index.ts","webpack:///./node_modules/ste-core/dist/subscription.js","webpack:///./node_modules/z80-base/src/Utils.ts","webpack:///./node_modules/z80-disasm/src/Instruction.ts","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/z80-emulator/src/index.ts","webpack:///./node_modules/ste-core/dist/dispatching.js","webpack:///./node_modules/ste-core/dist/management.js","webpack:///./node_modules/ste-events/dist/index.js","webpack:///./node_modules/ste-events/dist/events.js","webpack:///./node_modules/ste-simple-events/dist/index.js","webpack:///./node_modules/ste-simple-events/dist/simple-events.js","webpack:///./node_modules/ste-signals/dist/index.js","webpack:///./node_modules/ste-signals/dist/signals.js","webpack:///./node_modules/z80-base/src/Register.ts","webpack:///./node_modules/z80-base/src/RegisterSet.ts","webpack:///./node_modules/z80-base/src/Flag.ts","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/teamten-ts-utils/src/Utils.ts","webpack:///./node_modules/teamten-ts-utils/src/ByteReader.ts","webpack:///./node_modules/z80-emulator/src/Z80.ts","webpack:///./node_modules/z80-emulator/src/Decode.ts","webpack:///./node_modules/z80-disasm/src/Disasm.ts","webpack:///./node_modules/z80-disasm/src/Preamble.ts","webpack:///./node_modules/z80-disasm/src/KnownLabels.ts","webpack:///./node_modules/z80-disasm/src/TextFormatter.ts","webpack:///./src/BitData.ts","webpack:///./src/BitType.ts","webpack:///./src/TapeDecoderState.ts","webpack:///./src/ByteData.ts","webpack:///./src/DisplaySamples.ts","webpack:///./src/Utils.ts","webpack:///./src/AudioUtils.ts","webpack:///./src/HighSpeedTapeEncoder.ts","webpack:///./src/LowSpeedTapeEncoder.ts","webpack:///./src/WavFile.ts","webpack:///./src/Program.ts","webpack:///./src/Annotations.ts","webpack:///./src/HighSpeedTapeDecoder.ts","webpack:///./src/LowSpeedTapeDecoder.ts","webpack:///./src/Decoder.ts","webpack:///./src/Tape.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/is-in-browser/dist/module.js","webpack:///./node_modules/tiny-warning/dist/tiny-warning.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/jss/dist/jss.esm.js","webpack:///./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js","webpack:///./node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js","webpack:///./node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js","webpack:///./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js","webpack:///./node_modules/jss-plugin-extend/dist/jss-plugin-extend.esm.js","webpack:///./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js","webpack:///./node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js","webpack:///./node_modules/hyphenate-style-name/index.js","webpack:///./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js","webpack:///./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js","webpack:///./node_modules/jss-plugin-expand/dist/jss-plugin-expand.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/css-vendor/dist/css-vendor.esm.js","webpack:///./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js","webpack:///./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js","webpack:///./node_modules/jss-preset-default/dist/jss-preset-default.esm.js","webpack:///./src/Jss.ts","webpack:///./src/Highlight.ts","webpack:///./src/Highlighter.ts","webpack:///./node_modules/trs80-base/src/ProgramAnnotation.ts","webpack:///./node_modules/trs80-base/src/Trs80File.ts","webpack:///./node_modules/trs80-base/src/Basic.ts","webpack:///./node_modules/trs80-base/src/CmdProgram.ts","webpack:///./node_modules/trs80-base/src/SystemProgram.ts","webpack:///./node_modules/trs80-base/src/RawBinaryFile.ts","webpack:///./node_modules/trs80-base/src/FloppyDisk.ts","webpack:///./node_modules/trs80-base/src/Jv1FloppyDisk.ts","webpack:///./node_modules/trs80-base/src/Jv3FloppyDisk.ts","webpack:///./node_modules/trs80-base/src/Crc16.ts","webpack:///./node_modules/trs80-base/src/DmkFloppyDisk.ts","webpack:///./node_modules/trs80-base/src/Trs80FileDecoder.ts","webpack:///./node_modules/trs80-base/src/Cassette.ts","webpack:///./node_modules/trs80-base/src/Trsdos.ts","webpack:///./node_modules/trs80-base/src/Addresses.ts","webpack:///./node_modules/trs80-base/src/index.ts","webpack:///./src/BasicRender.ts","webpack:///./node_modules/trs80-emulator/src/CassettePlayer.ts","webpack:///./node_modules/trs80-emulator/src/Keyboard.ts","webpack:///./node_modules/trs80-emulator/src/Model1Level1Rom.ts","webpack:///./node_modules/trs80-emulator/src/Model1Level2Rom.ts","webpack:///./node_modules/trs80-emulator/src/Model3Rom.ts","webpack:///./node_modules/trs80-emulator/src/Config.ts","webpack:///./node_modules/trs80-emulator/src/EventScheduler.ts","webpack:///./node_modules/trs80-emulator/src/FloppyDiskController.ts","webpack:///./node_modules/trs80-emulator/src/SoundPlayer.ts","webpack:///./node_modules/trs80-emulator/src/Trs80.ts","webpack:///./node_modules/trs80-emulator/src/Trs80Screen.ts","webpack:///./node_modules/trs80-emulator/src/Fonts.ts","webpack:///./node_modules/trs80-emulator/src/CanvasScreen.ts","webpack:///./node_modules/trs80-emulator/src/Utils.ts","webpack:///./node_modules/trs80-emulator/src/SettingsPanel.ts","webpack:///./node_modules/trs80-emulator/src/ControlPanel.ts","webpack:///./node_modules/trs80-emulator/src/ProgressBar.ts","webpack:///./node_modules/trs80-emulator/src/DriveIndicators.ts","webpack:///./node_modules/trs80-emulator/src/index.ts","webpack:///./node_modules/trs80-disasm/src/KnownLabels.ts","webpack:///./node_modules/trs80-disasm/src/Main.ts","webpack:///./node_modules/trs80-disasm/src/index.ts","webpack:///./src/SystemProgramRender.ts","webpack:///./src/CmdProgramRender.ts","webpack:///./src/Hexdump.ts","webpack:///./src/WaveformDisplay.ts","webpack:///./src/Edtasm.ts","webpack:///./src/TapeBrowser.ts","webpack:///./src/Uploader.ts","webpack:///./node_modules/split.js/dist/split.es.js","webpack:///./src/Test.ts","webpack:///./src/Main.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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AAEA;AACA;;;;;;;;;;;;;ACfA,kCAAsB;;;;;;;;ACDT;AACb;AACA,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,mBAAmB,mBAAO,CAAC,EAAc;AACzC,qBAAqB,mBAAO,CAAC,CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,EAAE;AACjB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E,2CAA2C,mCAAmC;AAC9E,mCAAmC,2BAA2B;AAC9D,mCAAmC,2BAA2B;AAC9D,mCAAmC,2BAA2B;AAC9D,mCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACjRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,EAAU;AACjC,mDAAmD,qCAAqC,iCAAiC,EAAE,EAAE;AAC7H,qDAAqD,qCAAqC,mCAAmC,EAAE,EAAE;AACjI,6CAA6C,qCAAqC,2BAA2B,EAAE,EAAE;AACjH,uDAAuD,qCAAqC,qCAAqC,EAAE,EAAE;;;;;;;;ACPxH;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,CAAU;AACnnLa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,EAAiB;AAC/C,yDAAyD,qCAAqC,8CAA8C,EAAE,EAAE;AAChJ,2DAA2D,qCAAqC,gDAAgD,EAAE,EAAE;AACpJ,mDAAmD,qCAAqC,wCAAwC,EAAE,EAAE;AACpI,6DAA6D,qCAAqC,kDAAkD,EAAE,EAAE;;;;;;;;ACP3I;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,CAAU;AACna;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,EAAW;AACnC,oDAAoD,qCAAqC,mCAAmC,EAAE,EAAE;AAChI,sDAAsD,qCAAqC,qCAAqC,EAAE,EAAE;AACpI,8CAA8C,qCAAqC,6BAA6B,EAAE,EAAE;;;;;;;;ACNvG;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AClHA;;GAEG;AACH,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAEvG;;GAEG;AACH,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAEzG;;GAEG;AACH,SAAgB,SAAS,CAAC,CAAS;IAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AACzC,CAAC;AAFD,8BAEC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,CAAS;IAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AACzC,CAAC;AAFD,8BAEC;;;;;;;;;;AC3CD,uCAAqC;AAErC;;GAEG;AACH,MAAa,WAAW;IAAxB;QACI,kBAAkB;QACX,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QAEtB,kBAAkB;QACX,WAAM,GAAW,CAAC,CAAC;QACnB,MAAC,GAAW,CAAC,CAAC;QACd,MAAC,GAAW,CAAC,CAAC,CAAE,mBAAmB;QACnC,OAAE,GAAW,CAAC,CAAC,CAAC,cAAc;QAC9B,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,CAAC,CAAC;QACjB,OAAE,GAAW,CAAC,CAAC;QACf,WAAM,GAAW,CAAC,CAAC;IAwG9B,CAAC;IAtGG,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAAC;QACD,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,GAAG;QACH,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,GAAG,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,GAAG;QACH,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,GAAG,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,GAAG;QACH,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,GAAG,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,GAAG;QACH,OAAO,UAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,IAAI,GAAG,CAAC,KAAa;QACjB,IAAI,CAAC,EAAE,GAAG,YAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG;IACH,IAAI,SAAS;QACT,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC9C,CAAC;CACJ;AA/HD,kCA+HC;AAED;;GAEG;AACU,yBAAiB,GAAe;IACzC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAC1C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtB,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ;CAAC,CAAC;;;;;;;;;;AC9IxD;;GAEG;AACH,IAAY,IAsCX;AAtCD,WAAY,IAAI;IACZ;;;OAGG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAK;IACL;;OAEG;IACH,2BAAS;IACT;;OAEG;IACH,0BAAQ;IACR;;OAEG;IACH,4BAAS;IACT;;OAEG;IACH,0BAAQ;IACR;;OAEG;IACH,2BAAQ;AACZ,CAAC,EAtCW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAsCf;;;;;;;ACzCD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;ACtBA;;GAEG;AACH,SAAgB,YAAY,CAAC,CAAU;IACnC,OAAO,CAAC,CAAC,UAAU,EAAE;QACjB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;KAC/B;AACL,CAAC;AAJD,oCAIC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAC,CAAkB;IACzC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/D,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACtD,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpC,IAAI,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,CAAC,EAAE;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE;YAC/C,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAChD;KACJ;IAED,OAAO,CAAC,CAAC;AACb,CAAC;AAbD,gCAaC;AAED;;GAEG;AACH,SAAgB,gBAAgB,CAAC,KAAmB;IAChD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACvE,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;IAExC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACtB,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC3B,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;KACzB;IAED,OAAO,QAAQ,CAAC;AACpB,CAAC;AAXD,4CAWC;AAED;;;GAGG;AACH,SAAgB,UAAU;IACtB,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAE5B,OAAO,GAAG,EAAE;QACR,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,OAAO,GAAG,GAAG,GAAG,UAAU,CAAC;QACjC,UAAU,GAAG,GAAG,CAAC;QACjB,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;AACN,CAAC;AATD,gCASC;;;;;;;;;;;ACxDY,WAAG,GAAG,CAAC,CAAC,CAAC;AAEtB;;GAEG;AACH,MAAa,UAAU;IAInB,YAAY,CAAa;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,WAAG,CAAC;IAC/D,CAAC;IAED;;;;;OAKG;IACI,IAAI,CAAC,QAAgB,CAAC;QACzB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAC7B,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAG,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,IAAI;QACP,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;;;;OAMG;IACI,SAAS,CAAC,sBAA+B;QAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,GAAG,KAAK,WAAG,EAAE;YACb,OAAO,WAAG,CAAC;SACd;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,IAAI,KAAK,WAAG,EAAE;YACd,OAAO,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAG,CAAC;SAC7C;QAED,OAAO,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,MAAc;QAC5B,sFAAsF;QACtF,6EAA6E;QAC7E,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACpF,CAAC;IAED;;OAEG;IACI,SAAS,CAAC,MAAc;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC;QAEnB,0BAA0B;QAC1B,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;IAC3C,CAAC;CACJ;AA9ED,gCA8EC;;;;;;;;;;ACpFD,0CAAgE;AAChE,yCAAgC;AAGhC;;GAEG;AACH,MAAa,GAAG;IAiBZ,YAAY,GAAQ;QAhBpB;;WAEG;QACI,SAAI,GAAgB,IAAI,sBAAW,EAAE,CAAC;QAK7C;;;WAGG;QACI,cAAS,GAAa,EAAE,CAAC,CAAC,yCAAyC;QACnE,gBAAW,GAAa,EAAE,CAAC,CAAC,oCAAoC;QAChE,eAAU,GAAa,EAAE,CAAC,CAAC,sCAAsC;QAGpE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,sBAAW,EAAE,CAAC;IAClC,CAAC;IAED;;OAEG;IACI,IAAI;QACP,eAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED;;OAEG;IACI,cAAc,CAAC,KAAa;QAC/B,IAAI,CAAC,GAAG,CAAC,WAAW,IAAI,KAAK,CAAC;IAClC,CAAC;IAED;;OAEG;IACI,iBAAiB;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC;IAED;;OAEG;IACI,oBAAoB;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,OAAe;QAC3B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,OAAe;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QAE5C,OAAO,eAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,gBAAgB,CAAC,OAAe;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,SAAS,CAAC,OAAe,EAAE,KAAa;QAC3C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,iBAAiB,CAAC,OAAe,EAAE,KAAa;QACnD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACI,SAAS,CAAC,OAAe,EAAE,KAAa;QAC3C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,OAAe;QAC3B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,KAAa;QACzB,IAAI,CAAC,QAAQ,CAAC,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,KAAa;QACzB,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,OAAO;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,OAAO,eAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,OAAO;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;OAGG;IACK,SAAS,CAAC,QAAiB;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAClB,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAE5B,IAAI,QAAQ,EAAE;YACV,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;gBAClB,KAAK,CAAC,CAAC;gBACP,KAAK,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;oBACtB,MAAM;gBAEV,KAAK,CAAC,CAAC,CAAC;oBACJ,mDAAmD;oBACnD,qDAAqD;oBACrD,MAAM,OAAO,GAAG,eAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBACtC,MAAM;iBACT;gBAED;oBACI,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC1D;SACJ;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;SACzB;IACL,CAAC;IAEO,UAAU;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAE,KAAK,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC9B,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC;gBACnB,IAAI,KAAK,CAAC,CAAC;aACd;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;QAED,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAEjC,CAAC;CACJ;AAlND,kBAkNC;;;;;;;;;ACzND,gEAAgE;;AAGhE,0CAAmH;AAInH,iDAAiD;AACjD,MAAM,iBAAiB,GAAG,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,CAAC,CAAC;AACvE,MAAM,iBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,CAAC,CAAC;AACvE,MAAM,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5D,MAAM,gBAAgB,GAAG,CAAC,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAE5D,MAAM,aAAa,GAAG,IAAI,GAAG,EAAsB,CAAC;AACpD,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;AACrC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5D,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IACpC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5D,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;QAClB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;SAAM;QACH,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACnF,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;SAAM;QACH,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IAChC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QAC1D,KAAK,GAAG,CAAC,CAAC,CAAC,wCAAwC;KACtD;IACD,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE;QAClC,KAAK,IAAI,IAAI,CAAC,CAAC,wCAAwC;KAC1D;IACD,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE;QACnB,KAAK,GAAG,eAAI,CAAC,CAAC,CAAC;KAClB;IACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChK;SAAM;QACH,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvJ;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;SAAM;QACH,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;AAC3H,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;SAAM;QACH,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACzG,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;SAAM;QACH,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IAC/B,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAClJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,eAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,GAAG,CAAC,SAAS,CAAC,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,GAAW,CAAC;IAChB,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IAC1E,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IAC1E,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;AAC9E,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAChC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7C,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAClD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KACjC;AACL,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;AAClD,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,MAAM,WAAW,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;AAClD,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,UAAU,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7C,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAClD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,MAAM,aAAa,GAAG,IAAI,GAAG,EAAsB,CAAC;AACpD,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;AAClD,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AACpN,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AAC3M,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AACpN,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AAC3M,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC3D,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AACpN,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACpE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AAC3M,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AACpN,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,CAAC,CAAC;KACf;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC;AAC3M,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,gBAAK,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpJ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;IACvC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC;IACzJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,IAAI,GAAG,eAAI,CAAC,IAAI,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,KAAK,GAAG,eAAI,CAAC,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChL,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,gBAAK,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpJ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;IACvC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC;IACzJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,IAAI,GAAG,eAAI,CAAC,IAAI,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,KAAK,GAAG,eAAI,CAAC,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChL,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,gBAAK,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpJ,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE;QACnB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;IACvC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC;IACzJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,IAAI,GAAG,eAAI,CAAC,IAAI,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,KAAK,eAAI,CAAC,CAAC,EAAE;QAC7C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5C;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,KAAK,GAAG,eAAI,CAAC,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;QAChB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACxC;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;QAChB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACxC;AACL,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,gBAAK,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpJ,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE;QACnB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;IACvC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC;IACzJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAAE,IAAI,GAAG,eAAI,CAAC,IAAI,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,eAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,KAAK,eAAI,CAAC,CAAC,EAAE;QAC7C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5C;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,KAAK,GAAG,eAAI,CAAC,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;QAChB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACxC;IACD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,eAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5K,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;QAChB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACxC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAsB,CAAC;AAClD,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,GAAG,eAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,gBAAK,CAAC,KAAK,CAAC,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,eAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5I,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,gBAAK,CAAC,MAAM,CAAC,CAAC;KAC1B;IACD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,qBAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7D,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC3C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;IACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IACrC,IAAI,IAAI,IAAI,CAAC;QAAE,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,IAAI,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC,IAAI,IAAI,GAAG,eAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,UAAU,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7C,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAClD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,aAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,eAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IAC/B,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IACpB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,MAAM,aAAa,GAAG,IAAI,GAAG,EAAsB,CAAC;AACpD,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5B,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACrC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,IAAI,KAAa,CAAC;IAClB,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB;QACI,IAAI,KAAa,CAAC;QAClB,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,eAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IACD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,eAAI,CAAC,EAAE,GAAG,eAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,GAAG,eAAI,CAAC,CAAC,CAAC;KACxB;IACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,CAAC,IAAI,eAAI,CAAC,CAAC,CAAC;KACf;IACD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAe,CAAC,CAAC;AAC/D,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAQ,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClD,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,SAAS,gBAAgB,CAAC,GAAQ;IAC9B,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,IAAI,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/C,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACzC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAErC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,GAAQ;IACtB,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,GAAQ;IACtB,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAS,UAAU,CAAC,GAAQ;IACxB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,IAAI,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEjC,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,GAAQ;IACtB,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,GAAQ;IACtB,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAS,UAAU,CAAC,GAAQ;IACxB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,IAAI,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/C,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEjC,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9D;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AAED;;GAEG;AACH,SAAgB,MAAM,CAAC,GAAQ;IAC3B,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KACrD;SAAM;QACH,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACL,CAAC;AARD,wBAQC;;;;;;;;;;;;;ACroRD,gEAAuC;AACvC,6CAA0C;AAC1C,0CAA8E;AAC9E,2CAAoC;AAEpC,kDAAkD;AAClD,MAAM,MAAM,GAAG,QAAQ,CAAC;AAExB,6BAA6B;AAC7B,MAAM,QAAQ,GAAG,EAAE,GAAC,IAAI,CAAC;AAEzB,uDAAuD;AACvD,SAAS,WAAW,CAAC,CAAS;IAC1B,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC;AAC9B,CAAC;AAED,2DAA2D;AAC3D,SAAS,MAAM,CAAC,CAAS;IACrB,OAAO,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;AACtD,CAAC;AAED;;GAEG;AACH,MAAa,MAAM;IAAnB;QACqB,WAAM,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,eAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;QACtC,cAAS,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,iBAAY,GAAgC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChE,gBAAW,GAAG,IAAI,GAAG,EAAkB,CAAC;QACzD;;WAEG;QACK,gBAAW,GAAa,EAAE,CAAC;QACnC;;;WAGG;QACK,wBAAmB,GAAG,IAAI,GAAG,EAAU,CAAC;IAwWpD,CAAC;IAtWG;;OAEG;IACI,QAAQ,CAAC,GAAsB,EAAE,OAAe;QACnD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3D,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,UAAkB;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACK,cAAc,CAAC,OAAe;;QAClC,8DAA8D;QAC9D,IAAI,KAAK,GAAa,EAAE,CAAC;QAEzB,qBAAqB;QACrB,MAAM,IAAI,GAAG,GAAW,EAAE;YACtB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAClC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,OAAO,GAAG,gBAAK,CAAC,OAAO,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEF,MAAM,YAAY,GAAG,OAAO,CAAC;QAC7B,IAAI,UAAU,GAAuB,SAAS,CAAC;QAE/C,0BAA0B;QAC1B,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC;QAClB,IAAI,GAAG,GAAQ,sBAAS,CAAC;QAEzB,IAAI,WAAoC,CAAC;QAEzC,OAAO,WAAW,KAAK,SAAS,EAAE;YAC9B,IAAI,KAAK,GAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,KAAK,KAAK,SAAS,EAAE;gBACrB,OAAO;gBACP,4CAA4C;gBAC5C,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,GAAG,gBAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1D,WAAW,GAAG,IAAI,yBAAW,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;aAC3F;iBAAM,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;gBAClC,sBAAsB;gBACtB,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;gBAClB,IAAI,GAAG,IAAI,EAAE,CAAC;aACjB;iBAAM;gBACH,sCAAsC;gBACtC,MAAM,IAAI,GAAa,MAAC,KAAK,CAAC,MAAM,uCAAI,EAAE,EAAC,CAAC,KAAK,EAAE,CAAC;gBAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBAElB,IAAI,OAAgB,CAAC;oBACrB,GAAG;wBACC,OAAO,GAAG,KAAK,CAAC;wBAEhB,uBAAuB;wBACvB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBAC9B,IAAI,GAAG,IAAI,CAAC,EAAE;4BACV,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC;4BACvB,MAAM,QAAQ,GAAG,IAAI,EAAE,CAAC;4BACxB,MAAM,IAAI,GAAG,eAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;4BACrC,IAAI,MAAc,CAAC;4BACnB,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE;gCACtD,UAAU,GAAG,IAAI,CAAC;gCAClB,MAAM,GAAG,MAAM,CAAC;6BACnB;iCAAM;gCACH,MAAM,GAAG,IAAI,GAAG,gBAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gCAE/B,iFAAiF;gCACjF,+DAA+D;gCAC/D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;6BACtC;4BACD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACxD,OAAO,GAAG,IAAI,CAAC;yBAClB;wBAED,uBAAuB;wBACvB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;4BACZ,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;yBAC3B;wBACD,IAAI,GAAG,IAAI,CAAC,EAAE;4BACV,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC;4BAClB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,gBAAK,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACrE,OAAO,GAAG,IAAI,CAAC;yBAClB;wBAED,yBAAyB;wBACzB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAC5B,IAAI,GAAG,IAAI,CAAC,EAAE;4BACV,MAAM,MAAM,GAAG,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;4BAClC,UAAU,GAAG,OAAO,GAAG,MAAM,CAAC;4BAC9B,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACxD,OAAO,GAAG,IAAI,CAAC;yBAClB;qBACJ,QAAQ,OAAO,EAAE;oBAElB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;iBACjB;gBAED,WAAW,GAAG,IAAI,yBAAW,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACvF,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC1B,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;iBACvC;aACJ;SACJ;QAED,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,OAAe;QACvC,MAAM,YAAY,GAAG,OAAO,CAAC;QAE7B,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,IAAI,QAAQ,GAAuB,SAAS,CAAC;QAE7C,2DAA2D;QAC3D,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;YAC9B,iCAAiC;YACjC,QAAQ,GAAG,OAAO,CAAC;YACnB,OAAO,OAAO,GAAG,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;gBAC7E,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,OAAO,GAAG,YAAY,GAAG,EAAE;gBAC3D,CAAC,CAAC,OAAO,GAAG,YAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE;gBAEpE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACrC,IAAI,IAAI,KAAK,IAAI,EAAE;wBACf,oFAAoF;wBACpF,sBAAsB;wBACtB,mEAAmE;wBACnE,IAAI,GAAG,MAAM,CAAC;qBACjB;oBACD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;wBAC9D,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBAClC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;qBACxE;yBAAM;wBACH,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;qBAClC;iBACJ;qBAAM;oBACH,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,oBAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBACtC;gBACD,OAAO,IAAI,CAAC,CAAC;aAChB;YAED,yBAAyB;YACzB,IAAI,OAAO,GAAG,YAAY,GAAG,CAAC,EAAE;gBAC5B,4BAA4B;gBAC5B,QAAQ,GAAG,SAAS,CAAC;gBACrB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC9B,OAAO,GAAG,YAAY,CAAC;aAC1B;iBAAM;gBACH,iGAAiG;gBACjG,IAAI,OAAO,GAAG,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;oBAC9C,CAAC,CAAC,OAAO,GAAG,YAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAClE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;oBAE9F,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,oBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACnD,OAAO,IAAI,CAAC,CAAC;iBAChB;aACJ;SACJ;QAED,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,QAAQ,GAAG,OAAO,CAAC;YACnB,OAAO,OAAO,GAAG,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;gBAC7E,OAAO,GAAG,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,YAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE;gBAElG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,oBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACnD,OAAO,IAAI,CAAC,CAAC;aAChB;SACJ;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,yBAAW,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IACI,SAAS,CAAC,MAA0B;QACvC,KAAK,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,MAAM,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACxC;IACL,CAAC;IAED;;;OAGG;IACI,SAAS,CAAC,KAAa;QAC1B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE;YACvC,IAAI,CAAC,KAAK,KAAK,EAAE;gBACb,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACI,cAAc,CAAC,OAAe,EAAE,KAAa;QAChD,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,OAAO,MAAM,GAAG,IAAI,EAAE;YAClB,MAAM,WAAW,GAAG,KAAK,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACzD,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;gBAC7B,MAAM,IAAI,CAAC,CAAC;aACf;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM;aACT;SACJ;IACL,CAAC;IAED;;OAEG;IACI,WAAW;;QACd,iGAAiG;QACjG,yFAAyF;QACzF,0DAA0D;QAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,QAAQ,GAAG,mBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC1D,IAAI,QAAQ,KAAK,SAAS,EAAE;gBACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;gBACrC,MAAM,GAAG,GAAG,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAC7E,8FAA8F;gBAC9F,oBAAoB;gBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBAClD,iDAAiD;gBACjD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC5C;SACJ;QAED,6EAA6E;QAC7E,MAAM,iBAAiB,GAAG,IAAI,GAAG,EAAU,CAAC;QAC5C,MAAM,kBAAkB,GAAG,CAAC,MAA0B,EAAQ,EAAE;YAC5D,IAAI,MAAM,KAAK,SAAS;gBACpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBACvB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;gBAEzC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACjC;QACL,CAAC,CAAC;QAEF,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,wEAAwE;YACxE,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,QAAQ,EAAE,OAAO,EAAE,EAAE;gBACjD,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;oBAC1B,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC/B,MAAM;iBACT;aACJ;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACtD;SACJ;aAAM;YACH,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAClC;SACJ;QAED,wDAAwD;QACxD,OAAO,iBAAiB,CAAC,IAAI,KAAK,CAAC,EAAE;YACjC,uBAAuB;YACvB,MAAM,OAAO,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;YACxD,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAClC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClE,kBAAkB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAE3C,IAAI,WAAW,CAAC,SAAS,EAAE,EAAE;gBACzB,kBAAkB,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACxD;SACJ;QAED,gEAAgE;QAChE,MAAM,aAAa,GAAG,IAAI,GAAG,EAAyB,CAAC;QAEvD,6CAA6C;QAC7C,MAAM,YAAY,GAAkB,EAAE,CAAC;QACvC,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,QAAQ,EAAE,OAAO,EAAE,EAAE;YACjD,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC3B,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;iBACnD;gBACD,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE/B,IAAI,WAAW,CAAC,UAAU,KAAK,SAAS,EAAE;oBACtC,0EAA0E;oBAC1E,IAAI,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBACxD,IAAI,OAAO,KAAK,SAAS,EAAE;wBACvB,OAAO,GAAG,EAAE,CAAC;wBACb,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;qBACtD;oBACD,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC7B;gBAED,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aACzC;SACJ;QAED,iBAAiB;QACjB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;YACpC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACtD,MAAM,OAAO,SAAG,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,uCAAI,EAAE,GAAC;YAC7D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,wBAAwB;oBACxB,KAAK,GAAG,OAAO,GAAG,YAAY,EAAE,CAAC;iBACpC;aACJ;YACD,IAAI,KAAK,KAAK,SAAS,EAAE;gBACrB,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;gBAE1B,wCAAwC;gBACxC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;oBAC1B,MAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBAC5C;aACJ;SACJ;QAED,gEAAgE;QAChE,+CAA+C;QAC/C,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;YACpC,IAAI,WAAW,CAAC,UAAU,KAAK,SAAS,EAAE;gBACtC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBACzD,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,KAAK,GAAG,IAAI,GAAG,oBAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;iBACpD;gBAED,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aACjD;SACJ;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;CACJ;AAtXD,wBAsXC;;;;;;;;;;;;;;;;AC7YD;;;;;;;;;;GAUG;AACH,MAAa,QAAQ;IAOjB,YAAY,cAAsB,EAAE,aAAqB,EAAE,kBAA0B,EACzE,UAAkB,EAAE,WAAmB;QAE/C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,MAAM,CAAC,MAAkB,EAAE,UAAkB;QACvD,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,KAAK,GAAG,UAAU,CAAC;QAEvB,oBAAoB;QACpB,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK;YAC/B,KAAK,IAAI,CAAC,CAAC;YACX,cAAc,IAAI,CAAC,CAAC;SACvB;QAED,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9E,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvE,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,aAAa;YAC9C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,aAAa;YAC9C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,aAAa;YAC9C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO;YACzE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,UAAU;YAC3C,WAAW,IAAI,kBAAkB,IAAI,WAAW,GAAG,kBAAkB,GAAG,UAAU,EAAE;YAEpF,OAAO,IAAI,QAAQ,CAAC,cAAc,EAAE,aAAa,EAAE,kBAAkB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;SACnG;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AA/CD,4BA+CC;;;;;;;;;;AC1DY,wBAAgB,GAAuB;IAChD,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;IACjB,CAAC,MAAM,EAAE,OAAO,CAAC;CACpB,CAAC;;;;;;;;;;ACTF,0CAA8C;AAE9C;;;GAGG;AACH,SAAgB,kBAAkB,CAAC,YAA2B;IAC1D,MAAM,KAAK,GAAa,EAAE,CAAC;IAE3B,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;QACpC,IAAI,WAAW,CAAC,KAAK,KAAK,SAAS,EAAE;YACjC,KAAK,CAAC,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;SAC7D;QAED,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAClC,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC;QAE9B,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3D,KAAK,CAAC,IAAI,CAAC,oBAAS,CAAC,OAAO,CAAC,GAAG,GAAG;gBAC/B,QAAQ,CAAC,GAAG,CAAC,oBAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC5C,CAAC,OAAO,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC;YAC3B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;SACpC;KACJ;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAtBD,gDAsBC;;;;;;;;;;;;AC7BD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;ACrB3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;;;ACjB7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClF0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,GAAG,4BAA4B,GAAG;AAC5E;AACA;AACA,4BAA4B,GAAG,qBAAqB,GAAG,qBAAqB,GAAG,2BAA2B,UAAU;AACpH;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,GAAG,4BAA4B,GAAG;AACxE,QAAQ,UAAU,CAAC,GAAG,sBAAsB,UAAU;AACtD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;AC1F2C;AACA;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;AC7LwD;AACb;AAC3C,MAAM,6BAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAAO;AAChB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAAS;AACjC;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA,mBAAmB,kBAAkB;AACrC,QAAQ,2BAAO;AACf;AACA;AACA,qBAAqB,WAAW;AAChC;AACA,WAAW,WAAW;AACtB;;;;;;ACxEyC;AACJ;AACrC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mCAAmC;AACnC,+BAA+B;AAC/B,iCAAiC;AACjC,sCAAsC;AACtC,iCAAiC;AACjC,oCAAoC;AACpC,gCAAgC;AAChC,iCAAiC;AACjC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAwD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA,wEAAwE,kCAAS;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3PkD;AACY;AAC1B;AACoC;AACH;AACP;AACvD,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA,0BAA0B,6BAAqB;AAC/C,2BAA2B,6BAAqB;AAChD,gCAAgC,6BAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe,QAAQ,mBAAmB;AACxD,cAAc,cAAc,QAAQ,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,iBAAiB,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;;;ACvLA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3HoC;AACA;AACkB;AAChB;AACF;AACY;AACA;AAChD;AACA;AACA;AACA;AACA;AACO,MAAM,yCAAoB;AACjC;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA,wCAAwC,OAAO,OAAO,OAAO;AAC7D;AACA;AACA,wCAAwC,OAAO,OAAO,OAAO;AAC7D;AACA,uCAAuC,OAAO;AAC9C;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxLsD;AAClB;AACE;AACF;AACA;AAC+E;AAC9E;AACuB;AAC5D,MAAM,6BAAS;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uCAAmB;AAChC;AACA,qBAAqB,gBAAgB;AACrC,6BAA6B,uCAAmB;AAChD;AACA;AACA;AACA;AACA,aAAa,EAMJ;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,gCAAgC,OAAO,OAAO,OAAO;AACrD;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,mCAAmC,6BAAS;AAC5C,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA,mBAAmB,eAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,wDAAwD,uCAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD,qCAAqC,eAAe;AACpD,qCAAqC,wBAAwB;AAC7D,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,gCAAgC,UAAU;AACjG,oEAAoE,UAAU;AAC9E,mCAAmC,UAAU,gDAAgD,UAAU;AACvG,qCAAqC,UAAU,sCAAsC,UAAU;AAC/F,uCAAuC,UAAU,oCAAoC,UAAU;AAC/F;AACA;AACA,uDAAuD,eAAe;AACtE,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,gCAAgC,UAAU;AACjG,oEAAoE,UAAU;AAC9E,mCAAmC,UAAU,gDAAgD,UAAU;AACvG,qCAAqC,UAAU,sCAAsC,UAAU;AAC/F,uCAAuC,UAAU,oCAAoC,UAAU;AAC/F;AACA;AACA,uDAAuD,eAAe;AACtE,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA,8GAA8G,UAAU;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,UAAU;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAmB;;;AC3ZnB;AAC8D;AACU;AACZ;AACS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uCAAmB;AACzC,sBAAsB,uCAAmB;AACzC,sBAAsB,uCAAmB;AACzC,sBAAsB,yCAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc,CAAC,YAAY;AAC9C;AACA,aAAa,EAkBJ;AACT;AACA;;;ACxIA;AACA;AACA;AAC2D;AACT;AACY;AACF;AACjB;AACmB;AAC9D;AACO,MAAM,SAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAAqB;AAC/C,2BAA2B,6BAAqB;AAChD;AACA,mCAAmC,cAAc;AACjD,mCAAmC,cAAc,CAAC,cAAc;AAChE,mCAAmC,cAAc,CAAC,uCAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA,eAAe,YAAY,CAAC,WAAW,cAAc,mBAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,QAAQ,SAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/Ie;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;AChBA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAEnQ;;AAEQ,yDAAS,EAAC;;;ACJzB,mBAAmB,YAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEe,4DAAO,EAAC;;;ACnBvB;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,C;;ACde;AACf;AACA;AACA;AACA;;AAEA;AACA,C;;ACPuE;AACxD;AACf;AACA;AACA,EAAE,eAAc;AAChB,C;;ACLe;AACf;AACA;AACA;;AAEA;AACA,C;;ACNe;AACf;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA,C;;ACb0D;AAClB;AACL;AAC+B;AACI;AACgB;AACc;;AAEpG,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,IAAI,MAAqC,GAAG,SAA4C;AACxF;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,gDAAgD;AAChD,4EAA4E;AAC5E,yDAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,GAAG,mCAAmC;;;AAGtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA,qBAAqB,aAAa,YAAY;AAC9C;AACA,yBAAyB,0BAA0B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,KAAK;AACL,wBAAwB,YAAY;AACpC;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE;AACA,GAAG;;;AAGH,oDAAoD;;AAEpD;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;;AAEA;AACA;AACA,IAAI,cAAM;AACV;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC,qDAAqD;;AAErD;AACA,wCAAwC,iCAAiC;;AAEzE;AACA,sEAAsE;AACtE;AACA;;AAEA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA8E;AAC5H;;AAEA;AACA;;AAEA;AACA,CAAC;AACD,IAAI,iBAAS;AACb;AACA;AACA,EAAE,cAAc;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,4BAA4B,sBAAsB,CAAC,sBAAsB;AACzE,iCAAiC,cAAM;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,QAAQ,GAAG;AACjC;AACA,KAAK;AACL;AACA;;AAEA,EAAE,YAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,eAAe,iBAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,uBAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA,sCAAsC,qBAAqB;AAC3D;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,qCAAqC,uBAAe;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,qBAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,MAAM,MAAqC,GAAG,SAAiD;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAM;AACnD,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA,yCAAyC,QAAQ,GAAG;AACpD;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA,wCAAwC,iBAAiB;AACzD;;AAEA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,MAAqC,GAAG,SAAkF;AAChI;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,kBAAU;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,cAAM;AACV;AACA,kEAAkE,qBAAa;AAC/E,GAAG;AACH;AACA;AACA;AACA,mCAAmC,kBAAU;AAC7C,8BAA8B,kBAAU;AACxC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,oBAAY;AAChB;AACA;AACA,EAAE,cAAc;;AAEhB;AACA;;AAEA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ,GAAG;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,iBAAiB,oBAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,cAAM;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,gBAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,eAAe;AACpB;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA,+BAA+B,cAAM;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,iBAAS;AACjC;AACA;AACA,KAAK,0BAA0B,qBAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,iBAAS;AACjC;AACA;AACA,KAAK,0BAA0B,qBAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;;AAE9D,8DAA8D;;AAE9D;AACA,KAAK;AACL,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,kBAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,GAAG;AAC9B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,qBAAqB,gBAAQ;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,wCAAwC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,wCAAwC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU,MAAqC,GAAG,SAAsD;AACxG;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA,IAAI,sBAAc;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,kBAAkB,6BAA6B;;AAE/C;;AAEA,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,YAAY;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAc;;AAEjC;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA6F;AAC3I;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,IAAI,MAAqC,GAAG,SAAmH;AAC/J;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA,IAAI,MAAqC,GAAG,SAA6E;AACzH;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,sFAAsF,KAAK,MAAqC,GAAG,SAA0D;AAC7L;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH,IAAI,MAAqC,GAAG,SAAsC;AAClF;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8EAA8E;;;AAG9E;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA,uCAAuC,kBAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,IAAI,WAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,oBAAoB;AACvC;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,QAAQ,GAAG;AACnC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,kBAAU,SAAS,QAAQ,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,sBAAsB,QAAQ,GAAG;AACjC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0EAA0E,aAAa;AACvF;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,qBAAa;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,gBAAO;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,gBAAO;AACb;AACA;;AAEA,EAAE,YAAY;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,cAAM;AACV,aAAa,WAAG;AAChB;AACA;AACA;AACA;;AAEA,IAAI,WAAG,GAAG,cAAM;;AAED,uDAAG,EAAC;AAC0I;;;AClsE1H;AACF;;AAEjC;AACA;AACA;;AAEA,IAAI,iDAAc;AAClB;AACA;AACA;AACA,iBAAiB,UAAU,SAAS;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,KAAK;AACL;AACA,2BAA2B;;AAE3B,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,KAAsC,EAAE,aAO3C;AACT,OAAO;;;AAGP,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wHAAc,EAAC;;;;;;ACnEe;AACZ;;AAEjC,IAAI,iDAAY;AAChB,wBAAwB,qBAAY,qBAAqB,qBAAY;AACrE;;AAEA,IAAI,qDAAgB;AACpB;AACA;AACA,WAAW,iDAAY,oBAAoB;;AAE3C;AACA,iBAAiB,UAAU,SAAS,WAAW;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iDAAY;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,8HAAgB,EAAC;;;ACjDG;;AAEnC,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA6D;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,qCAAa;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qCAAa;AAChC;AACA;;AAEe,0EAAc,EAAC;;;AC7C4B;AAC3B;;AAE/B;AACA;;AAEA,IAAI,yCAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,wCAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,QAAQ,GAAG;AACnE;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,QAAQ,GAAG;AAChD;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,QAAQ,GAAG;AACpD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,iBAAiB,yCAAmB;AACpC;;AAEA;AACA,iBAAiB,wCAAkB;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;ACxLiC;AACvB;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA0E;AACxH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA,uBAAuB,6BAA6B;AACpD;AACA,2DAA2D,QAAQ,GAAG;AACtE;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;AC/IiC;AACvB;;AAEnC,IAAI,qCAAe;AACnB;AACA,IAAI,+BAAS;AACb;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,MAAqC,GAAG,SAA2I;AACzL;AACA;AACA;;AAEA;AACA,2CAA2C,qCAAe;AAC1D,2CAA2C,qCAAe;AAC1D;;AAEA,mBAAmB,4BAA4B;AAC/C;;AAEA,qBAAqB,4BAA4B;AACjD;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ,GAAG;AACvC;;AAEA,KAAK;AACL;AACA;;AAEA,kBAAkB,QAAQ,GAAG;AAC7B;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;AACnE;;AAEA,sEAAsE;;AAEtE,oCAAoC,+BAAS;AAC7C,iDAAiD,QAAQ,GAAG;AAC5D;AACA,SAAS;AACT,OAAO;AACP;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;AChHU;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,8BAA8B,mCAAmC,yBAAyB;;AAE1F;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;AACA,GAAG,0CAA0C,oBAAoB;;;AAGjE;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA4E;AAC1H;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAAyE;AACvH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,qEAAU,EAAC;;;ACxE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,2EAAkB;;;AClBY;;AAE7C;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA,gDAAgD,oBAAS;AACzD;AACA;;AAEA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,oBAAS,OAAO;;AAEzC;AACA,qCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,uEAAS,EAAC;;;AC/Dc;;AAEvC,SAAS,gBAAgB;AACzB,IAAI,8BAAE,GAAG,gBAAgB;AACzB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,8BAAE;AACvB,wBAAwsBAAsB,8BAAE;AACxB,yBAAyB,8BAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,2EAAW,EAAC;;;AC1P3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB,+BAA+B;AACjE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qCAAqC;;AAErC;AACA;;AAEA,4DAA4D,2EAA2E;;AAEvI,qEAAqE;AACrE,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;;AAEA;AACA;;AAEA,iEAAiE;;AAEjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,iEAAiE;;AAEjE;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;ACjYV;AACf;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA,C;;ACR2E;AAC5D;AACf,iCAAiC,iBAAgB;AACjD,C;;ACHe;AACf;AACA,C;;ACF2E;AAC5D;AACf;AACA,oCAAoC,iBAAgB;AACpD;AACA;AACA;AACA,sFAAsF,iBAAgB;AACtG,C;;ACRe;AACf;AACA,C;;ACF6E;AACJ;AACsB;AAClB;AAC9D;AACf,SAAS,kBAAiB,SAAS,gBAAe,SAAS,2BAA0B,SAAS,kBAAiB;AAC/G,C;;ACNwC;AACsC;;AAE9E;AACA;AACA,IAAI,kBAAG;AACP;AACA;AACA,cAAc,WAAW,+CAA+C;;AAExE,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,oBAAK;;AAEX;;AAEA,WAAW,kBAAG;AACd,QAAQ,kBAAG,eAAe,oBAAK;AAC/B,WAAW,kBAAG;AACd,MAAM,kBAAG,YAAY,kBAAG;AACxB;AACA;AACA,GAAG;;;AAGH,wCAAwC,oBAAK;AAC7C;AACA,IAAI,kBAAG;AACP;AACA,GAAG;;;AAGH,mDAAmD,oBAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;;AAGA;AACA;AACA,OAAO,kBAAG;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC,qCAAqC;;AAErC;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,sBAAO;AACX,wBAAwB,sBAAO;AAC/B;AACA,CAAC;AACD;AACA,CAAC;AACD,gBAAgB,sBAAO;AACvB;AACA,CAAC;AACD,kBAAkB,kBAAkB;AACpC;AACA,CAAC;;AAED;AACA,IAAI,oBAAK;;AAET,IAAI,WAAW;AACf,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,oBAAK;AAC5B,GAAG;AACH;;;AAGA;AACA,kBAAkB,oBAAK;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB,MAAM,KAAoC,IAAI,oBAAK;AACnD,WAAW,oBAAK;AAChB,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH,iBAAiB,8BAA8B;AAC/C,IAAI,oBAAK,uDAAuD;;AAEhE,QAAQ,oBAAK;AACb,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;;AAEA,SAAS,oBAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,WAAW;AACf;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,0CAA0C;;AAE1C,MAAM,KAAoC;AAC1C;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA,+CAA+C;;AAE/C,2EAA2E;;AAE3E,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA,GAAG;;;AAGH,4BAA4B;;AAE5B;AACA;AACA;;AAEyE;;;AC5jBU;AAClD;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA,6BAA6B,cAAc,gBAAgB,UAAU;AACrE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc,OAAO,UAAU;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,oFAAiB,EAAC;;;AC1DjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEe,0EAAY,EAAC;;;AC3B2B;AACG;AACf;AACJ;AACA;AACA;AACE;AACK;AACI;AACX;AACiB;AACV;;AAE9C,IAAI,6BAAM;AACV;AACA;AACA;;AAEA;AACA,cAAc,kCAAS,IAAI,oCAAU,sBAAsB,uBAAQ,IAAI,qBAAM,IAAI,qBAAM,IAAI,qBAAM,IAAI,sBAAO,IAAI,yBAAS,IAAI,2BAAW,uBAAuB,qBAAM,IAAI,8BAAc,IAAI,yBAAS;AACpM;AACA;;AAEe,wFAAM,EAAC;;;ACvBA;AACkB;AACxC;AACA,OAAG,OAAO,sBAAM;AACD,mDAAG,EAAC;;;ACJnB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZwC;AACxC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA,0BAA0B,SAAS;AACnC;AACA,8BAA8B,SAAS;AACvC,8BAA8B,SAAS;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;ACrJA;;;GAGG;AACI,MAAM,iBAAiB;IAc1B,YAAY,IAAY,EAAE,KAAa,EAAE,GAAW;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,MAAc;QAC1B,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;IACpF,CAAC;CACJ;;;AC7BD;;GAEG;AACI,MAAe,iBAAiB;IAoBnC,YAAY,MAAkB,EAAE,KAAyB,EAAE,WAAgC;QACvF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;CAMJ;;;AClCD,qCAAqC;AAE8B;AACxB;AACW;AACR;AAEvC,MAAM,sBAAsB,GAAG,IAAI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CN;AACG;AACP;AACG;;;ACVJ;AACsB;AACL;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,MAAM,iBAAK,GAAG,OAAG;AACV,2BAA2B,iBAAK;AAChC,wBAAwB,iBAAK;AACpC;AACA;AACA;AACO;AACP,IAAI,iBAAK;AACT,oBAAoB,iBAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,kBAAkB,eAAG;AACrB;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;;;AChIA;;;GAGG;AACI,MAAM,cAAc;IAA3B;QACI;;WAEG;QACI,qBAAgB,GAAW,KAAK,CAAC;IAuB5C,CAAC;IArBG;;OAEG;IACI,YAAY;QACf,qBAAqB;IACzB,CAAC;IAED;;;OAGG;IACI,UAAU;QACb,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;OAEG;IACI,WAAW;QACd,qBAAqB;IACzB,CAAC;CACJ;;;;;;AC9BD,+EAA+E;AAC/E,8EAA8E;AAC9E,cAAc;AAEd,qDAAqD;AACrD,MAAM,SAAS,GAAG,KAAK,CAAC;AACxB,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,UAAU,GAAG,MAAM,CAAC;AAC1B,MAAM,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAC,UAAU,CAAC;AACnD,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAErC,yCAAyC;AACzC,IAAK,UAEJ;AAFD,WAAK,UAAU;IACX,iDAAO;IAAE,uDAAU;IAAE,mDAAQ;AACjC,CAAC,EAFI,UAAU,KAAV,UAAU,QAEd;AAED,sEAAsE;AACtE,MAAM,OAAO;IAKT,YAAY,SAAiB,EAAE,SAAiB,EAAE,UAAsB;QACpE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;CACJ;AAED,mBAAmB;AACnB,MAAM,WAAW;IAIb,YAAY,OAAgB,EAAE,SAAkB;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;CACJ;AAED,8EAA8E;AAC9E,kCAAkC;AAClC,MAAM,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;AAE1C,4DAA4D;AAC5D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAE1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAE1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAA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CAAgB;AACtB,MAAM,yBAAK;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA,MAAM,yBAAK,GAAG,OAAG,kBAAkB,yBAAK;AACjC,MAAM,sCAAkB,GAAG,yBAAK;AAChC,MAAM,mCAAe,GAAG,yBAAK;AACpC;AACA;AACA;AACA;AACA;AACO,SAAS,yBAAK;AACrB,IAAI,yBAAK;AACT,oBAAoB,yBAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAG;AACX;AACA;AACA,uBAAuB,yBAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAS,4BAA4B,kCAAS;AACjE;AACA;AACA,QAAQ,uBAAG;AACX;AACA;AACA,qCAAqC,0BAAS;AAC9C;AACA,QAAQ,uBAAG;AACX;AACA,iCAAiC,kBAAkB,6CAA6C,gBAAgB;AAChH,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG;AACnB;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG,uCAAuC,kCAAS;AACnE;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAG;AACP,IAAI,uBAAG,gBAAgB,kCAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAAS;AACvD;AACA;AACA,YAAY,uBAAG,OAAO,kCAAS;AAC/B,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG;AACnB,gBAAgB,uBAAG;AACnB;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1MwB;AACwB;AACF;AACO;AACiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iCAAgB;AACtB,MAAM,sBAAK;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,iCAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA,MAAM,sBAAK,GAAG,OAAG,kBAAkB,sBAAK;AACjC,MAAM,mCAAkB,GAAG,sBAAK;AAChC,MAAM,gCAAe,GAAG,sBAAK;AACpC;AACA;AACA;AACA;AACA;AACO,SAAS,sBAAK;AACrB,IAAI,sBAAK;AACT,oBAAoB,sBAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAG,OAAO,kCAAS;AAC3B;AACA;AACA,gBAAgB,oBAAG;AACnB,gBAAgB,oBAAG,OAAO,kCAAS;AACnC,gBAAgB,oBAAG;AACnB;AACA,mDAAmD,0BAAS;AAC5D,gBAAgB,oBAAG;AACnB,gBAAgB,oBAAG;AACnB;AACA,oBAAoB,oBAAG,uCAAuC,kCAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAG;AACvB;AACA;AACA,oBAAoB,oBAAG;AACvB,oBAAoB,oBAAG,OAAO,kCAAS;AACvC;AACA;AACA;AACA,gBAAgB,oBAAG;AACnB,gBAAgB,oBAAG;AACnB;AACA;AACA,gBAAgB,oBAAG;AACnB;AACA,mDAAmD,0BAAS;AAC5D,gBAAgB,oBAAG;AACnB,gBAAgB,oBAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAG;AACf,YAAY,oBAAG;AACf,YAAY,oBAAG;AACf;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAAS;AACvD;AACA;AACA,YAAY,oBAAG,OAAO,kCAAS;AAC/B,YAAY,oBAAG;AACf,YAAY,oBAAG;AACf;AACA,gBAAgB,oBAAG;AACnB,gBAAgB,oBAAG;AACnB;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxLA;AACwB;AACM;AACgB;AAC9C;AACA,MAAM,wBAAgB;AACtB,MAAM,aAAK;AACX;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,MAAM,aAAK,GAAG,OAAG,kBAAkB,aAAK;AACjC,MAAM,0BAAkB,GAAG,aAAK;AAChC,MAAM,uBAAe,GAAG,aAAK;AAC7B,SAAS,cAAM;AACtB,IAAI,aAAK;AACT,oBAAoB,aAAK;AACzB;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA,4BAA4B,gDAAgD;AAC5E;AACA;AACA,0BAA0B,GAAG;AAC7B,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA,4BAA4B,gDAAgD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;;;ACxFoC;AACI;AACsB;AACzB;AACa;AACC;AACoB;AAC9B;AACH;AACtC,IAAI,mCAAmB;AACvB;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,+BAAe;AAC5B;AACA;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD,+BAA+B,6BAAqB;AACpD,mCAAmC,6BAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6BAAqB;AAClD;AACA;AACA;AACA,0BAA0B,6BAAqgCAAgC,MAAM,MAAM,MAAM;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmB;AAC3E,YAAY,mCAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,wBAAwB,gCAAgC;AACxkDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,eAAeiCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,8CAA8C,kCAAS;AACvD,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,kDAAkD,gBAAgB;AAClE,iDAAiD,qBAAqB;AACtE;AACA,0DAA0D,UAAU;AACpE;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;;;ACj5BA;AACA;AACA;AACwB;AACsB;AAC9C;AACA,MAAM,uBAAgB;AACtB,MAAM,YAAK;AACX;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,MAAM,YAAK,GAAG,OAAG,kBAAkB,YAAK;AACjC,MAAM,yBAAkB,GAAG,YAAK;AAChC,MAAM,sBAAe,GAAG,YAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,YAAK;AACT,oBAAoB,YAAK;AACzB;AACA;AACA;AACA;AACA,QAAQ,UAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,gBAAgB,UAAG;AACnB,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAG;AACnB,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9HgD;AACH;AACgB;AACN;AAClB;AACD;AACsF;AACtE;AACjB;AACC;AAC0B;AACvB;AACK;AACI;AACuC;AACvF;AACA;AACA;AACA,MAAM,yBAAa,SAAS,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAa,SAAS,yBAAa;AACzC;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD;AACA;AACA;AACA,mCAAmC,6BAAqB;AACxD;AACA;AACA;AACA;AACA,2CAA2C,+BAAe;AAC1D,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,eAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAO;AACtC;AACA;AACA,8CAA8C,eAAO;AACrD,4CAA4C,eAAO;AACnD,kCAAkC,gBAAgB;AAClD,gCAAgC,gBAAgB;AAChD,gCAAgC,gBAAgB;AAChD,+BAA+B,eAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,eAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,eAAO;AACtC;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAY;AACrD;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAY;AACzD;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAW;AAC9C,qCAAqC,uBAAW;AAChD,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA,yDAAyD,0BAA0B;AACnF,2DAA2D,0BAA0B;AACrF,SAAS;AACT;AACA,sDAAsD,uBAAuB;AAC7E,wDAAwD,uBAAuB;AAC/E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+BAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAiB;AAChD,gCAAgC,uBAAW;AAC3C;AACA;AACA,sDAAsD,kBAA8B;AACpF,SAAS;AACT;AACA,mDAAmD,eAA2B;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE,gCAAgC,uBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,sCAAsC;AAC5F,SAAS;AACT;AACA,mDAAmD,mCAAmC;AACtF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE,gCAAgC,uBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC;AACzF,SAAS;AACT;AACA,mDAAmD,gCAAgC;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAmB;AACpD,gCAAgC,uBAAW;AAC3C;AACA;AACA,sDAAsD,yBAAyB;AAC/E,SAAS;AACT;AACA,mDAAmD,sBAAsB;AACzE,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAY;AACvC;AACA,0BAA0B,WAAK,mEAAmE,yBAAa;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa,0BAA0B,SAAS;AAC1F,8BAA8B,aAAa,0BAA0B,SAAS;AAC9E,iCAAiC,yBAAY;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD,kCAAkC,mBAAmB;AACrD,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD,gBAAgB,gBAAgB;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/xBA;AACyC;AACoB;AACQ;AACZ;AAClB;AAChC,MAAM,iBAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe,QAAQ,mBAAmB,IAAI,cAAc,QAAQ,mBAAmB;AAC7H,4BAA4B,SAAS,CAAC,mBAAmB;AACzD;AACA;AACA,4BAA4B,SAAS,CAAC,mBAAmB,EAAE,cAAc,CAAC,YAAY,CAAC,SAAS,gCAAgC,mBAAmB;AACnJ;AACA;AACA,4BAA4B,SAAS,CAAC,mBAAmB,EAAE,cAAc,CAAC,YAAY,+BAA+B,mBAAmB;AACxI;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAQ;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAQ;AAC/B;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,6BAA6B,qDAAqD;;AAElF;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,iBAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,UAAU;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,yBAAyB,EAAE;;AAE/F;AACA;AACA;AACA,2EAA2E,gBAAgB,EAAE;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;;AAEhC;;AAEA,6BAA6B;;AAE7B;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,cAAc,EAAE;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,iBAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,iBAAQ;;AAEhaAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEe,kDAAK,EAAC;;;ACtvBd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7DoC;AACN;AACc;AACN;AACT;AACqB;AACJ;AACF;AACJ;AAC2B;AACU;AACf;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB,iBAAiB,SAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yBAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,QAAQ,SAAI;AACZ;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB,wBAAwB,eAAO;AAC/B;AACA;AACA;AACA,4BAA4B,uBAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAK;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,QAAK;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,WAAW;AACvC,6BAA6B,SAAI;AACjC,wCAAwC,+BAAe;AACvD,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,qBAAqB,QAAQ;AAC7B,wCAAwC,uCAAmB;AAC3D,4FAA4F,uCAAmB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe,0BAA0B,QAAQ;AACjG;AACA;AACA,qBAAqB,QAAQ;AAC7B,wCAAwC,uCAAmB;AAC3D,uDAAuD,uCAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,wCAAwC,uCAAmB;AAC3D,uDAAuD,uCAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,qBAAqB,QAAQ;AAC7B,kDAAkD,QAAQ;AAC1D,8BAA8B,uCAAmB;AACjD,8BAA8B,yCAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AC5c8B;AAC9B,IAAI","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","\nexport * from \"./Register\";\nexport * from \"./RegisterSet\";\nexport * from \"./Utils\";\nexport * from \"./Flag\";\n","\nexport * from \"./Utils\";\nexport * from \"./ByteReader\";\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = exports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = exports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = exports.Subscription = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return ste_core_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return ste_core_1.DispatcherWrapper; } });\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return ste_core_1.EventListBase; } });\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return ste_core_1.Subscription; } });\r\nvar ste_events_1 = require(\"ste-events\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return ste_events_1.EventDispatcher; } });\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return ste_events_1.EventHandlingBase; } });\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return ste_events_1.EventList; } });\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return ste_events_1.NonUniformEventList; } });\r\nvar ste_simple_events_1 = require(\"ste-simple-events\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.SimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return ste_simple_events_1.NonUniformSimpleEventList; } });\r\nvar ste_signals_1 = require(\"ste-signals\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return ste_signals_1.SignalDispatcher; } });\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return ste_signals_1.SignalHandlingBase; } });\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return ste_signals_1.SignalList; } });\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Subscription = exports.EventListBase = exports.DispatcherWrapper = exports.DispatcherBase = void 0;\r\nvar dispatching_1 = require(\"./dispatching\");\r\nObject.defineProperty(exports, \"DispatcherBase\", { enumerable: true, get: function () { return dispatching_1.DispatcherBase; } });\r\nObject.defineProperty(exports, \"DispatcherWrapper\", { enumerable: true, get: function () { return dispatching_1.DispatcherWrapper; } });\r\nObject.defineProperty(exports, \"EventListBase\", { enumerable: true, get: function () { return dispatching_1.EventListBase; } });\r\nvar subscription_1 = require(\"./subscription\");\r\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return subscription_1.Subscription; } });\r\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export {Disasm} from \"./Disasm\";\nexport {Instruction} from \"./Instruction\";\nexport * from \"./KnownLabels\";\nexport * from \"./TextFormatter\";\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Subscription = void 0;\r\n/**\r\n * Stores a handler. Manages execution meta data.\r\n * @class Subscription\r\n * @template TEventHandler\r\n */\r\nvar Subscription = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of Subscription.\r\n     *\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     */\r\n    function Subscription(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    Subscription.prototype.execute = function (executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(function () {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n            }\r\n            else {\r\n                fn.apply(scope, args);\r\n            }\r\n        }\r\n    };\r\n    return Subscription;\r\n}());\r\nexports.Subscription = Subscription;\r\n","\n// Various utility functions.\n\n/**\n * Convert a number to hex and zero-pad to the specified number of hex digits.\n */\nexport function toHex(value: number, digits: number): string {\n    return value.toString(16).toUpperCase().padStart(digits, \"0\");\n}\n\n/**\n * Convert a byte to hex.\n */\nexport function toHexByte(value: number): string {\n    return toHex(value, 2);\n}\n\n/**\n * Convert a word to hex.\n */\nexport function toHexWord(value: number): string {\n    return toHex(value, 4);\n}\n\n/**\n * Convert a long (32-bit value) to hex.\n */\nexport function toHexLong(value: number): string {\n    value &= 0xFFFFFFFF;\n\n    // Convert two's complement negative numbers to positive numbers.\n    if (value < 0) {\n        value += 0x100000000;\n    }\n\n    return value.toString(16).toUpperCase().padStart(8, \"0\");\n}\n\n/**\n * Return the high byte of a word.\n */\nexport function hi(value: number): number {\n    return (value >> 8) & 0xFF;\n}\n\n/**\n * Return the low byte of a word.\n */\nexport function lo(value: number): number {\n    return value & 0xFF;\n}\n\n/**\n * Create a word from a high and low byte.\n */\nexport function word(highByte: number, lowByte: number): number {\n    return ((highByte & 0xFF) << 8) | (lowByte & 0xFF);\n}\n\n/**\n * Increment a byte.\n */\nexport function inc8(value: number): number {\n    return add8(value, 1);\n}\n\n/**\n * Increment a word.\n */\nexport function inc16(value: number): number {\n    return add16(value, 1);\n}\n\n/**\n * Decrement a byte.\n */\nexport function dec8(value: number): number {\n    return sub8(value, 1);\n}\n\n/**\n * Decrement a word.\n */\nexport function dec16(value: number): number {\n    return sub16(value, 1);\n}\n\n/**\n * Add two bytes together.\n */\nexport function add8(a: number, b: number): number {\n    return (a + b) & 0xFF;\n}\n\n/**\n * Add two words together.\n */\nexport function add16(a: number, b: number): number {\n    return (a + b) & 0xFFFF;\n}\n\n/**\n * Subtract two bytes.\n */\nexport function sub8(a: number, b: number): number {\n    return (a - b) & 0xFF;\n}\n\n/**\n * Subtract two words.\n */\nexport function sub16(a: number, b: number): number {\n    return (a - b) & 0xFFFF;\n}\n\n/**\n * Convert a byte to a signed number (e.g., 0xff to -1).\n */\nexport function signedByte(value: number): number {\n    return value >= 128 ? value - 256 : value;\n}\n","\nimport {toHexByte} from \"z80-base\";\n\nexport class Instruction {\n    /**\n     * Address of instruction.\n     */\n    public address: number;\n    /**\n     * Raw binary as found in the original.\n     */\n    public bin: number[];\n    /**\n     * Mnemonic of the instruction (e.g., \"ld\").\n     */\n    public mnemonic: string;\n    /**\n     * Parameters to the instruction (e.g., [\"hl\",\"nnnn\"]).\n     */\n    public params: string[];\n    /**\n     * Arguments to the instruction (e.g., [\"hl\",\"0x1234\"]).\n     */\n    public args: string[];\n    /**\n     * Label at this address.\n     */\n    public label: string | undefined;\n    /**\n     * Target of a jump from this instruction.\n     */\n    public jumpTarget: number | undefined;\n\n    constructor(address: number, bin: number[], mnemonic: string, params: string[], args: string[]) {\n        this.address = address;\n        this.bin = bin;\n        this.mnemonic = mnemonic;\n        this.params = params ?? [];\n        this.args = args ?? [];\n    }\n\n    /**\n     * Text version of the binary: two-digit hex numbers separated by a space.\n     */\n    public binText(): string {\n        return this.bin.map(toHexByte).join(\" \");\n    }\n\n    /**\n     * Text of the instruction (e.g., \"ld hl,0x1234\").\n     */\n    public toText(): string {\n        return (this.mnemonic + \" \" + this.args.join(\",\")).trim();\n    }\n\n    /**\n     * Replace all instances of \"varName\" in the args field with a replacement.\n     */\n    public replaceArgVariable(varName: string, replacement: string): void {\n        const args = this.args;\n        for (let i = 0; i < args.length; i++) {\n            let arg = args[i];\n\n            let changed: boolean;\n            do {\n                changed = false;\n                const pos = arg.indexOf(varName);\n                if (pos >= 0) {\n                    arg = arg.substr(0, pos) + replacement + arg.substr(pos + varName.length);\n                    changed = true;\n                }\n            } while (changed);\n\n            args[i] = arg;\n        }\n    }\n\n    /**\n     * Whether this instruction, when executed, potentially continues on to the next instructions. For example,\n     * \"nop\" and \"jr z,foo\" return true, but \"ret\" and \"jr foo\" return false.\n     */\n    public continues(): boolean {\n        // Return without a flag test.\n        if (this.mnemonic === \"ret\" && this.args.length === 0) {\n            return false;\n        }\n\n        // Return from interrupt.\n        if (this.mnemonic === \"reti\" || this.mnemonic === \"retn\") {\n            return false;\n        }\n\n        // Jump without a flag test.\n        if ((this.mnemonic === \"jp\" || this.mnemonic === \"jr\") && this.args.length === 1) {\n            return false;\n        }\n\n        // All else might continue.\n        return true;\n    }\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","\nexport * from \"./Z80\";\nexport * from \"./Hal\";\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DispatcherWrapper = exports.EventListBase = exports.DispatcherBase = void 0;\r\nvar management_1 = require(\"./management\");\r\nvar subscription_1 = require(\"./subscription\");\r\n/**\r\n * Base class for implementation of the dispatcher. It facilitates the subscribe\r\n * and unsubscribe methods based on generic handlers. The TEventType specifies\r\n * the type of event that should be exposed. Use the asEvent to expose the\r\n * dispatcher as event.\r\n */\r\nvar DispatcherBase = /** @class */ (function () {\r\n    function DispatcherBase() {\r\n        this._wrap = new DispatcherWrapper(this);\r\n        this._subscriptions = new Array();\r\n    }\r\n    Object.defineProperty(DispatcherBase.prototype, \"count\", {\r\n        /**\r\n         * Returns the number of subscriptions.\r\n         *\r\n         * @readonly\r\n         *\r\n         * @memberOf DispatcherBase\r\n         */\r\n        get: function () {\r\n            return this._subscriptions.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.subscribe = function (fn) {\r\n        var _this = this;\r\n        if (fn) {\r\n            this._subscriptions.push(new subscription_1.Subscription(fn, false));\r\n        }\r\n        return function () {\r\n            _this.unsubscribe(fn);\r\n        };\r\n    };\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.sub = function (fn) {\r\n        return this.subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.one = function (fn) {\r\n        var _this = this;\r\n        if (fn) {\r\n            this._subscriptions.push(new subscription_1.Subscription(fn, true));\r\n        }\r\n        return function () {\r\n            _this.unsubscribe(fn);\r\n        };\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.has = function (fn) {\r\n        if (!fn)\r\n            return false;\r\n        return this._subscriptions.some(function (sub) { return sub.handler == fn; });\r\n    };\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.unsubscribe = function (fn) {\r\n        if (!fn)\r\n            return;\r\n        for (var i = 0; i < this._subscriptions.length; i++) {\r\n            if (this._subscriptions[i].handler == fn) {\r\n                this._subscriptions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.unsub = function (fn) {\r\n        this.unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} The scope the scope of the event. The scope becomes the \"this\" for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    DispatcherBase.prototype._dispatch = function (executeAsync, scope, args) {\r\n        var _this = this;\r\n        var _loop_1 = function (sub) {\r\n            var ev = new management_1.EventManagement(function () { return _this.unsub(sub.handler); });\r\n            var nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            sub.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this_1.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return \"break\";\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        //execute on a copy because of bug #9\r\n        for (var _i = 0, _a = __spreadArrays(this._subscriptions); _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            var state_1 = _loop_1(sub);\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up subs that ran and should run only once.\r\n     */\r\n    DispatcherBase.prototype.cleanup = function (sub) {\r\n        if (sub.isOnce && sub.isExecuted) {\r\n            var i = this._subscriptions.indexOf(sub);\r\n            if (i > -1) {\r\n                this._subscriptions.splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    DispatcherBase.prototype.asEvent = function () {\r\n        return this._wrap;\r\n    };\r\n    /**\r\n     * Clears all the subscriptions.\r\n     */\r\n    DispatcherBase.prototype.clear = function () {\r\n        this._subscriptions.splice(0, this._subscriptions.length);\r\n    };\r\n    return DispatcherBase;\r\n}());\r\nexports.DispatcherBase = DispatcherBase;\r\n/**\r\n * Base class for event lists classes. Implements the get and remove.\r\n */\r\nvar EventListBase = /** @class */ (function () {\r\n    function EventListBase() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    EventListBase.prototype.get = function (name) {\r\n        var event = this._events[name];\r\n        if (event) {\r\n            return event;\r\n        }\r\n        event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    EventListBase.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    return EventListBase;\r\n}());\r\nexports.EventListBase = EventListBase;\r\n/**\r\n * Hides the implementation of the event dispatcher. Will expose methods that\r\n * are relevent to the event.\r\n */\r\nvar DispatcherWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new EventDispatcherWrapper instance.\r\n     * @param dispatcher The dispatcher.\r\n     */\r\n    function DispatcherWrapper(dispatcher) {\r\n        this._subscribe = function (fn) { return dispatcher.subscribe(fn); };\r\n        this._unsubscribe = function (fn) { return dispatcher.unsubscribe(fn); };\r\n        this._one = function (fn) { return dispatcher.one(fn); };\r\n        this._has = function (fn) { return dispatcher.has(fn); };\r\n        this._clear = function () { return dispatcher.clear(); };\r\n        this._count = function () { return dispatcher.count; };\r\n    }\r\n    Object.defineProperty(DispatcherWrapper.prototype, \"count\", {\r\n        /**\r\n         * Returns the number of subscriptions.\r\n         *\r\n         * @readonly\r\n         * @type {number}\r\n         * @memberOf DispatcherWrapper\r\n         */\r\n        get: function () {\r\n            return this._count();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherWrapper.prototype.subscribe = function (fn) {\r\n        return this._subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherWrapper.prototype.sub = function (fn) {\r\n        return this.subscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.unsubscribe = function (fn) {\r\n        this._unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.unsub = function (fn) {\r\n        this.unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.one = function (fn) {\r\n        return this._one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherWrapper.prototype.has = function (fn) {\r\n        return this._has(fn);\r\n    };\r\n    /**\r\n     * Clears all the subscriptions.\r\n     */\r\n    DispatcherWrapper.prototype.clear = function () {\r\n        this._clear();\r\n    };\r\n    return DispatcherWrapper;\r\n}());\r\nexports.DispatcherWrapper = DispatcherWrapper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventManagement = void 0;\r\n/**\r\n * Allows the user to interact with the event.\r\n *\r\n * @class EventManagement\r\n * @implements {IEventManagement}\r\n */\r\nvar EventManagement = /** @class */ (function () {\r\n    function EventManagement(unsub) {\r\n        this.unsub = unsub;\r\n        this.propagationStopped = false;\r\n    }\r\n    EventManagement.prototype.stopPropagation = function () {\r\n        this.propagationStopped = true;\r\n    };\r\n    return EventManagement;\r\n}());\r\nexports.EventManagement = EventManagement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformEventList = exports.EventList = exports.EventHandlingBase = exports.EventDispatcher = void 0;\r\nvar events_1 = require(\"./events\");\r\nObject.defineProperty(exports, \"EventDispatcher\", { enumerable: true, get: function () { return events_1.EventDispatcher; } });\r\nObject.defineProperty(exports, \"EventHandlingBase\", { enumerable: true, get: function () { return events_1.EventHandlingBase; } });\r\nObject.defineProperty(exports, \"EventList\", { enumerable: true, get: function () { return events_1.EventList; } });\r\nObject.defineProperty(exports, \"NonUniformEventList\", { enumerable: true, get: function () { return events_1.NonUniformEventList; } });\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventHandlingBase = exports.EventList = exports.NonUniformEventList = exports.EventDispatcher = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n */\r\nvar EventDispatcher = /** @class */ (function (_super) {\r\n    __extends(EventDispatcher, _super);\r\n    /**\r\n     * Creates a new EventDispatcher instance.\r\n     */\r\n    function EventDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param sender The sender.\r\n     * @param args The arguments object.\r\n     */\r\n    EventDispatcher.prototype.dispatch = function (sender, args) {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the events thread.\r\n     * @param sender The sender.\r\n     * @param args The arguments object.\r\n     */\r\n    EventDispatcher.prototype.dispatchAsync = function (sender, args) {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    EventDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return EventDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.EventDispatcher = EventDispatcher;\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nvar NonUniformEventList = /** @class */ (function () {\r\n    function NonUniformEventList() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformEventList.prototype.get = function (name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        var event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformEventList.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    NonUniformEventList.prototype.createDispatcher = function () {\r\n        return new EventDispatcher();\r\n    };\r\n    return NonUniformEventList;\r\n}());\r\nexports.NonUniformEventList = NonUniformEventList;\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar EventList = /** @class */ (function (_super) {\r\n    __extends(EventList, _super);\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    function EventList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    EventList.prototype.createDispatcher = function () {\r\n        return new EventDispatcher();\r\n    };\r\n    return EventList;\r\n}(ste_core_1.EventListBase));\r\nexports.EventList = EventList;\r\n/**\r\n * Extends objects with event handling capabilities.\r\n */\r\nvar EventHandlingBase = /** @class */ (function () {\r\n    function EventHandlingBase() {\r\n        this._events = new EventList();\r\n    }\r\n    Object.defineProperty(EventHandlingBase.prototype, \"events\", {\r\n        /**\r\n         * Gets the list with all the event dispatchers.\r\n         */\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    /**\r\n     * Subscribes to once the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Subscribes to once the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    return EventHandlingBase;\r\n}());\r\nexports.EventHandlingBase = EventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonUniformSimpleEventList = exports.SimpleEventList = exports.SimpleEventHandlingBase = exports.SimpleEventDispatcher = void 0;\r\nvar simple_events_1 = require(\"./simple-events\");\r\nObject.defineProperty(exports, \"SimpleEventDispatcher\", { enumerable: true, get: function () { return simple_events_1.SimpleEventDispatcher; } });\r\nObject.defineProperty(exports, \"SimpleEventHandlingBase\", { enumerable: true, get: function () { return simple_events_1.SimpleEventHandlingBase; } });\r\nObject.defineProperty(exports, \"SimpleEventList\", { enumerable: true, get: function () { return simple_events_1.SimpleEventList; } });\r\nObject.defineProperty(exports, \"NonUniformSimpleEventList\", { enumerable: true, get: function () { return simple_events_1.NonUniformSimpleEventList; } });\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventHandlingBase = exports.SimpleEventList = exports.NonUniformSimpleEventList = exports.SimpleEventDispatcher = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n */\r\nvar SimpleEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(SimpleEventDispatcher, _super);\r\n    /**\r\n     * Creates a new SimpleEventDispatcher instance.\r\n     */\r\n    function SimpleEventDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param args The arguments object.\r\n     */\r\n    SimpleEventDispatcher.prototype.dispatch = function (args) {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the events thread.\r\n     * @param args The arguments object.\r\n     */\r\n    SimpleEventDispatcher.prototype.dispatchAsync = function (args) {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    SimpleEventDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return SimpleEventDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nvar NonUniformSimpleEventList = /** @class */ (function () {\r\n    function NonUniformSimpleEventList() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformSimpleEventList.prototype.get = function (name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        var event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformSimpleEventList.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    NonUniformSimpleEventList.prototype.createDispatcher = function () {\r\n        return new SimpleEventDispatcher();\r\n    };\r\n    return NonUniformSimpleEventList;\r\n}());\r\nexports.NonUniformSimpleEventList = NonUniformSimpleEventList;\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar SimpleEventList = /** @class */ (function (_super) {\r\n    __extends(SimpleEventList, _super);\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    function SimpleEventList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    SimpleEventList.prototype.createDispatcher = function () {\r\n        return new SimpleEventDispatcher();\r\n    };\r\n    return SimpleEventList;\r\n}(ste_core_1.EventListBase));\r\nexports.SimpleEventList = SimpleEventList;\r\n/**\r\n * Extends objects with simple event handling capabilities.\r\n */\r\nvar SimpleEventHandlingBase = /** @class */ (function () {\r\n    function SimpleEventHandlingBase() {\r\n        this._events = new SimpleEventList();\r\n    }\r\n    Object.defineProperty(SimpleEventHandlingBase.prototype, \"events\", {\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    return SimpleEventHandlingBase;\r\n}());\r\nexports.SimpleEventHandlingBase = SimpleEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalList = exports.SignalHandlingBase = exports.SignalDispatcher = void 0;\r\nvar signals_1 = require(\"./signals\");\r\nObject.defineProperty(exports, \"SignalDispatcher\", { enumerable: true, get: function () { return signals_1.SignalDispatcher; } });\r\nObject.defineProperty(exports, \"SignalHandlingBase\", { enumerable: true, get: function () { return signals_1.SignalHandlingBase; } });\r\nObject.defineProperty(exports, \"SignalList\", { enumerable: true, get: function () { return signals_1.SignalList; } });\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SignalHandlingBase = exports.SignalList = exports.SignalDispatcher = void 0;\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n */\r\nvar SignalDispatcher = /** @class */ (function (_super) {\r\n    __extends(SignalDispatcher, _super);\r\n    /**\r\n     * Creates a new SignalDispatcher instance.\r\n     */\r\n    function SignalDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the signal.\r\n     */\r\n    SignalDispatcher.prototype.dispatch = function () {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the signal threaded.\r\n     */\r\n    SignalDispatcher.prototype.dispatchAsync = function () {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    SignalDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return SignalDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.SignalDispatcher = SignalDispatcher;\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar SignalList = /** @class */ (function (_super) {\r\n    __extends(SignalList, _super);\r\n    /**\r\n     * Creates a new SignalList instance.\r\n     */\r\n    function SignalList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    SignalList.prototype.createDispatcher = function () {\r\n        return new SignalDispatcher();\r\n    };\r\n    return SignalList;\r\n}(ste_core_1.EventListBase));\r\nexports.SignalList = SignalList;\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nvar SignalHandlingBase = /** @class */ (function () {\r\n    function SignalHandlingBase() {\r\n        this._events = new SignalList();\r\n    }\r\n    Object.defineProperty(SignalHandlingBase.prototype, \"events\", {\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    return SignalHandlingBase;\r\n}());\r\nexports.SignalHandlingBase = SignalHandlingBase;\r\n","\n/**\n * Type for all byte registers.\n */\nexport type ByteReg = \"a\" | \"f\" | \"b\" | \"c\" | \"d\" | \"e\" | \"h\" | \"l\" | \"ixh\" | \"ixl\" | \"iyh\" | \"iyl\" | \"i\" | \"r\";\n\n/**\n * Type for all word registers. Uses the \"Prime\" suffix instead of an apostrophe so that\n * this can be used as a field name for the RegisterSet class.\n */\nexport type WordReg = \"af\" | \"bc\" | \"de\" | \"hl\" | \"afPrime\" | \"bcPrime\" | \"dePrime\" | \"hlPrime\" | \"ix\" | \"iy\" | \"sp\" | \"pc\";\n\n/**\n * Internal state.\n */\nexport type InternalReg = \"memptr\" | \"i\" | \"r\" | \"iff1\" | \"iff2\" | \"im\" | \"halted\";\n\n/**\n * All registers.\n */\nexport type Register = ByteReg | WordReg | InternalReg;\n\n/**\n * List of all word registers.\n */\nconst WORD_REG = new Set([\"af\", \"bc\", \"de\", \"hl\", \"af'\", \"bc'\", \"de'\", \"hl'\", \"ix\", \"iy\", \"sp\", \"pc\"]);\n\n/**\n * List of all byte registers.\n */\nconst BYTE_REG = new Set([\"a\", \"f\", \"b\", \"c\", \"d\", \"e\", \"h\", \"l\", \"ixh\", \"ixl\", \"iyh\", \"iyl\", \"i\", \"r\"]);\n\n/**\n * Determine whether a register stores a word.\n */\nexport function isWordReg(s: string): boolean {\n    return WORD_REG.has(s.toLowerCase());\n}\n\n/**\n * Determine whether a register stores a byte.\n */\nexport function isByteReg(s: string): boolean {\n    return BYTE_REG.has(s.toLowerCase());\n}\n","import {Register} from \"./Register\";\nimport {hi, lo, word} from \"./Utils\";\n\n/**\n * All registers in a Z80.\n */\nexport class RegisterSet {\n    // External state:\n    public af: number = 0;\n    public bc: number = 0;\n    public de: number = 0;\n    public hl: number = 0;\n    public afPrime: number = 0;\n    public bcPrime: number = 0;\n    public dePrime: number = 0;\n    public hlPrime: number = 0;\n    public ix: number = 0;\n    public iy: number = 0;\n    public sp: number = 0;\n    public pc: number = 0;\n\n    // Internal state:\n    public memptr: number = 0;\n    public i: number = 0;\n    public r: number = 0;  // Low 7 bits of R.\n    public r7: number = 0; // Bit 7 of R.\n    public iff1: number = 0;\n    public iff2: number = 0;\n    public im: number = 0;\n    public halted: number = 0;\n\n    get a(): number {\n        return hi(this.af);\n    }\n\n    set a(value: number) {\n        this.af = word(value, this.f);\n    }\n\n    get f(): number {\n        return lo(this.af);\n    }\n\n    set f(value: number) {\n        this.af = word(this.a, value);\n    }\n\n    get b(): number {\n        return hi(this.bc);\n    }\n\n    set b(value: number) {\n        this.bc = word(value, this.c);\n    }\n\n    get c(): number {\n        return lo(this.bc);\n    }\n\n    set c(value: number) {\n        this.bc = word(this.b, value);\n    }\n\n    get d(): number {\n        return hi(this.de);\n    }\n\n    set d(value: number) {\n        this.de = word(value, this.e);\n    }\n\n    get e(): number {\n        return lo(this.de);\n    }\n\n    set e(value: number) {\n        this.de = word(this.d, value);\n    }\n\n    get h(): number {\n        return hi(this.hl);\n    }\n\n    set h(value: number) {\n        this.hl = word(value, this.l);\n    }\n\n    get l(): number {\n        return lo(this.hl);\n    }\n\n    set l(value: number) {\n        this.hl = word(this.h, value);\n    }\n\n    get ixh(): number {\n        return hi(this.ix);\n    }\n\n    set ixh(value: number) {\n        this.ix = word(value, this.ixl);\n    }\n\n    get ixl(): number {\n        return lo(this.ix);\n    }\n\n    set ixl(value: number) {\n        this.ix = word(this.ixh, value);\n    }\n\n    get iyh(): number {\n        return hi(this.iy);\n    }\n\n    set iyh(value: number) {\n        this.iy = word(value, this.iyl);\n    }\n\n    get iyl(): number {\n        return lo(this.iy);\n    }\n\n    set iyl(value: number) {\n        this.iy = word(this.iyh, value);\n    }\n\n    /**\n     * Combine the two R parts together.\n     */\n    get rCombined(): number {\n        return (this.r7 & 0x80) | (this.r & 0xF7);\n    }\n}\n\n/**\n * All real fields of RegisterSet, for enumeration.\n */\nexport const registerSetFields: Register[] = [\n    \"af\", \"bc\", \"de\", \"hl\",\n    \"afPrime\", \"bcPrime\", \"dePrime\", \"hlPrime\",\n    \"ix\", \"iy\", \"sp\", \"pc\",\n    \"memptr\", \"i\", \"r\", \"iff1\", \"iff2\", \"im\", \"halted\"];\n","/**\n * The flag bits in the F register.\n */\nexport enum Flag {\n    /**\n     * Carry and borrow. Indicates that the addition or subtraction did not\n     * fit in the register.\n     */\n    C = 0x01,\n    /**\n     * Set if the last operation was a subtraction.\n     */\n    N = 0x02,\n    /**\n     * Parity: Indicates that the result has an even number of bits set.\n     */\n    P = 0x04,\n    /**\n     * Overflow: Indicates that two's complement does not fit in register.\n     */\n    V = P,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X3 = 0x08,\n    /**\n     * Half carry: Carry from bit 3 to bit 4 during BCD operations.\n     */\n    H = 0x10,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X5 = 0x20,\n    /**\n     * Set if value is zero.\n     */\n    Z = 0x40,\n    /**\n     * Set of value is negative.\n     */\n    S = 0x80,\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n/**\n * Remove all children from element.\n */\nexport function clearElement(e: Element): void {\n    while (e.firstChild) {\n        e.removeChild(e.firstChild);\n    }\n}\n\n/**\n * Generate the string version of a number, in base 10, with commas for thousands groups.\n */\nexport function withCommas(n: number | string): string {\n    let s = typeof n === \"number\" ? Math.round(n).toString(10) : n;\n\n    const negative = s.length >= 1 && s.charAt(0) === \"-\";\n    const firstDigit = negative ? 1 : 0;\n\n    if (s.length - firstDigit > 4) {\n        for (let i = s.length - 3; i > firstDigit; i -= 3) {\n            s = s.substring(0, i) + \",\" + s.substring(i);\n        }\n    }\n\n    return s;\n}\n\n/**\n * Concatenate a list of byte arrays into one.\n */\nexport function concatByteArrays(items: Uint8Array[]): Uint8Array {\n    const length = items.reduce((sum, samples) => sum + samples.length, 0);\n    const allBytes = new Uint8Array(length);\n\n    let offset = 0;\n    for (const item of items) {\n        allBytes.set(item, offset);\n        offset += item.length;\n    }\n\n    return allBytes;\n}\n\n/**\n * Start a timer, and return a function that will evaluate to how many milliseconds\n * the timer has been running. Calling the function restarts the timer.\n */\nexport function startTimer(): () => number {\n    let timerStart = Date.now();\n\n    return () => {\n        const now = Date.now();\n        const elapsed = now - timerStart;\n        timerStart = now;\n        return elapsed;\n    };\n}\n","\nexport const EOF = -1;\n\n/**\n * Provides an API for reading through a byte array.\n */\nexport class ByteReader {\n    private readonly b: Uint8Array;\n    private pos: number;\n\n    constructor(b: Uint8Array) {\n        this.b = b;\n        this.pos = 0;\n    }\n\n    /**\n     * Return the next byte, or EOF on end of array.\n     *\n     * @returns {number}\n     */\n    public read(): number {\n        return this.pos < this.b.length ? this.b[this.pos++] : EOF;\n    }\n\n    /**\n     * Return the next byte, not advancing the stream.\n     *\n     * @param ahead how many bytes ahead to peek, or 0 for the next byte\n     * to be returned by {@link #read()}.\n     */\n    public peek(ahead: number = 0): number {\n        const pos = this.pos + ahead;\n        return pos < this.b.length ? this.b[pos] : EOF;\n    }\n\n    /**\n     * Return the byte address of the next byte to be read.\n     */\n    public addr(): number {\n        return this.pos;\n    }\n\n    /**\n     * Reads a little-endian short (two-byte) integer.\n     *\n     * @param allowEofAfterFirstByte if true, an EOF after the first byte will result in just the\n     * first byte. Otherwise an EOF is returned.\n     * @returns the integer, or EOF on end of file.\n     */\n    public readShort(allowEofAfterFirstByte: boolean): number {\n        const low = this.read();\n        if (low === EOF) {\n            return EOF;\n        }\n\n        const high = this.read();\n        if (high === EOF) {\n            return allowEofAfterFirstByte ? low : EOF;\n        }\n\n        return low + high * 256;\n    }\n\n    /**\n     * Reads a UTF-8 string from the stream. If the returned string is shorter than \"length\", then we hit EOF.\n     * Nul bytes are replaced with spaces.\n     */\n    public readString(length: number): string {\n        // We used to specify \"ascii\" for the decoder, but Node doesn't support it, and in any\n        // case UTF-8 is a super set, so anything that worked before should work now.\n        return new TextDecoder().decode(this.readBytes(length)).replace(/\\u0000/g, \" \");\n    }\n\n    /**\n     * Returns the next \"length\" bytes. If the returned array is shorter than \"length\", then we hit EOF.\n     */\n    public readBytes(length: number): Uint8Array {\n        const pos = this.pos;\n        length = Math.min(length, this.b.length - pos);\n        this.pos += length;\n\n        // So instead make a copy.\n        return this.b.slice(pos, pos + length);\n    }\n}\n","import {Flag, hi, inc16, lo, RegisterSet, word} from \"z80-base\";\nimport {decode} from \"./Decode\";\nimport {Hal} from \"./Hal\";\n\n/**\n * Emulated Z80 processor.\n */\nexport class Z80 {\n    /**\n     * Full set of registers.\n     */\n    public regs: RegisterSet = new RegisterSet();\n    /**\n     * Hardware abstraction layer this Z80 is dealing with.\n     */\n    public hal: Hal;\n    /**\n     * Tables for computing flags. Public so that the decoding function\n     * can access them.\n     */\n    public sz53Table: number[] = []; /* The S, Z, 5 and 3 bits of the index */\n    public parityTable: number[] = []; /* The parity of the lookup value */\n    public sz53pTable: number[] = []; /* OR the above two tables together */\n\n    constructor(hal: Hal) {\n        this.hal = hal;\n        this.initTables();\n    }\n\n    /**\n     * Reset the Z80 to a known state.\n     */\n    public reset(): void {\n        this.regs = new RegisterSet();\n    }\n\n    /**\n     * Execute one instruction.\n     */\n    public step(): void {\n        decode(this);\n    }\n\n    /**\n     * Increment the clock count.\n     */\n    public incTStateCount(count: number): void {\n        this.hal.tStateCount += count;\n    }\n\n    /**\n     * Interrupt the CPU with a maskable interrupt\n     */\n    public maskableInterrupt(): void {\n        if (this.regs.iff1 !== 0) {\n            this.interrupt(true);\n        }\n    }\n\n    /**\n     * Interrupt the CPU with a non-maskable interrupt\n     */\n    public nonMaskableInterrupt(): void {\n        this.interrupt(false);\n    }\n\n    /**\n     * Read a byte from memory, taking as many clock cycles as necessary.\n     */\n    public readByte(address: number): number {\n        this.incTStateCount(3);\n        return this.readByteInternal(address);\n    }\n\n    /**\n     * Reads a word at the specified address. Reads the low byte first.\n     */\n    public readWord(address: number): number {\n        const lowByte = this.readByte(address);\n        const highByte = this.readByte(address + 1);\n\n        return word(highByte, lowByte);\n    }\n\n    /**\n     * Read a byte from memory (not affecting clock).\n     */\n    public readByteInternal(address: number): number {\n        return this.hal.readMemory(address);\n    }\n\n    /**\n     * Write a byte to memory, taking as many clock cycles as necessary.\n     */\n    public writeByte(address: number, value: number): void {\n        this.incTStateCount(3);\n        this.writeByteInternal(address, value);\n    }\n\n    /**\n     * Write a byte to memory (not affecting clock).\n     */\n    public writeByteInternal(address: number, value: number): void {\n        this.hal.writeMemory(address, value);\n    }\n\n    /**\n     * Write a byte to a port, taking as many clock cycles as necessary.\n     */\n    public writePort(address: number, value: number): void {\n        this.incTStateCount(1);\n        this.hal.writePort(address, value);\n        this.incTStateCount(3);\n    }\n\n    /**\n     * Read a byte from a port, taking as many clock cycles as necessary.\n     */\n    public readPort(address: number): number {\n        this.incTStateCount(1);\n        const value = this.hal.readPort(address);\n        this.incTStateCount(3);\n        return value;\n    }\n\n    /**\n     * Push a word on the stack.\n     */\n    public pushWord(value: number): void {\n        this.pushByte(hi(value));\n        this.pushByte(lo(value));\n    }\n\n    /**\n     * Push a byte on the stack.\n     */\n    public pushByte(value: number): void {\n        this.regs.sp = (this.regs.sp - 1) & 0xFFFF;\n        this.writeByte(this.regs.sp, value);\n    }\n\n    /**\n     * Pop a word from the stack.\n     */\n    public popWord(): number {\n        const lowByte = this.popByte();\n        const highByte = this.popByte();\n        return word(highByte, lowByte);\n    }\n\n    /**\n     * Pop a byte from the stack.\n     */\n    public popByte(): number {\n        const value = this.readByte(this.regs.sp);\n        this.regs.sp = inc16(this.regs.sp);\n        return value;\n    }\n\n    /**\n     * Process either kind of interrupt. If maskable, assumes that\n     * the mask has already been checked.\n     */\n    private interrupt(maskable: boolean): void {\n        if (this.regs.halted) {\n            // Skip past HALT instruction.\n            this.regs.pc++;\n            this.regs.halted = 0;\n        }\n\n        this.incTStateCount(7);\n        this.regs.r += 1;\n        this.regs.iff1 = 0;\n        this.regs.iff2 = 0;\n\n        this.pushWord(this.regs.pc);\n\n        if (maskable) {\n            switch (this.regs.im) {\n                case 0:\n                case 1:\n                    this.regs.pc = 0x0038;\n                    break;\n\n                case 2: {\n                    // The LSB here is taken from the data bus, so it's\n                    // unpredictable. We use 0xFF but any value would do.\n                    const address = word(this.regs.i, 0xFF);\n                    this.regs.pc = this.readWord(address);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"Unknown im mode \" + this.regs.im);\n            }\n        } else {\n            this.regs.pc = 0x0066;\n        }\n    }\n\n    private initTables(): void {\n        for (let i = 0; i< 0x100; i++) {\n            this.sz53Table.push(i & (Flag.X3 | Flag.X5 | Flag.S));\n            let bits = i;\n            let parity = 0;\n            for (let bit = 0; bit < 8; bit++) {\n                parity ^= bits & 1;\n                bits >>= 1;\n            }\n            this.parityTable.push(parity ? 0 : Flag.P);\n            this.sz53pTable.push(this.sz53Table[i] | this.parityTable[i]);\n        }\n\n        this.sz53Table[0] |= Flag.Z;\n        this.sz53pTable[0] |= Flag.Z;\n\n    }\n}\n","// Do not modify. This file was generated by GenerateOpcodes.ts.\n\nimport {Z80} from \"./Z80\";\nimport {toHex, inc8, inc16, dec8, dec16, add8, add16, sub8, sub16, word, hi, lo, Flag, signedByte} from \"z80-base\";\n\ntype OpcodeFunc = (z80: Z80) => void;\n\n// Tables for computing flags after an operation.\nconst halfCarryAddTable = [0, Flag.H, Flag.H, Flag.H, 0, 0, 0, Flag.H];\nconst halfCarrySubTable = [0, 0, Flag.H, 0, Flag.H, 0, Flag.H, Flag.H];\nconst overflowAddTable = [0, 0, 0, Flag.V, Flag.V, 0, 0, 0];\nconst overflowSubTable = [0, Flag.V, 0, 0, 0, 0, Flag.V, 0];\n\nconst decodeMapBASE = new Map<number, OpcodeFunc>();\ndecodeMapBASE.set(0x00, (z80: Z80) => { // nop\n});\ndecodeMapBASE.set(0x01, (z80: Z80) => { // ld bc,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.bc = value;\n});\ndecodeMapBASE.set(0x02, (z80: Z80) => { // ld (bc),a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = word(z80.regs.a, inc16(z80.regs.bc));\n    z80.writeByte(z80.regs.bc, value);\n});\ndecodeMapBASE.set(0x03, (z80: Z80) => { // inc bc\n    let value: number;\n    value = z80.regs.bc;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.bc = value;\n});\ndecodeMapBASE.set(0x04, (z80: Z80) => { // inc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x05, (z80: Z80) => { // dec b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x06, (z80: Z80) => { // ld b,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x07, (z80: Z80) => { // rlca\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a >> 7) | (z80.regs.a << 1)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x80) !== 0 ? Flag.C : 0);\n});\ndecodeMapBASE.set(0x08, (z80: Z80) => { // ex af,af'\n    const rightValue = z80.regs.afPrime;\n    z80.regs.afPrime = z80.regs.af;\n    z80.regs.af = rightValue;\n});\ndecodeMapBASE.set(0x09, (z80: Z80) => { // add hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapBASE.set(0x0A, (z80: Z80) => { // ld a,(bc)\n    let value: number;\n    z80.regs.memptr = inc16(z80.regs.bc);\n    value = z80.readByte(z80.regs.bc);\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x0B, (z80: Z80) => { // dec bc\n    let value: number;\n    value = z80.regs.bc;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.bc = value;\n});\ndecodeMapBASE.set(0x0C, (z80: Z80) => { // inc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x0D, (z80: Z80) => { // dec c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x0E, (z80: Z80) => { // ld c,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x0F, (z80: Z80) => { // rrca\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a >> 1) | (z80.regs.a << 7)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x01) !== 0 ? Flag.C : 0);\n});\ndecodeMapBASE.set(0x10, (z80: Z80) => { // djnz offset\n    z80.incTStateCount(1);\n    z80.regs.b = dec8(z80.regs.b);\n    if (z80.regs.b !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\ndecodeMapBASE.set(0x11, (z80: Z80) => { // ld de,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.de = value;\n});\ndecodeMapBASE.set(0x12, (z80: Z80) => { // ld (de),a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = word(z80.regs.a, inc16(z80.regs.de));\n    z80.writeByte(z80.regs.de, value);\n});\ndecodeMapBASE.set(0x13, (z80: Z80) => { // inc de\n    let value: number;\n    value = z80.regs.de;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.de = value;\n});\ndecodeMapBASE.set(0x14, (z80: Z80) => { // inc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x15, (z80: Z80) => { // dec d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x16, (z80: Z80) => { // ld d,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x17, (z80: Z80) => { // rla\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a << 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x01 : 0)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x80) !== 0 ? Flag.C : 0);\n});\ndecodeMapBASE.set(0x18, (z80: Z80) => { // jr offset\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0x19, (z80: Z80) => { // add hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapBASE.set(0x1A, (z80: Z80) => { // ld a,(de)\n    let value: number;\n    z80.regs.memptr = inc16(z80.regs.de);\n    value = z80.readByte(z80.regs.de);\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x1B, (z80: Z80) => { // dec de\n    let value: number;\n    value = z80.regs.de;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.de = value;\n});\ndecodeMapBASE.set(0x1C, (z80: Z80) => { // inc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x1D, (z80: Z80) => { // dec e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x1E, (z80: Z80) => { // ld e,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x1F, (z80: Z80) => { // rra\n    const oldA = z80.regs.a;\n    z80.regs.a = (z80.regs.a >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x01) !== 0 ? Flag.C : 0);\n});\ndecodeMapBASE.set(0x20, (z80: Z80) => { // jr nz,offset\n    if ((z80.regs.f & Flag.Z) === 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\ndecodeMapBASE.set(0x21, (z80: Z80) => { // ld hl,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.hl = value;\n});\ndecodeMapBASE.set(0x22, (z80: Z80) => { // ld (nnnn),hl\n    let value: number;\n    value = z80.regs.hl;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapBASE.set(0x23, (z80: Z80) => { // inc hl\n    let value: number;\n    value = z80.regs.hl;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.hl = value;\n});\ndecodeMapBASE.set(0x24, (z80: Z80) => { // inc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x25, (z80: Z80) => { // dec h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x26, (z80: Z80) => { // ld h,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x27, (z80: Z80) => { // daa\n    let value = 0;\n    let carry = z80.regs.f & Flag.C;\n    if ((z80.regs.f & Flag.H) !== 0 || ((z80.regs.a & 0x0F) > 9)) {\n        value = 6; // Skip over hex digits in lower nybble.\n    }\n    if (carry !== 0 || z80.regs.a > 0x99) {\n        value |= 0x60; // Skip over hex digits in upper nybble.\n    }\n    if (z80.regs.a > 0x99) {\n        carry = Flag.C;\n    }\n    if ((z80.regs.f & Flag.N) !== 0) {\n        let result = sub16(z80.regs.a, value);\n        const lookup = (((z80.regs.a & 0x88) >> 3) |\n                       ((value & 0x88) >> 2) |\n                       ((result & 0x88) >> 1)) & 0xFF;\n        z80.regs.a = result & 0xFF;\n        z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n    } else {\n        let result = add16(z80.regs.a, value);\n        const lookup = (((z80.regs.a & 0x88) >> 3) |\n                       ((value & 0x88) >> 2) |\n                       ((result & 0x88) >> 1)) & 0xFF;\n        z80.regs.a = result & 0xFF;\n        z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n    }\n    z80.regs.f = (z80.regs.f & ~(Flag.C | Flag.P)) | carry | z80.parityTable[z80.regs.a];\n});\ndecodeMapBASE.set(0x28, (z80: Z80) => { // jr z,offset\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\ndecodeMapBASE.set(0x29, (z80: Z80) => { // add hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapBASE.set(0x2A, (z80: Z80) => { // ld hl,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.hl = value;\n});\ndecodeMapBASE.set(0x2B, (z80: Z80) => { // dec hl\n    let value: number;\n    value = z80.regs.hl;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.hl = value;\n});\ndecodeMapBASE.set(0x2C, (z80: Z80) => { // inc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x2D, (z80: Z80) => { // dec l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x2E, (z80: Z80) => { // ld l,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x2F, (z80: Z80) => { // cpl\n    z80.regs.a ^= 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | Flag.N | Flag.H;\n});\ndecodeMapBASE.set(0x30, (z80: Z80) => { // jr nc,offset\n    if ((z80.regs.f & Flag.C) === 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\ndecodeMapBASE.set(0x31, (z80: Z80) => { // ld sp,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.sp = value;\n});\ndecodeMapBASE.set(0x32, (z80: Z80) => { // ld (nnnn),a\n    let value: number;\n    value = z80.regs.a;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.regs.a, inc16(value));\n    z80.writeByte(value, z80.regs.a);\n});\ndecodeMapBASE.set(0x33, (z80: Z80) => { // inc sp\n    let value: number;\n    value = z80.regs.sp;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.sp = value;\n});\ndecodeMapBASE.set(0x34, (z80: Z80) => { // inc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x35, (z80: Z80) => { // dec (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x36, (z80: Z80) => { // ld (hl),nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x37, (z80: Z80) => { // scf\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | Flag.C | (z80.regs.a & (Flag.X3 | Flag.X5));\n});\ndecodeMapBASE.set(0x38, (z80: Z80) => { // jr c,offset\n    if ((z80.regs.f & Flag.C) !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\ndecodeMapBASE.set(0x39, (z80: Z80) => { // add hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapBASE.set(0x3A, (z80: Z80) => { // ld a,(nnnn)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = inc16(value);\n    value = z80.readByte(value);\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x3B, (z80: Z80) => { // dec sp\n    let value: number;\n    value = z80.regs.sp;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.sp = value;\n});\ndecodeMapBASE.set(0x3C, (z80: Z80) => { // inc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x3D, (z80: Z80) => { // dec a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x3E, (z80: Z80) => { // ld a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x3F, (z80: Z80) => { // ccf\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | ((z80.regs.f & Flag.C) !== 0 ? Flag.H : Flag.C) | (z80.regs.a & (Flag.X3 | Flag.X5));\n});\ndecodeMapBASE.set(0x40, (z80: Z80) => { // ld b,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x41, (z80: Z80) => { // ld b,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x42, (z80: Z80) => { // ld b,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x43, (z80: Z80) => { // ld b,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x44, (z80: Z80) => { // ld b,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x45, (z80: Z80) => { // ld b,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x46, (z80: Z80) => { // ld b,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x47, (z80: Z80) => { // ld b,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.b = value;\n});\ndecodeMapBASE.set(0x48, (z80: Z80) => { // ld c,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x49, (z80: Z80) => { // ld c,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4A, (z80: Z80) => { // ld c,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4B, (z80: Z80) => { // ld c,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4C, (z80: Z80) => { // ld c,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4D, (z80: Z80) => { // ld c,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4E, (z80: Z80) => { // ld c,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x4F, (z80: Z80) => { // ld c,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.c = value;\n});\ndecodeMapBASE.set(0x50, (z80: Z80) => { // ld d,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x51, (z80: Z80) => { // ld d,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x52, (z80: Z80) => { // ld d,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x53, (z80: Z80) => { // ld d,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x54, (z80: Z80) => { // ld d,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x55, (z80: Z80) => { // ld d,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x56, (z80: Z80) => { // ld d,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x57, (z80: Z80) => { // ld d,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.d = value;\n});\ndecodeMapBASE.set(0x58, (z80: Z80) => { // ld e,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x59, (z80: Z80) => { // ld e,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5A, (z80: Z80) => { // ld e,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5B, (z80: Z80) => { // ld e,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5C, (z80: Z80) => { // ld e,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5D, (z80: Z80) => { // ld e,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5E, (z80: Z80) => { // ld e,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x5F, (z80: Z80) => { // ld e,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.e = value;\n});\ndecodeMapBASE.set(0x60, (z80: Z80) => { // ld h,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x61, (z80: Z80) => { // ld h,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x62, (z80: Z80) => { // ld h,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x63, (z80: Z80) => { // ld h,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x64, (z80: Z80) => { // ld h,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x65, (z80: Z80) => { // ld h,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x66, (z80: Z80) => { // ld h,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x67, (z80: Z80) => { // ld h,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.h = value;\n});\ndecodeMapBASE.set(0x68, (z80: Z80) => { // ld l,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x69, (z80: Z80) => { // ld l,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6A, (z80: Z80) => { // ld l,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6B, (z80: Z80) => { // ld l,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6C, (z80: Z80) => { // ld l,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6D, (z80: Z80) => { // ld l,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6E, (z80: Z80) => { // ld l,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x6F, (z80: Z80) => { // ld l,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.l = value;\n});\ndecodeMapBASE.set(0x70, (z80: Z80) => { // ld (hl),b\n    let value: number;\n    value = z80.regs.b;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x71, (z80: Z80) => { // ld (hl),c\n    let value: number;\n    value = z80.regs.c;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x72, (z80: Z80) => { // ld (hl),d\n    let value: number;\n    value = z80.regs.d;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x73, (z80: Z80) => { // ld (hl),e\n    let value: number;\n    value = z80.regs.e;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x74, (z80: Z80) => { // ld (hl),h\n    let value: number;\n    value = z80.regs.h;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x75, (z80: Z80) => { // ld (hl),l\n    let value: number;\n    value = z80.regs.l;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x76, (z80: Z80) => { // halt\n    z80.regs.halted = 1;\n    z80.regs.pc = dec16(z80.regs.pc);\n});\ndecodeMapBASE.set(0x77, (z80: Z80) => { // ld (hl),a\n    let value: number;\n    value = z80.regs.a;\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapBASE.set(0x78, (z80: Z80) => { // ld a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x79, (z80: Z80) => { // ld a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7A, (z80: Z80) => { // ld a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7B, (z80: Z80) => { // ld a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7C, (z80: Z80) => { // ld a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7D, (z80: Z80) => { // ld a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7E, (z80: Z80) => { // ld a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x7F, (z80: Z80) => { // ld a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a = value;\n});\ndecodeMapBASE.set(0x80, (z80: Z80) => { // add a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x81, (z80: Z80) => { // add a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x82, (z80: Z80) => { // add a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x83, (z80: Z80) => { // add a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x84, (z80: Z80) => { // add a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x85, (z80: Z80) => { // add a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x86, (z80: Z80) => { // add a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x87, (z80: Z80) => { // add a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x88, (z80: Z80) => { // adc a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x89, (z80: Z80) => { // adc a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8A, (z80: Z80) => { // adc a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8B, (z80: Z80) => { // adc a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8C, (z80: Z80) => { // adc a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8D, (z80: Z80) => { // adc a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8E, (z80: Z80) => { // adc a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x8F, (z80: Z80) => { // adc a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x90, (z80: Z80) => { // sub a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x91, (z80: Z80) => { // sub a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x92, (z80: Z80) => { // sub a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x93, (z80: Z80) => { // sub a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x94, (z80: Z80) => { // sub a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x95, (z80: Z80) => { // sub a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x96, (z80: Z80) => { // sub a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x97, (z80: Z80) => { // sub a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x98, (z80: Z80) => { // sbc a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x99, (z80: Z80) => { // sbc a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9A, (z80: Z80) => { // sbc a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9B, (z80: Z80) => { // sbc a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9C, (z80: Z80) => { // sbc a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9D, (z80: Z80) => { // sbc a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9E, (z80: Z80) => { // sbc a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0x9F, (z80: Z80) => { // sbc a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0xA0, (z80: Z80) => { // and a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA1, (z80: Z80) => { // and a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA2, (z80: Z80) => { // and a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA3, (z80: Z80) => { // and a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA4, (z80: Z80) => { // and a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA5, (z80: Z80) => { // and a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA6, (z80: Z80) => { // and a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA7, (z80: Z80) => { // and a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xA8, (z80: Z80) => { // xor a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xA9, (z80: Z80) => { // xor a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAA, (z80: Z80) => { // xor a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAB, (z80: Z80) => { // xor a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAC, (z80: Z80) => { // xor a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAD, (z80: Z80) => { // xor a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAE, (z80: Z80) => { // xor a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xAF, (z80: Z80) => { // xor a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB0, (z80: Z80) => { // or a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB1, (z80: Z80) => { // or a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB2, (z80: Z80) => { // or a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB3, (z80: Z80) => { // or a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB4, (z80: Z80) => { // or a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB5, (z80: Z80) => { // or a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB6, (z80: Z80) => { // or a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB7, (z80: Z80) => { // or a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xB8, (z80: Z80) => { // cp b\n    let value: number;\n    value = z80.regs.b;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xB9, (z80: Z80) => { // cp c\n    let value: number;\n    value = z80.regs.c;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBA, (z80: Z80) => { // cp d\n    let value: number;\n    value = z80.regs.d;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBB, (z80: Z80) => { // cp e\n    let value: number;\n    value = z80.regs.e;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBC, (z80: Z80) => { // cp h\n    let value: number;\n    value = z80.regs.h;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBD, (z80: Z80) => { // cp l\n    let value: number;\n    value = z80.regs.l;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBE, (z80: Z80) => { // cp (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xBF, (z80: Z80) => { // cp a\n    let value: number;\n    value = z80.regs.a;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xC0, (z80: Z80) => { // ret nz\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xC1, (z80: Z80) => { // pop bc\n    z80.regs.bc = z80.popWord();\n});\ndecodeMapBASE.set(0xC2, (z80: Z80) => { // jp nz,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xC3, (z80: Z80) => { // jp nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.pc = z80.regs.memptr;\n});\ndecodeMapBASE.set(0xC4, (z80: Z80) => { // call nz,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xC5, (z80: Z80) => { // push bc\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.bc);\n});\ndecodeMapBASE.set(0xC6, (z80: Z80) => { // add a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0xC7, (z80: Z80) => { // rst 00\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0000;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xC8, (z80: Z80) => { // ret z\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xC9, (z80: Z80) => { // ret\n    z80.regs.pc = z80.popWord();\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xCA, (z80: Z80) => { // jp z,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xCB, (z80: Z80) => { // shift cb\n    decodeCB(z80);\n});\ndecodeMapBASE.set(0xCC, (z80: Z80) => { // call z,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xCD, (z80: Z80) => { // call nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = z80.regs.memptr;\n});\ndecodeMapBASE.set(0xCE, (z80: Z80) => { // adc a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0xCF, (z80: Z80) => { // rst 8\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0008;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xD0, (z80: Z80) => { // ret nc\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xD1, (z80: Z80) => { // pop de\n    z80.regs.de = z80.popWord();\n});\ndecodeMapBASE.set(0xD2, (z80: Z80) => { // jp nc,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xD3, (z80: Z80) => { // out (nn),a\n    const port = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.regs.a, inc8(port));\n    z80.writePort(word(z80.regs.a, port), z80.regs.a);\n});\ndecodeMapBASE.set(0xD4, (z80: Z80) => { // call nc,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xD5, (z80: Z80) => { // push de\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.de);\n});\ndecodeMapBASE.set(0xD6, (z80: Z80) => { // sub a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0xD7, (z80: Z80) => { // rst 10\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0010;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xD8, (z80: Z80) => { // ret c\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xD9, (z80: Z80) => { // exx\n    let tmp: number;\n    tmp = z80.regs.bc; z80.regs.bc = z80.regs.bcPrime; z80.regs.bcPrime = tmp;\n    tmp = z80.regs.de; z80.regs.de = z80.regs.dePrime; z80.regs.dePrime = tmp;\n    tmp = z80.regs.hl; z80.regs.hl = z80.regs.hlPrime; z80.regs.hlPrime = tmp;\n});\ndecodeMapBASE.set(0xDA, (z80: Z80) => { // jp c,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xDB, (z80: Z80) => { // in a,(nn)\n    const port = word(z80.regs.a, z80.readByte(z80.regs.pc));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a = z80.readPort(port);\n    z80.regs.memptr = inc16(port);\n});\ndecodeMapBASE.set(0xDC, (z80: Z80) => { // call c,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xDD, (z80: Z80) => { // shift dd\n    decodeDD(z80);\n});\ndecodeMapBASE.set(0xDE, (z80: Z80) => { // sbc a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapBASE.set(0xDF, (z80: Z80) => { // rst 18\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0018;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xE0, (z80: Z80) => { // ret po\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xE1, (z80: Z80) => { // pop hl\n    z80.regs.hl = z80.popWord();\n});\ndecodeMapBASE.set(0xE2, (z80: Z80) => { // jp po,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xE3, (z80: Z80) => { // ex (sp),hl\n    const rightValue = z80.regs.hl;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.hl = word(leftValueH, leftValueL);\n});\ndecodeMapBASE.set(0xE4, (z80: Z80) => { // call po,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xE5, (z80: Z80) => { // push hl\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.hl);\n});\ndecodeMapBASE.set(0xE6, (z80: Z80) => { // and nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapBASE.set(0xE7, (z80: Z80) => { // rst 20\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0020;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xE8, (z80: Z80) => { // ret pe\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xE9, (z80: Z80) => { // jp hl\n    z80.regs.pc = z80.regs.hl;\n});\ndecodeMapBASE.set(0xEA, (z80: Z80) => { // jp pe,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xEB, (z80: Z80) => { // ex de,hl\n    const rightValue = z80.regs.hl;\n    z80.regs.hl = z80.regs.de;\n    z80.regs.de = rightValue;\n});\ndecodeMapBASE.set(0xEC, (z80: Z80) => { // call pe,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xED, (z80: Z80) => { // shift ed\n    decodeED(z80);\n});\ndecodeMapBASE.set(0xEE, (z80: Z80) => { // xor a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xEF, (z80: Z80) => { // rst 28\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0028;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xF0, (z80: Z80) => { // ret p\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xF1, (z80: Z80) => { // pop af\n    z80.regs.af = z80.popWord();\n});\ndecodeMapBASE.set(0xF2, (z80: Z80) => { // jp p,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xF3, (z80: Z80) => { // di\n    z80.regs.iff1 = 0;\n    z80.regs.iff2 = 0;\n});\ndecodeMapBASE.set(0xF4, (z80: Z80) => { // call p,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xF5, (z80: Z80) => { // push af\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.af);\n});\ndecodeMapBASE.set(0xF6, (z80: Z80) => { // or nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapBASE.set(0xF7, (z80: Z80) => { // rst 30\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0030;\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapBASE.set(0xF8, (z80: Z80) => { // ret m\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\ndecodeMapBASE.set(0xF9, (z80: Z80) => { // ld sp,hl\n    let value: number;\n    value = z80.regs.hl;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\ndecodeMapBASE.set(0xFA, (z80: Z80) => { // jp m,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xFB, (z80: Z80) => { // ei\n    z80.regs.iff1 = 1;\n    z80.regs.iff2 = 1;\n});\ndecodeMapBASE.set(0xFC, (z80: Z80) => { // call m,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\ndecodeMapBASE.set(0xFD, (z80: Z80) => { // shift fd\n    decodeFD(z80);\n});\ndecodeMapBASE.set(0xFE, (z80: Z80) => { // cp nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapBASE.set(0xFF, (z80: Z80) => { // rst 38\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0038;\n    z80.regs.memptr = z80.regs.pc;\n});\n\nconst decodeMapCB = new Map<number, OpcodeFunc>();\ndecodeMapCB.set(0x00, (z80: Z80) => { // rlc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x01, (z80: Z80) => { // rlc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x02, (z80: Z80) => { // rlc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x03, (z80: Z80) => { // rlc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x04, (z80: Z80) => { // rlc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x05, (z80: Z80) => { // rlc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x06, (z80: Z80) => { // rlc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x07, (z80: Z80) => { // rlc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x08, (z80: Z80) => { // rrc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x09, (z80: Z80) => { // rrc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x0A, (z80: Z80) => { // rrc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x0B, (z80: Z80) => { // rrc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x0C, (z80: Z80) => { // rrc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x0D, (z80: Z80) => { // rrc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x0E, (z80: Z80) => { // rrc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x0F, (z80: Z80) => { // rrc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x10, (z80: Z80) => { // rl b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x11, (z80: Z80) => { // rl c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x12, (z80: Z80) => { // rl d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x13, (z80: Z80) => { // rl e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x14, (z80: Z80) => { // rl h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x15, (z80: Z80) => { // rl l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x16, (z80: Z80) => { // rl (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x17, (z80: Z80) => { // rl a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x18, (z80: Z80) => { // rr b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x19, (z80: Z80) => { // rr c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x1A, (z80: Z80) => { // rr d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x1B, (z80: Z80) => { // rr e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x1C, (z80: Z80) => { // rr h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x1D, (z80: Z80) => { // rr l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x1E, (z80: Z80) => { // rr (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x1F, (z80: Z80) => { // rr a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x20, (z80: Z80) => { // sla b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x21, (z80: Z80) => { // sla c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x22, (z80: Z80) => { // sla d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x23, (z80: Z80) => { // sla e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x24, (z80: Z80) => { // sla h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x25, (z80: Z80) => { // sla l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x26, (z80: Z80) => { // sla (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x27, (z80: Z80) => { // sla a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x28, (z80: Z80) => { // sra b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x29, (z80: Z80) => { // sra c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x2A, (z80: Z80) => { // sra d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x2B, (z80: Z80) => { // sra e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x2C, (z80: Z80) => { // sra h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x2D, (z80: Z80) => { // sra l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x2E, (z80: Z80) => { // sra (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x2F, (z80: Z80) => { // sra a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x30, (z80: Z80) => { // sll b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x31, (z80: Z80) => { // sll c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x32, (z80: Z80) => { // sll d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x33, (z80: Z80) => { // sll e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x34, (z80: Z80) => { // sll h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x35, (z80: Z80) => { // sll l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x36, (z80: Z80) => { // sll (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x37, (z80: Z80) => { // sll a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x38, (z80: Z80) => { // srl b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\ndecodeMapCB.set(0x39, (z80: Z80) => { // srl c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\ndecodeMapCB.set(0x3A, (z80: Z80) => { // srl d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\ndecodeMapCB.set(0x3B, (z80: Z80) => { // srl e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\ndecodeMapCB.set(0x3C, (z80: Z80) => { // srl h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\ndecodeMapCB.set(0x3D, (z80: Z80) => { // srl l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\ndecodeMapCB.set(0x3E, (z80: Z80) => { // srl (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\ndecodeMapCB.set(0x3F, (z80: Z80) => { // srl a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\ndecodeMapCB.set(0x40, (z80: Z80) => { // bit 0,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x41, (z80: Z80) => { // bit 0,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x42, (z80: Z80) => { // bit 0,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x43, (z80: Z80) => { // bit 0,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x44, (z80: Z80) => { // bit 0,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x45, (z80: Z80) => { // bit 0,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x46, (z80: Z80) => { // bit 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x47, (z80: Z80) => { // bit 0,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x48, (z80: Z80) => { // bit 1,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x49, (z80: Z80) => { // bit 1,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4A, (z80: Z80) => { // bit 1,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4B, (z80: Z80) => { // bit 1,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4C, (z80: Z80) => { // bit 1,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4D, (z80: Z80) => { // bit 1,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4E, (z80: Z80) => { // bit 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x4F, (z80: Z80) => { // bit 1,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x50, (z80: Z80) => { // bit 2,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x51, (z80: Z80) => { // bit 2,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x52, (z80: Z80) => { // bit 2,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x53, (z80: Z80) => { // bit 2,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x54, (z80: Z80) => { // bit 2,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x55, (z80: Z80) => { // bit 2,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x56, (z80: Z80) => { // bit 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x57, (z80: Z80) => { // bit 2,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x58, (z80: Z80) => { // bit 3,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x59, (z80: Z80) => { // bit 3,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5A, (z80: Z80) => { // bit 3,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5B, (z80: Z80) => { // bit 3,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5C, (z80: Z80) => { // bit 3,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5D, (z80: Z80) => { // bit 3,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5E, (z80: Z80) => { // bit 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x5F, (z80: Z80) => { // bit 3,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x60, (z80: Z80) => { // bit 4,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x61, (z80: Z80) => { // bit 4,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x62, (z80: Z80) => { // bit 4,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x63, (z80: Z80) => { // bit 4,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x64, (z80: Z80) => { // bit 4,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x65, (z80: Z80) => { // bit 4,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x66, (z80: Z80) => { // bit 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x67, (z80: Z80) => { // bit 4,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x68, (z80: Z80) => { // bit 5,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x69, (z80: Z80) => { // bit 5,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6A, (z80: Z80) => { // bit 5,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6B, (z80: Z80) => { // bit 5,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6C, (z80: Z80) => { // bit 5,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6D, (z80: Z80) => { // bit 5,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6E, (z80: Z80) => { // bit 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x6F, (z80: Z80) => { // bit 5,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x70, (z80: Z80) => { // bit 6,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x71, (z80: Z80) => { // bit 6,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x72, (z80: Z80) => { // bit 6,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x73, (z80: Z80) => { // bit 6,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x74, (z80: Z80) => { // bit 6,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x75, (z80: Z80) => { // bit 6,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x76, (z80: Z80) => { // bit 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x77, (z80: Z80) => { // bit 6,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x78, (z80: Z80) => { // bit 7,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x79, (z80: Z80) => { // bit 7,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7A, (z80: Z80) => { // bit 7,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7B, (z80: Z80) => { // bit 7,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7C, (z80: Z80) => { // bit 7,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7D, (z80: Z80) => { // bit 7,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7E, (z80: Z80) => { // bit 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x7F, (z80: Z80) => { // bit 7,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapCB.set(0x80, (z80: Z80) => { // res 0,b\n    z80.regs.b &= 0xFE;\n});\ndecodeMapCB.set(0x81, (z80: Z80) => { // res 0,c\n    z80.regs.c &= 0xFE;\n});\ndecodeMapCB.set(0x82, (z80: Z80) => { // res 0,d\n    z80.regs.d &= 0xFE;\n});\ndecodeMapCB.set(0x83, (z80: Z80) => { // res 0,e\n    z80.regs.e &= 0xFE;\n});\ndecodeMapCB.set(0x84, (z80: Z80) => { // res 0,h\n    z80.regs.h &= 0xFE;\n});\ndecodeMapCB.set(0x85, (z80: Z80) => { // res 0,l\n    z80.regs.l &= 0xFE;\n});\ndecodeMapCB.set(0x86, (z80: Z80) => { // res 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFE);\n});\ndecodeMapCB.set(0x87, (z80: Z80) => { // res 0,a\n    z80.regs.a &= 0xFE;\n});\ndecodeMapCB.set(0x88, (z80: Z80) => { // res 1,b\n    z80.regs.b &= 0xFD;\n});\ndecodeMapCB.set(0x89, (z80: Z80) => { // res 1,c\n    z80.regs.c &= 0xFD;\n});\ndecodeMapCB.set(0x8A, (z80: Z80) => { // res 1,d\n    z80.regs.d &= 0xFD;\n});\ndecodeMapCB.set(0x8B, (z80: Z80) => { // res 1,e\n    z80.regs.e &= 0xFD;\n});\ndecodeMapCB.set(0x8C, (z80: Z80) => { // res 1,h\n    z80.regs.h &= 0xFD;\n});\ndecodeMapCB.set(0x8D, (z80: Z80) => { // res 1,l\n    z80.regs.l &= 0xFD;\n});\ndecodeMapCB.set(0x8E, (z80: Z80) => { // res 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFD);\n});\ndecodeMapCB.set(0x8F, (z80: Z80) => { // res 1,a\n    z80.regs.a &= 0xFD;\n});\ndecodeMapCB.set(0x90, (z80: Z80) => { // res 2,b\n    z80.regs.b &= 0xFB;\n});\ndecodeMapCB.set(0x91, (z80: Z80) => { // res 2,c\n    z80.regs.c &= 0xFB;\n});\ndecodeMapCB.set(0x92, (z80: Z80) => { // res 2,d\n    z80.regs.d &= 0xFB;\n});\ndecodeMapCB.set(0x93, (z80: Z80) => { // res 2,e\n    z80.regs.e &= 0xFB;\n});\ndecodeMapCB.set(0x94, (z80: Z80) => { // res 2,h\n    z80.regs.h &= 0xFB;\n});\ndecodeMapCB.set(0x95, (z80: Z80) => { // res 2,l\n    z80.regs.l &= 0xFB;\n});\ndecodeMapCB.set(0x96, (z80: Z80) => { // res 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFB);\n});\ndecodeMapCB.set(0x97, (z80: Z80) => { // res 2,a\n    z80.regs.a &= 0xFB;\n});\ndecodeMapCB.set(0x98, (z80: Z80) => { // res 3,b\n    z80.regs.b &= 0xF7;\n});\ndecodeMapCB.set(0x99, (z80: Z80) => { // res 3,c\n    z80.regs.c &= 0xF7;\n});\ndecodeMapCB.set(0x9A, (z80: Z80) => { // res 3,d\n    z80.regs.d &= 0xF7;\n});\ndecodeMapCB.set(0x9B, (z80: Z80) => { // res 3,e\n    z80.regs.e &= 0xF7;\n});\ndecodeMapCB.set(0x9C, (z80: Z80) => { // res 3,h\n    z80.regs.h &= 0xF7;\n});\ndecodeMapCB.set(0x9D, (z80: Z80) => { // res 3,l\n    z80.regs.l &= 0xF7;\n});\ndecodeMapCB.set(0x9E, (z80: Z80) => { // res 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xF7);\n});\ndecodeMapCB.set(0x9F, (z80: Z80) => { // res 3,a\n    z80.regs.a &= 0xF7;\n});\ndecodeMapCB.set(0xA0, (z80: Z80) => { // res 4,b\n    z80.regs.b &= 0xEF;\n});\ndecodeMapCB.set(0xA1, (z80: Z80) => { // res 4,c\n    z80.regs.c &= 0xEF;\n});\ndecodeMapCB.set(0xA2, (z80: Z80) => { // res 4,d\n    z80.regs.d &= 0xEF;\n});\ndecodeMapCB.set(0xA3, (z80: Z80) => { // res 4,e\n    z80.regs.e &= 0xEF;\n});\ndecodeMapCB.set(0xA4, (z80: Z80) => { // res 4,h\n    z80.regs.h &= 0xEF;\n});\ndecodeMapCB.set(0xA5, (z80: Z80) => { // res 4,l\n    z80.regs.l &= 0xEF;\n});\ndecodeMapCB.set(0xA6, (z80: Z80) => { // res 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xEF);\n});\ndecodeMapCB.set(0xA7, (z80: Z80) => { // res 4,a\n    z80.regs.a &= 0xEF;\n});\ndecodeMapCB.set(0xA8, (z80: Z80) => { // res 5,b\n    z80.regs.b &= 0xDF;\n});\ndecodeMapCB.set(0xA9, (z80: Z80) => { // res 5,c\n    z80.regs.c &= 0xDF;\n});\ndecodeMapCB.set(0xAA, (z80: Z80) => { // res 5,d\n    z80.regs.d &= 0xDF;\n});\ndecodeMapCB.set(0xAB, (z80: Z80) => { // res 5,e\n    z80.regs.e &= 0xDF;\n});\ndecodeMapCB.set(0xAC, (z80: Z80) => { // res 5,h\n    z80.regs.h &= 0xDF;\n});\ndecodeMapCB.set(0xAD, (z80: Z80) => { // res 5,l\n    z80.regs.l &= 0xDF;\n});\ndecodeMapCB.set(0xAE, (z80: Z80) => { // res 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xDF);\n});\ndecodeMapCB.set(0xAF, (z80: Z80) => { // res 5,a\n    z80.regs.a &= 0xDF;\n});\ndecodeMapCB.set(0xB0, (z80: Z80) => { // res 6,b\n    z80.regs.b &= 0xBF;\n});\ndecodeMapCB.set(0xB1, (z80: Z80) => { // res 6,c\n    z80.regs.c &= 0xBF;\n});\ndecodeMapCB.set(0xB2, (z80: Z80) => { // res 6,d\n    z80.regs.d &= 0xBF;\n});\ndecodeMapCB.set(0xB3, (z80: Z80) => { // res 6,e\n    z80.regs.e &= 0xBF;\n});\ndecodeMapCB.set(0xB4, (z80: Z80) => { // res 6,h\n    z80.regs.h &= 0xBF;\n});\ndecodeMapCB.set(0xB5, (z80: Z80) => { // res 6,l\n    z80.regs.l &= 0xBF;\n});\ndecodeMapCB.set(0xB6, (z80: Z80) => { // res 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xBF);\n});\ndecodeMapCB.set(0xB7, (z80: Z80) => { // res 6,a\n    z80.regs.a &= 0xBF;\n});\ndecodeMapCB.set(0xB8, (z80: Z80) => { // res 7,b\n    z80.regs.b &= 0x7F;\n});\ndecodeMapCB.set(0xB9, (z80: Z80) => { // res 7,c\n    z80.regs.c &= 0x7F;\n});\ndecodeMapCB.set(0xBA, (z80: Z80) => { // res 7,d\n    z80.regs.d &= 0x7F;\n});\ndecodeMapCB.set(0xBB, (z80: Z80) => { // res 7,e\n    z80.regs.e &= 0x7F;\n});\ndecodeMapCB.set(0xBC, (z80: Z80) => { // res 7,h\n    z80.regs.h &= 0x7F;\n});\ndecodeMapCB.set(0xBD, (z80: Z80) => { // res 7,l\n    z80.regs.l &= 0x7F;\n});\ndecodeMapCB.set(0xBE, (z80: Z80) => { // res 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0x7F);\n});\ndecodeMapCB.set(0xBF, (z80: Z80) => { // res 7,a\n    z80.regs.a &= 0x7F;\n});\ndecodeMapCB.set(0xC0, (z80: Z80) => { // set 0,b\n    z80.regs.b |= 0x01;\n});\ndecodeMapCB.set(0xC1, (z80: Z80) => { // set 0,c\n    z80.regs.c |= 0x01;\n});\ndecodeMapCB.set(0xC2, (z80: Z80) => { // set 0,d\n    z80.regs.d |= 0x01;\n});\ndecodeMapCB.set(0xC3, (z80: Z80) => { // set 0,e\n    z80.regs.e |= 0x01;\n});\ndecodeMapCB.set(0xC4, (z80: Z80) => { // set 0,h\n    z80.regs.h |= 0x01;\n});\ndecodeMapCB.set(0xC5, (z80: Z80) => { // set 0,l\n    z80.regs.l |= 0x01;\n});\ndecodeMapCB.set(0xC6, (z80: Z80) => { // set 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x01);\n});\ndecodeMapCB.set(0xC7, (z80: Z80) => { // set 0,a\n    z80.regs.a |= 0x01;\n});\ndecodeMapCB.set(0xC8, (z80: Z80) => { // set 1,b\n    z80.regs.b |= 0x02;\n});\ndecodeMapCB.set(0xC9, (z80: Z80) => { // set 1,c\n    z80.regs.c |= 0x02;\n});\ndecodeMapCB.set(0xCA, (z80: Z80) => { // set 1,d\n    z80.regs.d |= 0x02;\n});\ndecodeMapCB.set(0xCB, (z80: Z80) => { // set 1,e\n    z80.regs.e |= 0x02;\n});\ndecodeMapCB.set(0xCC, (z80: Z80) => { // set 1,h\n    z80.regs.h |= 0x02;\n});\ndecodeMapCB.set(0xCD, (z80: Z80) => { // set 1,l\n    z80.regs.l |= 0x02;\n});\ndecodeMapCB.set(0xCE, (z80: Z80) => { // set 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x02);\n});\ndecodeMapCB.set(0xCF, (z80: Z80) => { // set 1,a\n    z80.regs.a |= 0x02;\n});\ndecodeMapCB.set(0xD0, (z80: Z80) => { // set 2,b\n    z80.regs.b |= 0x04;\n});\ndecodeMapCB.set(0xD1, (z80: Z80) => { // set 2,c\n    z80.regs.c |= 0x04;\n});\ndecodeMapCB.set(0xD2, (z80: Z80) => { // set 2,d\n    z80.regs.d |= 0x04;\n});\ndecodeMapCB.set(0xD3, (z80: Z80) => { // set 2,e\n    z80.regs.e |= 0x04;\n});\ndecodeMapCB.set(0xD4, (z80: Z80) => { // set 2,h\n    z80.regs.h |= 0x04;\n});\ndecodeMapCB.set(0xD5, (z80: Z80) => { // set 2,l\n    z80.regs.l |= 0x04;\n});\ndecodeMapCB.set(0xD6, (z80: Z80) => { // set 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x04);\n});\ndecodeMapCB.set(0xD7, (z80: Z80) => { // set 2,a\n    z80.regs.a |= 0x04;\n});\ndecodeMapCB.set(0xD8, (z80: Z80) => { // set 3,b\n    z80.regs.b |= 0x08;\n});\ndecodeMapCB.set(0xD9, (z80: Z80) => { // set 3,c\n    z80.regs.c |= 0x08;\n});\ndecodeMapCB.set(0xDA, (z80: Z80) => { // set 3,d\n    z80.regs.d |= 0x08;\n});\ndecodeMapCB.set(0xDB, (z80: Z80) => { // set 3,e\n    z80.regs.e |= 0x08;\n});\ndecodeMapCB.set(0xDC, (z80: Z80) => { // set 3,h\n    z80.regs.h |= 0x08;\n});\ndecodeMapCB.set(0xDD, (z80: Z80) => { // set 3,l\n    z80.regs.l |= 0x08;\n});\ndecodeMapCB.set(0xDE, (z80: Z80) => { // set 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x08);\n});\ndecodeMapCB.set(0xDF, (z80: Z80) => { // set 3,a\n    z80.regs.a |= 0x08;\n});\ndecodeMapCB.set(0xE0, (z80: Z80) => { // set 4,b\n    z80.regs.b |= 0x10;\n});\ndecodeMapCB.set(0xE1, (z80: Z80) => { // set 4,c\n    z80.regs.c |= 0x10;\n});\ndecodeMapCB.set(0xE2, (z80: Z80) => { // set 4,d\n    z80.regs.d |= 0x10;\n});\ndecodeMapCB.set(0xE3, (z80: Z80) => { // set 4,e\n    z80.regs.e |= 0x10;\n});\ndecodeMapCB.set(0xE4, (z80: Z80) => { // set 4,h\n    z80.regs.h |= 0x10;\n});\ndecodeMapCB.set(0xE5, (z80: Z80) => { // set 4,l\n    z80.regs.l |= 0x10;\n});\ndecodeMapCB.set(0xE6, (z80: Z80) => { // set 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x10);\n});\ndecodeMapCB.set(0xE7, (z80: Z80) => { // set 4,a\n    z80.regs.a |= 0x10;\n});\ndecodeMapCB.set(0xE8, (z80: Z80) => { // set 5,b\n    z80.regs.b |= 0x20;\n});\ndecodeMapCB.set(0xE9, (z80: Z80) => { // set 5,c\n    z80.regs.c |= 0x20;\n});\ndecodeMapCB.set(0xEA, (z80: Z80) => { // set 5,d\n    z80.regs.d |= 0x20;\n});\ndecodeMapCB.set(0xEB, (z80: Z80) => { // set 5,e\n    z80.regs.e |= 0x20;\n});\ndecodeMapCB.set(0xEC, (z80: Z80) => { // set 5,h\n    z80.regs.h |= 0x20;\n});\ndecodeMapCB.set(0xED, (z80: Z80) => { // set 5,l\n    z80.regs.l |= 0x20;\n});\ndecodeMapCB.set(0xEE, (z80: Z80) => { // set 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x20);\n});\ndecodeMapCB.set(0xEF, (z80: Z80) => { // set 5,a\n    z80.regs.a |= 0x20;\n});\ndecodeMapCB.set(0xF0, (z80: Z80) => { // set 6,b\n    z80.regs.b |= 0x40;\n});\ndecodeMapCB.set(0xF1, (z80: Z80) => { // set 6,c\n    z80.regs.c |= 0x40;\n});\ndecodeMapCB.set(0xF2, (z80: Z80) => { // set 6,d\n    z80.regs.d |= 0x40;\n});\ndecodeMapCB.set(0xF3, (z80: Z80) => { // set 6,e\n    z80.regs.e |= 0x40;\n});\ndecodeMapCB.set(0xF4, (z80: Z80) => { // set 6,h\n    z80.regs.h |= 0x40;\n});\ndecodeMapCB.set(0xF5, (z80: Z80) => { // set 6,l\n    z80.regs.l |= 0x40;\n});\ndecodeMapCB.set(0xF6, (z80: Z80) => { // set 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x40);\n});\ndecodeMapCB.set(0xF7, (z80: Z80) => { // set 6,a\n    z80.regs.a |= 0x40;\n});\ndecodeMapCB.set(0xF8, (z80: Z80) => { // set 7,b\n    z80.regs.b |= 0x80;\n});\ndecodeMapCB.set(0xF9, (z80: Z80) => { // set 7,c\n    z80.regs.c |= 0x80;\n});\ndecodeMapCB.set(0xFA, (z80: Z80) => { // set 7,d\n    z80.regs.d |= 0x80;\n});\ndecodeMapCB.set(0xFB, (z80: Z80) => { // set 7,e\n    z80.regs.e |= 0x80;\n});\ndecodeMapCB.set(0xFC, (z80: Z80) => { // set 7,h\n    z80.regs.h |= 0x80;\n});\ndecodeMapCB.set(0xFD, (z80: Z80) => { // set 7,l\n    z80.regs.l |= 0x80;\n});\ndecodeMapCB.set(0xFE, (z80: Z80) => { // set 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x80);\n});\ndecodeMapCB.set(0xFF, (z80: Z80) => { // set 7,a\n    z80.regs.a |= 0x80;\n});\n\nconst decodeMapDD = new Map<number, OpcodeFunc>();\ndecodeMapDD.set(0x09, (z80: Z80) => { // add ix,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapDD.set(0x19, (z80: Z80) => { // add ix,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapDD.set(0x21, (z80: Z80) => { // ld ix,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ix = value;\n});\ndecodeMapDD.set(0x22, (z80: Z80) => { // ld (nnnn),ix\n    let value: number;\n    value = z80.regs.ix;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapDD.set(0x23, (z80: Z80) => { // inc ix\n    let value: number;\n    value = z80.regs.ix;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.ix = value;\n});\ndecodeMapDD.set(0x24, (z80: Z80) => { // inc ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x25, (z80: Z80) => { // dec ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x26, (z80: Z80) => { // ld ixh,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x29, (z80: Z80) => { // add ix,ix\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.ix;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapDD.set(0x2A, (z80: Z80) => { // ld ix,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.ix = value;\n});\ndecodeMapDD.set(0x2B, (z80: Z80) => { // dec ix\n    let value: number;\n    value = z80.regs.ix;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.ix = value;\n});\ndecodeMapDD.set(0x2C, (z80: Z80) => { // inc ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x2D, (z80: Z80) => { // dec ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x2E, (z80: Z80) => { // ld ixl,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x34, (z80: Z80) => { // inc (ix+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x35, (z80: Z80) => { // dec (ix+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x36, (z80: Z80) => { // ld (ix+dd),nn\n    const dd = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x39, (z80: Z80) => { // add ix,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapDD.set(0x44, (z80: Z80) => { // ld b,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.b = value;\n});\ndecodeMapDD.set(0x45, (z80: Z80) => { // ld b,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.b = value;\n});\ndecodeMapDD.set(0x46, (z80: Z80) => { // ld b,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.b = value;\n});\ndecodeMapDD.set(0x4C, (z80: Z80) => { // ld c,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.c = value;\n});\ndecodeMapDD.set(0x4D, (z80: Z80) => { // ld c,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.c = value;\n});\ndecodeMapDD.set(0x4E, (z80: Z80) => { // ld c,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.c = value;\n});\ndecodeMapDD.set(0x54, (z80: Z80) => { // ld d,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.d = value;\n});\ndecodeMapDD.set(0x55, (z80: Z80) => { // ld d,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.d = value;\n});\ndecodeMapDD.set(0x56, (z80: Z80) => { // ld d,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.d = value;\n});\ndecodeMapDD.set(0x5C, (z80: Z80) => { // ld e,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.e = value;\n});\ndecodeMapDD.set(0x5D, (z80: Z80) => { // ld e,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.e = value;\n});\ndecodeMapDD.set(0x5E, (z80: Z80) => { // ld e,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.e = value;\n});\ndecodeMapDD.set(0x60, (z80: Z80) => { // ld ixh,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x61, (z80: Z80) => { // ld ixh,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x62, (z80: Z80) => { // ld ixh,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x63, (z80: Z80) => { // ld ixh,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x64, (z80: Z80) => { // ld ixh,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x65, (z80: Z80) => { // ld ixh,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x66, (z80: Z80) => { // ld h,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.h = value;\n});\ndecodeMapDD.set(0x67, (z80: Z80) => { // ld ixh,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.ixh = value;\n});\ndecodeMapDD.set(0x68, (z80: Z80) => { // ld ixl,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x69, (z80: Z80) => { // ld ixl,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x6A, (z80: Z80) => { // ld ixl,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x6B, (z80: Z80) => { // ld ixl,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x6C, (z80: Z80) => { // ld ixl,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x6D, (z80: Z80) => { // ld ixl,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x6E, (z80: Z80) => { // ld l,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.l = value;\n});\ndecodeMapDD.set(0x6F, (z80: Z80) => { // ld ixl,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.ixl = value;\n});\ndecodeMapDD.set(0x70, (z80: Z80) => { // ld (ix+dd),b\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x71, (z80: Z80) => { // ld (ix+dd),c\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x72, (z80: Z80) => { // ld (ix+dd),d\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x73, (z80: Z80) => { // ld (ix+dd),e\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x74, (z80: Z80) => { // ld (ix+dd),h\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x75, (z80: Z80) => { // ld (ix+dd),l\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x77, (z80: Z80) => { // ld (ix+dd),a\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDD.set(0x7C, (z80: Z80) => { // ld a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a = value;\n});\ndecodeMapDD.set(0x7D, (z80: Z80) => { // ld a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a = value;\n});\ndecodeMapDD.set(0x7E, (z80: Z80) => { // ld a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a = value;\n});\ndecodeMapDD.set(0x84, (z80: Z80) => { // add a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x85, (z80: Z80) => { // add a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x86, (z80: Z80) => { // add a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x8C, (z80: Z80) => { // adc a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x8D, (z80: Z80) => { // adc a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x8E, (z80: Z80) => { // adc a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x94, (z80: Z80) => { // sub a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x95, (z80: Z80) => { // sub a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x96, (z80: Z80) => { // sub a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x9C, (z80: Z80) => { // sbc a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x9D, (z80: Z80) => { // sbc a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0x9E, (z80: Z80) => { // sbc a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapDD.set(0xA4, (z80: Z80) => { // and a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapDD.set(0xA5, (z80: Z80) => { // and a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapDD.set(0xA6, (z80: Z80) => { // and a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapDD.set(0xAC, (z80: Z80) => { // xor a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xAD, (z80: Z80) => { // xor a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xAE, (z80: Z80) => { // xor a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xB4, (z80: Z80) => { // or a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xB5, (z80: Z80) => { // or a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xB6, (z80: Z80) => { // or a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapDD.set(0xBC, (z80: Z80) => { // cp ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapDD.set(0xBD, (z80: Z80) => { // cp ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapDD.set(0xBE, (z80: Z80) => { // cp (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapDD.set(0xCB, (z80: Z80) => { // shift ddcb\n    decodeDDCB(z80);\n});\ndecodeMapDD.set(0xE1, (z80: Z80) => { // pop ix\n    z80.regs.ix = z80.popWord();\n});\ndecodeMapDD.set(0xE3, (z80: Z80) => { // ex (sp),ix\n    const rightValue = z80.regs.ix;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.ix = word(leftValueH, leftValueL);\n});\ndecodeMapDD.set(0xE5, (z80: Z80) => { // push ix\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.ix);\n});\ndecodeMapDD.set(0xE9, (z80: Z80) => { // jp ix\n    z80.regs.pc = z80.regs.ix;\n});\ndecodeMapDD.set(0xF9, (z80: Z80) => { // ld sp,ix\n    let value: number;\n    value = z80.regs.ix;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\n\nconst decodeMapDDCB = new Map<number, OpcodeFunc>();\ndecodeMapDDCB.set(0x00, (z80: Z80) => { // ld b,rlc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x01, (z80: Z80) => { // ld c,rlc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x02, (z80: Z80) => { // ld d,rlc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x03, (z80: Z80) => { // ld e,rlc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x04, (z80: Z80) => { // ld h,rlc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x05, (z80: Z80) => { // ld l,rlc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x06, (z80: Z80) => { // rlc (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x07, (z80: Z80) => { // ld a,rlc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x08, (z80: Z80) => { // ld b,rrc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x09, (z80: Z80) => { // ld c,rrc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x0A, (z80: Z80) => { // ld d,rrc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x0B, (z80: Z80) => { // ld e,rrc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x0C, (z80: Z80) => { // ld h,rrc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x0D, (z80: Z80) => { // ld l,rrc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x0E, (z80: Z80) => { // rrc (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x0F, (z80: Z80) => { // ld a,rrc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x10, (z80: Z80) => { // ld b,rl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x11, (z80: Z80) => { // ld c,rl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x12, (z80: Z80) => { // ld d,rl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x13, (z80: Z80) => { // ld e,rl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x14, (z80: Z80) => { // ld h,rl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x15, (z80: Z80) => { // ld l,rl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x16, (z80: Z80) => { // rl (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x17, (z80: Z80) => { // ld a,rl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x18, (z80: Z80) => { // ld b,rr\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x19, (z80: Z80) => { // ld c,rr\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x1A, (z80: Z80) => { // ld d,rr\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x1B, (z80: Z80) => { // ld e,rr\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x1C, (z80: Z80) => { // ld h,rr\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x1D, (z80: Z80) => { // ld l,rr\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x1E, (z80: Z80) => { // rr (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x1F, (z80: Z80) => { // ld a,rr\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x20, (z80: Z80) => { // ld b,sla\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x21, (z80: Z80) => { // ld c,sla\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x22, (z80: Z80) => { // ld d,sla\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x23, (z80: Z80) => { // ld e,sla\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x24, (z80: Z80) => { // ld h,sla\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x25, (z80: Z80) => { // ld l,sla\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x26, (z80: Z80) => { // sla (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x27, (z80: Z80) => { // ld a,sla\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x28, (z80: Z80) => { // ld b,sra\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x29, (z80: Z80) => { // ld c,sra\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x2A, (z80: Z80) => { // ld d,sra\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x2B, (z80: Z80) => { // ld e,sra\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x2C, (z80: Z80) => { // ld h,sra\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x2D, (z80: Z80) => { // ld l,sra\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x2E, (z80: Z80) => { // sra (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x2F, (z80: Z80) => { // ld a,sra\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x30, (z80: Z80) => { // ld b,sll\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x31, (z80: Z80) => { // ld c,sll\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x32, (z80: Z80) => { // ld d,sll\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x33, (z80: Z80) => { // ld e,sll\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x34, (z80: Z80) => { // ld h,sll\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x35, (z80: Z80) => { // ld l,sll\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x36, (z80: Z80) => { // sll (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x37, (z80: Z80) => { // ld a,sll\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x38, (z80: Z80) => { // ld b,srl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x39, (z80: Z80) => { // ld c,srl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x3A, (z80: Z80) => { // ld d,srl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x3B, (z80: Z80) => { // ld e,srl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x3C, (z80: Z80) => { // ld h,srl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x3D, (z80: Z80) => { // ld l,srl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x3E, (z80: Z80) => { // srl (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapDDCB.set(0x3F, (z80: Z80) => { // ld a,srl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x47, (z80: Z80) => { // bit 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x40, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x41, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x42, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x43, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x44, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x45, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x46, decodeMapDDCB.get(0x47) as OpcodeFunc);\ndecodeMapDDCB.set(0x4F, (z80: Z80) => { // bit 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x48, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x49, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x4A, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x4B, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x4C, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x4D, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x4E, decodeMapDDCB.get(0x4F) as OpcodeFunc);\ndecodeMapDDCB.set(0x57, (z80: Z80) => { // bit 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x50, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x51, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x52, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x53, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x54, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x55, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x56, decodeMapDDCB.get(0x57) as OpcodeFunc);\ndecodeMapDDCB.set(0x5F, (z80: Z80) => { // bit 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x58, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x59, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x5A, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x5B, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x5C, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x5D, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x5E, decodeMapDDCB.get(0x5F) as OpcodeFunc);\ndecodeMapDDCB.set(0x67, (z80: Z80) => { // bit 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x60, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x61, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x62, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x63, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x64, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x65, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x66, decodeMapDDCB.get(0x67) as OpcodeFunc);\ndecodeMapDDCB.set(0x6F, (z80: Z80) => { // bit 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x68, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x69, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x6A, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x6B, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x6C, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x6D, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x6E, decodeMapDDCB.get(0x6F) as OpcodeFunc);\ndecodeMapDDCB.set(0x77, (z80: Z80) => { // bit 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x70, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x71, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x72, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x73, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x74, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x75, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x76, decodeMapDDCB.get(0x77) as OpcodeFunc);\ndecodeMapDDCB.set(0x7F, (z80: Z80) => { // bit 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapDDCB.set(0x78, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x79, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x7A, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x7B, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x7C, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x7D, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x7E, decodeMapDDCB.get(0x7F) as OpcodeFunc);\ndecodeMapDDCB.set(0x80, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x81, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x82, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x83, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x84, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x85, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x86, (z80: Z80) => { // res 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFE);\n});\ndecodeMapDDCB.set(0x87, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x88, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x89, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x8A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x8B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x8C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x8D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x8E, (z80: Z80) => { // res 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFD);\n});\ndecodeMapDDCB.set(0x8F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x90, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x91, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x92, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x93, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x94, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x95, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x96, (z80: Z80) => { // res 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFB);\n});\ndecodeMapDDCB.set(0x97, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0x98, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0x99, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0x9A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0x9B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0x9C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0x9D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0x9E, (z80: Z80) => { // res 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xF7);\n});\ndecodeMapDDCB.set(0x9F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xA0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xA1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xA2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xA3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xA4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xA5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xA6, (z80: Z80) => { // res 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xEF);\n});\ndecodeMapDDCB.set(0xA7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xA8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xA9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xAA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xAB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xAC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xAD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xAE, (z80: Z80) => { // res 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xDF);\n});\ndecodeMapDDCB.set(0xAF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xB0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xB1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xB2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xB3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xB4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xB5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xB6, (z80: Z80) => { // res 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xBF);\n});\ndecodeMapDDCB.set(0xB7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xB8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xB9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xBA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xBB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xBC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xBD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xBE, (z80: Z80) => { // res 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0x7F);\n});\ndecodeMapDDCB.set(0xBF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xC0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xC1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xC2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xC3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xC4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xC5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xC6, (z80: Z80) => { // set 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x01);\n});\ndecodeMapDDCB.set(0xC7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xC8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xC9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xCA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xCB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xCC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xCD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xCE, (z80: Z80) => { // set 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x02);\n});\ndecodeMapDDCB.set(0xCF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xD0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xD1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xD2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xD3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xD4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xD5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xD6, (z80: Z80) => { // set 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x04);\n});\ndecodeMapDDCB.set(0xD7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xD8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xD9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xDA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xDB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xDC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xDD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xDE, (z80: Z80) => { // set 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x08);\n});\ndecodeMapDDCB.set(0xDF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xE0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xE1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xE2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xE3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xE4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xE5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xE6, (z80: Z80) => { // set 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x10);\n});\ndecodeMapDDCB.set(0xE7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xE8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xE9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xEA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xEB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xEC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xED, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xEE, (z80: Z80) => { // set 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x20);\n});\ndecodeMapDDCB.set(0xEF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xF0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xF1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xF2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xF3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xF4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xF5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xF6, (z80: Z80) => { // set 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x40);\n});\ndecodeMapDDCB.set(0xF7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapDDCB.set(0xF8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapDDCB.set(0xF9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapDDCB.set(0xFA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapDDCB.set(0xFB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapDDCB.set(0xFC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapDDCB.set(0xFD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapDDCB.set(0xFE, (z80: Z80) => { // set 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x80);\n});\ndecodeMapDDCB.set(0xFF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\n\nconst decodeMapED = new Map<number, OpcodeFunc>();\ndecodeMapED.set(0x40, (z80: Z80) => { // in b,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.b];\n});\ndecodeMapED.set(0x41, (z80: Z80) => { // out (c),b\n    z80.writePort(z80.regs.bc, z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x42, (z80: Z80) => { // sbc hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x43, (z80: Z80) => { // ld (nnnn),bc\n    let value: number;\n    value = z80.regs.bc;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapED.set(0x7C, (z80: Z80) => { // neg\n    const value = z80.regs.a;\n    z80.regs.a = 0;\n    const diff = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = diff;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= z80.sz53Table[z80.regs.a];\n    z80.regs.f = f;\n});\ndecodeMapED.set(0x44, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x4C, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x54, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x5C, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x64, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x6C, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x74, decodeMapED.get(0x7C) as OpcodeFunc);\ndecodeMapED.set(0x7D, (z80: Z80) => { // retn\n    z80.regs.iff1 = z80.regs.iff2;\n    z80.regs.pc = z80.popWord();\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapED.set(0x45, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x55, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x5D, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x65, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x6D, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x75, decodeMapED.get(0x7D) as OpcodeFunc);\ndecodeMapED.set(0x6E, (z80: Z80) => { // im 0\n    z80.regs.im = 0;\n});\ndecodeMapED.set(0x46, decodeMapED.get(0x6E) as OpcodeFunc);\ndecodeMapED.set(0x4E, decodeMapED.get(0x6E) as OpcodeFunc);\ndecodeMapED.set(0x66, decodeMapED.get(0x6E) as OpcodeFunc);\ndecodeMapED.set(0x47, (z80: Z80) => { // ld i,a\n    let value: number;\n    value = z80.regs.a;\n    z80.incTStateCount(1);\n    z80.regs.i = value;\n});\ndecodeMapED.set(0x48, (z80: Z80) => { // in c,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.c = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.c];\n});\ndecodeMapED.set(0x49, (z80: Z80) => { // out (c),c\n    z80.writePort(z80.regs.bc, z80.regs.c);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x4A, (z80: Z80) => { // adc hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x4B, (z80: Z80) => { // ld bc,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.bc = value;\n});\ndecodeMapED.set(0x4D, (z80: Z80) => { // reti\n    z80.regs.iff1 = z80.regs.iff2;\n    z80.regs.pc = z80.popWord();\n    z80.regs.memptr = z80.regs.pc;\n});\ndecodeMapED.set(0x4F, (z80: Z80) => { // ld r,a\n    let value: number;\n    value = z80.regs.a;\n    z80.incTStateCount(1);\n    z80.regs.r = value;\n});\ndecodeMapED.set(0x50, (z80: Z80) => { // in d,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.d = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.d];\n});\ndecodeMapED.set(0x51, (z80: Z80) => { // out (c),d\n    z80.writePort(z80.regs.bc, z80.regs.d);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x52, (z80: Z80) => { // sbc hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x53, (z80: Z80) => { // ld (nnnn),de\n    let value: number;\n    value = z80.regs.de;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapED.set(0x76, (z80: Z80) => { // im 1\n    z80.regs.im = 1;\n});\ndecodeMapED.set(0x56, decodeMapED.get(0x76) as OpcodeFunc);\ndecodeMapED.set(0x57, (z80: Z80) => { // ld a,i\n    let value: number;\n    value = z80.regs.i;\n    z80.incTStateCount(1);\n    z80.regs.a = value;\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53Table[z80.regs.a] | (z80.regs.iff2 ? Flag.V : 0);\n});\ndecodeMapED.set(0x58, (z80: Z80) => { // in e,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.e = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.e];\n});\ndecodeMapED.set(0x59, (z80: Z80) => { // out (c),e\n    z80.writePort(z80.regs.bc, z80.regs.e);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x5A, (z80: Z80) => { // adc hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x5B, (z80: Z80) => { // ld de,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.de = value;\n});\ndecodeMapED.set(0x7E, (z80: Z80) => { // im 2\n    z80.regs.im = 2;\n});\ndecodeMapED.set(0x5E, decodeMapED.get(0x7E) as OpcodeFunc);\ndecodeMapED.set(0x5F, (z80: Z80) => { // ld a,r\n    let value: number;\n    value = z80.regs.rCombined;\n    z80.incTStateCount(1);\n    z80.regs.a = value;\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53Table[z80.regs.a] | (z80.regs.iff2 ? Flag.V : 0);\n});\ndecodeMapED.set(0x60, (z80: Z80) => { // in h,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.h = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.h];\n});\ndecodeMapED.set(0x61, (z80: Z80) => { // out (c),h\n    z80.writePort(z80.regs.bc, z80.regs.h);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x62, (z80: Z80) => { // sbc hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x63, (z80: Z80) => { // ld (nnnn),hl\n    let value: number;\n    value = z80.regs.hl;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapED.set(0x67, (z80: Z80) => { // rrd\n    const tmp = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(4);\n    z80.writeByte(z80.regs.hl, ((z80.regs.a << 4) | (tmp >> 4)) & 0xFF);\n    z80.regs.a = (z80.regs.a & 0xF0) | (tmp & 0x0F);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n    z80.regs.memptr = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0x68, (z80: Z80) => { // in l,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.l = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.l];\n});\ndecodeMapED.set(0x69, (z80: Z80) => { // out (c),l\n    z80.writePort(z80.regs.bc, z80.regs.l);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x6A, (z80: Z80) => { // adc hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x6B, (z80: Z80) => { // ld hl,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.hl = value;\n});\ndecodeMapED.set(0x6F, (z80: Z80) => { // rld\n    const tmp = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(4);\n    z80.writeByte(z80.regs.hl, ((tmp << 4) | (z80.regs.a & 0x0F)) & 0xFF);\n    z80.regs.a = (z80.regs.a & 0xF0) | (tmp >> 4);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n    z80.regs.memptr = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0x70, (z80: Z80) => { // in f,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.f = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.f];\n});\ndecodeMapED.set(0x71, (z80: Z80) => { // out (c),0\n    z80.writePort(z80.regs.bc, 0x00);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x72, (z80: Z80) => { // sbc hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x73, (z80: Z80) => { // ld (nnnn),sp\n    let value: number;\n    value = z80.regs.sp;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapED.set(0x78, (z80: Z80) => { // in a,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.a = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n});\ndecodeMapED.set(0x79, (z80: Z80) => { // out (c),a\n    z80.writePort(z80.regs.bc, z80.regs.a);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\ndecodeMapED.set(0x7A, (z80: Z80) => { // adc hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\ndecodeMapED.set(0x7B, (z80: Z80) => { // ld sp,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.sp = value;\n});\ndecodeMapED.set(0xA0, (z80: Z80) => { // ldi\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    z80.regs.hl = inc16(z80.regs.hl);\n    z80.regs.de = inc16(z80.regs.de);\n});\ndecodeMapED.set(0xA1, (z80: Z80) => { // cpi\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    z80.regs.memptr = inc16(z80.regs.memptr);\n    z80.regs.hl = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0xA2, (z80: Z80) => { // ini\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = inc8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    z80.regs.hl = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0xA3, (z80: Z80) => { // outi\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = inc16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n});\ndecodeMapED.set(0xA8, (z80: Z80) => { // ldd\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    z80.regs.hl = dec16(z80.regs.hl);\n    z80.regs.de = dec16(z80.regs.de);\n});\ndecodeMapED.set(0xA9, (z80: Z80) => { // cpd\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    z80.regs.memptr = dec16(z80.regs.memptr);\n    z80.regs.hl = dec16(z80.regs.hl);\n});\ndecodeMapED.set(0xAA, (z80: Z80) => { // ind\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = dec8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    z80.regs.hl = dec16(z80.regs.hl);\n});\ndecodeMapED.set(0xAB, (z80: Z80) => { // outd\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = dec16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n});\ndecodeMapED.set(0xB0, (z80: Z80) => { // ldir\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    if (z80.regs.bc !== 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n    z80.regs.de = inc16(z80.regs.de);\n});\ndecodeMapED.set(0xB1, (z80: Z80) => { // cpir\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    if ((z80.regs.f & (Flag.V | Flag.Z)) === Flag.V) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    } else {\n        z80.regs.memptr = inc16(z80.regs.memptr);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0xB2, (z80: Z80) => { // inir\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = inc8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n});\ndecodeMapED.set(0xB3, (z80: Z80) => { // otir\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = inc16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n});\ndecodeMapED.set(0xB8, (z80: Z80) => { // lddr\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    if (z80.regs.bc !== 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n    z80.regs.de = dec16(z80.regs.de);\n});\ndecodeMapED.set(0xB9, (z80: Z80) => { // cpdr\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    if ((z80.regs.f & (Flag.V | Flag.Z)) === Flag.V) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    } else {\n        z80.regs.memptr = dec16(z80.regs.memptr);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n});\ndecodeMapED.set(0xBA, (z80: Z80) => { // indr\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = dec8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n});\ndecodeMapED.set(0xBB, (z80: Z80) => { // otdr\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = dec16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n});\n\nconst decodeMapFD = new Map<number, OpcodeFunc>();\ndecodeMapFD.set(0x09, (z80: Z80) => { // add iy,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapFD.set(0x19, (z80: Z80) => { // add iy,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapFD.set(0x21, (z80: Z80) => { // ld iy,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iy = value;\n});\ndecodeMapFD.set(0x22, (z80: Z80) => { // ld (nnnn),iy\n    let value: number;\n    value = z80.regs.iy;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\ndecodeMapFD.set(0x23, (z80: Z80) => { // inc iy\n    let value: number;\n    value = z80.regs.iy;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.iy = value;\n});\ndecodeMapFD.set(0x24, (z80: Z80) => { // inc iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x25, (z80: Z80) => { // dec iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x26, (z80: Z80) => { // ld iyh,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x29, (z80: Z80) => { // add iy,iy\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.iy;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapFD.set(0x2A, (z80: Z80) => { // ld iy,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.iy = value;\n});\ndecodeMapFD.set(0x2B, (z80: Z80) => { // dec iy\n    let value: number;\n    value = z80.regs.iy;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.iy = value;\n});\ndecodeMapFD.set(0x2C, (z80: Z80) => { // inc iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x2D, (z80: Z80) => { // dec iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x2E, (z80: Z80) => { // ld iyl,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x34, (z80: Z80) => { // inc (iy+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x35, (z80: Z80) => { // dec (iy+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x36, (z80: Z80) => { // ld (iy+dd),nn\n    const dd = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x39, (z80: Z80) => { // add iy,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\ndecodeMapFD.set(0x44, (z80: Z80) => { // ld b,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.b = value;\n});\ndecodeMapFD.set(0x45, (z80: Z80) => { // ld b,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.b = value;\n});\ndecodeMapFD.set(0x46, (z80: Z80) => { // ld b,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.b = value;\n});\ndecodeMapFD.set(0x4C, (z80: Z80) => { // ld c,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.c = value;\n});\ndecodeMapFD.set(0x4D, (z80: Z80) => { // ld c,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.c = value;\n});\ndecodeMapFD.set(0x4E, (z80: Z80) => { // ld c,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.c = value;\n});\ndecodeMapFD.set(0x54, (z80: Z80) => { // ld d,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.d = value;\n});\ndecodeMapFD.set(0x55, (z80: Z80) => { // ld d,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.d = value;\n});\ndecodeMapFD.set(0x56, (z80: Z80) => { // ld d,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.d = value;\n});\ndecodeMapFD.set(0x5C, (z80: Z80) => { // ld e,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.e = value;\n});\ndecodeMapFD.set(0x5D, (z80: Z80) => { // ld e,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.e = value;\n});\ndecodeMapFD.set(0x5E, (z80: Z80) => { // ld e,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.e = value;\n});\ndecodeMapFD.set(0x60, (z80: Z80) => { // ld iyh,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x61, (z80: Z80) => { // ld iyh,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x62, (z80: Z80) => { // ld iyh,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x63, (z80: Z80) => { // ld iyh,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x64, (z80: Z80) => { // ld iyh,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x65, (z80: Z80) => { // ld iyh,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x66, (z80: Z80) => { // ld h,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.h = value;\n});\ndecodeMapFD.set(0x67, (z80: Z80) => { // ld iyh,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.iyh = value;\n});\ndecodeMapFD.set(0x68, (z80: Z80) => { // ld iyl,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x69, (z80: Z80) => { // ld iyl,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x6A, (z80: Z80) => { // ld iyl,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x6B, (z80: Z80) => { // ld iyl,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x6C, (z80: Z80) => { // ld iyl,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x6D, (z80: Z80) => { // ld iyl,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x6E, (z80: Z80) => { // ld l,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.l = value;\n});\ndecodeMapFD.set(0x6F, (z80: Z80) => { // ld iyl,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.iyl = value;\n});\ndecodeMapFD.set(0x70, (z80: Z80) => { // ld (iy+dd),b\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x71, (z80: Z80) => { // ld (iy+dd),c\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x72, (z80: Z80) => { // ld (iy+dd),d\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x73, (z80: Z80) => { // ld (iy+dd),e\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x74, (z80: Z80) => { // ld (iy+dd),h\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x75, (z80: Z80) => { // ld (iy+dd),l\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x77, (z80: Z80) => { // ld (iy+dd),a\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFD.set(0x7C, (z80: Z80) => { // ld a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a = value;\n});\ndecodeMapFD.set(0x7D, (z80: Z80) => { // ld a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a = value;\n});\ndecodeMapFD.set(0x7E, (z80: Z80) => { // ld a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a = value;\n});\ndecodeMapFD.set(0x84, (z80: Z80) => { // add a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x85, (z80: Z80) => { // add a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x86, (z80: Z80) => { // add a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x8C, (z80: Z80) => { // adc a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x8D, (z80: Z80) => { // adc a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x8E, (z80: Z80) => { // adc a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x94, (z80: Z80) => { // sub a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x95, (z80: Z80) => { // sub a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x96, (z80: Z80) => { // sub a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x9C, (z80: Z80) => { // sbc a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x9D, (z80: Z80) => { // sbc a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0x9E, (z80: Z80) => { // sbc a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\ndecodeMapFD.set(0xA4, (z80: Z80) => { // and a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapFD.set(0xA5, (z80: Z80) => { // and a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapFD.set(0xA6, (z80: Z80) => { // and a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\ndecodeMapFD.set(0xAC, (z80: Z80) => { // xor a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xAD, (z80: Z80) => { // xor a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xAE, (z80: Z80) => { // xor a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xB4, (z80: Z80) => { // or a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xB5, (z80: Z80) => { // or a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xB6, (z80: Z80) => { // or a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\ndecodeMapFD.set(0xBC, (z80: Z80) => { // cp iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapFD.set(0xBD, (z80: Z80) => { // cp iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapFD.set(0xBE, (z80: Z80) => { // cp (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\ndecodeMapFD.set(0xCB, (z80: Z80) => { // shift fdcb\n    decodeFDCB(z80);\n});\ndecodeMapFD.set(0xE1, (z80: Z80) => { // pop iy\n    z80.regs.iy = z80.popWord();\n});\ndecodeMapFD.set(0xE3, (z80: Z80) => { // ex (sp),iy\n    const rightValue = z80.regs.iy;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.iy = word(leftValueH, leftValueL);\n});\ndecodeMapFD.set(0xE5, (z80: Z80) => { // push iy\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.iy);\n});\ndecodeMapFD.set(0xE9, (z80: Z80) => { // jp iy\n    z80.regs.pc = z80.regs.iy;\n});\ndecodeMapFD.set(0xF9, (z80: Z80) => { // ld sp,iy\n    let value: number;\n    value = z80.regs.iy;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\n\nconst decodeMapFDCB = new Map<number, OpcodeFunc>();\ndecodeMapFDCB.set(0x00, (z80: Z80) => { // ld b,rlc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x01, (z80: Z80) => { // ld c,rlc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x02, (z80: Z80) => { // ld d,rlc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x03, (z80: Z80) => { // ld e,rlc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x04, (z80: Z80) => { // ld h,rlc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x05, (z80: Z80) => { // ld l,rlc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x06, (z80: Z80) => { // rlc (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x07, (z80: Z80) => { // ld a,rlc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x08, (z80: Z80) => { // ld b,rrc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x09, (z80: Z80) => { // ld c,rrc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x0A, (z80: Z80) => { // ld d,rrc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x0B, (z80: Z80) => { // ld e,rrc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x0C, (z80: Z80) => { // ld h,rrc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x0D, (z80: Z80) => { // ld l,rrc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x0E, (z80: Z80) => { // rrc (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x0F, (z80: Z80) => { // ld a,rrc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x10, (z80: Z80) => { // ld b,rl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x11, (z80: Z80) => { // ld c,rl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x12, (z80: Z80) => { // ld d,rl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x13, (z80: Z80) => { // ld e,rl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x14, (z80: Z80) => { // ld h,rl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x15, (z80: Z80) => { // ld l,rl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x16, (z80: Z80) => { // rl (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x17, (z80: Z80) => { // ld a,rl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x18, (z80: Z80) => { // ld b,rr\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x19, (z80: Z80) => { // ld c,rr\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x1A, (z80: Z80) => { // ld d,rr\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x1B, (z80: Z80) => { // ld e,rr\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x1C, (z80: Z80) => { // ld h,rr\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x1D, (z80: Z80) => { // ld l,rr\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x1E, (z80: Z80) => { // rr (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x1F, (z80: Z80) => { // ld a,rr\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x20, (z80: Z80) => { // ld b,sla\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x21, (z80: Z80) => { // ld c,sla\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x22, (z80: Z80) => { // ld d,sla\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x23, (z80: Z80) => { // ld e,sla\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x24, (z80: Z80) => { // ld h,sla\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x25, (z80: Z80) => { // ld l,sla\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x26, (z80: Z80) => { // sla (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x27, (z80: Z80) => { // ld a,sla\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x28, (z80: Z80) => { // ld b,sra\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x29, (z80: Z80) => { // ld c,sra\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x2A, (z80: Z80) => { // ld d,sra\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x2B, (z80: Z80) => { // ld e,sra\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x2C, (z80: Z80) => { // ld h,sra\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x2D, (z80: Z80) => { // ld l,sra\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x2E, (z80: Z80) => { // sra (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x2F, (z80: Z80) => { // ld a,sra\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x30, (z80: Z80) => { // ld b,sll\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x31, (z80: Z80) => { // ld c,sll\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x32, (z80: Z80) => { // ld d,sll\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x33, (z80: Z80) => { // ld e,sll\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x34, (z80: Z80) => { // ld h,sll\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x35, (z80: Z80) => { // ld l,sll\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x36, (z80: Z80) => { // sll (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x37, (z80: Z80) => { // ld a,sll\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x38, (z80: Z80) => { // ld b,srl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x39, (z80: Z80) => { // ld c,srl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x3A, (z80: Z80) => { // ld d,srl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x3B, (z80: Z80) => { // ld e,srl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x3C, (z80: Z80) => { // ld h,srl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x3D, (z80: Z80) => { // ld l,srl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x3E, (z80: Z80) => { // srl (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\ndecodeMapFDCB.set(0x3F, (z80: Z80) => { // ld a,srl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x47, (z80: Z80) => { // bit 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x40, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x41, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x42, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x43, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x44, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x45, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x46, decodeMapFDCB.get(0x47) as OpcodeFunc);\ndecodeMapFDCB.set(0x4F, (z80: Z80) => { // bit 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x48, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x49, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x4A, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x4B, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x4C, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x4D, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x4E, decodeMapFDCB.get(0x4F) as OpcodeFunc);\ndecodeMapFDCB.set(0x57, (z80: Z80) => { // bit 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x50, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x51, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x52, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x53, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x54, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x55, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x56, decodeMapFDCB.get(0x57) as OpcodeFunc);\ndecodeMapFDCB.set(0x5F, (z80: Z80) => { // bit 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x58, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x59, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x5A, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x5B, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x5C, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x5D, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x5E, decodeMapFDCB.get(0x5F) as OpcodeFunc);\ndecodeMapFDCB.set(0x67, (z80: Z80) => { // bit 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x60, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x61, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x62, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x63, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x64, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x65, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x66, decodeMapFDCB.get(0x67) as OpcodeFunc);\ndecodeMapFDCB.set(0x6F, (z80: Z80) => { // bit 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x68, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x69, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x6A, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x6B, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x6C, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x6D, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x6E, decodeMapFDCB.get(0x6F) as OpcodeFunc);\ndecodeMapFDCB.set(0x77, (z80: Z80) => { // bit 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x70, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x71, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x72, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x73, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x74, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x75, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x76, decodeMapFDCB.get(0x77) as OpcodeFunc);\ndecodeMapFDCB.set(0x7F, (z80: Z80) => { // bit 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\ndecodeMapFDCB.set(0x78, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x79, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x7A, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x7B, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x7C, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x7D, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x7E, decodeMapFDCB.get(0x7F) as OpcodeFunc);\ndecodeMapFDCB.set(0x80, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x81, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x82, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x83, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x84, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x85, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x86, (z80: Z80) => { // res 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFE);\n});\ndecodeMapFDCB.set(0x87, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x88, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x89, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x8A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x8B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x8C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x8D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x8E, (z80: Z80) => { // res 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFD);\n});\ndecodeMapFDCB.set(0x8F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x90, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x91, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x92, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x93, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x94, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x95, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x96, (z80: Z80) => { // res 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFB);\n});\ndecodeMapFDCB.set(0x97, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0x98, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0x99, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0x9A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0x9B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0x9C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0x9D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0x9E, (z80: Z80) => { // res 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xF7);\n});\ndecodeMapFDCB.set(0x9F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xA0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xA1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xA2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xA3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xA4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xA5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xA6, (z80: Z80) => { // res 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xEF);\n});\ndecodeMapFDCB.set(0xA7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xA8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xA9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xAA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xAB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xAC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xAD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xAE, (z80: Z80) => { // res 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xDF);\n});\ndecodeMapFDCB.set(0xAF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xB0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xB1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xB2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xB3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xB4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xB5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xB6, (z80: Z80) => { // res 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xBF);\n});\ndecodeMapFDCB.set(0xB7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xB8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xB9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xBA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xBB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xBC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xBD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xBE, (z80: Z80) => { // res 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0x7F);\n});\ndecodeMapFDCB.set(0xBF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xC0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xC1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xC2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xC3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xC4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xC5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xC6, (z80: Z80) => { // set 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x01);\n});\ndecodeMapFDCB.set(0xC7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xC8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xC9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xCA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xCB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xCC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xCD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xCE, (z80: Z80) => { // set 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x02);\n});\ndecodeMapFDCB.set(0xCF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xD0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xD1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xD2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xD3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xD4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xD5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xD6, (z80: Z80) => { // set 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x04);\n});\ndecodeMapFDCB.set(0xD7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xD8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xD9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xDA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xDB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xDC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xDD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xDE, (z80: Z80) => { // set 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x08);\n});\ndecodeMapFDCB.set(0xDF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xE0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xE1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xE2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xE3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xE4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xE5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xE6, (z80: Z80) => { // set 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x10);\n});\ndecodeMapFDCB.set(0xE7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xE8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xE9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xEA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xEB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xEC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xED, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xEE, (z80: Z80) => { // set 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x20);\n});\ndecodeMapFDCB.set(0xEF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xF0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xF1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xF2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xF3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xF4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xF5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xF6, (z80: Z80) => { // set 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x40);\n});\ndecodeMapFDCB.set(0xF7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\ndecodeMapFDCB.set(0xF8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\ndecodeMapFDCB.set(0xF9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\ndecodeMapFDCB.set(0xFA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\ndecodeMapFDCB.set(0xFB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\ndecodeMapFDCB.set(0xFC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\ndecodeMapFDCB.set(0xFD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\ndecodeMapFDCB.set(0xFE, (z80: Z80) => { // set 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x80);\n});\ndecodeMapFDCB.set(0xFF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\n\n/**\n * Fetch an instruction for decode.\n */\nfunction fetchInstruction(z80: Z80): number {\n    z80.incTStateCount(4);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.regs.pc = (z80.regs.pc + 1) & 0xFFFF;\n    z80.regs.r = (z80.regs.r + 1) & 0xFF;\n\n    return inst;\n}\n\n/**\n * Decode the \"CB\" prefix (bit instructions).\n */\nfunction decodeCB(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in CB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"DD\" prefix (IX instructions).\n */\nfunction decodeDD(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapDD.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in DD: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"DDCB\" prefix (IX bit instructions).\n */\nfunction decodeDDCB(z80: Z80): void {\n    z80.incTStateCount(3);\n    const offset = z80.readByteInternal(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(3);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n\n    const func = decodeMapDDCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in DDCB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"ED\" prefix (extended instructions).\n */\nfunction decodeED(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapED.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in ED: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"FD\" prefix (IY instructions).\n */\nfunction decodeFD(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapFD.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in FD: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"FDCB\" prefix (IY bit instructions).\n */\nfunction decodeFDCB(z80: Z80): void {\n    z80.incTStateCount(3);\n    const offset = z80.readByteInternal(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(3);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n\n    const func = decodeMapFDCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in FDCB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the base (un-prefixed) instructions.\n */\nexport function decode(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapBASE.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n","import opcodeMap from \"./Opcodes.json\";\nimport {Instruction} from \"./Instruction\";\nimport {inc16, signedByte, toHex, toHexByte, toHexWord, word} from \"z80-base\";\nimport {Preamble} from \"./Preamble\";\n\n// Temporary string used for address substitution.\nconst TARGET = \"TARGET\";\n\n// Number of bytes in memory.\nconst MEM_SIZE = 64*1024;\n\n// Whether the byte can be converted to readable ASCII.\nfunction isPrintable(b: number) {\n    return b >= 32 && b < 127;\n}\n\n// Whether the byte is appropriate for a .text instruction.\nfunction isText(b: number){\n    return isPrintable(b) || b === 0x0A || b === 0x0D;\n}\n\n/**\n * Main class for disassembling a binary.\n */\nexport class Disasm {\n    private readonly memory = new Uint8Array(MEM_SIZE);\n    private readonly hasContent = new Uint8Array(MEM_SIZE);\n    private readonly isDecoded = new Uint8Array(MEM_SIZE);\n    private readonly instructions: (Instruction | undefined)[] = new Array(MEM_SIZE);\n    private readonly knownLabels = new Map<number, string>();\n    /**\n     * Addresses that might be jumped to when running the code.\n     */\n    private entryPoints: number[] = [];\n    /**\n     * Values that were loaded into a 16-bit register. We can't be sure that these were meant to be\n     * addresses, but guess that they were if it helps make a nicer disassembly.\n     */\n    private referencedAddresses = new Set<number>();\n\n    /**\n     * Add a chunk of binary somewhere in memory.\n     */\n    public addChunk(bin: ArrayLike<number>, address: number): void {\n        this.memory.set(bin, address);\n        this.hasContent.fill(1, address, address + bin.length);\n    }\n\n    /**\n     * Add a memory location that might be jumped to when running this program. If no entry\n     * points are specified, then the lower address for which we have binary will be used.\n     */\n    public addEntryPoint(entryPoint: number): void {\n        this.entryPoints.push(entryPoint);\n    }\n\n    /**\n     * Disassemble one instruction.\n     *\n     * @param address the address to disassemble.\n     */\n    private disassembleOne(address: number): Instruction {\n        // Bytes decoded so far in the instruction being disassembled.\n        let bytes: number[] = [];\n\n        // Get the next byte.\n        const next = (): number => {\n            const byte = this.memory[address];\n            bytes.push(byte);\n            address = inc16(address);\n            return byte;\n        };\n\n        const startAddress = address;\n        let jumpTarget: number | undefined = undefined;\n\n        // Fetch base instruction.\n        let byte = next();\n        let map: any = opcodeMap;\n\n        let instruction: Instruction | undefined;\n\n        while (instruction === undefined) {\n            let value: any = map[byte.toString(16)];\n            if (value === undefined) {\n                // TODO\n                // asm.push(\".byte 0x\" + byte.toString(16));\n                const stringParams = bytes.map((n) => \"0x\" + toHex(n, 2));\n                instruction = new Instruction(startAddress, bytes, \".byte\", stringParams, stringParams);\n            } else if (value.shift !== undefined) {\n                // Descend to sub-map.\n                map = value.shift;\n                byte = next();\n            } else {\n                // Found instruction. Parse arguments.\n                const args: string[] = (value.params ?? []).slice();\n\n                for (let i = 0; i < args.length; i++) {\n                    let arg = args[i];\n\n                    let changed: boolean;\n                    do {\n                        changed = false;\n\n                        // Fetch word argument.\n                        let pos = arg.indexOf(\"nnnn\");\n                        if (pos >= 0) {\n                            const lowByte = next();\n                            const highByte = next();\n                            const nnnn = word(highByte, lowByte);\n                            let target: string;\n                            if (value.mnemonic === \"call\" || value.mnemonic === \"jp\") {\n                                jumpTarget = nnnn;\n                                target = TARGET;\n                            } else {\n                                target = \"0x\" + toHex(nnnn, 4);\n\n                                // Perhaps we should only do this if the destination register is HL, since that's\n                                // often an address and other registers are more often lengths.\n                                this.referencedAddresses.add(nnnn);\n                            }\n                            arg = arg.substr(0, pos) + target + arg.substr(pos + 4);\n                            changed = true;\n                        }\n\n                        // Fetch byte argument.\n                        pos = arg.indexOf(\"nn\");\n                        if (pos === -1) {\n                            pos = arg.indexOf(\"dd\");\n                        }\n                        if (pos >= 0) {\n                            const nn = next();\n                            arg = arg.substr(0, pos) + \"0x\" + toHex(nn, 2) + arg.substr(pos + 2);\n                            changed = true;\n                        }\n\n                        // Fetch offset argument.\n                        pos = arg.indexOf(\"offset\");\n                        if (pos >= 0) {\n                            const offset = signedByte(next());\n                            jumpTarget = address + offset;\n                            arg = arg.substr(0, pos) + TARGET + arg.substr(pos + 6);\n                            changed = true;\n                        }\n                    } while (changed);\n\n                    args[i] = arg;\n                }\n\n                instruction = new Instruction(startAddress, bytes, value.mnemonic, value.params, args);\n                if (jumpTarget !== undefined) {\n                    instruction.jumpTarget = jumpTarget;\n                }\n            }\n        }\n\n        return instruction;\n    }\n\n    /**\n     * Makes a data (.byte, .text) instruction starting at the specified address.\n     */\n    private makeDataInstruction(address: number): Instruction {\n        const startAddress = address;\n\n        const parts: string[] = [];\n        let mnemonic: string | undefined = undefined;\n\n        // Look for contiguous sequence of either text or not text.\n        if (isText(this.memory[address])) {\n            // Gobble as much text as we can.\n            mnemonic = \".text\";\n            while (address < MEM_SIZE && this.hasContent[address] && !this.isDecoded[address] &&\n                isText(this.memory[address]) && address - startAddress < 50 &&\n                !(address > startAddress && this.referencedAddresses.has(address))) {\n\n                const byte = this.memory[address];\n                if (isPrintable(byte)) {\n                    let char = String.fromCharCode(byte);\n                    if (char === \"\\\"\") {\n                        // zasm doesn't support this backslash syntax. We'd have to enclose the whole string\n                        // with single quotes.\n                        // http://k1.spdns.de/Develop/Projects/zasm/Documentation/z79.htm#R\n                        char = \"\\\\\\\"\";\n                    }\n                    if (parts.length > 0 && parts[parts.length - 1].startsWith(\"\\\"\")) {\n                        const s = parts[parts.length - 1];\n                        parts[parts.length - 1] = s.substring(0, s.length - 1) + char + \"\\\"\";\n                    } else {\n                        parts.push(\"\\\"\" + char + \"\\\"\");\n                    }\n                } else {\n                    parts.push(\"0x\" + toHexByte(byte));\n                }\n                address += 1;\n            }\n\n            // See if it's too short.\n            if (address - startAddress < 2) {\n                // Probably not actual text.\n                mnemonic = undefined;\n                parts.splice(0, parts.length);\n                address = startAddress;\n            } else {\n                // Allow terminating NUL. Also allow terminating 0x03, it was used by the TRS-80 $VDLINE routine.\n                if (address < MEM_SIZE && this.hasContent[address] &&\n                    !(address > startAddress && this.referencedAddresses.has(address)) &&\n                    !this.isDecoded[address] && (this.memory[address] === 0x00 || this.memory[address] === 0x03)) {\n\n                    parts.push(\"0x\" + toHexByte(this.memory[address]));\n                    address += 1;\n                }\n            }\n        }\n\n        if (mnemonic === undefined) {\n            mnemonic = \".byte\";\n            while (address < MEM_SIZE && this.hasContent[address] && !this.isDecoded[address] &&\n                address - startAddress < 8 && !(address > startAddress && this.referencedAddresses.has(address))) {\n\n                parts.push(\"0x\" + toHexByte(this.memory[address]));\n                address += 1;\n            }\n        }\n\n        const bytes = Array.from(this.memory.slice(startAddress, address));\n        return new Instruction(startAddress, bytes, mnemonic, parts, parts);\n    }\n\n    /**\n     * Add an array of known label ([address, label] pairs).\n     */\n    public addLabels(labels: [number, string][]): void {\n        for (const [address, label] of labels) {\n            this.knownLabels.set(address, label);\n        }\n    }\n\n    /**\n     * Whether we have a label with this name. This is pretty slow currently, but is only used\n     * where that doesn't matter. Speed up with a set later if necessary.\n     */\n    public haveLabel(label: string): boolean {\n        for (const l of this.knownLabels.values()) {\n            if (l === label) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Add the label or, if it's already there, add a suffix to make it unique.\n     */\n    public addUniqueLabel(address: number, label: string): void {\n        let suffix = 1;\n\n        while (suffix < 1000) {\n            const uniqueLabel = label + (suffix === 1 ? \"\" : suffix);\n            if (this.haveLabel(uniqueLabel)) {\n                suffix += 1;\n            } else {\n                this.addLabels([[address, uniqueLabel]]);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Disassemble all instructions and assign labels.\n     */\n    public disassemble(): Instruction[] {\n        // First, see if there's a preamble that copies the program else where in memory and jumps to it.\n        // Use numerical for-loop instead of for-of because we modify the array in the loop and I\n        // don't know what guarantees JavaScript makes about that.\n        for (let i = 0; i < this.entryPoints.length; i++) {\n            const entryPoint = this.entryPoints[i];\n            const preamble = Preamble.detect(this.memory, entryPoint);\n            if (preamble !== undefined) {\n                const begin = preamble.sourceAddress;\n                const end = begin + preamble.copyLength;\n                this.addChunk(this.memory.subarray(begin, end), preamble.destinationAddress);\n                // Unmark this so that we don't decode it as data. It's possible that the program makes use of\n                // it, but unlikely.\n                this.hasContent.fill(0, begin, end);\n                this.addUniqueLabel(preamble.jumpAddress, \"main\");\n                // It might have a preamble! See Galaxy Invasion.\n                this.addEntryPoint(preamble.jumpAddress);\n            }\n        }\n\n        // Create set of addresses we want to decode, starting with our entry points.\n        const addressesToDecode = new Set<number>();\n        const addAddressToDecode = (number: number | undefined): void => {\n            if (number !== undefined &&\n                this.hasContent[number] &&\n                this.instructions[number] === undefined) {\n\n                addressesToDecode.add(number);\n            }\n        };\n\n        if (this.entryPoints.length === 0) {\n            // No explicit entry points. Default to lowest address we have data for.\n            for (let address = 0; address < MEM_SIZE; address++) {\n                if (this.hasContent[address]) {\n                    addressesToDecode.add(address);\n                    break;\n                }\n            }\n            if (this.entryPoints.length === 0) {\n                throw new Error(\"no binary content was specified\");\n            }\n        } else {\n            for (const address of this.entryPoints) {\n                addressesToDecode.add(address);\n            }\n        }\n\n        // Keep decoding as long as we have addresses to decode.\n        while (addressesToDecode.size !== 0) {\n            // Pick any to do next.\n            const address = addressesToDecode.values().next().value;\n            addressesToDecode.delete(address);\n            const instruction = this.disassembleOne(address);\n            this.instructions[address] = instruction;\n            this.isDecoded.fill(1, address, address + instruction.bin.length);\n            addAddressToDecode(instruction.jumpTarget);\n\n            if (instruction.continues()) {\n                addAddressToDecode(address + instruction.bin.length);\n            }\n        }\n\n        // Map from jump target to list of instructions that jump there.\n        const jumpTargetMap = new Map<number, Instruction[]>();\n\n        // Make list of instructions in memory order.\n        const instructions: Instruction[] = [];\n        for (let address = 0; address < MEM_SIZE; address++) {\n            if (this.hasContent[address]) {\n                let instruction = this.instructions[address];\n                if (instruction === undefined) {\n                    instruction = this.makeDataInstruction(address);\n                }\n                instructions.push(instruction);\n\n                if (instruction.jumpTarget !== undefined) {\n                    // Add this instruction to the list of instructions that call this target.\n                    let sources = jumpTargetMap.get(instruction.jumpTarget);\n                    if (sources === undefined) {\n                        sources = [];\n                        jumpTargetMap.set(instruction.jumpTarget, sources);\n                    }\n                    sources.push(instruction);\n                }\n\n                address += instruction.bin.length - 1;\n            }\n        }\n\n        // Assign labels.\n        let labelCounter = 1;\n        for (const instruction of instructions) {\n            let label = this.knownLabels.get(instruction.address);\n            const sources = jumpTargetMap.get(instruction.address) ?? [];\n            if (sources.length !== 0) {\n                if (label === undefined) {\n                    // Make anonymous label.\n                    label = \"label\" + labelCounter++;\n                }\n            }\n            if (label !== undefined) {\n                instruction.label = label;\n\n                // Replace pseudo-target in instruction.\n                for (const source of sources) {\n                    source.replaceArgVariable(TARGET, label);\n                }\n            }\n        }\n\n        // Replace the target variable with the actual address for those\n        // jumps that go outside our disassembled code.\n        for (const instruction of instructions) {\n            if (instruction.jumpTarget !== undefined) {\n                let label = this.knownLabels.get(instruction.jumpTarget);\n                if (label === undefined) {\n                    label = \"0x\" + toHexWord(instruction.jumpTarget);\n                }\n\n                instruction.replaceArgVariable(TARGET, label);\n            }\n        }\n\n        return instructions;\n    }\n}\n","\n/**\n * Information about a preamble that might copy the rest of the program elsewhere in memory. It typically looks like:\n *\n *     6000  21 0E 60            ld hl,0x600E\n *     6003  11 00 43            ld de,0x4300\n *     6006  01 5C 07            ld bc,0x075C\n *     6009  ED B0               ldir\n *     600B  C3 00 43            jp 0x4300\n *     600E  [program to be copied]\n *\n */\nexport class Preamble {\n    public readonly preambleLength: number;\n    public readonly sourceAddress: number;\n    public readonly destinationAddress: number;\n    public readonly copyLength: number;\n    public readonly jumpAddress: number;\n\n    constructor(preambleLength: number, sourceAddress: number, destinationAddress: number,\n                copyLength: number, jumpAddress: number) {\n\n        this.preambleLength = preambleLength;\n        this.sourceAddress = sourceAddress;\n        this.destinationAddress = destinationAddress;\n        this.copyLength = copyLength;\n        this.jumpAddress = jumpAddress;\n    }\n\n    /**\n     * Detect a preamble that copies the program to another address.\n     */\n    public static detect(memory: Uint8Array, entryPoint: number): Preamble | undefined {\n        let preambleLength = 0x0E;\n        let start = entryPoint;\n\n        // Skip optional DI.\n        if (memory[start] === 0xF3) { // DI\n            start += 1;\n            preambleLength += 1;\n        }\n\n        const sourceAddress = memory[start + 0x01] | (memory[start + 0x02] << 8);\n        const destinationAddress = memory[start + 0x04] | (memory[start + 0x05] << 8);\n        const copyLength = memory[start + 0x07] | (memory[start + 0x08] << 8);\n        const jumpAddress = memory[start + 0x0C] | (memory[start + 0x0D] << 8);\n\n        if (memory[start + 0x00] === 0x21 && // LD HL,nnnn\n            memory[start + 0x03] === 0x11 && // LD DE,nnnn\n            memory[start + 0x06] === 0x01 && // LD BC,nnnn\n            memory[start + 0x09] === 0xED && memory[start + 0x0A] === 0xB0 && // LDIR\n            memory[start + 0x0B] === 0xC3 && // JP nnnn\n            jumpAddress >= destinationAddress && jumpAddress < destinationAddress + copyLength) {\n\n            return new Preamble(preambleLength, sourceAddress, destinationAddress, copyLength, jumpAddress);\n        }\n\n        return undefined;\n    }\n}\n","\nexport const Z80_KNOWN_LABELS: [number, string][] = [\n    [0x0000, \"rst00\"],\n    [0x0008, \"rst08\"],\n    [0x0010, \"rst10\"],\n    [0x0018, \"rst18\"],\n    [0x0020, \"rst20\"],\n    [0x0028, \"rst28\"],\n    [0x0030, \"rst30\"],\n    [0x0038, \"rst38\"],\n];\n","import {Instruction} from \"./Instruction\";\nimport {toHexByte, toHexWord} from \"z80-base\";\n\n/**\n * Converts an array of instructions into an array of text lines, suitable for displaying\n * in a shell console.\n */\nexport function instructionsToText(instructions: Instruction[]): string[] {\n    const lines: string[] = [];\n\n    for (const instruction of instructions) {\n        if (instruction.label !== undefined) {\n            lines.push(\"                 \" + instruction.label + \":\");\n        }\n\n        let address = instruction.address;\n        const bytes = instruction.bin;\n\n        while (bytes.length > 0) {\n            const subbytes = bytes.slice(0, Math.min(3, bytes.length));\n            lines.push(toHexWord(address) + \" \" +\n                subbytes.map(toHexByte).join(\" \").padEnd(12) +\n                (address === instruction.address ? \"        \" + instruction.toText() : \"\"));\n            address += subbytes.length;\n            bytes.splice(0, subbytes.length);\n        }\n    }\n\n    return lines;\n}\n","/**\n * Information about one particular bit (its position and status).\n */\nexport class BitData {\n    /**\n     * Create an object representing a bit.\n     *\n     * @param startFrame the first frame, inclusive.\n     * @param endFrame the last frame, inclusive.\n     * @param bitType what kind of bit it is.\n     */\n    constructor(startFrame, endFrame, bitType) {\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n        this.bitType = bitType;\n    }\n}\n","/**\n * Information about a particular bit.\n */\nexport var BitType;\n(function (BitType) {\n    /**\n     * Represents a numerical zero (0).\n     */\n    BitType[BitType[\"ZERO\"] = 0] = \"ZERO\";\n    /**\n     * Represents a numerical one (1).\n     */\n    BitType[BitType[\"ONE\"] = 1] = \"ONE\";\n    /**\n     * Represents a start bit in a byte.\n     */\n    BitType[BitType[\"START\"] = 2] = \"START\";\n    /**\n     * Represents an undecoded bit.\n     */\n    BitType[BitType[\"BAD\"] = 3] = \"BAD\";\n})(BitType || (BitType = {}));\n","// Enum for the state of a tape decoder.\nexport var TapeDecoderState;\n(function (TapeDecoderState) {\n    /**\n     * Decoder must start in UNDECIDED state.\n     */\n    TapeDecoderState[TapeDecoderState[\"UNDECIDED\"] = 0] = \"UNDECIDED\";\n    /**\n     * Go from UNDECIDED to DETECTED once it's sure that the encoding is its own. This usually\n     * happens at the end of the header.\n     */\n    TapeDecoderState[TapeDecoderState[\"DETECTED\"] = 1] = \"DETECTED\";\n    /**\n     * Go from DETECTED to FINISHED once the program is fully read.\n     * Once in the FINISHED state, the decoder won't be given any more samples.\n     */\n    TapeDecoderState[TapeDecoderState[\"FINISHED\"] = 2] = \"FINISHED\";\n})(TapeDecoderState || (TapeDecoderState = {}));\n","/**\n * Information about one particular byte (its position).\n */\nexport class ByteData {\n    /**\n     * Create an object representing a byte.\n     *\n     * @param value the byte value (0-255).\n     * @param startFrame the first frame, inclusive.\n     * @param endFrame the last frame, inclusive.\n     */\n    constructor(value, startFrame, endFrame) {\n        this.value = value;\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n    }\n}\n","/**\n * Samples that are pre-filtered so we can display them zoomed out quickly.\n */\nexport class DisplaySamples {\n    constructor(samples) {\n        this.samplesList = [samples];\n        this.filterDown();\n    }\n    /**\n     * Sample down for quick display.\n     */\n    filterDown() {\n        while (this.samplesList[this.samplesList.length - 1].length > 500) {\n            const samples = this.samplesList[this.samplesList.length - 1];\n            const half = Math.floor(samples.length / 2);\n            const down = new Int16Array(half);\n            for (let i = 0, j = 0; i < half; i++, j += 2) {\n                down[i] = Math.max(samples[j], samples[j + 1]);\n            }\n            this.samplesList.push(down);\n        }\n    }\n}\n","/**\n * Convert a number to a string.\n *\n * @param n number to convert\n * @param base base of the number\n * @param size zero-pad to this many digits\n */\nexport function pad(n, base, size) {\n    let s = n.toString(base);\n    if (base === 16) {\n        // I prefer upper case hex.\n        s = s.toUpperCase();\n    }\n    while (s.length < size) {\n        s = \"0\" + s;\n    }\n    return s;\n}\n/**\n * Generate the string version of a number, in base 10, with commas for thousands groups.\n */\nexport function withCommas(n) {\n    let s = typeof n === \"number\" ? Math.round(n).toString(10) : n;\n    const negative = s.length >= 1 && s.charAt(0) === \"-\";\n    const firstDigit = negative ? 1 : 0;\n    if (s.length - firstDigit > 4) {\n        for (let i = s.length - 3; i > firstDigit; i -= 3) {\n            s = s.substring(0, i) + \",\" + s.substring(i);\n        }\n    }\n    return s;\n}\n/**\n * Remove all children from element.\n */\nexport function clearElement(e) {\n    while (e.firstChild) {\n        e.removeChild(e.firstChild);\n    }\n}\n/**\n * Flash the node as if a photo were taken.\n */\nexport function flashNode(node) {\n    // Position a semi-transparent white div over the screen, and reduce its transparency over time.\n    const oldNodePosition = node.style.position;\n    node.style.position = \"relative\";\n    const overlay = document.createElement(\"div\");\n    overlay.style.position = \"absolute\";\n    overlay.style.left = \"0\";\n    overlay.style.top = \"0\";\n    overlay.style.right = \"0\";\n    overlay.style.bottom = \"0\";\n    overlay.style.backgroundColor = \"#ffffff\";\n    // Fade out.\n    let opacity = 1;\n    const updateOpacity = () => {\n        overlay.style.opacity = opacity.toString();\n        opacity -= 0.05;\n        if (opacity >= 0) {\n            window.requestAnimationFrame(updateOpacity);\n        }\n        else {\n            node.removeChild(overlay);\n            node.style.position = oldNodePosition;\n        }\n    };\n    updateOpacity();\n    node.appendChild(overlay);\n}\n/**\n * Concatenate a list of byte arrays into one.\n */\nexport function concatByteArrays(samplesList) {\n    const length = samplesList.reduce((sum, samples) => sum + samples.length, 0);\n    const allBytes = new Uint8Array(length);\n    let offset = 0;\n    for (const samples of samplesList) {\n        allBytes.set(samples, offset);\n        offset += samples.length;\n    }\n    return allBytes;\n}\n","import { pad, withCommas } from \"./Utils\";\nexport class AudioFile {\n    constructor(rate, samples) {\n        this.rate = rate;\n        this.samples = samples;\n    }\n}\n/**\n * Simple high-pass filter.\n *\n * @param samples samples to filter.\n * @param size size of filter\n * @returns filtered samples.\n */\nexport function highPassFilter(samples, size) {\n    const out = new Int16Array(samples.length);\n    let sum = 0;\n    for (let i = 0; i < size; i++) {\n        sum += samples[i];\n        // Subtract out the average of the last \"size\" samples (to estimate local DC component).\n        out[i] = clampToInt16(samples[i] - sum / size);\n    }\n    for (let i = size; i < samples.length; i++) {\n        sum += samples[i] - samples[i - size];\n        // Subtract out the average of the last \"size\" samples (to estimate local DC component).\n        out[i] = clampToInt16(samples[i] - sum / size);\n    }\n    return out;\n}\n/**\n * @param frame the frame number to be described as a timestamp.\n * @param hz number of frames per second in original recording.\n * @param brief omit hour if zero, omit milliseconds and frame itself.\n */\nexport function frameToTimestamp(frame, hz, brief) {\n    const time = frame / hz;\n    let ms = Math.floor(time * 1000);\n    let sec = Math.floor(ms / 1000);\n    ms -= sec * 1000;\n    let min = Math.floor(sec / 60);\n    sec -= min * 60;\n    const hour = Math.floor(min / 60);\n    min -= hour * 60;\n    if (brief) {\n        return (hour !== 0 ? hour + \":\" + pad(min, 10, 2) : min) + \":\" + pad(sec, 10, 2);\n    }\n    else {\n        return hour + \":\" + pad(min, 10, 2) + \":\" + pad(sec, 10, 2) + \".\" + pad(ms, 10, 3) + \" (frame \" + withCommas(frame) + \")\";\n    }\n}\n/**\n * @param frame the frame duration to be described as a string.\n * @param hz number of frames per second in original recording.\n */\nexport function frameDurationToString(frame, hz) {\n    const time = frame / hz;\n    let us = Math.floor(time * 1000000);\n    let sec = Math.floor(us / 1000000);\n    us -= sec * 1000000;\n    let min = Math.floor(sec / 60);\n    sec -= min * 60;\n    const hour = Math.floor(min / 60);\n    min -= hour * 60;\n    return (hour !== 0 ? hour + \":\" + pad(min, 10, 2) : min) + \":\" + pad(sec, 10, 2) + \".\" +\n        withCommas(pad(us, 10, 6)) + \" (\" + withCommas(frame) + \" frame\" + (frame === 1 ? \"\" : \"s\") + \")\";\n}\n/**\n * Concatenate a list of audio samples into one.\n */\nexport function concatAudio(samplesList) {\n    const length = samplesList.reduce((sum, samples) => sum + samples.length, 0);\n    const allSamples = new Int16Array(length);\n    let offset = 0;\n    for (const samples of samplesList) {\n        allSamples.set(samples, offset);\n        offset += samples.length;\n    }\n    return allSamples;\n}\n/**\n * Clamp the number to the range of signed 16-bit int.\n */\nexport function clampToInt16(x) {\n    return Math.max(Math.min(Math.round(x), 32767), -32768);\n}\n/**\n * Generate a certain amount of silence.\n */\nexport function makeSilence(seconds, sampleRate) {\n    return new Int16Array(Math.round(seconds * sampleRate));\n}\n","import { concatAudio } from \"./AudioUtils\";\nimport { concatByteArrays } from \"./Utils\";\nconst SYNC_BYTE = 0x7F;\n/**\n * Generate one cycle of a sine wave.\n * @param length number of samples in the full cycle.\n * @return audio samples for one cycle.\n */\nfunction generateCycle(length) {\n    const audio = new Int16Array(length);\n    for (let i = 0; i < length; i++) {\n        const t = 2 * Math.PI * i / length;\n        // -0.5 to 0.5, matches recorded audio.\n        audio[i] = Math.sin(t) * 16384;\n    }\n    return audio;\n}\n/**\n * Generate a half cycle that fades off to zero instead of coming down hard to zero.\n *\n * @param length number of samples to generate.\n * @param previousBit the previous cycle, so we copy the ending slope.\n */\nfunction generateFinalHalfCycle(length, previousBit) {\n    // Copy the slope of the end of the zero bit.\n    const slope = previousBit[previousBit.length - 1] - previousBit[previousBit.length - 2];\n    // Points on the Bezier.\n    const x1 = 0;\n    const y1 = 0;\n    const y2 = 32767;\n    const x2 = (y2 - y1 + x1 * slope) / slope;\n    const x3 = length / 2;\n    const y3 = 0;\n    const x4 = length - 1;\n    const y4 = 0;\n    // Generated audio;\n    const audio = new Int16Array(length);\n    // Go through Bezier in small steps.\n    let position = 0;\n    for (let i = 0; i <= 128; i++) {\n        const t = i / 128.0;\n        // Compute Bezier value.\n        const x12 = x1 + (x2 - x1) * t;\n        const y12 = y1 + (y2 - y1) * t;\n        const x23 = x2 + (x3 - x2) * t;\n        const y23 = y2 + (y3 - y2) * t;\n        const x34 = x3 + (x4 - x3) * t;\n        const y34 = y3 + (y4 - y3) * t;\n        const x123 = x12 + (x23 - x12) * t;\n        const y123 = y12 + (y23 - y12) * t;\n        const x234 = x23 + (x34 - x23) * t;\n        const y234 = y23 + (y34 - y23) * t;\n        const x1234 = x123 + (x234 - x123) * t;\n        const y1234 = y123 + (y234 - y123) * t;\n        // Draw a crude horizontal line from the previous point.\n        const newPosition = Math.min(Math.floor(x1234), length - 1);\n        while (position <= newPosition) {\n            audio[position] = y1234;\n            position += 1;\n        }\n    }\n    // Finish up anything left.\n    while (position <= length - 1) {\n        audio[position] = 0;\n        position += 1;\n    }\n    return audio;\n}\n/**\n * Adds the byte \"b\" to the samples list, most significant bit first.\n * @param samplesList list of samples we're adding to.\n * @param b byte to generate.\n * @param zero samples for a zero bit.\n * @param one samples for a one bit.\n */\nfunction addByte(samplesList, b, zero, one) {\n    // MSb first.\n    for (let i = 7; i >= 0; i--) {\n        if ((b & (1 << i)) != 0) {\n            samplesList.push(one);\n        }\n        else {\n            samplesList.push(zero);\n        }\n    }\n}\n/**\n * Adds the header bytes and start bits necessary for writing high-speed cassettes. The input bytes\n * must not have the start bits already inserted.\n */\nexport function wrapHighSpeed(bytes) {\n    // Add tape header.\n    const buffers = [\n        new Uint8Array(256).fill(0x55),\n        new Uint8Array([SYNC_BYTE]),\n        insertStartBits(bytes),\n    ];\n    return concatByteArrays(buffers);\n}\n/**\n * Inserts a zero start bit before every byte.\n */\nfunction insertStartBits(inBytes) {\n    const outBytes = new Uint8Array(Math.ceil(inBytes.length * 9 / 8));\n    for (let i = 0; i < inBytes.length; i++) {\n        const byte = inBytes[i];\n        const bitPos = i * 9 + 1;\n        const bytePos = Math.floor(bitPos / 8);\n        const bitOffset = bitPos % 8;\n        outBytes[bytePos] |= byte >> bitOffset;\n        if (bitOffset !== 0) {\n            outBytes[bytePos + 1] |= byte << (8 - bitOffset);\n        }\n    }\n    return outBytes;\n}\n/**\n * High-speed CAS files have start bits built-in. Strip these out because\n * we re-insert them below when encoding. We could also remove the\n * writing of start bits below, but we don't really know how many bits\n * there are at the end that we shouldn't write.\n *\n * Update: We no longer insert start bits in encodeHighSpeed(), so this\n * routine is no longer necessary, but we keep it around anyway.\n */\nexport function stripStartBits(inBytes) {\n    // Find sync byte.\n    let headerSize = undefined;\n    for (let i = 0; i < inBytes.length; i++) {\n        if (inBytes[i] === SYNC_BYTE) {\n            headerSize = i + 1;\n            break;\n        }\n    }\n    if (headerSize === undefined) {\n        console.log(\"Can't find sync byte in high-speed CAS file\");\n        return inBytes;\n    }\n    // Compute new size of array.\n    const outBytes = new Uint8Array(Math.floor(headerSize + (inBytes.length - headerSize) * 8 / 9));\n    // First bytes, up to and including sync byte, don't have a start bit.\n    outBytes.set(inBytes.slice(0, headerSize));\n    // Strip start bit from the rest.\n    for (let i = headerSize; i < outBytes.length; i++) {\n        // Index of most-significant data bit.\n        const bitIndex = headerSize * 8 + (i - headerSize) * 9 + 1;\n        const byteIndex = Math.floor(bitIndex / 8);\n        const bitOffset = bitIndex % 8;\n        let value = inBytes[byteIndex] << bitOffset;\n        if (bitOffset !== 0) {\n            value |= inBytes[byteIndex + 1] >> (8 - bitOffset);\n        }\n        outBytes[i] = value;\n    }\n    return outBytes;\n}\n/**\n * Encode the sequence of bytes as an array of audio samples for high-speed (1500 baud) cassettes.\n * @param bytes cas-style array of bytes, including 256 0x55 bytes, sync byte, and start bits.\n * @param sampleRate number of samples per second in the generated audio.\n */\nexport function encodeHighSpeed(bytes, sampleRate) {\n    // Length of a zero bit, in samples.\n    const zeroLength = Math.round(0.00072 * sampleRate);\n    // Length of a one bit, in samples.\n    const oneLength = Math.round(0.00034 * sampleRate);\n    // Samples representing a zero bit.\n    const zero = generateCycle(zeroLength);\n    // Samples representing a one bit.\n    const one = generateCycle(oneLength);\n    // The final cycle in the entire waveform, which is necessary\n    // to force that last negative-to-positive transition (and interrupt).\n    // We could just use a simple half cycle here, but it's nicer to do\n    // something like the original analog.\n    const finalHalfCycle = generateFinalHalfCycle(zeroLength * 3, zero);\n    // List of samples.\n    const samplesList = [];\n    // Start with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // Write program.\n    for (const b of bytes) {\n        addByte(samplesList, b, zero, one);\n    }\n    // Finish off the last cycle, so that it generates an interrupt.\n    samplesList.push(finalHalfCycle);\n    // End with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // Concatenate all samples.\n    return concatAudio(samplesList);\n}\n","import { concatAudio, makeSilence } from \"./AudioUtils\";\nimport { concatByteArrays } from \"./Utils\";\nconst SYNC_BYTE = 0xA5;\n/**\n * Generate one pulse for 500 baud audio.\n */\nfunction generatePulse(length) {\n    const audio = new Int16Array(length);\n    // Center it in the audio.\n    const offset = Math.round(length / 4);\n    for (let i = 0; i < length / 2; i++) {\n        const t = 2 * Math.PI * i / (length / 2);\n        // -0.5 to 0.5, matches recorded audio.\n        audio[i + offset] = Math.sin(t) * 16384;\n    }\n    return audio;\n}\n/**\n * Adds the byte \"b\" to the samples list, most significant bit first.\n * @param samplesList list of samples we're adding to.\n * @param b byte to generate.\n * @param cycle samples for a cycle.\n * @param silence samples for silence.\n */\nfunction addByte(samplesList, b, cycle, silence) {\n    // MSb first.\n    for (let i = 7; i >= 0; i--) {\n        // Clock pulse.\n        samplesList.push(cycle);\n        // Data pulse.\n        const bit = (b & (1 << i)) != 0;\n        samplesList.push(bit ? cycle : silence);\n    }\n}\n/**\n * Adds the header bytes necessary for writing low-speed cassettes.\n */\nexport function wrapLowSpeed(bytes) {\n    // Add tape header.\n    const buffers = [\n        // We used to generate 256 zero bytes, but Knut's wav2cas uses 255 bytes,\n        // so use that so we can binary-compare the outputs.\n        new Uint8Array(255),\n        new Uint8Array([SYNC_BYTE]),\n        bytes,\n    ];\n    return concatByteArrays(buffers);\n}\n/**\n * Encode the sequence of bytes as an array of audio samples for low-speed (500 baud) cassettes.\n * @param bytes cas-style array of bytes, including 256 zero bytes, sync byte, and trailing zero bytes.\n * @param sampleRate number of samples per second in the generated audio.\n */\nexport function encodeLowSpeed(bytes, sampleRate) {\n    // Length of one cycle, in samples. They're all 1ms.\n    const cycleLength = Math.round(0.001 * sampleRate);\n    // Samples representing one cycle.\n    const cycle = generatePulse(cycleLength);\n    // Samples representing 1ms of silence.\n    const silence = new Int16Array(cycleLength);\n    // List of samples.\n    const samplesList = [];\n    // Start with half a second of silence.\n    samplesList.push(makeSilence(0.5, sampleRate));\n    // All data bytes.\n    for (let i = 0; i < bytes.length; i++) {\n        addByte(samplesList, bytes[i], cycle, silence);\n    }\n    // End with half a second of silence.\n    samplesList.push(makeSilence(0.5, sampleRate));\n    // Concatenate all samples.\n    return concatAudio(samplesList);\n}\n","import { AudioFile } from \"./AudioUtils\";\nimport { toHexByte } from \"z80-base\";\n/**\n * Rate used for writing files.\n */\nexport const DEFAULT_SAMPLE_RATE = 44100;\n/**\n * Values for the \"audioFormat\" field.\n */\nconst WAVE_FORMAT_UNKNOWN = 0x0000; // Microsoft Unknown Wave Format\nconst WAVE_FORMAT_PCM = 0x0001; // Microsoft PCM Format\nconst WAVE_FORMAT_ADPCM = 0x0002; // Microsoft ADPCM Format\nconst WAVE_FORMAT_IEEE_FLOAT = 0x0003; // IEEE float\nconst WAVE_FORMAT_VSELP = 0x0004; // Compaq Computer's VSELP\nconst WAVE_FORMAT_IBM_CVSD = 0x0005; // IBM CVSD\nconst WAVE_FORMAT_ALAW = 0x0006; // 8-bit ITU-T G.711 A-law\nconst WAVE_FORMAT_MULAW = 0x0007; // 8-bit ITU-T G.711 µ-law\nconst WAVE_FORMAT_EXTENSIBLE = 0xFFFE; // Determined by SubFormat\n/**\n * Reads strings, numbers, and arrays from a buffer.\n */\nclass ArrayBufferReader {\n    constructor(arrayBuffer) {\n        this.littleEndian = false;\n        this.arrayBuffer = arrayBuffer;\n        this.dataView = new DataView(arrayBuffer);\n        this.index = 0;\n    }\n    /**\n     * Whether we've reached the end of the buffer.\n     */\n    eof() {\n        return this.index >= this.arrayBuffer.byteLength;\n    }\n    /**\n     * Read an ASCII string of length \"length\" from the input file.\n     */\n    readString(length) {\n        let s = \"\";\n        for (let i = 0; i < length && this.index < this.arrayBuffer.byteLength; i++) {\n            const byte = this.dataView.getInt8(this.index++);\n            if (byte === 0x00) {\n                break;\n            }\n            s += String.fromCharCode(byte);\n        }\n        return s;\n    }\n    /**\n     * Read an unsigned 8-bit value.\n     */\n    readUint8() {\n        const value = this.dataView.getUint8(this.index);\n        this.index += 1;\n        return value;\n    }\n    /**\n     * Read an unsigned 16-bit value.\n     */\n    readUint16() {\n        const value = this.dataView.getUint16(this.index, this.littleEndian);\n        this.index += 2;\n        return value;\n    }\n    /**\n     * Read an unsigned 32-bit value.\n     */\n    readUint32() {\n        const value = this.dataView.getUint32(this.index, this.littleEndian);\n        this.index += 4;\n        return value;\n    }\n    /**\n     * Read a buffer of Uint8 numbers.\n     */\n    readUint8Array(byteLength) {\n        const array = new Uint8Array(this.arrayBuffer, this.index, byteLength);\n        this.index += byteLength;\n        return array;\n    }\n    /**\n     * Read a buffer of Int16 numbers.\n     */\n    readInt16Array(byteLength) {\n        const array = new Int16Array(this.arrayBuffer, this.index, byteLength / 2);\n        this.index += byteLength;\n        return array;\n    }\n}\n/**\n * Reads a WAV file from a buffer, returning an AudioFile object.\n*/\nexport function readWavFile(arrayBuffer) {\n    const reader = new ArrayBufferReader(arrayBuffer);\n    let rate = undefined;\n    let samples = undefined;\n    let bitDepth = undefined;\n    // Read ID.\n    const riffId = reader.readString(4);\n    if (riffId === \"RIFF\") {\n        reader.littleEndian = true;\n    }\n    else if (riffId === \"RIFX\") {\n        reader.littleEndian = false;\n    }\n    else {\n        throw new Error('bad \"chunk id\": expected \"RIFF\" or \"RIFX\", got ' + riffId);\n    }\n    // Read chunk size. This is really how much is left in the entire file.\n    const chunkSize = reader.readUint32();\n    // Read format.\n    const waveId = reader.readString(4);\n    if (waveId !== \"WAVE\") {\n        throw new Error('bad \"format\": expected \"WAVE\", got ' + waveId);\n    }\n    // Keep reading chunks.\n    while (!reader.eof()) {\n        // Chunk ID.\n        const chunkId = reader.readString(4);\n        if (chunkId.length < 4) {\n            // Premature end of file.\n            console.log(\"End of file part-way through chunk ID in WAV file: \" + chunkId);\n            break;\n        }\n        const chunkSize = reader.readUint32();\n        switch (chunkId) {\n            case \"fmt \": {\n                if (chunkSize < 16) {\n                    throw new Error(\"Expected fmt size of at least 16, got \" + chunkSize);\n                }\n                const audioFormat = reader.readUint16();\n                const channels = reader.readUint16();\n                rate = reader.readUint32();\n                const byteRate = reader.readUint32(); // useless...\n                const blockAlign = reader.readUint16(); // useless...\n                bitDepth = reader.readUint16();\n                if (audioFormat !== WAVE_FORMAT_PCM) {\n                    throw new Error(\"Can only handle PCM, not \" + audioFormat);\n                }\n                if (channels !== 1) {\n                    throw new Error(\"Can only handle mono streams, not \" + channels + \" channels\");\n                }\n                const expectBlockAlign = Math.ceil(bitDepth / 8);\n                if (blockAlign !== expectBlockAlign) {\n                    throw new Error(\"Expected block align of \" + expectBlockAlign + \", not \" + blockAlign);\n                }\n                // Read the rest of the optional parameters. These are allowed but we don't do anything\n                // with them.\n                for (let i = 16; i < chunkSize; i++) {\n                    const byte = reader.readUint8();\n                    console.log(\"Got extra byte in wav fmt chunk: 0x\" + toHexByte(byte));\n                }\n                break;\n            }\n            case \"fact\": {\n                if (chunkSize !== 4) {\n                    throw new Error(\"Expected fact size of 4, got \" + chunkSize);\n                }\n                // There is currently only one field defined for the format dependant data.\n                // It is a single 4-byte value that specifies the number of samples in the\n                // waveform data chunk.\n                //\n                // The number of samples field is redundant for sampled data, since the Data\n                // chunk indicates the length of the data. The number of samples can be\n                // determined from the length of the data and the container size as determined\n                // from the Format chunk.\n                const numSamples = reader.readUint32();\n                break;\n            }\n            case \"data\": {\n                if (chunkSize === 0) {\n                    // If we run into this, just read the rest of the array.\n                    throw new Error(\"We don't handle 0-sized data\");\n                }\n                if (bitDepth === 8) {\n                    const samples8 = reader.readUint8Array(chunkSize);\n                    // Convert from 8-bit unsigned to 16-bit signed.\n                    samples = new Int16Array(samples8.length);\n                    for (let i = 0; i < samples.length; i++) {\n                        samples[i] = -(samples8[i] - 128) * 255;\n                    }\n                }\n                else if (bitDepth === 16) {\n                    samples = reader.readInt16Array(chunkSize);\n                }\n                else {\n                    throw new Error(\"Can only handle bit depths of 8 and 16, not \" + bitDepth);\n                }\n                break;\n            }\n        }\n    }\n    if (samples === undefined || rate === undefined) {\n        throw new Error(\"didn't get all the fields we need from WAV file\");\n    }\n    return new AudioFile(rate, samples);\n}\n/**\n * Convert samples to a WAV file.\n *\n * http://soundfile.sapp.org/doc/WaveFormat/\n */\nexport function writeWavFile(samples, sampleRate) {\n    const channelCount = 1;\n    const bitDepth = 16;\n    // Total size of WAV file.\n    const totalSize = 11 * 4 + samples.length * 2;\n    const wav = new ArrayBuffer(totalSize);\n    const wavData = new DataView(wav);\n    let index = 0;\n    const writeString = (s) => {\n        for (let i = 0; i < s.length; i++) {\n            wavData.setUint8(index, s.charCodeAt(i));\n            index += 1;\n        }\n    };\n    const writeUint16 = (n) => {\n        wavData.setUint16(index, n, true);\n        index += 2;\n    };\n    const writeInt16 = (n) => {\n        wavData.setInt16(index, n, true);\n        index += 2;\n    };\n    const writeUint32 = (n) => {\n        wavData.setUint32(index, n, true);\n        index += 4;\n    };\n    // Main header.\n    writeString(\"RIFF\");\n    writeUint32(totalSize - 8);\n    writeString(\"WAVE\");\n    // Format chunk.\n    writeString(\"fmt \");\n    writeUint32(16);\n    writeUint16(WAVE_FORMAT_PCM);\n    writeUint16(channelCount);\n    writeUint32(sampleRate);\n    writeUint32(sampleRate * channelCount * bitDepth / 8); // Byte rate.\n    writeUint16(channelCount * bitDepth / 8); // Block align.\n    writeUint16(bitDepth);\n    // Data chunk.\n    writeString(\"data\");\n    writeUint32(samples.length * 2);\n    for (let i = 0; i < samples.length; i++) {\n        writeInt16(samples[i]);\n    }\n    if (index !== totalSize) {\n        throw new Error(\"wrote \" + index + \" but expected \" + totalSize);\n    }\n    return new Uint8Array(wav);\n}\n","import { DisplaySamples } from \"./DisplaySamples\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { BitType } from \"./BitType\";\nimport { encodeHighSpeed, wrapHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { encodeLowSpeed, wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nimport { DEFAULT_SAMPLE_RATE, writeWavFile } from \"./WavFile\";\nexport class Program {\n    constructor(trackNumber, copyNumber, startFrame, endFrame, decoder, baud, binary, bitData, byteData) {\n        this.name = \"\";\n        this.notes = \"\";\n        this.screenshot = \"\";\n        this.onName = new SimpleEventDispatcher();\n        this.onNotes = new SimpleEventDispatcher();\n        this.onScreenshot = new SimpleEventDispatcher();\n        this.trackNumber = trackNumber;\n        this.copyNumber = copyNumber;\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n        this.decoder = decoder;\n        this.baud = baud;\n        this.binary = binary;\n        this.bitData = bitData;\n        this.byteData = byteData;\n    }\n    /**\n     * Set the high-speed samples reconstructed from the binary.\n     */\n    setReconstructedSamples(reconstructedSamples) {\n        this.reconstructedSamples = new DisplaySamples(reconstructedSamples);\n    }\n    /**\n     * Get a generic label for the program.\n     */\n    getLabel() {\n        return \"Track \" + this.trackNumber + \", copy \" + this.copyNumber + \", \" + this.decoder.getName();\n    }\n    /**\n     * Get a generic short label for the program.\n     */\n    getShortLabel() {\n        return \"T\" + this.trackNumber + \" C\" + this.copyNumber;\n    }\n    /**\n     * Whether the binary represents a Basic program.\n     */\n    isBasicProgram() {\n        return this.binary != null &&\n            this.binary.length >= 3 &&\n            this.binary[0] === 0xD3 &&\n            this.binary[1] === 0xD3 &&\n            this.binary[2] === 0xD3;\n    }\n    /**\n     * Set the name of the program, as set by the user.\n     */\n    setName(name) {\n        if (name !== this.name) {\n            this.name = name;\n            this.onName.dispatch(name);\n        }\n    }\n    /**\n     * Set the notes for the program, as set by the user.\n     */\n    setNotes(notes) {\n        if (notes !== this.notes) {\n            this.notes = notes;\n            this.onNotes.dispatch(notes);\n        }\n    }\n    /**\n     * Set the screenshot for the program.\n     */\n    setScreenshot(screenshot) {\n        if (screenshot !== this.screenshot) {\n            this.screenshot = screenshot;\n            this.onScreenshot.dispatch(screenshot);\n        }\n    }\n    /**\n     * Get a representative timestamp for this program, in seconds.\n     */\n    getTimestamp(sampleRate) {\n        return (this.startFrame + this.endFrame) / 2 / sampleRate;\n    }\n    /**\n     * Whether the given timestamp (in seconds) could apply to this program.\n     */\n    isForTimestamp(timestamp, sampleRate) {\n        const startTimestamp = this.startFrame / sampleRate;\n        const endTimestamp = this.endFrame / sampleRate;\n        return startTimestamp <= timestamp && timestamp <= endTimestamp;\n    }\n    /**\n     * Whether the binary represents an EDTASM program.\n     *\n     * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/edtasm-file-format/\n     */\n    isEdtasmProgram() {\n        function isValidProgramNameChar(n) {\n            return (n >= 0x41 && n <= 0x5A) || n === 0x20;\n        }\n        function isValidLineNumberChar(n) {\n            return n >= 0xB0 && n <= 0xB9;\n        }\n        return this.binary != null &&\n            this.binary.length >= 13 &&\n            this.binary[0] === 0xD3 &&\n            isValidProgramNameChar(this.binary[1]) &&\n            isValidProgramNameChar(this.binary[2]) &&\n            isValidProgramNameChar(this.binary[3]) &&\n            isValidProgramNameChar(this.binary[4]) &&\n            isValidProgramNameChar(this.binary[5]) &&\n            isValidProgramNameChar(this.binary[6]) &&\n            isValidLineNumberChar(this.binary[7]) &&\n            isValidLineNumberChar(this.binary[8]) &&\n            isValidLineNumberChar(this.binary[9]) &&\n            isValidLineNumberChar(this.binary[10]) &&\n            isValidLineNumberChar(this.binary[11]) &&\n            this.binary[12] === 0x20;\n    }\n    /**\n     * Whether these two programs have the same binaries.\n     */\n    sameBinaryAs(other) {\n        if (this.binary.length !== other.binary.length) {\n            return false;\n        }\n        for (let i = 0; i < this.binary.length; i++) {\n            if (this.binary[i] !== other.binary[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Return a .cas file version of the binary.\n     */\n    asCasFile() {\n        if (this.decoder.isHighSpeed()) {\n            return wrapHighSpeed(this.binary);\n        }\n        else {\n            return wrapLowSpeed(this.binary);\n        }\n    }\n    /**\n     * Return just the audio portion of a WAV file for this program.\n     */\n    asAudio() {\n        const bytes = this.asCasFile();\n        return this.decoder.isHighSpeed()\n            ? encodeHighSpeed(bytes, DEFAULT_SAMPLE_RATE)\n            : encodeLowSpeed(bytes, DEFAULT_SAMPLE_RATE);\n    }\n    /**\n     * Return a .wav file version of the binary.\n     */\n    asWavFile() {\n        return writeWavFile(this.asAudio(), DEFAULT_SAMPLE_RATE);\n    }\n    /**\n     * Whether this program is strictly nested in the other program, with margin to spare.\n     */\n    isNestedIn(candidate, marginFrames) {\n        // Full nested, but also with margin on at least one side.\n        return this.startFrame > candidate.startFrame &&\n            this.endFrame < candidate.endFrame &&\n            (this.startFrame > candidate.startFrame + marginFrames ||\n                this.endFrame < candidate.endFrame - marginFrames);\n    }\n    /**\n     * Return the number of bit errors we've found. This is not super cheap, cache if you need it a lot.\n     */\n    countBitErrors() {\n        let count = 0;\n        for (const bitData of this.bitData) {\n            if (bitData.bitType === BitType.BAD) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n}\n","/**\n * Annotation to draw a point.\n */\nexport class PointAnnotation {\n    constructor(frame, value, solid) {\n        this.frame = frame;\n        this.value = value;\n        this.solid = solid;\n    }\n    draw(ctx) {\n        const x = ctx.frameToX(this.frame);\n        const y = ctx.valueToY(this.value);\n        if (this.solid) {\n            ctx.context.fillStyle = ctx.highlightColor;\n        }\n        else {\n            ctx.context.strokeStyle = ctx.highlightColor;\n            ctx.context.lineWidth = 1;\n        }\n        ctx.context.beginPath();\n        ctx.context.arc(x, y, 3, 0, 2 * Math.PI);\n        if (this.solid) {\n            ctx.context.fill();\n        }\n        else {\n            ctx.context.stroke();\n        }\n    }\n}\n/**\n * Annotation to draw a horizontal line.\n */\nexport class HorizontalLineAnnotation {\n    constructor(value, x1, x2) {\n        this.value = value;\n        this.x1 = x1;\n        this.x2 = x2;\n    }\n    draw(ctx) {\n        const y = ctx.valueToY(this.value);\n        ctx.context.strokeStyle = ctx.highlightColor;\n        ctx.context.beginPath();\n        ctx.context.moveTo(ctx.frameToX(this.x1), y);\n        ctx.context.lineTo(ctx.frameToX(this.x2), y);\n        ctx.context.stroke();\n    }\n}\n/**\n * Annotation to draw a vertical line.\n */\nexport class VerticalLineAnnotation {\n    constructor(frame) {\n        this.frame = frame;\n    }\n    draw(ctx) {\n        const x = ctx.frameToX(this.frame);\n        ctx.context.strokeStyle = ctx.highlightColor;\n        ctx.context.beginPath();\n        ctx.context.moveTo(x, 0);\n        ctx.context.lineTo(x, ctx.height);\n        ctx.context.stroke();\n    }\n}\n/**\n * Label with braces.\n */\nexport class LabelAnnotation {\n    constructor(label, left, right, onTop) {\n        this.label = label;\n        this.left = Math.min(left, right);\n        this.right = Math.max(left, right);\n        this.onTop = onTop;\n    }\n    draw(ctx) {\n        const x1 = ctx.frameToX(this.left);\n        const x2 = ctx.frameToX(this.right);\n        drawBraceAndLabel(ctx.context, ctx.height, x1, x2, ctx.secondaryForegroundColor, this.label, ctx.foregroundColor, this.onTop);\n    }\n}\n/**\n * Draw a brace with specified label.\n */\nexport function drawBraceAndLabel(ctx, height, left, right, braceColor, label, labelColor, drawOnTop) {\n    const middle = (left + right) / 2;\n    const leading = 16;\n    // Don't have more than two lines, there's no space for it.\n    const lines = label.split(\"\\n\");\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // Don't use a custom font here, they load asynchronously and we're not told when they\n        // finish loading, so we can't redraw and the initial draw uses some default serif font.\n        ctx.font = '10pt monospace';\n        ctx.fillStyle = labelColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"alphabetic\";\n        const y = drawOnTop ? 38 - (lines.length - i - 1) * leading : height - 35 + i * leading;\n        ctx.fillText(line, middle, y);\n    }\n    ctx.strokeStyle = braceColor;\n    ctx.lineWidth = 1;\n    drawBrace(ctx, left, middle, right, 40, height - 40, drawOnTop);\n}\n/**\n * Draw a horizontal brace.\n */\nexport function drawBrace(ctx, left, middle, right, top, bottom, drawOnTop) {\n    const radius = Math.min(10, (right - left) / 4);\n    const lineY = drawOnTop ? top + 20 : bottom - 20;\n    const pointY = drawOnTop ? top : bottom;\n    const otherY = drawOnTop ? bottom - 40 : top + 40;\n    ctx.beginPath();\n    ctx.moveTo(left, otherY);\n    if (left === right || radius <= 0) {\n        ctx.lineTo(left, lineY);\n    }\n    else {\n        ctx.arcTo(left, lineY, left + radius, lineY, radius);\n        ctx.arcTo(middle, lineY, middle, pointY, radius);\n        ctx.arcTo(middle, lineY, middle + radius, lineY, radius);\n        ctx.arcTo(right, lineY, right, lineY + (drawOnTop ? radius : -radius), radius);\n        ctx.lineTo(right, otherY);\n    }\n    ctx.stroke();\n}\n","import { BitData } from \"./BitData\";\nimport { BitType } from \"./BitType\";\nimport { TapeDecoderState } from \"./TapeDecoderState\";\nimport { ByteData } from \"./ByteData\";\nimport { Program } from \"./Program\";\nimport { LabelAnnotation } from \"./Annotations\";\nimport { DEFAULT_SAMPLE_RATE } from \"./WavFile\";\n// What distance away from 0 counts as \"positive\" (or, when negative, \"negative\").\nconst THRESHOLD = 500;\n/**\n * Decodes high-speed (1500 baud) cassettes.\n */\nexport class HighSpeedTapeDecoder {\n    constructor(tape) {\n        this.state = TapeDecoderState.UNDECIDED;\n        this.programBytes = [];\n        this.bits = [];\n        this.byteData = [];\n        this.tape = tape;\n        // Our \"number of samples\" comparisons assume DEFAULT_SAMPLE_RATE, so adjust for that.\n        this.lengthMultiplier = tape.sampleRate / DEFAULT_SAMPLE_RATE;\n    }\n    getName() {\n        return \"1500 baud\";\n    }\n    isHighSpeed() {\n        return true;\n    }\n    findNextProgram(startFrame, waveformAnnotations) {\n        const samples = this.tape.filteredSamples.samplesList[0];\n        let programStartFrame = undefined;\n        let bitCount = 0;\n        let recentBits = 0;\n        while (this.state !== TapeDecoderState.FINISHED) {\n            const bitInfo = this.findBit(samples, startFrame);\n            if (bitInfo === undefined) {\n                // Ran off the end of the cassette.\n                this.state = TapeDecoderState.FINISHED;\n            }\n            else {\n                const [crossing, bit] = bitInfo;\n                if (bit === undefined) {\n                    // Bad bit. If we've not started decoding yet, then it's noise we ignore. Otherwise it indicates\n                    // the end of the recording.\n                    if (this.state === TapeDecoderState.DETECTED) {\n                        this.state = TapeDecoderState.FINISHED;\n                    }\n                }\n                else {\n                    // Bits are MSb to LSb.\n                    recentBits = (recentBits << 1) | (bit ? 1 : 0);\n                    bitCount += 1;\n                    let bitType;\n                    if (bitCount === 1 && this.state === TapeDecoderState.DETECTED) {\n                        // Just got a start bit. Must be zero.\n                        bitType = bit ? BitType.BAD : BitType.START;\n                    }\n                    else {\n                        bitType = bit ? BitType.ONE : BitType.ZERO;\n                    }\n                    this.bits.push(new BitData(startFrame, crossing, bitType));\n                    // If we're in the program, add the bit to our stream.\n                    if (this.state === TapeDecoderState.DETECTED) {\n                        // Got enough bits for a byte (including the start bit).\n                        if (bitCount === 9) {\n                            let byteValue = recentBits & 0xFF;\n                            this.programBytes.push(byteValue);\n                            this.byteData.push(new ByteData(byteValue, this.bits[this.bits.length - 8].startFrame, this.bits[this.bits.length - 1].endFrame));\n                            bitCount = 0;\n                        }\n                    }\n                    else {\n                        // Detect end of header.\n                        if ((recentBits & 0xFFFFFFFF) === 0x5555557F) {\n                            this.state = TapeDecoderState.DETECTED;\n                            bitCount = 0;\n                            recentBits = 0;\n                            programStartFrame = startFrame;\n                            waveformAnnotations.push(new LabelAnnotation(\"Sync\", this.bits[this.bits.length - 8].startFrame, this.bits[this.bits.length - 1].endFrame, false));\n                        }\n                    }\n                }\n                startFrame = crossing;\n            }\n        }\n        if (programStartFrame === undefined) {\n            return undefined;\n        }\n        return new Program(0, 0, programStartFrame, startFrame, this, 1500, this.getBinary(), this.getBitData(), this.getByteData());\n    }\n    /**\n     * Find the next bit, starting at the positive crossing of the end of the previous bit. Returns\n     * the positive crossing at the end of this bit, and the value of the bit. The bit is undefined\n     * if the length was too short or too long. Returns undefined if we ran off the end of the tape.\n     */\n    findBit(samples, startFrame) {\n        const crossing = this.findPositiveCrossing(samples, startFrame);\n        if (crossing === undefined) {\n            // Ran off the end of the cassette.\n            return undefined;\n        }\n        const cycleSize = crossing - startFrame;\n        if (cycleSize > 7 * this.lengthMultiplier && cycleSize < 100 * this.lengthMultiplier) {\n            // Long cycle is \"0\", short cycle is \"1\".\n            const bit = cycleSize < 22 * this.lengthMultiplier;\n            return [crossing, bit];\n        }\n        else {\n            return [crossing, undefined];\n        }\n    }\n    /**\n     * Find the next positive crossing, starting at startFrame. If none is found, returns undefined.\n     */\n    findPositiveCrossing(samples, startFrame) {\n        let oldSign = 0;\n        for (let frame = startFrame; frame < samples.length; frame++) {\n            const sample = samples[frame];\n            const newSign = sample > THRESHOLD ? 1 : sample < -THRESHOLD ? -1 : 0;\n            if (oldSign === -1 && newSign === 1) {\n                // Positive edge.\n                return frame;\n            }\n            if (newSign !== 0) {\n                oldSign = newSign;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Read a sequence of bits (the characters \"0\" and \"1\"). This is for testing.\n     */\n    readBits(frame) {\n        const samples = this.tape.filteredSamples.samplesList[0];\n        let bits = \"\";\n        const waveformAnnotation = [];\n        const explanations = [];\n        let firstBit = true;\n        while (true) {\n            const bitInfo = this.findBit(samples, frame);\n            if (bitInfo === undefined) {\n                // Ran off the end of the cassette.\n                break;\n            }\n            else {\n                const [crossing, bit] = bitInfo;\n                if (bit === undefined) {\n                    waveformAnnotation.push(new LabelAnnotation(\"Bad\", frame, crossing, true));\n                    if (bits.length !== 0) {\n                        break;\n                    }\n                }\n                else {\n                    if (firstBit) {\n                        waveformAnnotation.push(new LabelAnnotation(\"Ign\", frame, crossing, true));\n                        firstBit = false;\n                    }\n                    else {\n                        const bitChar = bit ? \"1\" : \"0\";\n                        waveformAnnotation.push(new LabelAnnotation(bitChar, frame, crossing, true));\n                        bits += bitChar;\n                    }\n                }\n                frame = crossing;\n            }\n        }\n        return [bits, waveformAnnotation, explanations];\n    }\n    getState() {\n        return this.state;\n    }\n    getBinary() {\n        const bytes = new Uint8Array(this.programBytes.length);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = this.programBytes[i];\n        }\n        return bytes;\n    }\n    getBitData() {\n        return this.bits;\n    }\n    getByteData() {\n        return this.byteData;\n    }\n}\n","import { TapeDecoderState } from \"./TapeDecoderState\";\nimport { BitData } from \"./BitData\";\nimport { ByteData } from \"./ByteData\";\nimport { Program } from \"./Program\";\nimport { BitType } from \"./BitType\";\nimport { HorizontalLineAnnotation, LabelAnnotation, PointAnnotation, VerticalLineAnnotation } from \"./Annotations\";\nimport { withCommas } from \"./Utils\";\nimport { clampToInt16, highPassFilter } from \"./AudioUtils\";\nconst SYNC_BYTE = 0xA5;\n// When not finding a pulse, what kind of audio we found.\nexport var PulseResultType;\n(function (PulseResultType) {\n    // Pulse found.\n    PulseResultType[PulseResultType[\"PULSE\"] = 0] = \"PULSE\";\n    // No pulse found but there was audio there. Could be a mis-read.\n    PulseResultType[PulseResultType[\"NOISE\"] = 1] = \"NOISE\";\n    // Mostly just silence.\n    PulseResultType[PulseResultType[\"SILENCE\"] = 2] = \"SILENCE\";\n})(PulseResultType || (PulseResultType = {}));\n// Result of a pulse detection.\nexport class Pulse {\n    constructor(resultType, value, frame, range, explanation) {\n        this.waveformAnnotations = [];\n        this.resultType = resultType;\n        this.value = value;\n        this.frame = frame;\n        this.range = range;\n        this.explanation = explanation;\n    }\n}\n/**\n * Low-speed (250, 500, and 1000 baud) decoder.\n *\n * Originally based on: https://github.com/anteo/wav2cas\n */\nexport class LowSpeedTapeDecoder {\n    constructor(tape, baud) {\n        this.state = TapeDecoderState.UNDECIDED;\n        this.peakThreshold = LowSpeedTapeDecoder.DEFAULT_THRESHOLD;\n        const samples = tape.lowSpeedSamples.samplesList[0];\n        if (true) {\n            this.samples = samples;\n        }\n        else {\n            // Invert samples.\n            this.samples = new Int16Array(samples.length);\n            for (let i = 0; i < samples.length; i++) {\n                this.samples[i] = -samples[i];\n            }\n        }\n        this.baud = baud;\n        this.period = Math.round(tape.sampleRate / baud);\n        this.halfPeriod = Math.round(this.period / 2);\n        this.quarterPeriod = Math.round(this.period / 4);\n        this.clockPulseSearchRadius = Math.round(this.period * 0.3);\n        // Be more strict about data pulse, there should be less variance there and we don't want to risk\n        // accidentally reading the next clock pulse.\n        this.dataPulseSearchRadius = Math.round(this.period * 0.15);\n    }\n    /**\n     * Differentiating filter to accentuate pulses.\n     *\n     * @param samples samples to filter.\n     * @param sampleRate number of samples per second in the recording.\n     * @returns filtered samples.\n     */\n    static filterSamples(samples, sampleRate) {\n        const out = new Int16Array(samples.length);\n        // Number of samples between the top of the pulse and the bottom of it. Each pulse\n        // lasts 125µs, so assume the distance between crest and trough is 125µs.\n        const pulseWidth = Math.round(125e-6 * sampleRate);\n        // Convolution with a pulse similar to what the original should have looked like (125 µs pulse\n        let posSum = 0;\n        let negSum = 0;\n        let denom = pulseWidth * 2;\n        for (let i = 0; i < samples.length; i++) {\n            let aheadSample = i + pulseWidth >= samples.length ? 0 : samples[i + pulseWidth];\n            let nowSample = samples[i];\n            let behindSample = i - pulseWidth < 0 ? 0 : samples[i - pulseWidth];\n            posSum += nowSample - behindSample;\n            negSum += aheadSample - nowSample;\n            out[i] = clampToInt16((posSum - negSum) / denom);\n        }\n        // TODO do we still need this filter before this function?\n        // TOOD replace with better filter in branch.\n        return highPassFilter(out, 500);\n    }\n    findNextProgram(frame, waveformAnnotations) {\n        while (true) {\n            const pulse = this.findPulse(frame, this.peakThreshold);\n            if (pulse === undefined) {\n                // Ran off the end of the tape.\n                return undefined;\n            }\n            frame = pulse.frame;\n            const success = this.proofPulseDistance(frame, waveformAnnotations);\n            if (success) {\n                const program = this.loadData(frame, waveformAnnotations);\n                if (program.binary.length > 0) {\n                    return program;\n                }\n            }\n            // Jump forward 1/10 second.\n            frame += this.period * 50;\n        }\n    }\n    /**\n     * Verifies that we have pulses every period starting at frame.\n     */\n    proofPulseDistance(frame, waveformAnnotations) {\n        const startFrame = frame;\n        let lastPulseFrame = frame;\n        for (let i = 0; i < 200; i++) {\n            // We expect a pulse every period.\n            const expectedPulse = this.isPulseAt(frame, this.peakThreshold, false, false);\n            if (expectedPulse.resultType !== PulseResultType.PULSE) {\n                // This creates a lot of noise. If we really find it useful, maybe suppress it from the middle\n                // of successfully-decoded programs.\n                // waveformAnnotations.push(new LabelAnnotation(\"Missing pulse\", startFrame, frame, false));\n                return false;\n            }\n            lastPulseFrame = expectedPulse.frame;\n            // And no pulse in between, which would indicate a \"1\" bit.\n            const expectedNoPulse = this.isPulseAt(frame + this.halfPeriod, expectedPulse.range / 2, true, true);\n            if (expectedNoPulse.resultType === PulseResultType.PULSE) {\n                // This creates a lot of noise. If we really find it useful, maybe suppress it from the middle\n                // of successfully-decoded programs.\n                // waveformAnnotations.push(new LabelAnnotation(\"Extra pulse\", startFrame, expectedNoPulse.frame, false));\n                return false;\n            }\n            frame = expectedPulse.frame + this.period;\n            this.peakThreshold = Math.round(expectedPulse.range / 4);\n        }\n        waveformAnnotations.push(new LabelAnnotation(\"Proof\", startFrame, lastPulseFrame, false));\n        return true;\n    }\n    /**\n     * Load the program starting at the start frame.\n     */\n    loadData(startFrame, waveformAnnotations) {\n        // We want a sequence of 0 bit followed by the sync byte, so initialize our recent bits to\n        // all ones so that if we happen to land at the beginning of a sync byte (preceded by\n        // non-zeros) we don't wrongly detect it. Force all these 1s to get flushed out by\n        // real zeros.\n        let recentBits = 0xFFFFFFFF;\n        let frame = startFrame;\n        let foundSyncByte = false;\n        let bitCount = 0;\n        const bitData = [];\n        const byteData = [];\n        const binary = [];\n        while (true) {\n            const [bit, clockPulse, dataPulse] = this.readBit(frame);\n            if (clockPulse.resultType === PulseResultType.SILENCE) {\n                // End of program.\n                waveformAnnotations.push(new LabelAnnotation(\"Silence\", frame, frame, false));\n                break;\n            }\n            let nextFrame;\n            let bitType;\n            if (clockPulse.resultType === PulseResultType.NOISE) {\n                nextFrame = frame + this.period;\n                bitType = BitType.BAD;\n            }\n            else {\n                nextFrame = clockPulse.frame;\n                bitType = bit ? BitType.ONE : BitType.ZERO;\n            }\n            bitData.push(new BitData(nextFrame - this.quarterPeriod, nextFrame + this.period - this.quarterPeriod, bitType));\n            recentBits = (recentBits << 1) | (bit ? 1 : 0);\n            if (foundSyncByte) {\n                bitCount += 1;\n                if (bitCount === 8) {\n                    const byteValue = recentBits & 0xFF;\n                    binary.push(byteValue);\n                    byteData.push(new ByteData(byteValue, bitData[bitData.length - 8].startFrame, bitData[bitData.length - 1].endFrame));\n                    bitCount = 0;\n                }\n            }\n            else {\n                if (recentBits === SYNC_BYTE) {\n                    waveformAnnotations.push(new LabelAnnotation(\"Sync\", bitData[bitData.length - 8].startFrame, bitData[bitData.length - 1].endFrame, false));\n                    foundSyncByte = true;\n                    bitCount = 0;\n                }\n            }\n            frame = nextFrame;\n            this.peakThreshold = Math.round(clockPulse.range / 4);\n        }\n        // Remove trailing BAD bits, they're probably just junk after the last bit.\n        while (bitData.length > 0 && bitData[bitData.length - 1].bitType === BitType.BAD) {\n            bitData.splice(bitData.length - 1, 1);\n        }\n        return new Program(0, 0, startFrame, frame, this, this.baud, new Uint8Array(binary), bitData, byteData);\n    }\n    /**\n     * Read a bit at position \"frame\", which should be the position of the previous bit's clock pulse.\n     * @return the value of the bit, the clock pulse, and the data pulse.\n     */\n    readBit(frame, includeExplanation = false) {\n        // Clock pulse is one period away.\n        let clockPulse = this.isPulseAt(frame + this.period, this.peakThreshold, false, includeExplanation);\n        if (clockPulse.resultType !== PulseResultType.PULSE) {\n            const latePulse = this.findNextClosePulse(frame + this.period, this.peakThreshold, this.samples[frame] > 0, includeExplanation);\n            if (latePulse === undefined) {\n                // Failed to find late pulse.\n                return [false, clockPulse, clockPulse];\n            }\n            clockPulse = latePulse;\n        }\n        // Data pulse is half a period after the clock pulse.\n        const dataPulse = this.isPulseAt(clockPulse.frame + this.halfPeriod, this.peakThreshold, true, includeExplanation);\n        const bit = dataPulse.resultType === PulseResultType.PULSE;\n        return [bit, clockPulse, dataPulse];\n    }\n    /**\n     * Read a sequence of bits (the characters \"0\" and \"1\"). Frame is the position of the previous clock bit.\n     * This is for testing.\n     */\n    readBits(frame) {\n        let bits = \"\";\n        const waveformAnnotation = [];\n        const explanations = [];\n        waveformAnnotation.push(new LabelAnnotation(\"Previous\", frame, frame, true));\n        while (true) {\n            const expectedNextFrame = frame + this.period;\n            const [bit, clockPulse, dataPulse] = this.readBit(frame, true);\n            if (clockPulse.resultType === PulseResultType.NOISE || clockPulse.resultType === PulseResultType.SILENCE) {\n                const left = expectedNextFrame - this.quarterPeriod;\n                const right = expectedNextFrame + this.period - this.quarterPeriod;\n                waveformAnnotation.push(new LabelAnnotation(clockPulse.resultType === PulseResultType.NOISE ? \"Noise\" : \"Silence\", left, right, true));\n                if (clockPulse.explanation !== \"\") {\n                    explanations.push(clockPulse.explanation);\n                }\n                waveformAnnotation.push(...clockPulse.waveformAnnotations);\n                break;\n            }\n            const bitChar = bit ? \"1\" : \"0\";\n            bits += bitChar;\n            if (clockPulse.explanation !== \"\") {\n                explanations.push(clockPulse.explanation);\n            }\n            if (dataPulse.explanation !== \"\") {\n                explanations.push(dataPulse.explanation);\n            }\n            waveformAnnotation.push(...clockPulse.waveformAnnotations);\n            waveformAnnotation.push(...dataPulse.waveformAnnotations);\n            const nextFrame = clockPulse.frame;\n            const left = nextFrame - this.quarterPeriod;\n            const right = nextFrame + this.period - this.quarterPeriod;\n            waveformAnnotation.push(new LabelAnnotation(bitChar, left, right, true));\n            frame = nextFrame;\n            this.peakThreshold = Math.round(clockPulse.range / 4);\n        }\n        return [bits, waveformAnnotation, explanations];\n    }\n    /**\n     * Look for a pulse in the samples, starting at frame. The pulse may not be the very next one; this\n     * is a fast algorithm to find the pulses in the header.\n     *\n     * @return a pulse if one was found. If one was not found, then the frame ran off the end of the audio.\n     */\n    findPulse(frame, threshold) {\n        while (frame < this.samples.length) {\n            let maxAbsValue = 0;\n            let maxPulse = undefined;\n            for (let i = 0; i < this.period * 2; i += this.clockPulseSearchRadius) {\n                const pulse = this.isPulseAt(frame + i, LowSpeedTapeDecoder.DEFAULT_THRESHOLD, false, false);\n                if (pulse.resultType === PulseResultType.PULSE) {\n                    const absValue = Math.abs(pulse.value);\n                    if (absValue > maxAbsValue) {\n                        maxAbsValue = absValue;\n                        maxPulse = pulse;\n                    }\n                }\n            }\n            if (maxPulse !== undefined) {\n                return maxPulse;\n            }\n            frame += this.period * 50;\n        }\n        return undefined;\n    }\n    /**\n     * Find the very next pulse of the specified polarity. The pulse must be in the next six periods.\n     */\n    findNextClosePulse(frame, threshold, positive, includeExplanation) {\n        for (let i = 0; i < this.period * 6; i += this.clockPulseSearchRadius) {\n            const pulse = this.isPulseAt(frame + i, threshold, false, includeExplanation);\n            if (pulse.resultType === PulseResultType.PULSE && (positive ? (pulse.value > 0) : (pulse.value < 0))) {\n                return pulse;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Look for a pulse around frame.\n     */\n    isPulseAt(frame, peakThreshold, isDataPulse, includeExplanation) {\n        const searchRadius = isDataPulse ? this.dataPulseSearchRadius : this.clockPulseSearchRadius;\n        const searchStart = Math.max(frame - searchRadius, 0);\n        const searchEnd = Math.min(frame + searchRadius, this.samples.length - 1);\n        // Find min and max around frame.\n        let minFrame = searchStart;\n        let maxFrame = searchStart;\n        let minValue = this.samples[minFrame];\n        let maxValue = this.samples[maxFrame];\n        for (let frame = searchStart; frame <= searchEnd; frame++) {\n            const value = this.samples[frame];\n            if (value < minValue) {\n                minValue = value;\n                minFrame = frame;\n            }\n            if (value > maxValue) {\n                maxValue = value;\n                maxFrame = frame;\n            }\n        }\n        const range = maxValue - minValue;\n        let pulseEndOffset = peakThreshold / 4;\n        const posPulseEndThreshold = maxValue - pulseEndOffset;\n        const negPulseEndThreshold = minValue + pulseEndOffset;\n        const annotations = [];\n        if (range > peakThreshold) {\n            if (includeExplanation) {\n                annotations.push(new PointAnnotation(searchStart, this.samples[searchStart], false));\n                annotations.push(new PointAnnotation(searchEnd, this.samples[searchEnd], false));\n                annotations.push(new HorizontalLineAnnotation(posPulseEndThreshold, searchStart, searchEnd));\n                annotations.push(new HorizontalLineAnnotation(negPulseEndThreshold, searchStart, searchEnd));\n            }\n            let foundPosPulse = this.samples[searchStart] < posPulseEndThreshold &&\n                this.samples[searchEnd] < posPulseEndThreshold;\n            let foundNegPulse = this.samples[searchStart] > negPulseEndThreshold &&\n                this.samples[searchEnd] > negPulseEndThreshold;\n            // If we found both, prefer the one that has the highest peak.\n            if (foundPosPulse && foundNegPulse) {\n                if (maxValue > -minValue) {\n                    foundNegPulse = false;\n                }\n                else {\n                    foundPosPulse = false;\n                }\n            }\n            if (foundPosPulse) {\n                const explanation = includeExplanation ?\n                    \"Looked for pulse at \" + withCommas(frame) + \" and found it at \" + withCommas(maxFrame) +\n                        \", which is within the search radius of \" + withCommas(searchRadius) + \". \" +\n                        \"Range \" + withCommas(range) + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                        \", start \" + withCommas(this.samples[searchStart]) + \" < \" + withCommas(posPulseEndThreshold) +\n                        \", and end \" + withCommas(this.samples[searchEnd]) + \" < \" + withCommas(posPulseEndThreshold) + \".\" : \"\";\n                let pulse = new Pulse(PulseResultType.PULSE, maxValue, maxFrame, range, explanation);\n                if (includeExplanation) {\n                    pulse.waveformAnnotations.push(new PointAnnotation(pulse.frame, pulse.value, true));\n                    pulse.waveformAnnotations.push(new VerticalLineAnnotation(frame));\n                    pulse.waveformAnnotations.push(...annotations);\n                }\n                return pulse;\n            }\n            if (foundNegPulse) {\n                const explanation = includeExplanation ?\n                    \"Looked for pulse at \" + withCommas(frame) + \" and found it at \" + withCommas(minFrame) +\n                        \", which is within the search radius of \" + withCommas(searchRadius) + \". \" +\n                        \"Range \" + withCommas(range) + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                        \", start \" + withCommas(this.samples[searchStart]) + \" > \" + withCommas(negPulseEndThreshold) +\n                        \", and end \" + withCommas(this.samples[searchEnd]) + \" > \" + withCommas(negPulseEndThreshold) + \".\" : \"\";\n                const pulse = new Pulse(PulseResultType.PULSE, minValue, minFrame, range, explanation);\n                if (includeExplanation) {\n                    pulse.waveformAnnotations.push(new PointAnnotation(pulse.frame, pulse.value, true));\n                    pulse.waveformAnnotations.push(new VerticalLineAnnotation(frame));\n                    pulse.waveformAnnotations.push(...annotations);\n                }\n                return pulse;\n            }\n            const explanation = includeExplanation ? \"Range \" + range + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                \" but the sides don't pull away enough.\" : \"\";\n            const pulse = new Pulse(PulseResultType.NOISE, 0, 0, 0, explanation);\n            pulse.waveformAnnotations.push(...annotations);\n            return pulse;\n        }\n        const noiseThreshold = peakThreshold / 2;\n        if (range > noiseThreshold) {\n            const explanation = includeExplanation ? \"Range \" + range + \" is less than pulse threshold \" + withCommas(peakThreshold) +\n                \" but greater than noise threshold \" + noiseThreshold + \".\" : \"\";\n            const pulse = new Pulse(PulseResultType.NOISE, 0, 0, 0, explanation);\n            pulse.waveformAnnotations.push(...annotations);\n            return pulse;\n        }\n        const explanation = includeExplanation ? \"Range \" + range + \" is less than or equal to noise threshold \" + noiseThreshold + \".\" : \"\";\n        let pulse = new Pulse(PulseResultType.SILENCE, 0, 0, 0, explanation);\n        pulse.waveformAnnotations.push(...annotations);\n        return pulse;\n    }\n    getBinary() {\n        return new Uint8Array(0);\n    }\n    getBitData() {\n        return [];\n    }\n    getByteData() {\n        return [];\n    }\n    getName() {\n        return `${this.baud} baud`;\n    }\n    isHighSpeed() {\n        return false;\n    }\n    getState() {\n        return this.state;\n    }\n}\nLowSpeedTapeDecoder.DEFAULT_THRESHOLD = 3000;\n","// Uses tape decoders to work through the tape, finding programs and decoding them.\nimport { HighSpeedTapeDecoder } from \"./HighSpeedTapeDecoder\";\nimport { encodeHighSpeed, wrapHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { LowSpeedTapeDecoder } from \"./LowSpeedTapeDecoder\";\nimport { encodeLowSpeed, wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nclass Transition {\n    constructor(candidate, isStart, frame) {\n        this.candidate = candidate;\n        this.isStart = isStart;\n        this.frame = frame;\n    }\n}\n/**\n * Uses various decoders to decode an audio file.\n */\nexport class Decoder {\n    constructor(tape) {\n        this.tape = tape;\n    }\n    /**\n     * Decode the tape, populating the tape's \"programs\" array.\n     */\n    decode() {\n        // All decoders we're interested in. We use factories because they're created\n        // multiple times, once for each program found.\n        let tapeDecoderFactories = [\n            () => new LowSpeedTapeDecoder(this.tape, 250),\n            () => new LowSpeedTapeDecoder(this.tape, 500),\n            () => new LowSpeedTapeDecoder(this.tape, 1000),\n            () => new HighSpeedTapeDecoder(this.tape),\n        ];\n        // All programs we detect.\n        const candidates = [];\n        // Clear all annotations.\n        this.tape.waveformAnnotations.splice(0, this.tape.waveformAnnotations.length);\n        // Try each decoder, feeding it the whole tape.\n        for (const tapeDecoderFactory of tapeDecoderFactories) {\n            let startFrame = 0;\n            while (true) {\n                const tapeDecoder = tapeDecoderFactory();\n                const program = tapeDecoder.findNextProgram(startFrame, this.tape.waveformAnnotations);\n                if (program === undefined) {\n                    break;\n                }\n                candidates.push(program);\n                startFrame = Math.round(program.endFrame + this.tape.sampleRate * 0.01);\n            }\n        }\n        // Make a sorted list of start/end of candidates.\n        const transitions = [];\n        for (const candidate of candidates) {\n            transitions.push(new Transition(candidate, true, candidate.startFrame));\n            transitions.push(new Transition(candidate, false, candidate.endFrame));\n        }\n        transitions.sort((a, b) => a.frame - b.frame);\n        // Go through them, keeping track of which candidates are active, and deleting\n        // clearly bad candidates (those completely nested in others).\n        candidates.splice(0, candidates.length);\n        const activeCandidates = [];\n        for (const transition of transitions) {\n            // See if this new one is nested in an active one.\n            if (transition.isStart) {\n                let keepCandidate = true;\n                for (const candidate of activeCandidates) {\n                    if (transition.candidate.isNestedIn(candidate, this.tape.sampleRate * 0.1)) {\n                        keepCandidate = false;\n                        break;\n                    }\n                }\n                if (keepCandidate) {\n                    activeCandidates.push(transition.candidate);\n                    candidates.push(transition.candidate);\n                }\n            }\n            else {\n                const index = activeCandidates.indexOf(transition.candidate);\n                if (index !== -1) {\n                    activeCandidates.splice(index, 1);\n                }\n            }\n        }\n        // Sort programs by tape order.\n        candidates.sort((a, b) => a.startFrame - b.startFrame);\n        // Convert remaining candidates to programs.\n        let trackNumber = 0;\n        let copyNumber = 0;\n        let endOfLastProgram = 0;\n        for (const candidate of candidates) {\n            // Skip very short programs, they're mis-detects.\n            if (candidate.endFrame - candidate.startFrame > this.tape.sampleRate / 10) {\n                // See how long it took to find it. A large gap means a new track.\n                const leadTime = (candidate.startFrame - endOfLastProgram) / this.tape.sampleRate;\n                if (trackNumber === 0 || leadTime > 5) {\n                    trackNumber++;\n                    copyNumber = 1;\n                }\n                else {\n                    copyNumber += 1;\n                }\n                candidate.trackNumber = trackNumber;\n                candidate.copyNumber = copyNumber;\n                candidate.setReconstructedSamples(this.reencode(candidate.binary));\n                this.tape.addProgram(candidate);\n                endOfLastProgram = candidate.endFrame;\n            }\n        }\n    }\n    /**\n     * Re-encodes a binary as a clean low-speed audio.\n     */\n    reencode(binary) {\n        // Here we could re-encode in either low speed or high speed. Do low speed so that\n        // the audio is usable on a Model I.\n        if (true) {\n            return encodeLowSpeed(wrapLowSpeed(binary), this.tape.sampleRate);\n        }\n        else {\n            // Low-speed programs end in two 0x00, but high-speed programs\n            // end in three 0x00. Add the additional 0x00 since we're\n            // saving high-speed.\n            // Note: I think that's true of Basic programs, but maybe not of other programs.\n            let highSpeedBytes;\n            if (binary.length >= 3 &&\n                binary[binary.length - 1] === 0x00 &&\n                binary[binary.length - 2] === 0x00 &&\n                binary[binary.length - 3] !== 0x00) {\n                highSpeedBytes = new Uint8Array(binary.length + 1);\n                highSpeedBytes.set(binary);\n                highSpeedBytes[highSpeedBytes.length - 1] = 0x00;\n            }\n            else {\n                highSpeedBytes = binary;\n            }\n            return encodeHighSpeed(wrapHighSpeed(highSpeedBytes), this.tape.sampleRate);\n        }\n    }\n}\n","// Represents a recorded tape, with its audio samples,\n// filtered-down samples for display, and other information\n// we got from it.\nimport { concatAudio, highPassFilter } from \"./AudioUtils\";\nimport { DisplaySamples } from \"./DisplaySamples\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { LowSpeedTapeDecoder } from \"./LowSpeedTapeDecoder\";\nimport { concatByteArrays } from \"./Utils\";\nimport { DEFAULT_SAMPLE_RATE, writeWavFile } from \"./WavFile\";\nconst LOCAL_DATA_KEY = \"tapes\";\nexport class Tape {\n    /**\n     * @param name text to display (e.g., \"LOAD80-Feb82-s1\").\n     * @param audioFile original samples from the tape.\n     */\n    constructor(name, audioFile) {\n        this.notes = \"\";\n        this.waveformAnnotations = [];\n        this.onName = new SimpleEventDispatcher();\n        this.onNotes = new SimpleEventDispatcher();\n        this.name = name;\n        this.originalSamples = new DisplaySamples(audioFile.samples);\n        this.filteredSamples = new DisplaySamples(highPassFilter(audioFile.samples, 500));\n        this.lowSpeedSamples = new DisplaySamples(LowSpeedTapeDecoder.filterSamples(this.filteredSamples.samplesList[0], audioFile.rate));\n        this.sampleRate = audioFile.rate;\n        this.programs = [];\n    }\n    addProgram(program) {\n        this.programs.push(program);\n    }\n    /**\n     * Set the name of the tape, as set by the user.\n     */\n    setName(name) {\n        if (name !== this.name) {\n            this.name = name;\n            this.onName.dispatch(name);\n        }\n    }\n    /**\n     * Set the notes for the tape, as set by the user.\n     */\n    setNotes(notes) {\n        if (notes !== this.notes) {\n            this.notes = notes;\n            this.onNotes.dispatch(notes);\n        }\n    }\n    /**\n     * Return a .cas file version of the tape.\n     */\n    asCasFile() {\n        return concatByteArrays(this.programs.map(program => program.asCasFile()));\n    }\n    /**\n     * Return a .wav file version of the tape.\n     */\n    asWavFile() {\n        const audioParts = [];\n        for (const program of this.programs) {\n            // One second of silence before each program.\n            audioParts.push(new Int16Array(DEFAULT_SAMPLE_RATE));\n            // The program itself.\n            audioParts.push(program.asAudio());\n            // One second of silence after each program.\n            audioParts.push(new Int16Array(DEFAULT_SAMPLE_RATE));\n        }\n        return writeWavFile(concatAudio(audioParts), DEFAULT_SAMPLE_RATE);\n    }\n    /**\n     * Listen for changes to local storage and apply them.\n     */\n    listenForStorageChanges() {\n        window.addEventListener(\"storage\", event => {\n            if (event.key === LOCAL_DATA_KEY) {\n                this.loadUserData();\n            }\n        });\n    }\n    /**\n     * Load the saved user data and apply to existing programs.\n     */\n    loadUserData() {\n        var _a, _b, _c;\n        const data = Tape.loadAllData();\n        for (const tapeData of data.tapes) {\n            if (tapeData.name === this.name) {\n                this.notes = tapeData.notes;\n                for (const programData of tapeData.programs) {\n                    for (const program of this.programs) {\n                        if (program.isForTimestamp(programData.timestamp, this.sampleRate)) {\n                            program.setName((_a = programData.name) !== null && _a !== void 0 ? _a : \"\");\n                            program.setNotes((_b = programData.notes) !== null && _b !== void 0 ? _b : \"\");\n                            program.setScreenshot((_c = programData.screenshot) !== null && _c !== void 0 ? _c : \"\");\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Synchronously saves all user data (names and notes) to local storage.\n     */\n    saveUserData() {\n        const data = {\n            tapes: [\n                {\n                    name: this.name,\n                    notes: this.notes,\n                    programs: this.programs.map(program => ({\n                        name: program.name,\n                        notes: program.notes,\n                        screenshot: program.screenshot,\n                        timestamp: program.getTimestamp(this.sampleRate),\n                    })),\n                },\n            ],\n        };\n        Tape.saveAllDataAsJson(JSON.stringify(data));\n    }\n    /**\n     * Get user data as a SavedData object.\n     */\n    static loadAllData() {\n        const jsonData = window.localStorage.getItem(LOCAL_DATA_KEY);\n        if (jsonData === null) {\n            return { tapes: [] };\n        }\n        return JSON.parse(jsonData);\n    }\n    /**\n     * Get user data as a formatted JSON object.\n     */\n    static getAllDataAsJson() {\n        // Re-format it nicely.\n        return JSON.stringify(this.loadAllData(), null, 2);\n    }\n    /**\n     * Set the full data from a JSON string.\n     */\n    static saveAllDataAsJson(jsonData) {\n        window.localStorage.setItem(LOCAL_DATA_KEY, jsonData);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport var isBrowser = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === 'object' && document.nodeType === 9;\n\nexport default isBrowser;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport isInBrowser from 'is-in-browser';\nimport warning from 'tiny-warning';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\nvar plainObjectConstrurctor = {}.constructor;\nfunction cloneStyle(style) {\n  if (style == null || typeof style !== 'object') return style;\n  if (Array.isArray(style)) return style.map(cloneStyle);\n  if (style.constructor !== plainObjectConstrurctor) return style;\n  var newStyle = {};\n\n  for (var name in style) {\n    newStyle[name] = cloneStyle(style[name]);\n  }\n\n  return newStyle;\n}\n\n/**\n * Create a rule instance.\n */\n\nfunction createRule(name, decl, options) {\n  if (name === void 0) {\n    name = 'unnamed';\n  }\n\n  var jss = options.jss;\n  var declCopy = cloneStyle(decl);\n  var rule = jss.plugins.onCreateRule(name, declCopy, options);\n  if (rule) return rule; // It is an at-rule and it has no instance.\n\n  if (name[0] === '@') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown rule \" + name) : void 0;\n  }\n\n  return null;\n}\n\nvar join = function join(value, by) {\n  var result = '';\n\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n\n  return result;\n};\n\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\nvar toCssValue = function toCssValue(value, ignoreImportant) {\n  if (ignoreImportant === void 0) {\n    ignoreImportant = false;\n  }\n\n  if (!Array.isArray(value)) return value;\n  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.\n\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', '); // Add !important, because it was ignored.\n\n\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n};\n\n/**\n * Indent a string.\n * http://jsperf.com/array-join-vs-for\n */\nfunction indentStr(str, indent) {\n  var result = '';\n\n  for (var index = 0; index < indent; index++) {\n    result += '  ';\n  }\n\n  return result + str;\n}\n/**\n * Converts a Rule to CSS string.\n */\n\n\nfunction toCss(selector, style, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var result = '';\n  if (!style) return result;\n  var _options = options,\n      _options$indent = _options.indent,\n      indent = _options$indent === void 0 ? 0 : _options$indent;\n  var fallbacks = style.fallbacks;\n  if (selector) indent++; // Apply fallbacks first.\n\n  if (fallbacks) {\n    // Array syntax {fallbacks: [{prop: value}]}\n    if (Array.isArray(fallbacks)) {\n      for (var index = 0; index < fallbacks.length; index++) {\n        var fallback = fallbacks[index];\n\n        for (var prop in fallback) {\n          var value = fallback[prop];\n\n          if (value != null) {\n            if (result) result += '\\n';\n            result += \"\" + indentStr(prop + \": \" + toCssValue(value) + \";\", indent);\n          }\n        }\n      }\n    } else {\n      // Object syntax {fallbacks: {prop: value}}\n      for (var _prop in fallbacks) {\n        var _value = fallbacks[_prop];\n\n        if (_value != null) {\n          if (result) result += '\\n';\n          result += \"\" + indentStr(_prop + \": \" + toCssValue(_value) + \";\", indent);\n        }\n      }\n    }\n  }\n\n  for (var _prop2 in style) {\n    var _value2 = style[_prop2];\n\n    if (_value2 != null && _prop2 !== 'fallbacks') {\n      if (result) result += '\\n';\n      result += \"\" + indentStr(_prop2 + \": \" + toCssValue(_value2) + \";\", indent);\n    }\n  } // Allow empty style in this case, because properties will be added dynamically.\n\n\n  if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.\n\n  if (!selector) return result;\n  indent--;\n  if (result) result = \"\\n\" + result + \"\\n\";\n  return indentStr(selector + \" {\" + result, indent) + indentStr('}', indent);\n}\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\nvar nativeEscape = typeof CSS !== 'undefined' && CSS.escape;\nvar escape = (function (str) {\n  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\\\$1');\n});\n\nvar BaseStyleRule =\n/*#__PURE__*/\nfunction () {\n  function BaseStyleRule(key, style, options) {\n    this.type = 'style';\n    this.key = void 0;\n    this.isProcessed = false;\n    this.style = void 0;\n    this.renderer = void 0;\n    this.renderable = void 0;\n    this.options = void 0;\n    var sheet = options.sheet,\n        Renderer = options.Renderer;\n    this.key = key;\n    this.options = options;\n    this.style = style;\n    if (sheet) this.renderer = sheet.renderer;else if (Renderer) this.renderer = new Renderer();\n  }\n  /**\n   * Get or set a style property.\n   */\n\n\n  var _proto = BaseStyleRule.prototype;\n\n  _proto.prop = function prop(name, value, options) {\n    // It's a getter.\n    if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.\n\n    var force = options ? options.force : false;\n    if (!force && this.style[name] === value) return this;\n    var newValue = value;\n\n    if (!options || options.process !== false) {\n      newValue = this.options.jss.plugins.onChangeValue(value, name, this);\n    }\n\n    var isEmpty = newValue == null || newValue === false;\n    var isDefined = name in this.style; // Value is empty and wasn't defined before.\n\n    if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.\n\n    var remove = isEmpty && isDefined;\n    if (remove) delete this.style[name];else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.\n\n    if (this.renderable && this.renderer) {\n      if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, newValue);\n      return this;\n    }\n\n    var sheet = this.options.sheet;\n\n    if (sheet && sheet.attached) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Rule is not linked. Missing sheet option \"link: true\".') : void 0;\n    }\n\n    return this;\n  };\n\n  return BaseStyleRule;\n}();\nvar StyleRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(StyleRule, _BaseStyleRule);\n\n  function StyleRule(key, style, options) {\n    var _this;\n\n    _this = _BaseStyleRule.call(this, key, style, options) || this;\n    _this.selectorText = void 0;\n    _this.id = void 0;\n    _this.renderable = void 0;\n    var selector = options.selector,\n        scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n\n    if (selector) {\n      _this.selectorText = selector;\n    } else if (scoped !== false) {\n      _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);\n      _this.selectorText = \".\" + escape(_this.id);\n    }\n\n    return _this;\n  }\n  /**\n   * Set selector string.\n   * Attention: use this with caution. Most browsers didn't implement\n   * selectorText setter, so this may result in rerendering of entire Style Sheet.\n   */\n\n\n  var _proto2 = StyleRule.prototype;\n\n  /**\n   * Apply rule to an element inline.\n   */\n  _proto2.applyTo = function applyTo(renderable) {\n    var renderer = this.renderer;\n\n    if (renderer) {\n      var json = this.toJSON();\n\n      for (var prop in json) {\n        renderer.setProperty(renderable, prop, json[prop]);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Returns JSON representation of the rule.\n   * Fallbacks are not supported.\n   * Useful for inline styles.\n   */\n  ;\n\n  _proto2.toJSON = function toJSON() {\n    var json = {};\n\n    for (var prop in this.style) {\n      var value = this.style[prop];\n      if (typeof value !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = toCssValue(value);\n    }\n\n    return json;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto2.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.selectorText, this.style, opts);\n  };\n\n  _createClass(StyleRule, [{\n    key: \"selector\",\n    set: function set(selector) {\n      if (selector === this.selectorText) return;\n      this.selectorText = selector;\n      var renderer = this.renderer,\n          renderable = this.renderable;\n      if (!renderable || !renderer) return;\n      var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.\n\n      if (!hasChanged) {\n        renderer.replaceRule(renderable, this);\n      }\n    }\n    /**\n     * Get selector string.\n     */\n    ,\n    get: function get() {\n      return this.selectorText;\n    }\n  }]);\n\n  return StyleRule;\n}(BaseStyleRule);\nvar pluginStyleRule = {\n  onCreateRule: function onCreateRule(name, style, options) {\n    if (name[0] === '@' || options.parent && options.parent.type === 'keyframes') {\n      return null;\n    }\n\n    return new StyleRule(name, style, options);\n  }\n};\n\nvar defaultToStringOptions = {\n  indent: 1,\n  children: true\n};\nvar atRegExp = /@([\\w-]+)/;\n/**\n * Conditional rule for @media, @supports\n */\n\nvar ConditionalRule =\n/*#__PURE__*/\nfunction () {\n  function ConditionalRule(key, styles, options) {\n    this.type = 'conditional';\n    this.at = void 0;\n    this.key = void 0;\n    this.query = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    var atMatch = key.match(atRegExp);\n    this.at = atMatch ? atMatch[1] : 'unknown'; // Key might contain a unique suffix in case the `name` passed by user was duplicate.\n\n    this.query = options.name || \"@\" + this.at;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = ConditionalRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions.indent;\n    if (options.children == null) options.children = defaultToStringOptions.children;\n\n    if (options.children === false) {\n      return this.query + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    return children ? this.query + \" {\\n\" + children + \"\\n}\" : '';\n  };\n\n  return ConditionalRule;\n}();\nvar keyRegExp = /@media|@supports\\s+/;\nvar pluginConditionalRule = {\n  onCreateRule: function onCreateRule(key, styles, options) {\n    return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;\n  }\n};\n\nvar defaultToStringOptions$1 = {\n  indent: 1,\n  children: true\n};\nvar nameRegExp = /@keyframes\\s+([\\w-]+)/;\n/**\n * Rule for @keyframes\n */\n\nvar KeyframesRule =\n/*#__PURE__*/\nfunction () {\n  function KeyframesRule(key, frames, options) {\n    this.type = 'keyframes';\n    this.at = '@keyframes';\n    this.key = void 0;\n    this.name = void 0;\n    this.id = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    var nameMatch = key.match(nameRegExp);\n\n    if (nameMatch && nameMatch[1]) {\n      this.name = nameMatch[1];\n    } else {\n      this.name = 'noname';\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Bad keyframes name \" + key) : void 0;\n    }\n\n    this.key = this.type + \"-\" + this.name;\n    this.options = options;\n    var scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n    this.id = scoped === false ? this.name : escape(generateId(this, sheet));\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in frames) {\n      this.rules.add(name, frames[name], _extends({}, options, {\n        parent: this\n      }));\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = KeyframesRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions$1;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions$1.indent;\n    if (options.children == null) options.children = defaultToStringOptions$1.children;\n\n    if (options.children === false) {\n      return this.at + \" \" + this.id + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    if (children) children = \"\\n\" + children + \"\\n\";\n    return this.at + \" \" + this.id + \" {\" + children + \"}\";\n  };\n\n  return KeyframesRule;\n}();\nvar keyRegExp$1 = /@keyframes\\s+/;\nvar refRegExp = /\\$([\\w-]+)/g;\n\nvar findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {\n  if (typeof val === 'string') {\n    return val.replace(refRegExp, function (match, name) {\n      if (name in keyframes) {\n        return keyframes[name];\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced keyframes rule \\\"\" + name + \"\\\" is not defined.\") : void 0;\n      return match;\n    });\n  }\n\n  return val;\n};\n/**\n * Replace the reference for a animation name.\n */\n\n\nvar replaceRef = function replaceRef(style, prop, keyframes) {\n  var value = style[prop];\n  var refKeyframe = findReferencedKeyframe(value, keyframes);\n\n  if (refKeyframe !== value) {\n    style[prop] = refKeyframe;\n  }\n};\n\nvar plugin = {\n  onCreateRule: function onCreateRule(key, frames, options) {\n    return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;\n  },\n  // Animation name ref replacer.\n  onProcessStyle: function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return style;\n    if ('animation-name' in style) replaceRef(style, 'animation-name', sheet.keyframes);\n    if ('animation' in style) replaceRef(style, 'animation', sheet.keyframes);\n    return style;\n  },\n  onChangeValue: function onChangeValue(val, prop, rule) {\n    var sheet = rule.options.sheet;\n\n    if (!sheet) {\n      return val;\n    }\n\n    switch (prop) {\n      case 'animation':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      case 'animation-name':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      default:\n        return val;\n    }\n  }\n};\n\nvar KeyframeRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(KeyframeRule, _BaseStyleRule);\n\n  function KeyframeRule() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _BaseStyleRule.call.apply(_BaseStyleRule, [this].concat(args)) || this;\n    _this.renderable = void 0;\n    return _this;\n  }\n\n  var _proto = KeyframeRule.prototype;\n\n  /**\n   * Generates a CSS string.\n   */\n  _proto.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.key, this.style, opts);\n  };\n\n  return KeyframeRule;\n}(BaseStyleRule);\nvar pluginKeyframeRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    if (options.parent && options.parent.type === 'keyframes') {\n      return new KeyframeRule(key, style, options);\n    }\n\n    return null;\n  }\n};\n\nvar FontFaceRule =\n/*#__PURE__*/\nfunction () {\n  function FontFaceRule(key, style, options) {\n    this.type = 'font-face';\n    this.at = '@font-face';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = FontFaceRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.style)) {\n      var str = '';\n\n      for (var index = 0; index < this.style.length; index++) {\n        str += toCss(this.at, this.style[index]);\n        if (this.style[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return toCss(this.at, this.style, options);\n  };\n\n  return FontFaceRule;\n}();\nvar keyRegExp$2 = /@font-face/;\nvar pluginFontFaceRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null;\n  }\n};\n\nvar ViewportRule =\n/*#__PURE__*/\nfunction () {\n  function ViewportRule(key, style, options) {\n    this.type = 'viewport';\n    this.at = '@viewport';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = ViewportRule.prototype;\n\n  _proto.toString = function toString(options) {\n    return toCss(this.key, this.style, options);\n  };\n\n  return ViewportRule;\n}();\nvar pluginViewportRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null;\n  }\n};\n\nvar SimpleRule =\n/*#__PURE__*/\nfunction () {\n  function SimpleRule(key, value, options) {\n    this.type = 'simple';\n    this.key = void 0;\n    this.value = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.value = value;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  var _proto = SimpleRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.value)) {\n      var str = '';\n\n      for (var index = 0; index < this.value.length; index++) {\n        str += this.key + \" \" + this.value[index] + \";\";\n        if (this.value[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return this.key + \" \" + this.value + \";\";\n  };\n\n  return SimpleRule;\n}();\nvar keysMap = {\n  '@charset': true,\n  '@import': true,\n  '@namespace': true\n};\nvar pluginSimpleRule = {\n  onCreateRule: function onCreateRule(key, value, options) {\n    return key in keysMap ? new SimpleRule(key, value, options) : null;\n  }\n};\n\nvar plugins = [pluginStyleRule, pluginConditionalRule, plugin, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];\n\nvar defaultUpdateOptions = {\n  process: true\n};\nvar forceUpdateOptions = {\n  force: true,\n  process: true\n  /**\n   * Contains rules objects and allows adding/removing etc.\n   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.\n   */\n\n};\n\nvar RuleList =\n/*#__PURE__*/\nfunction () {\n  // Rules registry for access by .get() method.\n  // It contains the same rule registered by name and by selector.\n  // Original styles object.\n  // Used to ensure correct rules order.\n  function RuleList(options) {\n    this.map = {};\n    this.raw = {};\n    this.index = [];\n    this.counter = 0;\n    this.options = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.options = options;\n    this.classes = options.classes;\n    this.keyframes = options.keyframes;\n  }\n  /**\n   * Create and register rule.\n   *\n   * Will not render after Style Sheet was rendered the first time.\n   */\n\n\n  var _proto = RuleList.prototype;\n\n  _proto.add = function add(name, decl, ruleOptions) {\n    var _this$options = this.options,\n        parent = _this$options.parent,\n        sheet = _this$options.sheet,\n        jss = _this$options.jss,\n        Renderer = _this$options.Renderer,\n        generateId = _this$options.generateId,\n        scoped = _this$options.scoped;\n\n    var options = _extends({\n      classes: this.classes,\n      parent: parent,\n      sheet: sheet,\n      jss: jss,\n      Renderer: Renderer,\n      generateId: generateId,\n      scoped: scoped,\n      name: name,\n      keyframes: this.keyframes,\n      selector: undefined\n    }, ruleOptions); // When user uses .createStyleSheet(), duplicate names are not possible, but\n    // `sheet.addRule()` opens the door for any duplicate rule name. When this happens\n    // we need to make the key unique within this RuleList instance scope.\n\n\n    var key = name;\n\n    if (name in this.raw) {\n      key = name + \"-d\" + this.counter++;\n    } // We need to save the original decl before creating the rule\n    // because cache plugin needs to use it as a key to return a cached rule.\n\n\n    this.raw[key] = decl;\n\n    if (key in this.classes) {\n      // E.g. rules inside of @media container\n      options.selector = \".\" + escape(this.classes[key]);\n    }\n\n    var rule = createRule(key, decl, options);\n    if (!rule) return null;\n    this.register(rule);\n    var index = options.index === undefined ? this.index.length : options.index;\n    this.index.splice(index, 0, rule);\n    return rule;\n  }\n  /**\n   * Get a rule.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    return this.map[name];\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.remove = function remove(rule) {\n    this.unregister(rule);\n    delete this.raw[rule.key];\n    this.index.splice(this.index.indexOf(rule), 1);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.index.indexOf(rule);\n  }\n  /**\n   * Run `onProcessRule()` plugins on every rule.\n   */\n  ;\n\n  _proto.process = function process() {\n    var plugins = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop\n    // we end up with very hard-to-track-down side effects.\n\n    this.index.slice(0).forEach(plugins.onProcessRule, plugins);\n  }\n  /**\n   * Register a rule in `.map`, `.classes` and `.keyframes` maps.\n   */\n  ;\n\n  _proto.register = function register(rule) {\n    this.map[rule.key] = rule;\n\n    if (rule instanceof StyleRule) {\n      this.map[rule.selector] = rule;\n      if (rule.id) this.classes[rule.key] = rule.id;\n    } else if (rule instanceof KeyframesRule && this.keyframes) {\n      this.keyframes[rule.name] = rule.id;\n    }\n  }\n  /**\n   * Unregister a rule.\n   */\n  ;\n\n  _proto.unregister = function unregister(rule) {\n    delete this.map[rule.key];\n\n    if (rule instanceof StyleRule) {\n      delete this.map[rule.selector];\n      delete this.classes[rule.key];\n    } else if (rule instanceof KeyframesRule) {\n      delete this.keyframes[rule.name];\n    }\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var name;\n    var data;\n    var options;\n\n    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n      name = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]\n\n      data = arguments.length <= 1 ? undefined : arguments[1]; // $FlowFixMe[invalid-tuple-index]\n\n      options = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      data = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]\n\n      options = arguments.length <= 1 ? undefined : arguments[1];\n      name = null;\n    }\n\n    if (name) {\n      this.updateOne(this.map[name], data, options);\n    } else {\n      for (var index = 0; index < this.index.length; index++) {\n        this.updateOne(this.index[index], data, options);\n      }\n    }\n  }\n  /**\n   * Execute plugins, update rule props.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    if (options === void 0) {\n      options = defaultUpdateOptions;\n    }\n\n    var _this$options2 = this.options,\n        plugins = _this$options2.jss.plugins,\n        sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.\n\n    if (rule.rules instanceof RuleList) {\n      rule.rules.update(data, options);\n      return;\n    }\n\n    var styleRule = rule;\n    var style = styleRule.style;\n    plugins.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.\n\n    if (options.process && style && style !== styleRule.style) {\n      // We need to run the plugins in case new `style` relies on syntax plugins.\n      plugins.onProcessStyle(styleRule.style, styleRule, sheet); // Update and add props.\n\n      for (var prop in styleRule.style) {\n        var nextValue = styleRule.style[prop];\n        var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (nextValue !== prevValue) {\n          styleRule.prop(prop, nextValue, forceUpdateOptions);\n        }\n      } // Remove props.\n\n\n      for (var _prop in style) {\n        var _nextValue = styleRule.style[_prop];\n        var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (_nextValue == null && _nextValue !== _prevValue) {\n          styleRule.prop(_prop, null, forceUpdateOptions);\n        }\n      }\n    }\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    var str = '';\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n\n    for (var index = 0; index < this.index.length; index++) {\n      var rule = this.index[index];\n      var css = rule.toString(options); // No need to render an empty rule.\n\n      if (!css && !link) continue;\n      if (str) str += '\\n';\n      str += css;\n    }\n\n    return str;\n  };\n\n  return RuleList;\n}();\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(styles, options) {\n    this.options = void 0;\n    this.deployed = void 0;\n    this.attached = void 0;\n    this.rules = void 0;\n    this.renderer = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.queue = void 0;\n    this.attached = false;\n    this.deployed = false;\n    this.classes = {};\n    this.keyframes = {};\n    this.options = _extends({}, options, {\n      sheet: this,\n      parent: this,\n      classes: this.classes,\n      keyframes: this.keyframes\n    });\n\n    if (options.Renderer) {\n      this.renderer = new options.Renderer(this);\n    }\n\n    this.rules = new RuleList(this.options);\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Attach renderable to the render tree.\n   */\n\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.attach = function attach() {\n    if (this.attached) return this;\n    if (this.renderer) this.renderer.attach();\n    this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.\n\n    if (!this.deployed) this.deploy();\n    return this;\n  }\n  /**\n   * Remove renderable from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    if (!this.attached) return this;\n    if (this.renderer) this.renderer.detach();\n    this.attached = false;\n    return this;\n  }\n  /**\n   * Add a rule to the current stylesheet.\n   * Will insert a rule also after the stylesheet has been rendered first time.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, decl, options) {\n    var queue = this.queue; // Plugins can create rules.\n    // In order to preserve the right order, we need to queue all `.addRule` calls,\n    // which happen after the first `rules.add()` call.\n\n    if (this.attached && !queue) this.queue = [];\n    var rule = this.rules.add(name, decl, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n\n    if (this.attached) {\n      if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.\n      // It will be inserted all together when .attach is called.\n\n      if (queue) queue.push(rule);else {\n        this.insertRule(rule);\n\n        if (this.queue) {\n          this.queue.forEach(this.insertRule, this);\n          this.queue = undefined;\n        }\n      }\n      return rule;\n    } // We can't add rules to a detached style node.\n    // We will redeploy the sheet once user will attach it.\n\n\n    this.deployed = false;\n    return rule;\n  }\n  /**\n   * Insert rule into the StyleSheet\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule) {\n    if (this.renderer) {\n      this.renderer.insertRule(rule);\n    }\n  }\n  /**\n   * Create and add rules.\n   * Will render also after Style Sheet was rendered the first time.\n   */\n  ;\n\n  _proto.addRules = function addRules(styles, options) {\n    var added = [];\n\n    for (var name in styles) {\n      var rule = this.addRule(name, styles[name], options);\n      if (rule) added.push(rule);\n    }\n\n    return added;\n  }\n  /**\n   * Get a rule by name.\n   */\n  ;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Delete a rule by name.\n   * Returns `true`: if rule has been deleted from the DOM.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(name) {\n    var rule = typeof name === 'object' ? name : this.rules.get(name);\n\n    if (!rule || // Style sheet was created without link: true and attached, in this case we\n    // won't be able to remove the CSS rule from the DOM.\n    this.attached && !rule.renderable) {\n      return false;\n    }\n\n    this.rules.remove(rule);\n\n    if (this.attached && rule.renderable && this.renderer) {\n      return this.renderer.deleteRule(rule.renderable);\n    }\n\n    return true;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Deploy pure CSS string to a renderable.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    if (this.renderer) this.renderer.deploy();\n    this.deployed = true;\n    return this;\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this$rules;\n\n    (_this$rules = this.rules).update.apply(_this$rules, arguments);\n\n    return this;\n  }\n  /**\n   * Updates a single rule.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    this.rules.updateOne(rule, data, options);\n    return this;\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    return this.rules.toString(options);\n  };\n\n  return StyleSheet;\n}();\n\nvar PluginsRegistry =\n/*#__PURE__*/\nfunction () {\n  function PluginsRegistry() {\n    this.plugins = {\n      internal: [],\n      external: []\n    };\n    this.registry = void 0;\n  }\n\n  var _proto = PluginsRegistry.prototype;\n\n  /**\n   * Call `onCreateRule` hooks and return an object if returned by a hook.\n   */\n  _proto.onCreateRule = function onCreateRule(name, decl, options) {\n    for (var i = 0; i < this.registry.onCreateRule.length; i++) {\n      var rule = this.registry.onCreateRule[i](name, decl, options);\n      if (rule) return rule;\n    }\n\n    return null;\n  }\n  /**\n   * Call `onProcessRule` hooks.\n   */\n  ;\n\n  _proto.onProcessRule = function onProcessRule(rule) {\n    if (rule.isProcessed) return;\n    var sheet = rule.options.sheet;\n\n    for (var i = 0; i < this.registry.onProcessRule.length; i++) {\n      this.registry.onProcessRule[i](rule, sheet);\n    }\n\n    if (rule.style) this.onProcessStyle(rule.style, rule, sheet);\n    rule.isProcessed = true;\n  }\n  /**\n   * Call `onProcessStyle` hooks.\n   */\n  ;\n\n  _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {\n    for (var i = 0; i < this.registry.onProcessStyle.length; i++) {\n      // $FlowFixMe[prop-missing]\n      rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);\n    }\n  }\n  /**\n   * Call `onProcessSheet` hooks.\n   */\n  ;\n\n  _proto.onProcessSheet = function onProcessSheet(sheet) {\n    for (var i = 0; i < this.registry.onProcessSheet.length; i++) {\n      this.registry.onProcessSheet[i](sheet);\n    }\n  }\n  /**\n   * Call `onUpdate` hooks.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(data, rule, sheet, options) {\n    for (var i = 0; i < this.registry.onUpdate.length; i++) {\n      this.registry.onUpdate[i](data, rule, sheet, options);\n    }\n  }\n  /**\n   * Call `onChangeValue` hooks.\n   */\n  ;\n\n  _proto.onChangeValue = function onChangeValue(value, prop, rule) {\n    var processedValue = value;\n\n    for (var i = 0; i < this.registry.onChangeValue.length; i++) {\n      processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);\n    }\n\n    return processedValue;\n  }\n  /**\n   * Register a plugin.\n   */\n  ;\n\n  _proto.use = function use(newPlugin, options) {\n    if (options === void 0) {\n      options = {\n        queue: 'external'\n      };\n    }\n\n    var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.\n\n    if (plugins.indexOf(newPlugin) !== -1) {\n      return;\n    }\n\n    plugins.push(newPlugin);\n    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) {\n      for (var name in plugin) {\n        if (name in registry) {\n          registry[name].push(plugin[name]);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown hook \\\"\" + name + \"\\\".\") : void 0;\n        }\n      }\n\n      return registry;\n    }, {\n      onCreateRule: [],\n      onProcessRule: [],\n      onProcessStyle: [],\n      onProcessSheet: [],\n      onChangeValue: [],\n      onUpdate: []\n    });\n  };\n\n  return PluginsRegistry;\n}();\n\n/**\n * Sheets registry to access them all at one place.\n */\nvar SheetsRegistry =\n/*#__PURE__*/\nfunction () {\n  function SheetsRegistry() {\n    this.registry = [];\n  }\n\n  var _proto = SheetsRegistry.prototype;\n\n  /**\n   * Register a Style Sheet.\n   */\n  _proto.add = function add(sheet) {\n    var registry = this.registry;\n    var index = sheet.options.index;\n    if (registry.indexOf(sheet) !== -1) return;\n\n    if (registry.length === 0 || index >= this.index) {\n      registry.push(sheet);\n      return;\n    } // Find a position.\n\n\n    for (var i = 0; i < registry.length; i++) {\n      if (registry[i].options.index > index) {\n        registry.splice(i, 0, sheet);\n        return;\n      }\n    }\n  }\n  /**\n   * Reset the registry.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.registry = [];\n  }\n  /**\n   * Remove a Style Sheet.\n   */\n  ;\n\n  _proto.remove = function remove(sheet) {\n    var index = this.registry.indexOf(sheet);\n    this.registry.splice(index, 1);\n  }\n  /**\n   * Convert all attached sheets to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        attached = _ref.attached,\n        options = _objectWithoutPropertiesLoose(_ref, [\"attached\"]);\n\n    var css = '';\n\n    for (var i = 0; i < this.registry.length; i++) {\n      var sheet = this.registry[i];\n\n      if (attached != null && sheet.attached !== attached) {\n        continue;\n      }\n\n      if (css) css += '\\n';\n      css += sheet.toString(options);\n    }\n\n    return css;\n  };\n\n  _createClass(SheetsRegistry, [{\n    key: \"index\",\n\n    /**\n     * Current highest index number.\n     */\n    get: function get() {\n      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;\n    }\n  }]);\n\n  return SheetsRegistry;\n}();\n\n/**\n * This is a global sheets registry. Only DomRenderer will add sheets to it.\n * On the server one should use an own SheetsRegistry instance and add the\n * sheets to it, because you need to make sure to create a new registry for\n * each request in order to not leak sheets across requests.\n */\n\nvar registry = new SheetsRegistry();\n\n/* eslint-disable */\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar globalThis = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\nvar ns = '2f1acc6c3a606b082e5eef5e54414ffb';\nif (globalThis[ns] == null) globalThis[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify\n// the current version with just one short number and use it for classes generation\n// we use a counter. Also it is more accurate, because user can manually reevaluate\n// the module.\n\nvar moduleId = globalThis[ns]++;\n\nvar maxRules = 1e10;\n\n/**\n * Returns a function which generates unique class names based on counters.\n * When new generator function is created, rule counter is reseted.\n * We need to reset the rule counter for SSR for each request.\n */\nvar createGenerateId = function createGenerateId(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ruleCounter = 0;\n  return function (rule, sheet) {\n    ruleCounter += 1;\n\n    if (ruleCounter > maxRules) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] You might have a memory leak. Rule counter is at \" + ruleCounter + \".\") : void 0;\n    }\n\n    var jssId = '';\n    var prefix = '';\n\n    if (sheet) {\n      if (sheet.options.classNamePrefix) {\n        prefix = sheet.options.classNamePrefix;\n      }\n\n      if (sheet.options.jss.id != null) {\n        jssId = String(sheet.options.jss.id);\n      }\n    }\n\n    if (options.minify) {\n      // Using \"c\" because a number can't be the first char in a class name.\n      return \"\" + (prefix || 'c') + moduleId + jssId + ruleCounter;\n    }\n\n    return prefix + rule.key + \"-\" + moduleId + (jssId ? \"-\" + jssId : '') + \"-\" + ruleCounter;\n  };\n};\n\n/**\n * Cache the value from the first time a function is called.\n */\nvar memoize = function memoize(fn) {\n  var value;\n  return function () {\n    if (!value) value = fn();\n    return value;\n  };\n};\n\n/**\n * Get a style property value.\n */\nvar getPropertyValue = function getPropertyValue(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      return cssRule.attributeStyleMap.get(prop);\n    }\n\n    return cssRule.style.getPropertyValue(prop);\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return '';\n  }\n};\n\n/**\n * Set a style property.\n */\nvar setProperty = function setProperty(cssRule, prop, value) {\n  try {\n    var cssValue = value;\n\n    if (Array.isArray(value)) {\n      cssValue = toCssValue(value, true);\n\n      if (value[value.length - 1] === '!important') {\n        cssRule.style.setProperty(prop, cssValue, 'important');\n        return true;\n      }\n    } // Support CSSTOM.\n\n\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.set(prop, cssValue);\n    } else {\n      cssRule.style.setProperty(prop, cssValue);\n    }\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Remove a style property.\n */\nvar removeProperty = function removeProperty(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.delete(prop);\n    } else {\n      cssRule.style.removeProperty(prop);\n    }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] DOMException \\\"\" + err.message + \"\\\" was thrown. Tried to remove property \\\"\" + prop + \"\\\".\") : void 0;\n  }\n};\n\n/**\n * Set the selector.\n */\nvar setSelector = function setSelector(cssRule, selectorText) {\n  cssRule.selectorText = selectorText; // Return false if setter was not successful.\n  // Currently works in chrome only.\n\n  return cssRule.selectorText === selectorText;\n};\n/**\n * Gets the `head` element upon the first call and caches it.\n * We assume it can't be null.\n */\n\n\nvar getHead = memoize(function () {\n  return document.querySelector('head');\n});\n/**\n * Find attached sheet with an index higher than the passed one.\n */\n\nfunction findHigherSheet(registry, options) {\n  for (var i = 0; i < registry.length; i++) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find attached sheet with the highest index.\n */\n\n\nfunction findHighestSheet(registry, options) {\n  for (var i = registry.length - 1; i >= 0; i--) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find a comment with \"jss\" inside.\n */\n\n\nfunction findCommentNode(text) {\n  var head = getHead();\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && node.nodeValue.trim() === text) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Find a node before which we can insert the sheet.\n */\nfunction findPrevNode(options) {\n  var registry$1 = registry.registry;\n\n  if (registry$1.length > 0) {\n    // Try to insert before the next higher sheet.\n    var sheet = findHigherSheet(registry$1, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element\n      };\n    } // Otherwise insert after the last attached.\n\n\n    sheet = findHighestSheet(registry$1, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element.nextSibling\n      };\n    }\n  } // Try to find a comment placeholder if registry is empty.\n\n\n  var insertionPoint = options.insertionPoint;\n\n  if (insertionPoint && typeof insertionPoint === 'string') {\n    var comment = findCommentNode(insertionPoint);\n\n    if (comment) {\n      return {\n        parent: comment.parentNode,\n        node: comment.nextSibling\n      };\n    } // If user specifies an insertion point and it can't be found in the document -\n    // bad specificity issues may appear.\n\n\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Insertion point \\\"\" + insertionPoint + \"\\\" not found.\") : void 0;\n  }\n\n  return false;\n}\n/**\n * Insert style element into the DOM.\n */\n\n\nfunction insertStyle(style, options) {\n  var insertionPoint = options.insertionPoint;\n  var nextNode = findPrevNode(options);\n\n  if (nextNode !== false && nextNode.parent) {\n    nextNode.parent.insertBefore(style, nextNode.node);\n    return;\n  } // Works with iframes and any node types.\n\n\n  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {\n    // https://stackoverflow.com/questions/41328728/force-casting-in-flow\n    var insertionPointElement = insertionPoint;\n    var parentNode = insertionPointElement.parentNode;\n    if (parentNode) parentNode.insertBefore(style, insertionPointElement.nextSibling);else process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Insertion point is not in the DOM.') : void 0;\n    return;\n  }\n\n  getHead().appendChild(style);\n}\n/**\n * Read jss nonce setting from the page if the user has set it.\n */\n\n\nvar getNonce = memoize(function () {\n  var node = document.querySelector('meta[property=\"csp-nonce\"]');\n  return node ? node.getAttribute('content') : null;\n});\n\nvar _insertRule = function insertRule(container, rule, index) {\n  try {\n    if ('insertRule' in container) {\n      var c = container;\n      c.insertRule(rule, index);\n    } // Keyframes rule.\n    else if ('appendRule' in container) {\n        var _c = container;\n\n        _c.appendRule(rule);\n      }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] \" + err.message) : void 0;\n    return false;\n  }\n\n  return container.cssRules[index];\n};\n\nvar getValidRuleInsertionIndex = function getValidRuleInsertionIndex(container, index) {\n  var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong\n\n  if (index === undefined || index > maxIndex) {\n    // eslint-disable-next-line no-param-reassign\n    return maxIndex;\n  }\n\n  return index;\n};\n\nvar createStyle = function createStyle() {\n  var el = document.createElement('style'); // Without it, IE will have a broken source order specificity if we\n  // insert rules after we insert the style tag.\n  // It seems to kick-off the source order specificity algorithm.\n\n  el.textContent = '\\n';\n  return el;\n};\n\nvar DomRenderer =\n/*#__PURE__*/\nfunction () {\n  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696\n  // Will be empty if link: true option is not set, because\n  // it is only for use together with insertRule API.\n  function DomRenderer(sheet) {\n    this.getPropertyValue = getPropertyValue;\n    this.setProperty = setProperty;\n    this.removeProperty = removeProperty;\n    this.setSelector = setSelector;\n    this.element = void 0;\n    this.sheet = void 0;\n    this.hasInsertedRules = false;\n    this.cssRules = [];\n    // There is no sheet when the renderer is used from a standalone StyleRule.\n    if (sheet) registry.add(sheet);\n    this.sheet = sheet;\n\n    var _ref = this.sheet ? this.sheet.options : {},\n        media = _ref.media,\n        meta = _ref.meta,\n        element = _ref.element;\n\n    this.element = element || createStyle();\n    this.element.setAttribute('data-jss', '');\n    if (media) this.element.setAttribute('media', media);\n    if (meta) this.element.setAttribute('data-meta', meta);\n    var nonce = getNonce();\n    if (nonce) this.element.setAttribute('nonce', nonce);\n  }\n  /**\n   * Insert style element into render tree.\n   */\n\n\n  var _proto = DomRenderer.prototype;\n\n  _proto.attach = function attach() {\n    // In the case the element node is external and it is already in the DOM.\n    if (this.element.parentNode || !this.sheet) return;\n    insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`\n    // most browsers create a new CSSStyleSheet, except of all IEs.\n\n    var deployed = Boolean(this.sheet && this.sheet.deployed);\n\n    if (this.hasInsertedRules && deployed) {\n      this.hasInsertedRules = false;\n      this.deploy();\n    }\n  }\n  /**\n   * Remove style element from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    if (!this.sheet) return;\n    var parentNode = this.element.parentNode;\n    if (parentNode) parentNode.removeChild(this.element); // In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.\n    // Though IE will keep them and we need a consistent behavior.\n\n    if (this.sheet.options.link) {\n      this.cssRules = [];\n      this.element.textContent = '\\n';\n    }\n  }\n  /**\n   * Inject CSS string into element.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    var sheet = this.sheet;\n    if (!sheet) return;\n\n    if (sheet.options.link) {\n      this.insertRules(sheet.rules);\n      return;\n    }\n\n    this.element.textContent = \"\\n\" + sheet.toString() + \"\\n\";\n  }\n  /**\n   * Insert RuleList into an element.\n   */\n  ;\n\n  _proto.insertRules = function insertRules(rules, nativeParent) {\n    for (var i = 0; i < rules.index.length; i++) {\n      this.insertRule(rules.index[i], i, nativeParent);\n    }\n  }\n  /**\n   * Insert a rule into element.\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule, index, nativeParent) {\n    if (nativeParent === void 0) {\n      nativeParent = this.element.sheet;\n    }\n\n    if (rule.rules) {\n      var parent = rule;\n      var latestNativeParent = nativeParent;\n\n      if (rule.type === 'conditional' || rule.type === 'keyframes') {\n        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index); // We need to render the container without children first.\n\n\n        latestNativeParent = _insertRule(nativeParent, parent.toString({\n          children: false\n        }), _insertionIndex);\n\n        if (latestNativeParent === false) {\n          return false;\n        }\n\n        this.refCssRule(rule, _insertionIndex, latestNativeParent);\n      }\n\n      this.insertRules(parent.rules, latestNativeParent);\n      return latestNativeParent;\n    }\n\n    var ruleStr = rule.toString();\n    if (!ruleStr) return false;\n    var insertionIndex = getValidRuleInsertionIndex(nativeParent, index);\n\n    var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);\n\n    if (nativeRule === false) {\n      return false;\n    }\n\n    this.hasInsertedRules = true;\n    this.refCssRule(rule, insertionIndex, nativeRule);\n    return nativeRule;\n  };\n\n  _proto.refCssRule = function refCssRule(rule, index, cssRule) {\n    rule.renderable = cssRule; // We only want to reference the top level rules, deleteRule API doesn't support removing nested rules\n    // like rules inside media queries or keyframes\n\n    if (rule.options.parent instanceof StyleSheet) {\n      this.cssRules[index] = cssRule;\n    }\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(cssRule) {\n    var sheet = this.element.sheet;\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    sheet.deleteRule(index);\n    this.cssRules.splice(index, 1);\n    return true;\n  }\n  /**\n   * Get index of a CSS Rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(cssRule) {\n    return this.cssRules.indexOf(cssRule);\n  }\n  /**\n   * Generate a new CSS rule and replace the existing one.\n   *\n   * Only used for some old browsers because they can't set a selector.\n   */\n  ;\n\n  _proto.replaceRule = function replaceRule(cssRule, rule) {\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    this.element.sheet.deleteRule(index);\n    this.cssRules.splice(index, 1);\n    return this.insertRule(rule, index);\n  }\n  /**\n   * Get all rules elements.\n   */\n  ;\n\n  _proto.getRules = function getRules() {\n    return this.element.sheet.cssRules;\n  };\n\n  return DomRenderer;\n}();\n\nvar instanceCounter = 0;\n\nvar Jss =\n/*#__PURE__*/\nfunction () {\n  function Jss(options) {\n    this.id = instanceCounter++;\n    this.version = \"10.5.1\";\n    this.plugins = new PluginsRegistry();\n    this.options = {\n      id: {\n        minify: false\n      },\n      createGenerateId: createGenerateId,\n      Renderer: isInBrowser ? DomRenderer : null,\n      plugins: []\n    };\n    this.generateId = createGenerateId({\n      minify: false\n    });\n\n    for (var i = 0; i < plugins.length; i++) {\n      this.plugins.use(plugins[i], {\n        queue: 'internal'\n      });\n    }\n\n    this.setup(options);\n  }\n  /**\n   * Prepares various options, applies plugins.\n   * Should not be used twice on the same instance, because there is no plugins\n   * deduplication logic.\n   */\n\n\n  var _proto = Jss.prototype;\n\n  _proto.setup = function setup(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.createGenerateId) {\n      this.options.createGenerateId = options.createGenerateId;\n    }\n\n    if (options.id) {\n      this.options.id = _extends({}, this.options.id, options.id);\n    }\n\n    if (options.createGenerateId || options.id) {\n      this.generateId = this.options.createGenerateId(this.options.id);\n    }\n\n    if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;\n\n    if ('Renderer' in options) {\n      this.options.Renderer = options.Renderer;\n    } // eslint-disable-next-line prefer-spread\n\n\n    if (options.plugins) this.use.apply(this, options.plugins);\n    return this;\n  }\n  /**\n   * Create a Style Sheet.\n   */\n  ;\n\n  _proto.createStyleSheet = function createStyleSheet(styles, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        index = _options.index;\n\n    if (typeof index !== 'number') {\n      index = registry.index === 0 ? 0 : registry.index + 1;\n    }\n\n    var sheet = new StyleSheet(styles, _extends({}, options, {\n      jss: this,\n      generateId: options.generateId || this.generateId,\n      insertionPoint: this.options.insertionPoint,\n      Renderer: this.options.Renderer,\n      index: index\n    }));\n    this.plugins.onProcessSheet(sheet);\n    return sheet;\n  }\n  /**\n   * Detach the Style Sheet and remove it from the registry.\n   */\n  ;\n\n  _proto.removeStyleSheet = function removeStyleSheet(sheet) {\n    sheet.detach();\n    registry.remove(sheet);\n    return this;\n  }\n  /**\n   * Create a rule without a Style Sheet.\n   * [Deprecated] will be removed in the next major version.\n   */\n  ;\n\n  _proto.createRule = function createRule$1(name, style, options) {\n    if (style === void 0) {\n      style = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // Enable rule without name for inline styles.\n    if (typeof name === 'object') {\n      // $FlowFixMe[incompatible-call]\n      return this.createRule(undefined, name, style);\n    } // $FlowFixMe[incompatible-type]\n\n\n    var ruleOptions = _extends({}, options, {\n      name: name,\n      jss: this,\n      Renderer: this.options.Renderer\n    });\n\n    if (!ruleOptions.generateId) ruleOptions.generateId = this.generateId;\n    if (!ruleOptions.classes) ruleOptions.classes = {};\n    if (!ruleOptions.keyframes) ruleOptions.keyframes = {};\n\n    var rule = createRule(name, style, ruleOptions);\n\n    if (rule) this.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Register plugin. Passed function will be invoked with a rule instance.\n   */\n  ;\n\n  _proto.use = function use() {\n    var _this = this;\n\n    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n      plugins[_key] = arguments[_key];\n    }\n\n    plugins.forEach(function (plugin) {\n      _this.plugins.use(plugin);\n    });\n    return this;\n  };\n\n  return Jss;\n}();\n\n/**\n * Extracts a styles object with only props that contain function values.\n */\nfunction getDynamicStyles(styles) {\n  var to = null;\n\n  for (var key in styles) {\n    var value = styles[key];\n    var type = typeof value;\n\n    if (type === 'function') {\n      if (!to) to = {};\n      to[key] = value;\n    } else if (type === 'object' && value !== null && !Array.isArray(value)) {\n      var extracted = getDynamicStyles(value);\n\n      if (extracted) {\n        if (!to) to = {};\n        to[key] = extracted;\n      }\n    }\n  }\n\n  return to;\n}\n\n/**\n * SheetsManager is like a WeakMap which is designed to count StyleSheet\n * instances and attach/detach automatically.\n */\nvar SheetsManager =\n/*#__PURE__*/\nfunction () {\n  function SheetsManager() {\n    this.length = 0;\n    this.sheets = new WeakMap();\n  }\n\n  var _proto = SheetsManager.prototype;\n\n  _proto.get = function get(key) {\n    var entry = this.sheets.get(key);\n    return entry && entry.sheet;\n  };\n\n  _proto.add = function add(key, sheet) {\n    if (this.sheets.has(key)) return;\n    this.length++;\n    this.sheets.set(key, {\n      sheet: sheet,\n      refs: 0\n    });\n  };\n\n  _proto.manage = function manage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs === 0) {\n        entry.sheet.attach();\n      }\n\n      entry.refs++;\n      return entry.sheet;\n    }\n\n    warning(false, \"[JSS] SheetsManager: can't find sheet to manage\");\n    return undefined;\n  };\n\n  _proto.unmanage = function unmanage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs > 0) {\n        entry.refs--;\n        if (entry.refs === 0) entry.sheet.detach();\n      }\n    } else {\n      warning(false, \"SheetsManager: can't find sheet to unmanage\");\n    }\n  };\n\n  _createClass(SheetsManager, [{\n    key: \"size\",\n    get: function get() {\n      return this.length;\n    }\n  }]);\n\n  return SheetsManager;\n}();\n\n/**\n * A better abstraction over CSS.\n *\n * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present\n * @website https://github.com/cssinjs/jss\n * @license MIT\n */\n\n/**\n * Export a constant indicating if this browser has CSSTOM support.\n * https://developers.google.com/web/updates/2018/03/cssom\n */\nvar hasCSSTOMSupport = typeof CSS === 'object' && CSS != null && 'number' in CSS;\n/**\n * Creates a new instance of Jss.\n */\n\nvar create = function create(options) {\n  return new Jss(options);\n};\n/**\n * A global Jss instance.\n */\n\nvar jss = create();\n\nexport default jss;\nexport { RuleList, SheetsManager, SheetsRegistry, create, createGenerateId, createRule, getDynamicStyles, hasCSSTOMSupport, registry as sheets, toCssValue };\n","import warning from 'tiny-warning';\nimport { createRule } from 'jss';\n\nvar now = Date.now();\nvar fnValuesNs = \"fnValues\" + now;\nvar fnRuleNs = \"fnStyle\" + ++now;\n\nvar functionPlugin = function functionPlugin() {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (typeof decl !== 'function') return null;\n      var rule = createRule(name, {}, options);\n      rule[fnRuleNs] = decl;\n      return rule;\n    },\n    onProcessStyle: function onProcessStyle(style, rule) {\n      // We need to extract function values from the declaration, so that we can keep core unaware of them.\n      // We need to do that only once.\n      // We don't need to extract functions on each style update, since this can happen only once.\n      // We don't support function values inside of function rules.\n      if (fnValuesNs in rule || fnRuleNs in rule) return style;\n      var fnValues = {};\n\n      for (var prop in style) {\n        var value = style[prop];\n        if (typeof value !== 'function') continue;\n        delete style[prop];\n        fnValues[prop] = value;\n      } // $FlowFixMe[prop-missing]\n\n\n      rule[fnValuesNs] = fnValues;\n      return style;\n    },\n    onUpdate: function onUpdate(data, rule, sheet, options) {\n      var styleRule = rule; // $FlowFixMe[prop-missing]\n\n      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object\n      // will be returned from that function.\n\n      if (fnRule) {\n        // Empty object will remove all currently defined props\n        // in case function rule returns a falsy value.\n        styleRule.style = fnRule(data) || {};\n\n        if (process.env.NODE_ENV === 'development') {\n          for (var prop in styleRule.style) {\n            if (typeof styleRule.style[prop] === 'function') {\n              process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Function values inside function rules are not supported.') : void 0;\n              break;\n            }\n          }\n        }\n      } // $FlowFixMe[prop-missing]\n\n\n      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.\n\n      if (fnValues) {\n        for (var _prop in fnValues) {\n          styleRule.prop(_prop, fnValues[_prop](data), options);\n        }\n      }\n    }\n  };\n};\n\nexport default functionPlugin;\n","import $$observable from 'symbol-observable';\nimport { createRule } from 'jss';\n\nvar isObservable = function isObservable(value) {\n  return value && value[$$observable] && value === value[$$observable]();\n};\n\nvar observablePlugin = function observablePlugin(updateOptions) {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (!isObservable(decl)) return null; // Cast `decl` to `Observable`, since it passed the type guard.\n\n      var style$ = decl;\n      var rule = createRule(name, {}, options); // TODO\n      // Call `stream.subscribe()` returns a subscription, which should be explicitly\n      // unsubscribed from when we know this sheet is no longer needed.\n\n      style$.subscribe(function (style) {\n        for (var prop in style) {\n          rule.prop(prop, style[prop], updateOptions);\n        }\n      });\n      return rule;\n    },\n    onProcessRule: function onProcessRule(rule) {\n      if (rule && rule.type !== 'style') return;\n      var styleRule = rule;\n      var style = styleRule.style;\n\n      var _loop = function _loop(prop) {\n        var value = style[prop];\n        if (!isObservable(value)) return \"continue\";\n        delete style[prop];\n        value.subscribe({\n          next: function next(nextValue) {\n            styleRule.prop(prop, nextValue, updateOptions);\n          }\n        });\n      };\n\n      for (var prop in style) {\n        var _ret = _loop(prop);\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n  };\n};\n\nexport default observablePlugin;\n","import warning from 'tiny-warning';\n\nvar semiWithNl = /;\\n/;\n\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\nvar parse = function parse(cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n\n    if (colonIndex === -1) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Malformed CSS string \\\"\" + decl + \"\\\"\") : void 0;\n      continue;\n    }\n\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n\n  return style;\n};\n\nvar onProcessRule = function onProcessRule(rule) {\n  if (typeof rule.style === 'string') {\n    // $FlowFixMe[prop-missing] We can safely assume that rule has the style property\n    rule.style = parse(rule.style);\n  }\n};\n\nfunction templatePlugin() {\n  return {\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default templatePlugin;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.rules = void 0;\n    this.options = void 0;\n    this.key = void 0;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (rule) this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.rules.toString();\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.options = void 0;\n    this.rule = void 0;\n    this.isProcessed = false;\n    this.key = void 0;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return;\n    handleNestedGlobalContainerRule(rule, sheet);\n    handlePrefixedGlobalRule(rule, sheet);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\n\nvar isObject = function isObject(obj) {\n  return obj && typeof obj === 'object' && !Array.isArray(obj);\n};\n\nvar valueNs = \"extendCurrValue\" + Date.now();\n\nfunction mergeExtend(style, rule, sheet, newStyle) {\n  var extendType = typeof style.extend; // Extend using a rule name.\n\n  if (extendType === 'string') {\n    if (!sheet) return;\n    var refRule = sheet.getRule(style.extend);\n    if (!refRule) return;\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] A rule tries to extend itself \\n\" + rule.toString()) : void 0;\n      return;\n    }\n\n    var parent = refRule.options.parent;\n\n    if (parent) {\n      var originalStyle = parent.rules.raw[style.extend];\n      extend(originalStyle, rule, sheet, newStyle);\n    }\n\n    return;\n  } // Extend using an array.\n\n\n  if (Array.isArray(style.extend)) {\n    for (var index = 0; index < style.extend.length; index++) {\n      var singleExtend = style.extend[index];\n      var singleStyle = typeof singleExtend === 'string' ? _extends({}, style, {\n        extend: singleExtend\n      }) : style.extend[index];\n      extend(singleStyle, rule, sheet, newStyle);\n    }\n\n    return;\n  } // Extend is a style object.\n\n\n  for (var prop in style.extend) {\n    if (prop === 'extend') {\n      extend(style.extend.extend, rule, sheet, newStyle);\n      continue;\n    }\n\n    if (isObject(style.extend[prop])) {\n      if (!(prop in newStyle)) newStyle[prop] = {};\n      extend(style.extend[prop], rule, sheet, newStyle[prop]);\n      continue;\n    }\n\n    newStyle[prop] = style.extend[prop];\n  }\n}\n\nfunction mergeRest(style, rule, sheet, newStyle) {\n  // Copy base style.\n  for (var prop in style) {\n    if (prop === 'extend') continue;\n\n    if (isObject(newStyle[prop]) && isObject(style[prop])) {\n      extend(style[prop], rule, sheet, newStyle[prop]);\n      continue;\n    }\n\n    if (isObject(style[prop])) {\n      newStyle[prop] = extend(style[prop], rule, sheet);\n      continue;\n    }\n\n    newStyle[prop] = style[prop];\n  }\n}\n/**\n * Recursively extend styles.\n */\n\n\nfunction extend(style, rule, sheet, newStyle) {\n  if (newStyle === void 0) {\n    newStyle = {};\n  }\n\n  mergeExtend(style, rule, sheet, newStyle);\n  mergeRest(style, rule, sheet, newStyle);\n  return newStyle;\n}\n/**\n * Handle `extend` property.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssExtend() {\n  function onProcessStyle(style, rule, sheet) {\n    if ('extend' in style) return extend(style, rule, sheet);\n    return style;\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop !== 'extend') return value; // Value is empty, remove properties set previously.\n\n    if (value == null || value === false) {\n      // $FlowFixMe[prop-missing]\n      for (var key in rule[valueNs]) {\n        rule.prop(key, null);\n      } // $FlowFixMe[prop-missing] Flow complains because there is no indexer property in StyleRule\n\n\n      rule[valueNs] = null;\n      return null;\n    }\n\n    if (typeof value === 'object') {\n      // $FlowFixMe[invalid-in-rhs] This will be an object\n      for (var _key in value) {\n        // $FlowFixMe[incompatible-use] This will be an object\n        rule.prop(_key, value[_key]);\n      } // $FlowFixMe[prop-missing] Flow complains because there is no indexer property in StyleRule\n\n\n      rule[valueNs] = value;\n    } // Make sure we don't set the value in the core.\n\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssExtend;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\n\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\nfunction jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container, sheet) {\n    return function (match, key) {\n      var rule = container.getRule(key) || sheet && sheet.getRule(key);\n\n      if (rule) {\n        rule = rule;\n        return rule.selector;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Could not find the referenced rule \\\"\" + key + \"\\\" in \\\"\" + (container.options.meta || container.toString()) + \"\\\".\") : void 0;\n      return key;\n    };\n  }\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    var parentSelectors = parentProp.split(separatorRegExp);\n    var nestedSelectors = nestedProp.split(separatorRegExp);\n    var result = '';\n\n    for (var i = 0; i < parentSelectors.length; i++) {\n      var parent = parentSelectors[i];\n\n      for (var j = 0; j < nestedSelectors.length; j++) {\n        var nested = nestedSelectors[j];\n        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.\n\n        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n      }\n    }\n\n    return result;\n  }\n\n  function getOptions(rule, container, prevOptions) {\n    // Options has been already created, now we only increase index.\n    if (prevOptions) return _extends({}, prevOptions, {\n      index: prevOptions.index + 1 // $FlowFixMe[prop-missing]\n\n    });\n    var nestingLevel = rule.options.nestingLevel;\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\n    var options = _extends({}, rule.options, {\n      nestingLevel: nestingLevel,\n      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n\n    });\n\n    delete options.name;\n    return options;\n  }\n\n  function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style') return style;\n    var styleRule = rule;\n    var container = styleRule.options.parent;\n    var options;\n    var replaceRef;\n\n    for (var prop in style) {\n      var isNested = prop.indexOf('&') !== -1;\n      var isNestedConditional = prop[0] === '@';\n      if (!isNested && !isNestedConditional) continue;\n      options = getOptions(styleRule, container, options);\n\n      if (isNested) {\n        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n\n        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n\n        selector = selector.replace(refRegExp, replaceRef);\n        container.addRule(selector, style[prop], _extends({}, options, {\n          selector: selector\n        }));\n      } else if (isNestedConditional) {\n        // Place conditional right after the parent rule to ensure right ordering.\n        container.addRule(prop, {}, options) // Flow expects more options but they aren't required\n        // And flow doesn't know this will always be a StyleRule which has the addRule method\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[prop-missing]\n        .addRule(styleRule.key, style[prop], {\n          selector: styleRule.selector\n        });\n      }\n\n      delete style[prop];\n    }\n\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssNested;\n","import warning from 'tiny-warning';\n\n/**\n * Set selector.\n *\n * @param {Object} original rule\n * @param {String} className class string\n * @return {Boolean} flag, indicating function was successfull or not\n */\nfunction registerClass(rule, className) {\n  // Skip falsy values\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\n\n  if (Array.isArray(className)) {\n    for (var index = 0; index < className.length; index++) {\n      var isSetted = registerClass(rule, className[index]);\n      if (!isSetted) return false;\n    }\n\n    return true;\n  } // Support space separated class names `{composes: 'foo bar'}`\n\n\n  if (className.indexOf(' ') > -1) {\n    return registerClass(rule, className.split(' '));\n  }\n\n  var _ref = rule.options,\n      parent = _ref.parent; // It is a ref to a local rule.\n\n  if (className[0] === '$') {\n    var refRule = parent.getRule(className.substr(1));\n\n    if (!refRule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\n    return true;\n  }\n\n  parent.classes[rule.key] += \" \" + className;\n  return true;\n}\n/**\n * Convert compose property to additional class, remove property from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssCompose() {\n  function onProcessStyle(style, rule) {\n    if (!('composes' in style)) return style;\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\n\n    delete style.composes;\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssCompose;\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","import hyphenate from 'hyphenate-style-name';\n\n/**\n * Convert camel cased property names to dash separated.\n *\n * @param {Object} style\n * @return {Object}\n */\n\nfunction convertCase(style) {\n  var converted = {};\n\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n *\n * @param {Rule} rule\n */\n\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n\n      return style;\n    }\n\n    return convertCase(style);\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default camelCase;\n","import { hasCSSTOMSupport } from 'jss';\n\nvar px = hasCSSTOMSupport && CSS ? CSS.px : 'px';\nvar ms = hasCSSTOMSupport && CSS ? CSS.ms : 'ms';\nvar percent = hasCSSTOMSupport && CSS ? CSS.percent : '%';\n/**\n * Generated jss-plugin-default-unit CSS property units\n *\n * @type object\n */\n\nvar defaultUnits = {\n  // Animation properties\n  'animation-delay': ms,\n  'animation-duration': ms,\n  // Background properties\n  'background-position': px,\n  'background-position-x': px,\n  'background-position-y': px,\n  'background-size': px,\n  // Border Properties\n  border: px,\n  'border-bottom': px,\n  'border-bottom-left-radius': px,\n  'border-bottom-right-radius': px,\n  'border-bottom-width': px,\n  'border-left': px,\n  'border-left-width': px,\n  'border-radius': px,\n  'border-right': px,\n  'border-right-width': px,\n  'border-top': px,\n  'border-top-left-radius': px,\n  'border-top-right-radius': px,\n  'border-top-width': px,\n  'border-width': px,\n  'border-block': px,\n  'border-block-end': px,\n  'border-block-end-width': px,\n  'border-block-start': px,\n  'border-block-start-width': px,\n  'border-block-width': px,\n  'border-inline': px,\n  'border-inline-end': px,\n  'border-inline-end-width': px,\n  'border-inline-start': px,\n  'border-inline-start-width': px,\n  'border-inline-width': px,\n  'border-start-start-radius': px,\n  'border-start-end-radius': px,\n  'border-end-start-radius': px,\n  'border-end-end-radius': px,\n  // Margin properties\n  margin: px,\n  'margin-bottom': px,\n  'margin-left': px,\n  'margin-right': px,\n  'margin-top': px,\n  'margin-block': px,\n  'margin-block-end': px,\n  'margin-block-start': px,\n  'margin-inline': px,\n  'margin-inline-end': px,\n  'margin-inline-start': px,\n  // Padding properties\n  padding: px,\n  'padding-bottom': px,\n  'padding-left': px,\n  'padding-right': px,\n  'padding-top': px,\n  'padding-block': px,\n  'padding-block-end': px,\n  'padding-block-start': px,\n  'padding-inline': px,\n  'padding-inline-end': px,\n  'padding-inline-start': px,\n  // Mask properties\n  'mask-position-x': px,\n  'mask-position-y': px,\n  'mask-size': px,\n  // Width and height properties\n  height: px,\n  width: px,\n  'min-height': px,\n  'max-height': px,\n  'min-width': px,\n  'max-width': px,\n  // Position properties\n  bottom: px,\n  left: px,\n  top: px,\n  right: px,\n  inset: px,\n  'inset-block': px,\n  'inset-block-end': px,\n  'inset-block-start': px,\n  'inset-inline': px,\n  'inset-inline-end': px,\n  'inset-inline-start': px,\n  // Shadow properties\n  'box-shadow': px,\n  'text-shadow': px,\n  // Column properties\n  'column-gap': px,\n  'column-rule': px,\n  'column-rule-width': px,\n  'column-width': px,\n  // Font and text properties\n  'font-size': px,\n  'font-size-delta': px,\n  'letter-spacing': px,\n  'text-decoration-thickness': px,\n  'text-indent': px,\n  'text-stroke': px,\n  'text-stroke-width': px,\n  'word-spacing': px,\n  // Motion properties\n  motion: px,\n  'motion-offset': px,\n  // Outline properties\n  outline: px,\n  'outline-offset': px,\n  'outline-width': px,\n  // Perspective properties\n  perspective: px,\n  'perspective-origin-x': percent,\n  'perspective-origin-y': percent,\n  // Transform properties\n  'transform-origin': percent,\n  'transform-origin-x': percent,\n  'transform-origin-y': percent,\n  'transform-origin-z': percent,\n  // Transition properties\n  'transition-delay': ms,\n  'transition-duration': ms,\n  // Alignment properties\n  'vertical-align': px,\n  'flex-basis': px,\n  // Some random properties\n  'shape-margin': px,\n  size: px,\n  gap: px,\n  // Grid properties\n  grid: px,\n  'grid-gap': px,\n  'row-gap': px,\n  'grid-row-gap': px,\n  'grid-column-gap': px,\n  'grid-template-rows': px,\n  'grid-template-columns': px,\n  'grid-auto-rows': px,\n  'grid-auto-columns': px,\n  // Not existing properties.\n  // Used to avoid issues with jss-plugin-expand integration.\n  'box-shadow-x': px,\n  'box-shadow-y': px,\n  'box-shadow-blur': px,\n  'box-shadow-spread': px,\n  'font-line-height': px,\n  'text-shadow-x': px,\n  'text-shadow-y': px,\n  'text-shadow-blur': px\n};\n\n/**\n * Clones the object and adds a camel cased property version.\n */\nfunction addCamelCasedVersion(obj) {\n  var regExp = /(-[a-z])/g;\n\n  var replace = function replace(str) {\n    return str[1].toUpperCase();\n  };\n\n  var newObj = {};\n\n  for (var _key in obj) {\n    newObj[_key] = obj[_key];\n    newObj[_key.replace(regExp, replace)] = obj[_key];\n  }\n\n  return newObj;\n}\n\nvar units = addCamelCasedVersion(defaultUnits);\n/**\n * Recursive deep style passing function\n */\n\nfunction iterate(prop, value, options) {\n  if (value == null) return value;\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      value[i] = iterate(prop, value[i], options);\n    }\n  } else if (typeof value === 'object') {\n    if (prop === 'fallbacks') {\n      for (var innerProp in value) {\n        value[innerProp] = iterate(innerProp, value[innerProp], options);\n      }\n    } else {\n      for (var _innerProp in value) {\n        value[_innerProp] = iterate(prop + \"-\" + _innerProp, value[_innerProp], options);\n      }\n    }\n  } else if (typeof value === 'number' && !Number.isNaN(value)) {\n    var unit = options[prop] || units[prop]; // Add the unit if available, except for the special case of 0px.\n\n    if (unit && !(value === 0 && unit === px)) {\n      return typeof unit === 'function' ? unit(value).toString() : \"\" + value + unit;\n    }\n\n    return value.toString();\n  }\n\n  return value;\n}\n/**\n * Add unit to numeric values.\n */\n\n\nfunction defaultUnit(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var camelCasedOptions = addCamelCasedVersion(options);\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n\n    for (var prop in style) {\n      style[prop] = iterate(prop, style[prop], camelCasedOptions);\n    }\n\n    return style;\n  }\n\n  function onChangeValue(value, prop) {\n    return iterate(prop, value, camelCasedOptions);\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default defaultUnit;\n","/**\n * A scheme for converting properties from array to regular style.\n * All properties listed below will be transformed to a string separated by space.\n */\nvar propArray = {\n  'background-size': true,\n  'background-position': true,\n  border: true,\n  'border-bottom': true,\n  'border-left': true,\n  'border-top': true,\n  'border-right': true,\n  'border-radius': true,\n  'border-image': true,\n  'border-width': true,\n  'border-style': true,\n  'border-color': true,\n  'box-shadow': true,\n  flex: true,\n  margin: true,\n  padding: true,\n  outline: true,\n  'transform-origin': true,\n  transform: true,\n  transition: true\n  /**\n   * A scheme for converting arrays to regular styles inside of objects.\n   * For e.g.: \"{position: [0, 0]}\" => \"background-position: 0 0;\".\n   */\n\n};\nvar propArrayInObj = {\n  position: true,\n  // background-position\n  size: true // background-size\n\n  /**\n   * A scheme for parsing and building correct styles from passed objects.\n   */\n\n};\nvar propObj = {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  background: {\n    attachment: null,\n    color: null,\n    image: null,\n    position: null,\n    repeat: null\n  },\n  border: {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-top': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-right': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-bottom': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-left': {\n    width: null,\n    style: null,\n    color: null\n  },\n  outline: {\n    width: null,\n    style: null,\n    color: null\n  },\n  'list-style': {\n    type: null,\n    position: null,\n    image: null\n  },\n  transition: {\n    property: null,\n    duration: null,\n    'timing-function': null,\n    timingFunction: null,\n    // Needed for avoiding comilation issues with jss-plugin-camel-case\n    delay: null\n  },\n  animation: {\n    name: null,\n    duration: null,\n    'timing-function': null,\n    timingFunction: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    delay: null,\n    'iteration-count': null,\n    iterationCount: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    direction: null,\n    'fill-mode': null,\n    fillMode: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    'play-state': null,\n    playState: null // Needed to avoid compilation issues with jss-plugin-camel-case\n\n  },\n  'box-shadow': {\n    x: 0,\n    y: 0,\n    blur: 0,\n    spread: 0,\n    color: null,\n    inset: null\n  },\n  'text-shadow': {\n    x: 0,\n    y: 0,\n    blur: null,\n    color: null\n  }\n  /**\n   * A scheme for converting non-standart properties inside object.\n   * For e.g.: include 'border-radius' property inside 'border' object.\n   */\n\n};\nvar customPropObj = {\n  border: {\n    radius: 'border-radius',\n    image: 'border-image',\n    width: 'border-width',\n    style: 'border-style',\n    color: 'border-color'\n  },\n  'border-bottom': {\n    width: 'border-bottom-width',\n    style: 'border-bottom-style',\n    color: 'border-bottom-color'\n  },\n  'border-top': {\n    width: 'border-top-width',\n    style: 'border-top-style',\n    color: 'border-top-color'\n  },\n  'border-left': {\n    width: 'border-left-width',\n    style: 'border-left-style',\n    color: 'border-left-color'\n  },\n  'border-right': {\n    width: 'border-right-width',\n    style: 'border-right-style',\n    color: 'border-right-color'\n  },\n  background: {\n    size: 'background-size',\n    image: 'background-image'\n  },\n  font: {\n    style: 'font-style',\n    variant: 'font-variant',\n    weight: 'font-weight',\n    stretch: 'font-stretch',\n    size: 'font-size',\n    family: 'font-family',\n    lineHeight: 'line-height',\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    'line-height': 'line-height'\n  },\n  flex: {\n    grow: 'flex-grow',\n    basis: 'flex-basis',\n    direction: 'flex-direction',\n    wrap: 'flex-wrap',\n    flow: 'flex-flow',\n    shrink: 'flex-shrink'\n  },\n  align: {\n    self: 'align-self',\n    items: 'align-items',\n    content: 'align-content'\n  },\n  grid: {\n    'template-columns': 'grid-template-columns',\n    templateColumns: 'grid-template-columns',\n    'template-rows': 'grid-template-rows',\n    templateRows: 'grid-template-rows',\n    'template-areas': 'grid-template-areas',\n    templateAreas: 'grid-template-areas',\n    template: 'grid-template',\n    'auto-columns': 'grid-auto-columns',\n    autoColumns: 'grid-auto-columns',\n    'auto-rows': 'grid-auto-rows',\n    autoRows: 'grid-auto-rows',\n    'auto-flow': 'grid-auto-flow',\n    autoFlow: 'grid-auto-flow',\n    row: 'grid-row',\n    column: 'grid-column',\n    'row-start': 'grid-row-start',\n    rowStart: 'grid-row-start',\n    'row-end': 'grid-row-end',\n    rowEnd: 'grid-row-end',\n    'column-start': 'grid-column-start',\n    columnStart: 'grid-column-start',\n    'column-end': 'grid-column-end',\n    columnEnd: 'grid-column-end',\n    area: 'grid-area',\n    gap: 'grid-gap',\n    'row-gap': 'grid-row-gap',\n    rowGap: 'grid-row-gap',\n    'column-gap': 'grid-column-gap',\n    columnGap: 'grid-column-gap'\n  }\n};\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Map values by given prop.\n *\n * @param {Array} array of values\n * @param {String} original property\n * @param {String} original rule\n * @return {String} mapped values\n */\nfunction mapValuesByProp(value, prop, rule) {\n  return value.map(function (item) {\n    return objectToArray(item, prop, rule, false, true);\n  });\n}\n/**\n * Convert array to nested array, if needed\n */\n\n\nfunction processArray(value, prop, scheme, rule) {\n  if (scheme[prop] == null) return value;\n  if (value.length === 0) return [];\n  if (Array.isArray(value[0])) return processArray(value[0], prop, scheme, rule);\n\n  if (typeof value[0] === 'object') {\n    return mapValuesByProp(value, prop, rule);\n  }\n\n  return [value];\n}\n/**\n * Convert object to array.\n */\n\n\nfunction objectToArray(value, prop, rule, isFallback, isInArray) {\n  if (!(propObj[prop] || customPropObj[prop])) return [];\n  var result = []; // Check if exists any non-standard property\n\n  if (customPropObj[prop]) {\n    // eslint-disable-next-line no-param-reassign\n    value = customPropsToStyle(value, rule, customPropObj[prop], isFallback);\n  } // Pass throught all standart props\n\n\n  if (Object.keys(value).length) {\n    for (var baseProp in propObj[prop]) {\n      if (value[baseProp]) {\n        if (Array.isArray(value[baseProp])) {\n          result.push(propArrayInObj[baseProp] === null ? value[baseProp] : value[baseProp].join(' '));\n        } else result.push(value[baseProp]);\n\n        continue;\n      } // Add default value from props config.\n\n\n      if (propObj[prop][baseProp] != null) {\n        result.push(propObj[prop][baseProp]);\n      }\n    }\n  }\n\n  if (!result.length || isInArray) return result;\n  return [result];\n}\n/**\n * Convert custom properties values to styles adding them to rule directly\n */\n\n\nfunction customPropsToStyle(value, rule, customProps, isFallback) {\n  for (var prop in customProps) {\n    var propName = customProps[prop]; // If current property doesn't exist already in rule - add new one\n\n    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {\n      var _styleDetector;\n\n      var appendedValue = styleDetector((_styleDetector = {}, _styleDetector[propName] = value[prop], _styleDetector), rule)[propName]; // Add style directly in rule\n\n      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;\n    } // Delete converted property to avoid double converting\n\n\n    delete value[prop];\n  }\n\n  return value;\n}\n/**\n * Detect if a style needs to be converted.\n */\n\n\nfunction styleDetector(style, rule, isFallback) {\n  for (var prop in style) {\n    var value = style[prop];\n\n    if (Array.isArray(value)) {\n      // Check double arrays to avoid recursion.\n      if (!Array.isArray(value[0])) {\n        if (prop === 'fallbacks') {\n          for (var index = 0; index < style.fallbacks.length; index++) {\n            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);\n          }\n\n          continue;\n        }\n\n        style[prop] = processArray(value, prop, propArray, rule); // Avoid creating properties with empty values\n\n        if (!style[prop].length) delete style[prop];\n      }\n    } else if (typeof value === 'object') {\n      if (prop === 'fallbacks') {\n        style.fallbacks = styleDetector(style.fallbacks, rule, true);\n        continue;\n      }\n\n      style[prop] = objectToArray(value, prop, rule, isFallback); // Avoid creating properties with empty values\n\n      if (!style[prop].length) delete style[prop];\n    } // Maybe a computed value resulting in an empty string\n    else if (style[prop] === '') delete style[prop];\n  }\n\n  return style;\n}\n/**\n * Adds possibility to write expanded styles.\n */\n\n\nfunction jssExpand() {\n  function onProcessStyle(style, rule) {\n    if (!style || rule.type !== 'style') return style;\n\n    if (Array.isArray(style)) {\n      // Pass rules one by one and reformat them\n      for (var index = 0; index < style.length; index++) {\n        style[index] = styleDetector(style[index], rule);\n      }\n\n      return style;\n    }\n\n    return styleDetector(style, rule);\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssExpand;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import isInBrowser from 'is-in-browser';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\n\n// Export javascript style and css style vendor prefixes.\nvar js = '';\nvar css = '';\nvar vendor = '';\nvar browser = '';\nvar isTouch = isInBrowser && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.\n\nif (isInBrowser) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n\n  var _document$createEleme = document.createElement('p'),\n      style = _document$createEleme.style;\n\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  } // Correctly detect the Edge browser.\n\n\n  if (js === 'Webkit' && 'msHyphens' in style) {\n    js = 'ms';\n    css = jsCssMap.ms;\n    browser = 'edge';\n  } // Correctly detect the Safari browser.\n\n\n  if (js === 'Webkit' && '-apple-trailing-word' in style) {\n    vendor = 'apple';\n  }\n}\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String, vendor: String, browser: String}}\n * @api public\n */\n\n\nvar prefix = {\n  js: js,\n  css: css,\n  vendor: vendor,\n  browser: browser,\n  isTouch: isTouch\n};\n\n/**\n * Test if a keyframe at-rule should be prefixed or not\n *\n * @param {String} vendor prefix string for the current browser.\n * @return {String}\n * @api public\n */\n\nfunction supportedKeyframes(key) {\n  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'\n  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.\n  // https://caniuse.com/#search=keyframes\n\n  if (prefix.js === 'ms') return key;\n  return \"@\" + prefix.css + \"keyframes\" + key.substr(10);\n}\n\n// https://caniuse.com/#search=appearance\n\nvar appearence = {\n  noPrefill: ['appearance'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'appearance') return false;\n    if (prefix.js === 'ms') return \"-webkit-\" + prop;\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=color-adjust\n\nvar colorAdjust = {\n  noPrefill: ['color-adjust'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'color-adjust') return false;\n    if (prefix.js === 'Webkit') return prefix.css + \"print-\" + prop;\n    return prop;\n  }\n};\n\nvar regExp = /[-\\s]+(.)?/g;\n/**\n * Replaces the letter with the capital letter\n *\n * @param {String} match\n * @param {String} c\n * @return {String}\n * @api private\n */\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n/**\n * Convert dash separated strings to camel-cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\n/**\n * Convert dash separated strings to pascal cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction pascalize(str) {\n  return camelize(\"-\" + str);\n}\n\n// but we can use a longhand property instead.\n// https://caniuse.com/#search=mask\n\nvar mask = {\n  noPrefill: ['mask'],\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^mask/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var longhand = 'mask-image';\n\n      if (camelize(longhand) in style) {\n        return prop;\n      }\n\n      if (prefix.js + pascalize(longhand) in style) {\n        return prefix.css + prop;\n      }\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=text-orientation\n\nvar textOrientation = {\n  noPrefill: ['text-orientation'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'text-orientation') return false;\n\n    if (prefix.vendor === 'apple' && !prefix.isTouch) {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=transform\n\nvar transform = {\n  noPrefill: ['transform'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transform') return false;\n\n    if (options.transform) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=transition\n\nvar transition = {\n  noPrefill: ['transition'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transition') return false;\n\n    if (options.transition) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=writing-mode\n\nvar writingMode = {\n  noPrefill: ['writing-mode'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'writing-mode') return false;\n\n    if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=user-select\n\nvar userSelect = {\n  noPrefill: ['user-select'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'user-select') return false;\n\n    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=multicolumn\n// https://github.com/postcss/autoprefixer/issues/491\n// https://github.com/postcss/autoprefixer/issues/177\n\nvar breakPropsOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^break-/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var jsProp = \"WebkitColumn\" + pascalize(prop);\n      return jsProp in style ? prefix.css + \"column-\" + prop : false;\n    }\n\n    if (prefix.js === 'Moz') {\n      var _jsProp = \"page\" + pascalize(prop);\n\n      return _jsProp in style ? \"page-\" + prop : false;\n    }\n\n    return false;\n  }\n};\n\n// See https://github.com/postcss/autoprefixer/issues/324.\n\nvar inlineLogicalOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (prefix.js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\n// Camelization is required because we can't test using.\n// CSS syntax for e.g. in FF.\n\nvar unprefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    return camelize(prop) in style ? prop : false;\n  }\n};\n\nvar prefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.\n\n    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.\n\n    if (prop[0] === '-' && prop[1] === '-') return prop;\n    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.\n\n    if (prefix.js !== 'Webkit' && \"Webkit\" + pascalized in style) return \"-webkit-\" + prop;\n    return false;\n  }\n};\n\n// https://caniuse.com/#search=scroll-snap\n\nvar scrollSnap = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop.substring(0, 11) !== 'scroll-snap') return false;\n\n    if (prefix.js === 'ms') {\n      return \"\" + prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=overscroll-behavior\n\nvar overscrollBehavior = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'overscroll-behavior') return false;\n\n    if (prefix.js === 'ms') {\n      return prefix.css + \"scroll-chaining\";\n    }\n\n    return prop;\n  }\n};\n\nvar propMap = {\n  'flex-grow': 'flex-positive',\n  'flex-shrink': 'flex-negative',\n  'flex-basis': 'flex-preferred-size',\n  'justify-content': 'flex-pack',\n  order: 'flex-order',\n  'align-items': 'flex-align',\n  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.\n\n}; // Support old flex spec from 2012.\n\nvar flex2012 = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var newProp = propMap[prop];\n    if (!newProp) return false;\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\nvar propMap$1 = {\n  flex: 'box-flex',\n  'flex-grow': 'box-flex',\n  'flex-direction': ['box-orient', 'box-direction'],\n  order: 'box-ordinal-group',\n  'align-items': 'box-align',\n  'flex-flow': ['box-orient', 'box-direction'],\n  'justify-content': 'box-pack'\n};\nvar propKeys = Object.keys(propMap$1);\n\nvar prefixCss = function prefixCss(p) {\n  return prefix.css + p;\n}; // Support old flex spec from 2009.\n\n\nvar flex2009 = {\n  supportedProperty: function supportedProperty(prop, style, _ref) {\n    var multiple = _ref.multiple;\n\n    if (propKeys.indexOf(prop) > -1) {\n      var newProp = propMap$1[prop];\n\n      if (!Array.isArray(newProp)) {\n        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n      }\n\n      if (!multiple) return false;\n\n      for (var i = 0; i < newProp.length; i++) {\n        if (!(prefix.js + pascalize(newProp[0]) in style)) {\n          return false;\n        }\n      }\n\n      return newProp.map(prefixCss);\n    }\n\n    return false;\n  }\n};\n\n// plugins = [\n//   ...plugins,\n//    breakPropsOld,\n//    inlineLogicalOld,\n//    unprefixed,\n//    prefixed,\n//    scrollSnap,\n//    flex2012,\n//    flex2009\n// ]\n// Plugins without 'noPrefill' value, going last.\n// 'flex-*' plugins should be at the bottom.\n// 'flex2009' going after 'flex2012'.\n// 'prefixed' going after 'unprefixed'\n\nvar plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];\nvar propertyDetectors = plugins.filter(function (p) {\n  return p.supportedProperty;\n}).map(function (p) {\n  return p.supportedProperty;\n});\nvar noPrefill = plugins.filter(function (p) {\n  return p.noPrefill;\n}).reduce(function (a, p) {\n  a.push.apply(a, _toConsumableArray(p.noPrefill));\n  return a;\n}, []);\n\nvar el;\nvar cache = {};\n\nif (isInBrowser) {\n  el = document.createElement('p'); // We test every property on vendor prefix requirement.\n  // Once tested, result is cached. It gives us up to 70% perf boost.\n  // http://jsperf.com/element-style-object-access-vs-plain-object\n  //\n  // Prefill cache with known css properties to reduce amount of\n  // properties we need to feature test at runtime.\n  // http://davidwalsh.name/vendor-prefix\n\n  var computed = window.getComputedStyle(document.documentElement, '');\n\n  for (var key$1 in computed) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];\n  } // Properties that cannot be correctly detected using the\n  // cache prefill method.\n\n\n  noPrefill.forEach(function (x) {\n    return delete cache[x];\n  });\n}\n/**\n * Test if a property is supported, returns supported property with vendor\n * prefix if required. Returns `false` if not supported.\n *\n * @param {String} prop dash separated\n * @param {Object} [options]\n * @return {String|Boolean}\n * @api public\n */\n\n\nfunction supportedProperty(prop, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // For server-side rendering.\n  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache[prop] != null) {\n    return cache[prop];\n  } // Check if 'transition' or 'transform' natively supported in browser.\n\n\n  if (prop === 'transition' || prop === 'transform') {\n    options[prop] = prop in el.style;\n  } // Find a plugin for current prefix property.\n\n\n  for (var i = 0; i < propertyDetectors.length; i++) {\n    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.\n\n    if (cache[prop]) break;\n  } // Reset styles for current property.\n  // Firefox can even throw an error for invalid properties, e.g., \"0\".\n\n\n  try {\n    el.style[prop] = '';\n  } catch (err) {\n    return false;\n  }\n\n  return cache[prop];\n}\n\nvar cache$1 = {};\nvar transitionProperties = {\n  transition: 1,\n  'transition-property': 1,\n  '-webkit-transition': 1,\n  '-webkit-transition-property': 1\n};\nvar transPropsRegExp = /(^\\s*[\\w-]+)|, (\\s*[\\w-]+)(?![^()]*\\))/g;\nvar el$1;\n/**\n * Returns prefixed value transition/transform if needed.\n *\n * @param {String} match\n * @param {String} p1\n * @param {String} p2\n * @return {String}\n * @api private\n */\n\nfunction prefixTransitionCallback(match, p1, p2) {\n  if (p1 === 'var') return 'var';\n  if (p1 === 'all') return 'all';\n  if (p2 === 'all') return ', all';\n  var prefixedValue = p1 ? supportedProperty(p1) : \", \" + supportedProperty(p2);\n  if (!prefixedValue) return p1 || p2;\n  return prefixedValue;\n}\n\nif (isInBrowser) el$1 = document.createElement('p');\n/**\n * Returns prefixed value if needed. Returns `false` if value is not supported.\n *\n * @param {String} property\n * @param {String} value\n * @return {String|Boolean}\n * @api public\n */\n\nfunction supportedValue(property, value) {\n  // For server-side rendering.\n  var prefixedValue = value;\n  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.\n  // We want only prefixable values here.\n  // eslint-disable-next-line no-restricted-globals\n\n  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {\n    return prefixedValue;\n  } // Create cache key for current value.\n\n\n  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache$1[cacheKey] != null) {\n    return cache$1[cacheKey];\n  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.\n\n\n  try {\n    // Test value as it is.\n    el$1.style[property] = prefixedValue;\n  } catch (err) {\n    // Return false if value not supported.\n    cache$1[cacheKey] = false;\n    return false;\n  } // If 'transition' or 'transition-property' property.\n\n\n  if (transitionProperties[property]) {\n    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);\n  } else if (el$1.style[property] === '') {\n    // Value with a vendor prefix.\n    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\n\n    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.\n\n    el$1.style[property] = prefixedValue; // Return false if value not supported.\n\n    if (el$1.style[property] === '') {\n      cache$1[cacheKey] = false;\n      return false;\n    }\n  } // Reset styles for current property.\n\n\n  el$1.style[property] = ''; // Write current value to cache.\n\n  cache$1[cacheKey] = prefixedValue;\n  return cache$1[cacheKey];\n}\n\nexport { prefix, supportedKeyframes, supportedProperty, supportedValue };\n","import { supportedKeyframes, supportedValue, supportedProperty } from 'css-vendor';\nimport { toCssValue } from 'jss';\n\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function prefixStyle(style) {\n    for (var prop in style) {\n      var value = style[prop];\n\n      if (prop === 'fallbacks' && Array.isArray(value)) {\n        style[prop] = value.map(prefixStyle);\n        continue;\n      }\n\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$1 && supportedValue$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n    return prefixStyle(style);\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;\n","/**\n * Sort props by length.\n */\nfunction jssPropsSort() {\n  var sort = function sort(prop0, prop1) {\n    if (prop0.length === prop1.length) {\n      return prop0 > prop1 ? 1 : -1;\n    }\n\n    return prop0.length - prop1.length;\n  };\n\n  return {\n    onProcessStyle: function onProcessStyle(style, rule) {\n      if (rule.type !== 'style') return style;\n      var newStyle = {};\n      var props = Object.keys(style).sort(sort);\n\n      for (var i = 0; i < props.length; i++) {\n        newStyle[props[i]] = style[props[i]];\n      }\n\n      return newStyle;\n    }\n  };\n}\n\nexport default jssPropsSort;\n","import functions from 'jss-plugin-rule-value-function';\nimport observable from 'jss-plugin-rule-value-observable';\nimport template from 'jss-plugin-template';\nimport global from 'jss-plugin-global';\nimport extend from 'jss-plugin-extend';\nimport nested from 'jss-plugin-nested';\nimport compose from 'jss-plugin-compose';\nimport camelCase from 'jss-plugin-camel-case';\nimport defaultUnit from 'jss-plugin-default-unit';\nimport expand from 'jss-plugin-expand';\nimport vendorPrefixer from 'jss-plugin-vendor-prefixer';\nimport propsSort from 'jss-plugin-props-sort';\n\nvar create = function create(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    plugins: [functions(), observable(options.observable), template(), global(), extend(), nested(), compose(), camelCase(), defaultUnit(options.defaultUnit), expand(), vendorPrefixer(), propsSort()]\n  };\n};\n\nexport default create;\n","import jss from 'jss';\nimport preset from 'jss-preset-default';\n// Be sure to set up JSS before anyone tries to use it.\njss.setup(preset());\nexport default jss;\n","/**\n * Current selection or highlight.\n */\nexport class Highlight {\n    constructor(program, firstIndex, lastIndex) {\n        this.program = program;\n        // Default to one byte.\n        lastIndex = lastIndex !== null && lastIndex !== void 0 ? lastIndex : firstIndex;\n        // Re-order so that begin <= end.\n        this.firstIndex = Math.min(firstIndex, lastIndex);\n        this.lastIndex = Math.max(firstIndex, lastIndex);\n    }\n}\n","import { Highlight } from \"./Highlight\";\n/**\n * Represents an item that's highlightable and maps to a part of the program's binary.\n */\nexport class Highlightable {\n    constructor(firstIndex, lastIndex, element) {\n        this.firstIndex = firstIndex;\n        this.lastIndex = lastIndex;\n        this.element = element;\n    }\n}\n/**\n * Helper class to highlight or select elements.\n */\nexport class Highlighter {\n    constructor(tapeBrowser, program, container) {\n        /**\n         * All elements, index by the byte index.\n         */\n        this.elements = [];\n        /**\n         * Currently-highlighted elements.\n         */\n        this.highlightedElements = [];\n        /**\n         * Currently-selected elements.\n         */\n        this.selectedElements = [];\n        this.tapeBrowser = tapeBrowser;\n        this.program = program;\n        this.container = container;\n        container.addEventListener(\"mousedown\", event => event.preventDefault());\n        window.addEventListener(\"mouseup\", event => {\n            if (this.selectionBeginIndex !== undefined) {\n                this.selectionBeginIndex = undefined;\n                this.tapeBrowser.doneSelecting(this);\n                event.preventDefault();\n            }\n        });\n    }\n    /**\n     * Add the highlightable element to the highlighter.\n     */\n    addHighlightable(h) {\n        // Allow undefined element for convenience of caller. Just ignore it.\n        const element = h.element;\n        if (element === undefined) {\n            return;\n        }\n        for (let byteIndex = h.firstIndex; byteIndex <= h.lastIndex; byteIndex++) {\n            this.elements[byteIndex] = element;\n        }\n        // Set up event listeners for highlighting.\n        element.addEventListener(\"mouseenter\", () => {\n            this.tapeBrowser.setHighlight(new Highlight(this.program, h.firstIndex, h.lastIndex));\n            if (this.selectionBeginIndex !== undefined) {\n                const highlight = h.firstIndex <= this.selectionBeginIndex && this.selectionBeginIndex <= h.lastIndex\n                    ? new Highlight(this.program, h.firstIndex, h.lastIndex)\n                    : this.selectionBeginIndex < h.firstIndex\n                        ? new Highlight(this.program, this.selectionBeginIndex, h.lastIndex)\n                        : new Highlight(this.program, h.firstIndex, this.selectionBeginIndex);\n                this.tapeBrowser.setSelection(highlight);\n            }\n        });\n        element.addEventListener(\"mouseleave\", () => {\n            if (this.selectionBeginIndex === undefined) {\n                this.tapeBrowser.setHighlight(undefined);\n            }\n        });\n        // Set up event listeners for selecting.\n        element.addEventListener(\"mousedown\", event => {\n            this.tapeBrowser.setSelection(new Highlight(this.program, h.firstIndex, h.lastIndex));\n            // This isn't right, it depends on which way they'll select. Might have to fix later.\n            this.selectionBeginIndex = h.firstIndex;\n            event.preventDefault();\n        });\n    }\n    /**\n     * Add all highlightables to the highlighter.\n     */\n    addHighlightables(highlightables) {\n        for (const highlightable of highlightables) {\n            this.addHighlightable(highlightable);\n        }\n    }\n    /**\n     * Highlight the specified elements.\n     */\n    highlight(highlight, program, highlightClassName) {\n        for (const e of this.highlightedElements) {\n            e.classList.remove(highlightClassName);\n        }\n        this.highlightedElements.splice(0);\n        if (highlight !== undefined && highlight.program === program) {\n            const e = this.elements[highlight.firstIndex];\n            if (e !== undefined) {\n                e.classList.add(highlightClassName);\n                this.highlightedElements.push(e);\n            }\n        }\n    }\n    /**\n     * Select the specified elements.\n     */\n    select(highlight, program, selectClassName) {\n        for (const e of this.selectedElements) {\n            e.classList.remove(selectClassName);\n        }\n        this.selectedElements.splice(0);\n        if (highlight !== undefined && highlight.program === program) {\n            for (let byteIndex = highlight.firstIndex; byteIndex <= highlight.lastIndex; byteIndex++) {\n                const e = this.elements[byteIndex];\n                if (e !== undefined) {\n                    e.classList.add(selectClassName);\n                    this.selectedElements.push(e);\n                }\n            }\n        }\n    }\n    /**\n     * Called when the user is done selecting and we should scroll to the selection.\n     */\n    doneSelecting() {\n        // Bring the middle element into view.\n        if (this.selectedElements.length > 0) {\n            const midElement = this.selectedElements[Math.floor(this.selectedElements.length / 2)];\n            if (midElement.offsetHeight === 0) {\n                // Not visible, do this later.\n                this.scrollToElement = midElement;\n            }\n            else {\n                midElement.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                });\n            }\n        }\n    }\n    /**\n     * This set of elements was just shown.\n     */\n    didShow() {\n        if (this.scrollToElement !== undefined) {\n            this.scrollToElement.scrollIntoView({\n                behavior: \"auto\",\n                block: \"center\",\n            });\n            this.scrollToElement = undefined;\n        }\n    }\n}\n","\n/**\n * Information about one particular section of a program. The indices refer back to a binary\n * that the program was parsed from.\n */\nexport class ProgramAnnotation {\n    /**\n     * Text to display.\n     */\n    public readonly text: string;\n    /**\n     * Byte index into the binary array of the start of the annotation, inclusive.\n     */\n    public readonly begin: number;\n    /**\n     * Byte index into the binary array of the end of the annotation, exclusive.\n     */\n    public readonly end: number;\n\n    constructor(text: string, begin: number, end: number) {\n        this.text = text;\n        this.begin = begin;\n        this.end = end;\n    }\n\n    /**\n     * Create a new program annotation with the begin and end increased by the specified offset.\n     */\n    public adjusted(offset: number): ProgramAnnotation {\n        return new ProgramAnnotation(this.text, this.begin + offset, this.end + offset);\n    }\n}\n","import {ProgramAnnotation} from \"./ProgramAnnotation\";\n\n/**\n * Base class for decoded TRS-80 files.\n */\nexport abstract class AbstractTrs80File {\n    /**\n     * Field to identify which subclass we are at runtime.\n     */\n    public abstract readonly className: string;\n    /**\n     * The binary representing just this one file.\n     */\n    public readonly binary: Uint8Array;\n\n    /**\n     * Error encountered while decoding, if any.\n     */\n    public readonly error: string | undefined;\n\n    /**\n     * List of annotations from the decoding step.\n     */\n    public readonly annotations: ProgramAnnotation[];\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[]) {\n        this.binary = binary;\n        this.error = error;\n        this.annotations = annotations;\n    }\n\n    /**\n     * Brief description (e.g., \"Basic program\").\n     */\n    public abstract getDescription(): string;\n}\n","\n// Tools for decoding Basic programs.\n\nimport {ByteReader, concatByteArrays, EOF} from \"teamten-ts-utils\";\nimport {hi, lo, toHexWord} from \"z80-base\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\nimport {AbstractTrs80File} from \"./Trs80File\";\n\nexport const BASIC_TAPE_HEADER_BYTE = 0xD3;\nexport const BASIC_HEADER_BYTE = 0xFF;\n\nconst FIRST_TOKEN = 0x80;\nconst TOKENS = [\n    \"END\", \"FOR\", \"RESET\", \"SET\", \"CLS\", \"CMD\", \"RANDOM\", \"NEXT\", // 0x80\n    \"DATA\", \"INPUT\", \"DIM\", \"READ\", \"LET\", \"GOTO\", \"RUN\", \"IF\", // 0x88\n    \"RESTORE\", \"GOSUB\", \"RETURN\", \"REM\", \"STOP\", \"ELSE\", \"TRON\", \"TROFF\", // 0x90\n    \"DEFSTR\", \"DEFINT\", \"DEFSNG\", \"DEFDBL\", \"LINE\", \"EDIT\", \"ERROR\", \"RESUME\", // 0x98\n    \"OUT\", \"ON\", \"OPEN\", \"FIELD\", \"GET\", \"PUT\", \"CLOSE\", \"LOAD\", // 0xA0\n    \"MERGE\", \"NAME\", \"KILL\", \"LSET\", \"RSET\", \"SAVE\", \"SYSTEM\", \"LPRINT\", // 0xA8\n    \"DEF\", \"POKE\", \"PRINT\", \"CONT\", \"LIST\", \"LLIST\", \"DELETE\", \"AUTO\", // 0xB0\n    \"CLEAR\", \"CLOAD\", \"CSAVE\", \"NEW\", \"TAB(\", \"TO\", \"FN\", \"USING\", // 0xB8\n    \"VARPTR\", \"USR\", \"ERL\", \"ERR\", \"STRING$\", \"INSTR\", \"POINT\", \"TIME$\", // 0xC0\n    \"MEM\", \"INKEY$\", \"THEN\", \"NOT\", \"STEP\", \"+\", \"-\", \"*\", // 0xC8\n    \"/\", \"[\", \"AND\", \"OR\", \">\", \"=\", \"<\", \"SGN\", // 0xD0\n    \"INT\", \"ABS\", \"FRE\", \"INP\", \"POS\", \"SQR\", \"RND\", \"LOG\", // 0xD8\n    \"EXP\", \"COS\", \"SIN\", \"TAN\", \"ATN\", \"PEEK\", \"CVI\", \"CVS\", // 0xE0\n    \"CVD\", \"EOF\", \"LOC\", \"LOF\", \"MKI$\", \"MKS$\", \"MKD$\", \"CINT\", // 0xE8\n    \"CSNG\", \"CDBL\", \"FIX\", \"LEN\", \"STR$\", \"VAL\", \"ASC\", \"CHR$\", // 0xF0\n    \"LEFT$\", \"RIGHT$\", \"MID$\", // 0xF8\n];\nconst DOUBLE_QUOTE = 0x22;\nconst SINGLE_QUOTE = 0x27;\nconst COLON = 0x3A;\nconst REM = 0x93;\nconst DATA = 0x88;\nconst REMQUOT = 0xFB;\nconst ELSE = 0x95;\n\n/**\n * Parser state.\n */\nenum ParserState {\n    // Normal part of line.\n    NORMAL,\n    // Inside string literal.\n    STRING,\n    // After REM token to end of line.\n    REM,\n    // After DATA token to end of statement.\n    DATA,\n}\n\n/**\n * Get the token for the byte value, or undefined if the value does\n * not map to a token.\n */\nexport function getToken(c: number): string | undefined {\n    return c >= FIRST_TOKEN && c < FIRST_TOKEN + TOKENS.length ? TOKENS[c - FIRST_TOKEN] : undefined;\n}\n\n/**\n * Generate a 3-character octal version of a number.\n */\nfunction toOctal(n: number): string {\n    return n.toString(8).padStart(3, \"0\");\n}\n\n/**\n * Type of Basic element, for syntax highlighting.\n */\nexport enum ElementType {\n    ERROR,\n    LINE_NUMBER,\n    PUNCTUATION,\n    KEYWORD,\n    REGULAR,\n    STRING,\n    COMMENT,\n}\n\n/**\n * Piece of a Basic program (token, character, line number).\n */\nexport class BasicElement {\n    // Byte offset in \"bytes\" array, or undefined if this is an error message or otherwise\n    // not selectable, such as the space between line numbers and the rest of the line.\n    public offset: number | undefined;\n\n    // Length of section in \"binary\" array.\n    public length: number;\n\n    // Text of element.\n    public text: string;\n\n    // Type of element (line number, token, string literal, etc.).\n    public elementType: ElementType;\n\n    constructor(offset: number | undefined, text: string, elementType: ElementType, length: number = 1) {\n        this.offset = offset;\n        this.length = length;\n        this.text = text;\n        this.elementType = elementType;\n    }\n\n    /**\n     * Get the element's text so that it will display properly in \"Another Man's Treasure\" font.\n     *\n     * https://www.kreativekorp.com/software/fonts/trs80.shtml\n     */\n    public asAnotherMansTreasure(): string {\n        if (this.elementType === ElementType.STRING) {\n            const parts: string[] = [];\n\n            // Convert non-ASCII to the right value for our font.\n            for (const ch of this.text) {\n                let c = ch.charCodeAt(0);\n                if (c < 32 || c >= 127) {\n                    c += 0xE000;\n                }\n                parts.push(String.fromCodePoint(c));\n            }\n\n            return parts.join(\"\");\n        } else {\n            return this.text;\n        }\n    }\n\n    /**\n     * Get the element's text so that it will display properly in ASCII.\n     */\n    public asAscii(): string {\n        if (this.elementType === ElementType.STRING) {\n            const parts: string[] = [];\n\n            for (const ch of this.text) {\n                const c = ch.charCodeAt(0);\n\n                if (ch === \"\\r\") {\n                    parts.push(\"\\\\r\");\n                } else if (c >= 32 && c < 128 && ch !== \"\\\\\") {\n                    parts.push(ch);\n                } else {\n                    parts.push(\"\\\\\" + toOctal(c));\n                }\n            }\n\n            return parts.join(\"\");\n        } else {\n            return this.text;\n        }\n    }\n}\n\n/**\n * Class representing a Basic program. If the \"error\" field is set, then something\n * went wrong with the program and the data may be partially loaded.\n */\nexport class BasicProgram extends AbstractTrs80File {\n    public readonly className = \"BasicProgram\";\n    public elements: BasicElement[];\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                elements: BasicElement[]) {\n\n        super(binary, error, annotations);\n        this.elements = elements;\n    }\n\n    public getDescription(): string {\n        // Don't include filename, it's usually worthless.\n        return \"Basic program\";\n    }\n}\n\n/**\n * Adds the header bytes necessary for writing Basic cassettes.\n */\nexport function wrapBasic(bytes: Uint8Array): Uint8Array {\n    // Add Basic header.\n    const buffers = [\n        new Uint8Array([BASIC_TAPE_HEADER_BYTE, BASIC_TAPE_HEADER_BYTE, BASIC_TAPE_HEADER_BYTE]),\n        bytes,\n    ];\n    return concatByteArrays(buffers);\n}\n\n/**\n * Set the one-letter Basic name in the binary to the first letter of the name.\n *\n * @return a new array with the modified name.\n */\nexport function setBasicName(bytes: Uint8Array, name: string): Uint8Array {\n    if (name === \"\") {\n        // Pick anything.\n        name = \"A\";\n    }\n\n    // Make a copy for modifying.\n    const newName = new Uint8Array(bytes);\n\n    if (newName[0] === BASIC_TAPE_HEADER_BYTE &&\n        newName[1] === BASIC_TAPE_HEADER_BYTE &&\n        newName[2] === BASIC_TAPE_HEADER_BYTE &&\n        newName.length > 3) {\n\n        newName[3] = name.charCodeAt(0);\n    } else if (newName[0] === BASIC_HEADER_BYTE &&\n        newName.length > 1) {\n\n        newName[1] = name.charCodeAt(0);\n    }\n\n    return newName;\n}\n\n/**\n * Decode a tokenized Basic program.\n * @param binary tokenized program. May be in tape format (D3 D3 D3 followed by a one-letter program\n * name) or not (FF).\n * @return the Basic program, or undefined if the header did not indicate that this was a Basic program.\n */\nexport function decodeBasicProgram(binary: Uint8Array): BasicProgram | undefined {\n    const b = new ByteReader(binary);\n    let state: ParserState;\n    let preStringState = ParserState.NORMAL;\n    let error: string | undefined;\n    const annotations: ProgramAnnotation[] = [];\n\n    // Map from byte address to BasicElement for that byte.\n    const elements: BasicElement[] = [];\n\n    const firstByte = b.read();\n    if (firstByte === BASIC_TAPE_HEADER_BYTE) {\n        if (b.read() !== BASIC_TAPE_HEADER_BYTE || b.read() !== BASIC_TAPE_HEADER_BYTE) {\n            return undefined;\n        }\n\n        annotations.push(new ProgramAnnotation(\"Header\", 0, b.addr()));\n\n        // One-byte ASCII program name. This is nearly always meaningless, so we do nothing with it.\n        b.read();\n        annotations.push(new ProgramAnnotation(\"Name\", b.addr() - 1, b.addr()));\n    } else if (firstByte === BASIC_HEADER_BYTE) {\n        // All good.\n        annotations.push(new ProgramAnnotation(\"Header\", 0, b.addr()));\n    } else {\n        return undefined;\n    }\n\n    while (true) {\n        // Read the address of the next line. We ignore this (as does Basic when\n        // loading programs), only using it to detect end of program. (In the real\n        // Basic these are regenerated after loading.)\n        const address = b.readShort(true);\n        if (address === EOF) {\n            error = \"EOF in next line's address\";\n            break;\n        }\n        // Zero address indicates end of program.\n        if (address === 0) {\n            annotations.push(new ProgramAnnotation(\"End-of-program marker\", b.addr() - 2, b.addr()));\n            break;\n        }\n        annotations.push(new ProgramAnnotation(\n            \"Address of next line (0x\" + toHexWord(address) + \")\", b.addr() - 2, b.addr()));\n\n        // Read current line number.\n        const lineNumber = b.readShort(false);\n        if (lineNumber === EOF) {\n            error = \"EOF in line number\";\n            break;\n        }\n        annotations.push(new ProgramAnnotation(\"Line number (\" + lineNumber + \")\", b.addr() - 2, b.addr()));\n        elements.push(new BasicElement(b.addr() - 2, lineNumber.toString(), ElementType.LINE_NUMBER, 2));\n        elements.push(new BasicElement(undefined, \" \", ElementType.REGULAR));\n\n        // Read rest of line.\n        const lineAddr = b.addr();\n        const lineElementsIndex = elements.length;\n        let c; // Uint8 value.\n        let ch; // String value.\n        state = ParserState.NORMAL;\n        while (true) {\n            c = b.read();\n            if (c === EOF || c === 0) {\n                break;\n            }\n            ch = String.fromCharCode(c);\n\n            // Special handling of sequences of characters that start with a colon.\n            if (ch === \":\" && state === ParserState.NORMAL) {\n                const colonAddr = b.addr() - 1;\n                if (b.peek(0) === ELSE) {\n                    // :ELSE gets translated to just ELSE, probably because an old version\n                    // of Basic only supported ELSE after a colon.\n                    b.read(); // ELSE\n                    elements.push(new BasicElement(colonAddr, \"ELSE\", ElementType.KEYWORD, b.addr() - colonAddr));\n                } else if (b.peek(0) === REM && b.peek(1) === REMQUOT) {\n                    // Detect the \":REM'\" sequence (colon, REM, single quote), because\n                    // that translates to a single quote. Must be a backward-compatible\n                    // way to add a single quote as a comment.\n                    b.read(); // REM\n                    b.read(); // REMQUOT\n                    elements.push(new BasicElement(colonAddr, \"'\", ElementType.COMMENT, b.addr() - colonAddr));\n                    state = ParserState.REM;\n                } else {\n                    elements.push(new BasicElement(colonAddr, \":\", ElementType.PUNCTUATION));\n                }\n            } else {\n                switch (state) {\n                    case ParserState.NORMAL:\n                        const token = getToken(c);\n                        elements.push(token !== undefined\n                            ? new BasicElement(b.addr() - 1, token,\n                                c === DATA || c === REM ? ElementType.COMMENT\n                                    : token.length === 1 ? ElementType.PUNCTUATION\n                                    : ElementType.KEYWORD)\n                            : new BasicElement(b.addr() - 1,\n                                ch, ch === '\"' ? ElementType.STRING : ElementType.REGULAR));\n                        if (c === REM) {\n                            state = ParserState.REM;\n                        } else if (c === DATA) {\n                            state = ParserState.DATA;\n                        } else if (ch === '\"') {\n                            preStringState = state;\n                            state = ParserState.STRING;\n                        }\n                        break;\n\n                    case ParserState.STRING:\n                        // Put the real value in the string. Code displaying can use the methods of\n                        // BasicElement to convert it before printing.\n                        elements.push(new BasicElement(b.addr() - 1, ch, ElementType.STRING));\n                        if (ch === '\"') {\n                            // End of string.\n                            state = preStringState;\n                        }\n                        break;\n\n                    case ParserState.REM:\n                        elements.push(new BasicElement(b.addr() - 1, ch, ElementType.COMMENT));\n                        break;\n\n                    case ParserState.DATA:\n                        let elementType = ElementType.COMMENT;\n                        if (ch === \":\") {\n                            elementType = ElementType.PUNCTUATION;\n                            state = ParserState.NORMAL;\n                        }\n                        if (ch === '\"') {\n                            elementType = ElementType.STRING;\n                            preStringState = state;\n                            state = ParserState.STRING;\n                        }\n                        elements.push(new BasicElement(b.addr() - 1, ch, elementType));\n                        break;\n                }\n            }\n        }\n        if (c === EOF) {\n            error = \"EOF in line\";\n            annotations.push(new ProgramAnnotation(\"Partial line\", lineAddr, b.addr()));\n            break;\n        }\n\n        const textLineParts: string[] = [];\n        for (let i = lineElementsIndex; i < elements.length; i++) {\n            textLineParts.push(elements[i].text);\n        }\n        let textLine = textLineParts.join(\"\").replace(/[\\n\\r]+/, \" \");\n        if (textLine.length > 33) {\n            textLine = textLine.substr(0, 30) + \"...\";\n        }\n        annotations.push(new ProgramAnnotation(\"Line: \" + textLine, lineAddr, b.addr() - 1));\n        annotations.push(new ProgramAnnotation(\"End-of-line marker\", b.addr() - 1, b.addr()));\n    }\n\n    return new BasicProgram(binary, error, annotations, elements);\n}\n\n/**\n * Parser for a single line of Basic code.\n */\nclass BasicParser {\n    private readonly line: string;\n    private readonly result: number[] = [];\n    public lineNumber: number | undefined = undefined;\n    private pos = 0;\n\n    constructor(line: string) {\n        // Only trim the start, spaces at the end should be kept.\n        this.line = line.trimStart();\n    }\n\n    /**\n     * Parse the line, returning the binary for it or an error. The binary includes\n     * the line number and the terminating nul, but not the \"next-line\" pointer.\n     */\n    public parse(): Uint8Array | string {\n        // Parse line number.\n        this.lineNumber = this.readNumber();\n        if (this.lineNumber === undefined) {\n            return \"Missing line number: \" + this.line;\n        }\n\n        this.result.push(lo(this.lineNumber));\n        this.result.push(hi(this.lineNumber));\n\n        // We only trim at the start, so there could be only spaces here, but that's not allowed.\n        if (this.line.substr(this.pos).trim() === \"\") {\n            return \"Empty line \" + this.lineNumber;\n        }\n\n        // Skip single optional whitespace\n        if (this.pos < this.line.length && BasicParser.isWhitespace(this.line.charCodeAt(this.pos))) {\n            this.pos++;\n        }\n\n        while (this.pos < this.line.length) {\n            let ch = this.line.charCodeAt(this.pos);\n\n            // Lower case anything outside of strings.\n            if (ch >= 0x61 && ch < 0x61 + 26) {\n                ch -= 0x20;\n            }\n\n            // Handle single-quote comment.\n            if (ch === SINGLE_QUOTE) {\n                // Single quote is the start of a comment, but it's encoded in a backward-compatible\n                // way with several tokens.\n                this.result.push(COLON, REM, REMQUOT);\n                this.pos++;\n                // We're done, copy the rest of the line.\n                break;\n            }\n\n            // Handle string.\n            if (ch === DOUBLE_QUOTE) {\n                this.result.push(ch);\n                this.pos++;\n                while (this.pos < this.line.length) {\n                    ch = this.line.charCodeAt(this.pos++);\n                    this.result.push(ch);\n                    if (ch === DOUBLE_QUOTE) {\n                        break;\n                    }\n                }\n            } else {\n                // See if it should be a token.\n                const token = this.readToken();\n                if (token === undefined) {\n                    // Just a regular letter.\n                    this.result.push(ch);\n                    this.pos++;\n                } else {\n                    // Prefix ELSE with colon for backward compatibility.\n                    if (token === ELSE && this.result[this.result.length - 1] !== COLON) {\n                        this.result.push(COLON);\n                    }\n\n                    this.result.push(token);\n                    this.pos += TOKENS[token - FIRST_TOKEN].length;\n\n                    if (token === REM) {\n                        // We're done, copy the rest of the line.\n                        break;\n                    }\n\n                    if (token === DATA) {\n                        // Copy to end of statement.\n                        let inString = false;\n                        while (this.pos < this.line.length) {\n                            ch = this.line.charCodeAt(this.pos);\n                            if (ch === DOUBLE_QUOTE) {\n                                inString = !inString;\n                            } else if (ch === COLON && !inString) {\n                                break;\n                            }\n                            this.result.push(ch);\n                            this.pos++;\n                        }\n                    }\n                }\n            }\n        }\n\n        // Copy rest of line (for comments).\n        while (this.pos < this.line.length) {\n            this.result.push(this.line.charCodeAt(this.pos++));\n        }\n\n        // End-of-line marker.\n        this.result.push(0);\n\n        return new Uint8Array(this.result);\n    }\n\n    /**\n     * If we're at a token, return it, else return undefined. Does not advance past the token.\n     */\n    private readToken(): number | undefined {\n        for (let i = 0; i < TOKENS.length; i++) {\n            const token = TOKENS[i];\n            if (token === this.line.substr(this.pos, token.length).toUpperCase()) {\n                return FIRST_TOKEN + i;\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Reads a decimal number and advances past it, or returns undefined if not at a number.\n     */\n    private readNumber(): number | undefined {\n        let n: number | undefined;\n\n        while (this.pos < this.line.length && BasicParser.isDigit(this.line.charCodeAt(this.pos))) {\n            if (n === undefined) {\n                n = 0;\n            }\n\n            n = n*10 + this.line.charCodeAt(this.pos) - 0x30;\n\n            this.pos++;\n        }\n\n        return n;\n    }\n\n    /**\n     * Whether the ASCII value is whitespace.\n     */\n    private static isWhitespace(ch: number): boolean {\n        return ch === 0x20 || ch === 0x09;\n    }\n\n    /**\n     * Whether the ASCII value is a digit.\n     */\n    private static isDigit(ch: number): boolean {\n        return ch >= 0x30 && ch < 0x3A;\n    }\n}\n\n/**\n * Parse a Basic program into a binary with the initial 0xFF header.\n *\n * @return the binary or an error.\n */\nexport function parseBasicText(text: string): Uint8Array | string {\n    // Split into lines. Only trim the start, spaces at the end should be kept.\n    const lines = text.split(/[\\n\\r]+/)\n        .map((line) => line.trimStart())\n        .filter((line) => line !== \"\");\n\n    const binaryParts: Uint8Array[] = [];\n\n    binaryParts.push(new Uint8Array([BASIC_HEADER_BYTE]));\n\n    // Parse each line.\n    let lineNumber: number | undefined;\n    for (const line of lines) {\n        const parser = new BasicParser(line);\n        const binary = parser.parse();\n        if (typeof binary === \"string\") {\n            return binary;\n        }\n\n        // Make sure line numbers are consecutive.\n        if (lineNumber !== undefined && parser.lineNumber !== undefined && parser.lineNumber <= lineNumber) {\n            return \"Line \" + parser.lineNumber + \" is out of order\";\n        }\n        lineNumber = parser.lineNumber;\n\n        // Push next-line pointer. Can be anything as long as it's not 0x0000,\n        // it'll get fixed up later.\n        binaryParts.push(new Uint8Array([0xFF, 0xFF]));\n        binaryParts.push(binary);\n    }\n\n    // End-of-program marker.\n    binaryParts.push(new Uint8Array([0x00, 0x00]));\n\n    return concatByteArrays(binaryParts);\n}\n","/**\n * Tools for dealing with CMD (machine language) programs.\n *\n * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/tape-and-file-formats-structures/#cmdfile\n */\n\nimport {ByteReader, EOF} from \"teamten-ts-utils\";\nimport {toHexWord} from \"z80-base\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\nimport {AbstractTrs80File} from \"./Trs80File\";\n\n// Chunk types.\nexport const CMD_LOAD_BLOCK = 0x01;\nexport const CMD_TRANSFER_ADDRESS = 0x02;\nexport const CMD_LOAD_MODULE_HEADER = 0x05;\nexport const CMD_MAX_TYPE = 0x1F;\n\n/**\n * Represents a chunk of bytes from the file.\n */\nabstract class CmdAbstractChunk {\n    public abstract readonly className: string;\n    public readonly type: number;\n    public readonly rawData: Uint8Array;\n\n    protected constructor(type: number, data: Uint8Array) {\n        this.type = type;\n        this.rawData = data;\n    }\n\n    /**\n     * Add annotations about this chunk, assuming its data is at \"addr\".\n     */\n    public addAnnotations(annotations: ProgramAnnotation[], addr: number): void {\n        // Nothing for unknown chunks.\n    }\n}\n\n/**\n * A chunk for loading data into memory.\n */\nexport class CmdLoadBlockChunk extends CmdAbstractChunk {\n    public readonly className = \"CmdLoadBlockChunk\";\n    public readonly address: number;\n    public readonly loadData: Uint8Array;\n\n    constructor(type: number, data: Uint8Array) {\n        super(type, data);\n        this.address = data[0] + data[1]*256;\n        this.loadData = data.slice(2);\n    }\n\n    public addAnnotations(annotations: ProgramAnnotation[], addr: number): void {\n        annotations.push(new ProgramAnnotation(\"Load address (0x\" + toHexWord(this.address) + \")\", addr, addr + 2));\n        annotations.push(new ProgramAnnotation(\"Data (\" + this.loadData.length + \" byte\" +\n            (this.loadData.length === 1 ? \"\" : \"s\") + \")\", addr + 2, addr + 2 + this.loadData.length));\n    }\n}\n\n/**\n * A chunk for jumping to the start of the program.\n */\nexport class CmdTransferAddressChunk extends CmdAbstractChunk {\n    public readonly className = \"CmdTransferAddressChunk\";\n    public readonly address: number;\n\n    constructor(type: number, data: Uint8Array) {\n        super(type, data);\n        this.address = data.length === 2 ? (data[0] + data[1]*256) : 0;\n    }\n\n    public addAnnotations(annotations: ProgramAnnotation[], addr: number): void {\n        annotations.push(new ProgramAnnotation(\"Jump address (0x\" + toHexWord(this.address) + \")\", addr, addr + 2));\n    }\n}\n\n/**\n * A header chunk for the filename.\n */\nexport class CmdLoadModuleHeaderChunk extends CmdAbstractChunk {\n    public readonly className = \"CmdLoadModuleHeaderChunk\";\n    public readonly filename: string;\n\n    constructor(type: number, data: Uint8Array) {\n        super(type, data);\n        this.filename = new TextDecoder(\"ascii\").decode(data).trim().replace(/ +/g, \" \");\n    }\n\n    public addAnnotations(annotations: ProgramAnnotation[], addr: number): void {\n        annotations.push(new ProgramAnnotation(\"Name (\" + this.filename + \")\", addr, addr + this.rawData.length));\n    }\n}\n\n/**\n * A chunk of unknown meaning.\n */\nexport class CmdUnknownChunk extends CmdAbstractChunk {\n    public readonly className = \"CmdUnknownChunk\";\n\n    constructor(type: number, data: Uint8Array) {\n        super(type, data);\n    }\n}\n\n/**\n * One of the four possible kinds of blocks.\n */\nexport type CmdChunk = CmdLoadBlockChunk |\n    CmdTransferAddressChunk |\n    CmdLoadModuleHeaderChunk |\n    CmdUnknownChunk;\n\n/**\n * A friendly (not so technical) name for the block type.\n * See page 43 of The LDOS Quarterly, Volume 1, Number 4.\n * https://www.tim-mann.org/trs80/doc/ldosq1-4.pdf\n * http://www.vintagecomputer.net/fjkraan/comp/trs80/doc/Trscmdff.txt\n * https://tim-mann.org/trs80/doc/gocmd.pdf\n * http://www.manmrk.net/tutorials/TRS80/Software/ldos/trs80/doc/ldosq1-4.txt\n */\nexport const CMD_CHUNK_TYPE_NAME = new Map<number, string>([\n    [0x01, \"data\"], // Originally \"object code\".\n    [0x02, \"jump address\"], // Originally \"transfer address\".\n    [0x04, \"end of partitioned data set member\"],\n    [0x05, \"header\"], // Originally \"load module header\".\n    [0x06, \"partitioned data set header\"],\n    [0x07, \"patch name header\"],\n    [0x08, \"ISAM directory entry\"],\n    [0x0A, \"end of ISAM directory\"],\n    [0x0C, \"PDS directory entry\"],\n    [0x0E, \"end of PDS directory\"],\n    [0x10, \"yanked load block\"],\n    [0x1F, \"copyright block\"],\n]);\n\n/**\n * Class representing a CMD (machine language) program. If the \"error\" field is set, then something\n * went wrong with the program and the data may be partially loaded.\n */\nexport class CmdProgram extends AbstractTrs80File {\n    public readonly className = \"CmdProgram\";\n    public chunks: CmdChunk[];\n    public filename: string | undefined;\n    public entryPointAddress: number | undefined;\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                chunks: CmdChunk[], filename: string | undefined, entryPointAddress: number | undefined) {\n\n        super(binary, error, annotations);\n        this.chunks = chunks;\n        this.filename = filename;\n        this.entryPointAddress = entryPointAddress;\n    }\n\n    public getDescription(): string {\n        return \"CMD program\" + (this.filename !== undefined ? \" (\" + this.filename + \")\" : \"\");\n    }\n\n    /**\n     * Convert an address in memory to the original byte offset in the binary. Returns undefined if\n     * not found in any chunk.\n     */\n    public addressToByteOffset(address: number): number | undefined {\n        // Offset in the binary of first byte of chunk.\n        let offset = 0;\n\n        for (const chunk of this.chunks) {\n            if (chunk.className === \"CmdLoadBlockChunk\") {\n                if (address >= chunk.address && address < chunk.address + chunk.loadData.length) {\n                    // Skip type, length, and address.\n                    return offset + 4 + (address - chunk.address);\n                }\n            }\n\n            // Skip type, length and data.\n            offset += 2 + chunk.rawData.length;\n        }\n\n        return undefined;\n    }\n}\n\n/**\n * Decodes a CMD program from the binary. If the binary is not at all a CMD\n * program, returns undefined. If it's a CMD program with decoding errors, returns\n * partially-decoded binary and sets the \"error\" field.\n */\nexport function decodeCmdProgram(binary: Uint8Array): CmdProgram | undefined {\n    let error: string | undefined;\n    const annotations: ProgramAnnotation[] = [];\n    const chunks: CmdChunk[] = [];\n    let filename: string | undefined;\n    let entryPointAddress = 0;\n    const b = new ByteReader(binary);\n\n    // Read each chunk.\n    while (true) {\n        // First byte is type of chunk.\n        const type = b.read();\n\n        // End of file?\n        if (type === EOF ||\n            // Invalid type byte?\n            type > CMD_MAX_TYPE ||\n            // Error earlier?\n            error !== undefined ||\n            // Just saw jump? There's typically junk after this and it can make it seem like there's an error.\n            (chunks.length > 0 && chunks[chunks.length - 1].className === \"CmdTransferAddressChunk\")) {\n\n            if (chunks.length === 0) {\n                return undefined;\n            }\n            return new CmdProgram(binary.subarray(0, b.addr()), error, annotations,\n                chunks, filename, entryPointAddress);\n        }\n\n        annotations.push(new ProgramAnnotation(\"Type of chunk (\" +\n            (CMD_CHUNK_TYPE_NAME.get(type) ?? \"unknown\") + \")\", b.addr() - 1, b.addr()));\n\n        // Second byte is length, in bytes.\n        let length = b.read();\n        if (length === EOF) {\n            error = \"File is truncated at length\";\n            continue;\n        }\n\n        // Adjust load block length.\n        if (type === CMD_LOAD_BLOCK && length <= 2) {\n            length += 256;\n        } else if (type === CMD_LOAD_MODULE_HEADER && length === 0) {\n            length = 256;\n        }\n\n        annotations.push(new ProgramAnnotation(\"Length of chunk (\" + length +\n            \" byte\" + (length === 1 ? \"\" : \"s\") + \")\", b.addr() - 1, b.addr()));\n\n        // Read the raw bytes.\n        const dataAddr = b.addr();\n        const data = b.readBytes(length);\n        if (data.length < length) {\n            error = \"File is truncated at data\";\n            // We continue so we can create a partial chunk. The loop will stop at the top of the next\n            // iteration. Not sure this is the right thing to do.\n        }\n\n        // Create type-specific chunk objects.\n        let chunk: CmdChunk;\n        switch (type) {\n            case CMD_LOAD_BLOCK:\n                chunk = new CmdLoadBlockChunk(type, data);\n                break;\n\n            case CMD_TRANSFER_ADDRESS: {\n                const cmdTransferAddressChunk = new CmdTransferAddressChunk(type, data);\n                entryPointAddress = cmdTransferAddressChunk.address;\n                chunk = cmdTransferAddressChunk;\n                break;\n            }\n\n            case CMD_LOAD_MODULE_HEADER: {\n                const cmdLoadModuleHeaderChunk = new CmdLoadModuleHeaderChunk(type, data);\n                filename = cmdLoadModuleHeaderChunk.filename;\n                if (filename === \"\") {\n                    filename = undefined;\n                }\n                chunk = cmdLoadModuleHeaderChunk;\n                break;\n            }\n\n            default:\n                chunk = new CmdUnknownChunk(type, data);\n                break;\n        }\n\n        chunk.addAnnotations(annotations, dataAddr);\n        chunks.push(chunk);\n    }\n}\n","/**\n * Tools for dealing with SYSTEM (machine language) programs.\n *\n * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/tape-and-file-formats-structures/\n */\n\nimport {ByteReader, EOF} from \"teamten-ts-utils\";\nimport {toHexByte, toHexWord} from \"z80-base\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\nimport {AbstractTrs80File} from \"./Trs80File\";\n\nconst FILE_HEADER = 0x55;\nconst DATA_HEADER = 0x3C;\nconst END_OF_FILE_MARKER = 0x78;\nconst FILENAME_LENGTH = 6;\n\n/**\n * Represents a chunk of bytes from the file, with a checksum.\n */\nexport class SystemChunk {\n    public readonly loadAddress: number;\n    public readonly data: Uint8Array;\n    public readonly checksum: number;\n\n    constructor(loadAddress: number, data: Uint8Array, checksum: number) {\n        this.loadAddress = loadAddress;\n        this.data = data;\n        this.checksum = checksum;\n    }\n\n    /**\n     * Whether the checksum supplied on tape matches what we compute.\n     */\n    public isChecksumValid(): boolean {\n        let checksum = 0;\n\n        // Include load address and data.\n        checksum += (this.loadAddress >> 8) & 0xFF;\n        checksum += this.loadAddress & 0xFF;\n        for (const b of this.data) {\n            checksum += b;\n        }\n        checksum &= 0xFF;\n\n        return checksum === this.checksum;\n    }\n}\n\n/**\n * Class representing a SYSTEM (machine language) program. If the \"error\" field is set, then something\n * went wrong with the program and the data may be partially loaded.\n */\nexport class SystemProgram extends AbstractTrs80File {\n    public readonly className = \"SystemProgram\";\n    public readonly filename: string;\n    public readonly chunks: SystemChunk[];\n    public readonly entryPointAddress: number;\n    public readonly annotations: ProgramAnnotation[];\n\n    constructor(binary: Uint8Array, error: string | undefined, filename: string, chunks: SystemChunk[],\n                entryPointAddress: number, annotations: ProgramAnnotation[]) {\n\n        super(binary, error, annotations);\n        this.filename = filename;\n        this.chunks = chunks;\n        this.entryPointAddress = entryPointAddress;\n        this.annotations = annotations;\n    }\n\n    public getDescription(): string {\n        return \"System program (\" + this.filename + \")\";\n    }\n\n    /**\n     * Convert an address in memory to the original byte offset in the binary. Returns undefined if\n     * not found in any chunk.\n     */\n    public addressToByteOffset(address: number): number | undefined {\n        // Skip file header and block header.\n        let offset = 1 + FILENAME_LENGTH + 4;\n\n        for (const chunk of this.chunks) {\n            if (address >= chunk.loadAddress && address < chunk.loadAddress + chunk.data.length) {\n                return offset + (address - chunk.loadAddress);\n            }\n\n            // Skip checksum and block header of the next block.\n            offset += chunk.data.length + 5;\n        }\n\n        return undefined;\n    }\n}\n\n/**\n * Decodes a system program from the binary. If the binary is not at all a system\n * program, returns undefined. If it's a system program with decoding errors, returns\n * partially-decoded binary and sets the \"error\" field.\n */\nexport function decodeSystemProgram(binary: Uint8Array): SystemProgram | undefined {\n    const chunks: SystemChunk[] = [];\n    const annotations: ProgramAnnotation[] = [];\n    let entryPointAddress = 0;\n\n    const b = new ByteReader(binary);\n\n    const headerByte = b.read();\n    if (headerByte === EOF) {\n        return undefined;\n    }\n    if (headerByte !== FILE_HEADER) {\n        return undefined;\n    }\n    annotations.push(new ProgramAnnotation(\"System file header\", b.addr() - 1, b.addr()));\n\n    let filename = b.readString(FILENAME_LENGTH);\n\n    // Make a SystemProgram object with what we have so far.\n    const makeSystemProgram = (error?: string) => {\n        const programBinary = binary.subarray(0, b.addr());\n        return new SystemProgram(programBinary, error, filename, chunks, entryPointAddress, annotations);\n    };\n\n    if (filename.length < FILENAME_LENGTH) {\n        // Binary is truncated.\n        return makeSystemProgram(\"File is truncated at filename\");\n    }\n    filename = filename.trim();\n    annotations.push(new ProgramAnnotation(`Filename \"${filename}\"`,\n        b.addr() - FILENAME_LENGTH, b.addr()));\n\n    while (true) {\n        const marker = b.read();\n        if (marker === EOF) {\n            return makeSystemProgram(\"File is truncated at start of block\");\n        }\n        if (marker === END_OF_FILE_MARKER) {\n            annotations.push(new ProgramAnnotation(\"End of file marker\", b.addr() - 1, b.addr()));\n            break;\n        }\n        if (marker !== DATA_HEADER) {\n            // Here if the marker is 0x55, we could guess that it's a high-speed cassette header.\n            return makeSystemProgram(\"Unexpected byte \" + toHexByte(marker) + \" at start of block\");\n        }\n        annotations.push(new ProgramAnnotation(\"Data chunk marker\", b.addr() - 1, b.addr()));\n\n        let length = b.read();\n        if (length === EOF) {\n            return makeSystemProgram(\"File is truncated at block length\");\n        }\n        // 0 means 256.\n        if (length === 0) {\n            length = 256;\n        }\n        annotations.push(new ProgramAnnotation(`Length (${length} byte${length === 1 ? \"\" : \"s\"})`,\n            b.addr() - 1, b.addr()));\n\n        const loadAddress = b.readShort(false);\n        if (loadAddress === EOF) {\n            return makeSystemProgram(\"File is truncated at load address\");\n        }\n        annotations.push(new ProgramAnnotation(`Address (0x${toHexWord(loadAddress)})`,\n            b.addr() - 2, b.addr()));\n\n        const dataStartAddr = b.addr();\n        const data = b.readBytes(length);\n        if (data.length < length) {\n            return makeSystemProgram(\"File is truncated at data\");\n        }\n        annotations.push(new ProgramAnnotation(`Chunk data`, dataStartAddr, b.addr()));\n\n        const checksum = b.read();\n        if (loadAddress === EOF) {\n            return makeSystemProgram(\"File is truncated at checksum\");\n        }\n\n        const systemChunk = new SystemChunk(loadAddress, data, checksum);\n        chunks.push(systemChunk);\n\n        annotations.push(new ProgramAnnotation(\n            `Checksum (0x${toHexByte(checksum)}, ${systemChunk.isChecksumValid() ? \"\" : \"in\"}valid)`,\n            b.addr() - 1, b.addr()));\n    }\n\n    entryPointAddress = b.readShort(false);\n    if (entryPointAddress === EOF) {\n        entryPointAddress = 0;\n        return makeSystemProgram(\"File is truncated at entry point address\");\n    }\n    annotations.push(new ProgramAnnotation(`Jump address (0x${toHexWord(entryPointAddress)})`,\n        b.addr() - 2, b.addr()));\n\n    return makeSystemProgram();\n}\n","import {AbstractTrs80File} from \"./Trs80File\";\n\n/**\n * File when we don't recognize the type.\n */\nexport class RawBinaryFile extends AbstractTrs80File {\n    public readonly className = \"RawBinaryFile\";\n\n    constructor(binary: Uint8Array) {\n        super(binary, undefined, []);\n    }\n\n    public getDescription(): string {\n        return \"Unknown file\";\n    }\n}\n","import {ProgramAnnotation} from \"./ProgramAnnotation\";\nimport {AbstractTrs80File} from \"./Trs80File\";\n\n// Side of a floppy disk.\nexport enum Side {\n    FRONT,\n    BACK,\n}\n\n/**\n * Convert a number to a side, where 0 maps to FRONT and 1 maps to BACK.\n * Other numbers throw an exception.\n */\nexport function numberToSide(n: number): Side {\n    if (n === 0) {\n        return Side.FRONT;\n    }\n    if (n === 1) {\n        return Side.BACK;\n    }\n    throw new Error(\"Invalid side number \" + n);\n}\n\n/**\n * Byte for filling sector data when reading off the end.\n */\nconst FILL_BYTE = 0xE5;\n\n/**\n * Data from a sector that was read from a disk.\n */\nexport class SectorData {\n    /**\n     * The sector's data.\n     */\n    public data: Uint8Array;\n\n    /**\n     * Whether the sector data is invalid. This is indicated on the floppy by having a 0xF8 data\n     * address mark (DAM) byte, instead of the normal 0xFB. For JV1 this is set to true for the directory track.\n     */\n    public deleted = false;\n\n    /**\n     * Whether there was a CRC error when reading the physical disk.\n     */\n    public crcError = false;\n\n    constructor(data: Uint8Array) {\n        this.data = data;\n    }\n}\n\n/**\n * Abstract class for virtual floppy disk file formats.\n */\nexport abstract class FloppyDisk extends AbstractTrs80File {\n    public readonly supportsDoubleDensity: boolean;\n\n    protected constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                          supportsDoubleDensity: boolean) {\n\n        super(binary, error, annotations);\n        this.supportsDoubleDensity = supportsDoubleDensity;\n    }\n\n    /**\n     * Read a sector on the specified track, side, and sector.\n     *\n     * @param trackNumber the track the sector resides on.\n     * @param side the side the sector resides on.\n     * @param sectorNumber the sector on the track, or undefined to choose any sector on the track.\n     * @return the sector, or undefined if an error occurs.\n     */\n    public abstract readSector(trackNumber: number, side: Side,\n                               sectorNumber: number | undefined): SectorData | undefined;\n\n    /**\n     * Pad a sector to its full length.\n     */\n    protected padSector(data: Uint8Array, sectorSize: number): Uint8Array {\n        if (data.length < sectorSize) {\n            const newData = new Uint8Array(sectorSize);\n            newData.set(data);\n            newData.fill(FILL_BYTE, data.length);\n            data = newData;\n        }\n\n        return data;\n    }\n}\n","import {FloppyDisk, SectorData, Side} from \"./FloppyDisk\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\n\nconst BYTES_PER_SECTOR = 256;\nconst SECTORS_PER_TRACK = 10;\nconst BYTES_PER_TRACK = BYTES_PER_SECTOR * SECTORS_PER_TRACK;\nconst DIRECTORY_TRACK = 17;\n\n/**\n * Floppy disk in the JV1 format.\n */\nexport class Jv1FloppyDisk extends FloppyDisk {\n    public readonly className = \"Jv1FloppyDisk\";\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[]) {\n        super(binary, error, annotations, false);\n    }\n\n    public getDescription(): string {\n        return \"Floppy disk (JV1)\";\n    }\n\n    public readSector(trackNumber: number, side: Side, sectorNumber: number | undefined): SectorData | undefined {\n        sectorNumber = sectorNumber ?? 0;\n\n        // Check for errors.\n        if (trackNumber < 0 ||\n            side === Side.BACK ||\n            sectorNumber >= SECTORS_PER_TRACK) {\n\n            return undefined;\n        }\n\n        // Offset straight into data.\n        const offset = (SECTORS_PER_TRACK*trackNumber + sectorNumber)*BYTES_PER_SECTOR;\n        const data = this.padSector(this.binary.subarray(offset, offset + BYTES_PER_SECTOR), BYTES_PER_SECTOR);\n\n        const sectorData = new SectorData(data);\n        if (trackNumber === DIRECTORY_TRACK) {\n            // I don't know why \"deleted\" is used for the directory track.\n            sectorData.deleted = true;\n        }\n\n        return sectorData;\n    }\n}\n\n/**\n * Decode a JV1 floppy disk file.\n */\nexport function decodeJv1FloppyDisk(binary: Uint8Array): Jv1FloppyDisk | undefined {\n    let error: string | undefined;\n    const annotations: ProgramAnnotation[] = [];\n    const length = binary.length;\n\n    // Magic number check.\n    if (length < 2 || binary[0] !== 0x00 || binary[1] !== 0xFE) {\n        return undefined;\n    }\n\n    // Basic sanity check.\n    if (length % BYTES_PER_TRACK !== 0) {\n        error = \"Length is not a multiple of track size (\" + BYTES_PER_TRACK + \" bytes)\";\n    }\n\n    // Create annotations.\n    for (let byteOffset = 0; byteOffset < length; byteOffset += BYTES_PER_SECTOR) {\n        const track = Math.floor(byteOffset/BYTES_PER_TRACK);\n        const sector = (byteOffset - track*BYTES_PER_TRACK)/BYTES_PER_SECTOR;\n        annotations.push(new ProgramAnnotation(\"Track \" + track + \", sector \" + sector,\n            byteOffset, Math.min(byteOffset + BYTES_PER_SECTOR, length)));\n    }\n\n    return new Jv1FloppyDisk(binary, error, annotations);\n}\n","import {toHexByte} from \"z80-base\";\nimport {FloppyDisk, SectorData, Side} from \"./FloppyDisk\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\n\n// The JV3 file consists of sectors of different sizes all bunched together. Before that\n// comes a directory of these sectors, with three bytes per directory entry (track,\n// sector, and flags), mapping in order to the subsequent sectors.\n\n// The directory is in this header:\nconst HEADER_SIZE = 34*256;\n\n// We can fit this many 3-byte records into it:\nconst RECORD_COUNT = Math.floor(HEADER_SIZE/3);\n\n// Flags for SectorInfo.\nenum Flags {\n    SIZE_CODE_MASK = 0x03, // See calculation in constructor of SectorInfo.\n    NON_IBM = 0x04, // 0 = normal, 1 = short.\n    BAD_CRC = 0x08,\n    SIDE = 0x10, // 0 = front, 1 = back.\n\n    DAM_MASK = 0x60, // Data address mark mask.\n\n    // Single-density.\n    DAM_SD_FB = 0x00, // Normal sector.\n    DAM_SD_FA = 0x20, // Unknown DAM.\n    DAM_SD_F9 = 0x40, // Unknown DAM.\n    DAM_SD_F8 = 0x60, // Deleted sector.\n\n    // Double-density.\n    DAM_DD_FB = 0x00, // Normal sector.\n    DAM_DD_F8 = 0x20, // Deleted sector.\n\n    DOUBLE_DENSITY = 0x80,\n}\n\nconst FREE = 0xFF;\n\nconst SIZE_CODE_MASK = 0x03;\n\nclass SectorInfo {\n    // Raw data from the directory entry.\n    public readonly track: number;\n    public readonly sector: number;\n    public readonly flags: Flags;\n\n    // Offset into the binary.\n    public readonly offset: number;\n\n    // Number of bytes in sector.\n    public readonly size: number;\n\n    constructor(track: number, sector: number, flags: Flags, offset: number) {\n        // Make both FREE to avoid confusion.\n        if (track === FREE || sector === FREE) {\n            track = FREE;\n            sector = FREE;\n        }\n\n        this.track = track;\n        this.sector = sector;\n        this.flags = flags;\n        this.offset = offset;\n\n        // In used sectors: 0=256,1=128,2=1024,3=512\n        // In free sectors: 0=512,1=1024,2=128,3=256\n        const sizeCode = (flags & SIZE_CODE_MASK) ^ (this.isFree() ? 0x02 : 0x01);\n        this.size = 128 << sizeCode;\n    }\n\n    public getSide(): Side {\n        return (this.flags & Flags.SIDE) === 0 ? Side.FRONT : Side.BACK;\n    }\n\n    /**\n     * Return the flags as a string, for debugging.\n     */\n    public flagsToString(): string {\n        const parts: string[] = [];\n\n        parts.push(this.size + \" bytes\");\n        if ((this.flags & Flags.NON_IBM) !== 0) {\n            parts.push(\"non-IBM\");\n        }\n        if ((this.flags & Flags.BAD_CRC) !== 0) {\n            parts.push(\"bad CRC\");\n        }\n        parts.push(\"side \" + ((this.flags & Flags.SIDE) === 0 ? 0 : 1));\n        if ((this.flags & Flags.DOUBLE_DENSITY) !== 0) {\n            parts.push(\"double density\");\n        } else {\n            parts.push(\"single density\");\n        }\n\n        return parts.join(\", \");\n    }\n\n    /**\n     * Whether the sector entry is free (doesn't represent real space in the file).\n     */\n    public isFree(): boolean {\n        return this.track === FREE;\n    }\n\n    /**\n     * Whether the sector is encoded with MFM (instead of FM).\n     */\n    public isDoubleDensity(): boolean {\n        return (this.flags & Flags.DOUBLE_DENSITY) !== 0;\n    }\n\n    /**\n     * Whether the sector's data is invalid.\n     *\n     * Normally FB is normal and F8 is deleted, but the single-density version has\n     * two other values (F9 and FA), which we also consider deleted, to match xtrs.\n     */\n    public isDeleted(): boolean {\n        const dam = this.flags & Flags.DAM_MASK;\n        if (this.isDoubleDensity()) {\n            return dam === Flags.DAM_DD_F8;\n        } else {\n            return dam !== Flags.DAM_SD_FB;\n        }\n    }\n\n    /**\n     * Whether the floppy had a bar CRC when reading it.\n     */\n    public hasCrcError(): boolean {\n        return (this.flags & Flags.BAD_CRC) !== 0;\n    }\n}\n\n/**\n * Floppy disk in the JV3 format.\n */\nexport class Jv3FloppyDisk extends FloppyDisk {\n    public readonly className = \"Jv3FloppyDisk\";\n    public readonly writeProtected: boolean;\n    private readonly sectorInfos: SectorInfo[];\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                sectorInfos: SectorInfo[], writeProtected: boolean) {\n\n        super(binary, error, annotations, true);\n        this.sectorInfos = sectorInfos;\n        this.writeProtected = writeProtected;\n    }\n\n    public getDescription(): string {\n        return \"Floppy disk (JV3)\";\n    }\n\n    public readSector(trackNumber: number, side: Side, sectorNumber: number | undefined): SectorData | undefined {\n        const sectorInfo = this.findSectorInfo(trackNumber, side, sectorNumber);\n        if (sectorInfo === undefined) {\n            return undefined;\n        }\n\n        const data = this.padSector(this.binary.subarray(sectorInfo.offset, sectorInfo.offset + sectorInfo.size),\n            sectorInfo.size);\n\n        const sectorData = new SectorData(data);\n        sectorData.deleted = sectorInfo.isDeleted();\n        sectorData.crcError = sectorInfo.hasCrcError();\n        return sectorData;\n    }\n\n    /**\n     * Find the sector for the specified track and side.\n     */\n    private findSectorInfo(track: number, side: Side, sector: number | undefined): SectorInfo | undefined {\n        for (const sectorInfo of this.sectorInfos) {\n            if (!sectorInfo.isFree() &&\n                sectorInfo.track === track &&\n                sectorInfo.getSide() === side &&\n                (sector === undefined || sectorInfo.sector === sector)) {\n\n                return sectorInfo;\n            }\n        }\n\n        return undefined;\n    }\n}\n\n/**\n * Decode a JV3 floppy disk file.\n */\nexport function decodeJv3FloppyDisk(binary: Uint8Array): Jv3FloppyDisk {\n    let error: string | undefined;\n    const annotations: ProgramAnnotation[] = [];\n    const sectorInfos: SectorInfo[] = [];\n\n    // Read the directory.\n    let sectorOffset = HEADER_SIZE;\n    for (let i = 0; i < RECORD_COUNT; i++) {\n        const offset = i*3;\n        if (offset + 2 >= binary.length) {\n            error = \"Directory truncated at entry \" + i;\n            break;\n        }\n\n        const track = binary[offset];\n        const sector = binary[offset + 1];\n        const flags = binary[offset + 2] as Flags;\n\n        const sectorInfo = new SectorInfo(track, sector, flags, sectorOffset);\n        sectorOffset += sectorInfo.size;\n\n        if (!sectorInfo.isFree()) {\n            if (sectorOffset > binary.length) {\n                error = `Sector truncated at entry ${i} (${sectorOffset} > ${binary.length})`;\n                break;\n            }\n\n            annotations.push(new ProgramAnnotation(\"Track \" + sectorInfo.track + \", sector \" +\n                sectorInfo.sector + \", \" + sectorInfo.flagsToString(), offset, offset + 3));\n\n            sectorInfos.push(sectorInfo);\n        }\n    }\n\n    // Annotate the sectors themselves.\n    for (const sectorInfo of sectorInfos) {\n        annotations.push(new ProgramAnnotation(\"Track \" + sectorInfo.track + \", sector \" + sectorInfo.sector,\n            sectorInfo.offset, sectorInfo.offset + sectorInfo.size));\n    }\n\n    const writableOffset = RECORD_COUNT*3;\n    const writable = binary[writableOffset];\n    if (writable !== 0 && writable !== 0xFF) {\n        error = \"Invalid \\\"writable\\\" byte: 0x\" + toHexByte(writable);\n    }\n    const writeProtected = writable === 0;\n    annotations.push(new ProgramAnnotation(writeProtected ? \"Write protected\" : \"Writable\",\n        writableOffset, writableOffset + 1));\n\n    return new Jv3FloppyDisk(binary, error, annotations, sectorInfos, writeProtected);\n}\n","\n/**\n * Performs CRC-16 operations treating bits as big-endian.\n *\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check\n * https://en.wikipedia.org/wiki/Computation_of_cyclic_redundancy_checks\n * https://en.wikipedia.org/wiki/Mathematics_of_cyclic_redundancy_checks\n */\nexport class Crc16 {\n    private readonly generator: number;\n\n    /**\n     * Specifies the generator, which must be a 16-bit value.\n     */\n    constructor(generator: number) {\n        this.generator = generator;\n    }\n\n    /**\n     * Update the CRC with the new data, which must be a byte.\n     *\n     * @return the new CRC.\n     */\n    public update(crc: number, data: number): number {\n        for (let shift = 8; shift < 16; shift++) {\n            const isOne = ((crc ^ (data << shift)) & 0x8000) !== 0;\n            crc <<= 1;\n            if (isOne) {\n                crc ^= this.generator;\n            }\n        }\n\n        return crc & 0xFFFF;\n    }\n}\n\n/**\n * The CRC-16-CCITT polynomial, used for floppy disks. The polynomial is\n * x^16 + x^12 + x^5 + 1, which maps to 0x11021, but the leading 1 is\n * removed because it doesn't affect the outcome.\n */\nexport const CRC_16_CCITT = new Crc16(0x1021);\n","/**\n * Handles DMK floppy disk images.\n *\n * https://retrocomputing.stackexchange.com/questions/15282/understanding-the-dmk-disk-image-file-format-used-by-trs-80-emulators\n * http://www.classiccmp.org/cpmarchives/trs80/mirrors/trs-80.com/early/www.trs-80.com/trs80-dm.htm\n * http://www.classiccmp.org/cpmarchives/trs80/mirrors/www.discover-net.net/~dmkeil/trs80/trstech.htm\n */\n\nimport {toHexWord} from \"z80-base\";\nimport {toHexByte} from \"z80-base\";\nimport {CRC_16_CCITT} from \"./Crc16\";\nimport {FloppyDisk, numberToSide, SectorData, Side} from \"./FloppyDisk\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\n\nconst FILE_HEADER_SIZE = 16;\nconst TRACK_HEADER_SIZE = 128;\n\n/**\n * Represents a single sector on a DMK floppy.\n */\nclass DmkSector {\n    /**\n     * Track this sector is in.\n     */\n    public readonly track: DmkTrack;\n    /**\n     * Whether this sector is stored in double-density format.\n     */\n    public readonly doubleDensity: boolean;\n    /**\n     * Offset of IDAM (0xFE byte) into the track, including the track header.\n     */\n    public readonly offset: number;\n    /**\n     * Index into the sector of the start of the user data.\n     */\n    public readonly dataIndex: number;\n\n    constructor(track: DmkTrack, doubleDensity: boolean, offset: number) {\n        this.track = track;\n        this.doubleDensity = doubleDensity;\n        this.offset = offset;\n        this.dataIndex = this.findDataIndex();\n    }\n\n    /**\n     * Get the cylinder for this sector. This is 0-based.\n     */\n    public getCylinder(): number {\n        return this.getByte(1);\n    }\n\n    /**\n     * Get the side for this sector.\n     */\n    public getSide(): Side {\n        return numberToSide(this.getByte(2));\n    }\n\n    /**\n     * Get the sector number for this sector. This is 1-based.\n     */\n    public getSectorNumber(): number {\n        return this.getByte(3);\n    }\n\n    /**\n     * Get the sector length in bytes.\n     */\n    public getLength(): number {\n        return 128*(1 << this.getByte(4));\n    }\n\n    /**\n     * Get the CRC for the IDAM.\n     */\n    public getIdamCrc(): number {\n        // Bit endian.\n        return (this.getByte(5) << 8) + this.getByte(6);\n    }\n\n    /**\n     * Compute the CRC for the IDAM.\n     */\n    public computeIdemCrc(): number {\n        let crc = 0xFFFF;\n\n        for (let i = -3; i < 5; i++) {\n            crc = CRC_16_CCITT.update(crc, this.getByte(i));\n        }\n\n        return crc;\n    }\n\n    /**\n     * Get the CRC for the data bytes.\n     */\n    public getDataCrc(): number {\n        // Bit endian.\n        const index = this.dataIndex + this.getLength();\n        return (this.getByte(index) << 8) + this.getByte(index + 1);\n    }\n\n    /**\n     * Compute the CRC for the data bytes.\n     */\n    public computeDataCrc(): number {\n        let crc = 0xFFFF;\n\n        const index = this.dataIndex;\n        const begin = index - 4;\n        const end = index + this.getLength();\n        for (let i = begin; i < end; i++) {\n            crc = CRC_16_CCITT.update(crc, this.getByte(i));\n        }\n\n        return crc;\n    }\n\n    /**\n     * Whether the sector data should be considered invalid.\n     */\n    public isDeleted(): boolean {\n        const dam = this.getByte(this.dataIndex - 1);\n        if (dam !== 0xF8 && dam !== 0xFB) {\n            console.error(\"Unknown DAM: \" + toHexByte(dam));\n        }\n\n        // Normally, 0xFB, but 0xF8 if sector is considered deleted.\n        return dam === 0xF8;\n    }\n\n    /**\n     * Get a byte from the sector data.\n     *\n     * @param index index into the sector, relative to the 0xFE byte. Can be negative.\n     */\n    private getByte(index: number): number {\n        return this.track.floppyDisk.binary[this.track.offset + this.offset + index];\n    }\n\n    /**\n     * Look for the byte that indicates the start of data (0xFB or 0xF8). Various\n     * floppy disk documentation specify an exact number here, but I've seen a variety\n     * of values, so just search.\n     */\n    private findDataIndex(): number {\n        for (let i = 7; i < 55; i++) {\n            const byte = this.track.floppyDisk.binary[this.track.offset + this.offset + i];\n            if (byte === 0xFB || byte === 0xF8) {\n                // Maybe also check that the previous three bytes are 0xA1.\n                return i + 1;\n            }\n        }\n\n        // Not sure what to do here. trs80gp says that this is valid.\n        throw new Error(`Can't find byte at start of DAM (track ${this.track.trackNumber}, offset 0x${toHexWord(this.offset)})`);\n    }\n}\n\n/**\n * Represents a single track on a DMK floppy.\n */\nclass DmkTrack {\n    /**\n     * Disk the track is in.\n     */\n    public readonly floppyDisk: DmkFloppyDisk;\n    public readonly trackNumber: number;\n    public readonly side: Side;\n    /**\n     * Offset of the track (start of its header) in the binary.\n     */\n    public readonly offset: number;\n    /**\n     * Sectors in this track.\n     */\n    public readonly sectors: DmkSector[] = [];\n\n    constructor(floppyDisk: DmkFloppyDisk, trackNumber: number, side: Side, offset: number) {\n        this.floppyDisk = floppyDisk;\n        this.trackNumber = trackNumber;\n        this.side = side;\n        this.offset = offset;\n    }\n}\n\n/**\n * Handles the DMK floppy disk file format, developed by David M. Keil.\n *\n * http://www.classiccmp.org/cpmarchives/trs80/mirrors/trs-80.com/early/www.trs-80.com/trs80-dm.htm\n * http://www.classiccmp.org/cpmarchives/trs80/mirrors/www.discover-net.net/~dmkeil/trs80/trstech.htm\n */\nexport class DmkFloppyDisk extends FloppyDisk {\n    public readonly className = \"DmkFloppyDisk\";\n    public readonly writeProtected: boolean;\n    public readonly trackCount: number;\n    public readonly trackLength: number;\n    public readonly flags: number;\n    public readonly tracks: DmkTrack[] = [];\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                supportsDoubleDensity: boolean, writeProtected: boolean, trackCount: number,\n                trackLength: number, flags: number) {\n\n        super(binary, error, annotations, supportsDoubleDensity);\n        this.writeProtected = writeProtected;\n        this.trackCount = trackCount;\n        this.trackLength = trackLength;\n        this.flags = flags;\n    }\n\n    public getDescription(): string {\n        return \"Floppy disk (DMK)\";\n    }\n\n    public readSector(trackNumber: number, side: Side,\n                      sectorNumber: number | undefined): SectorData | undefined {\n\n        // console.log(`readSector(${trackNumber}, ${sectorNumber}, ${side})`);\n        for (const track of this.tracks) {\n            if (track.trackNumber === trackNumber) { // TODO not checking side.\n                for (const sector of track.sectors) {\n                    if (sectorNumber === undefined || (sector.getSectorNumber() === sectorNumber &&\n                        sector.getSide() === side)) {\n\n                        const begin = track.offset + sector.offset + sector.dataIndex;\n                        const end = begin + sector.getLength();\n                        const sectorData = new SectorData(this.binary.subarray(begin, end));\n                        sectorData.crcError = sector.getDataCrc() !== sector.computeDataCrc();\n                        sectorData.deleted = sector.isDeleted();\n                        // console.log(sectorData);\n                        return sectorData;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n/**\n * Decode a DMK floppy disk file.\n */\nexport function decodeDmkFloppyDisk(binary: Uint8Array): DmkFloppyDisk | undefined {\n    const error: string | undefined = undefined;\n    const annotations: ProgramAnnotation[] = [];\n\n    if (binary.length < FILE_HEADER_SIZE) {\n        return undefined;\n    }\n\n    // Decode the header. Comments marked [DMK] are from David Keil's original documentation.\n\n    // [DMK] If this byte is set to FFH the disk is `write protected', 00H allows writing.\n    const writeProtected = binary[0] === 0xFF;\n    if (binary[0] !== 0x00 && binary[0] !== 0xFF) {\n        return undefined;\n    }\n    annotations.push(new ProgramAnnotation(writeProtected ? \"Write protected\" : \"Writable\",\n        0, 1));\n\n    // [DMK] Number of tracks on virtual disk. Since tracks start at 0 this value will be one greater\n    // than the highest track written to the disk. So a disk with 40 tracks will have a value\n    // of 40 (28H) in this field after formatting while the highest track written would be 39.\n    // This field is updated after a track is formatted if the track formatted is greater than\n    // or equal to the current number of tracks. Re-formatting a disk with fewer tracks will\n    // NOT reduce the number of tracks on the virtual disk. Once a virtual disk has allocated\n    // space for a track it will NEVER release it. Formatting a virtual disk with 80 tracks\n    // then re-formatting it with 40 tracks would waste space just like formatting only 40\n    // tracks on an 80 track drive. The emulator and TRS-80 operating system don't care.\n    // To re-format a virtual disk with fewer tracks use the /I option at start-up to\n    // delete and re-create the virtual disk first, then re-format to save space.\n    //\n    // [DMK] Note: This field should NEVER be modified. Changing this number will cause TRS-80\n    // operating system disk errors. (Like reading an 80 track disk in a 40 track drive)\n    const trackCount = binary[1];\n    if (trackCount > 160) {\n        // Not sure what a reasonable maximum is. I've only see 80.\n        return undefined;\n    }\n    annotations.push(new ProgramAnnotation(trackCount + \" tracks\", 1, 2));\n\n    // [DMK] This is the track length for the virtual disk. By default the value is 1900H, 80H bytes\n    // more than the actual track length, this gives a track length of 6272 bytes. A real double\n    // density track length is approx. 6250 bytes. This is the default value when a virtual disk is created.\n    // Values for other disk and format types are 0CC0H for single density 5.25\" floppies,\n    // 14E0H for single density 8\" floppies and 2940H for double density 8\" floppies. The max value is 2940H.\n    // For normal formatting of disks the values of 1900H and 2940H for 5.25\" and 8\" are used.\n    // The emulator will write two bytes and read every second byte when  in single density to maintain\n    // proper sector spacing, allowing mixed density disks. Setting the track length must be done before\n    // a virtual disk is formatted or the disk will have to be re-formatted and since the space for the\n    // disk has already been allocated no space will be saved.\n    //\n    // [DMK] WARNING: Bytes are entered in reverse order (ex. 2940H would be entered, byte 2=40, byte 3=29).\n    //\n    // [DMK] Note: No modification of the track length is necessary, doing so only saves space and is not\n    // necessary to normal operation. The values for all normal 5.25\" and 8\" disks are set when the\n    // virtual disk is created. DON'T modify the track length unless you understand these instructions completely.\n    // Nothing in the PC world can be messed up by improper modification but any other virtual disk mounted\n    // in the emulator with an improperly modified disk could have their data scrambled.\n    const trackLength = binary[2] + (binary[3] << 8);\n    if (trackLength > 0x2940) {\n        return undefined;\n    }\n    annotations.push(new ProgramAnnotation(trackLength + \" bytes per track\", 2, 4));\n\n    // [DMK] Virtual disk option flags.\n    //\n    // [DMK] Bit 4 of this byte, if set, means this is a single sided ONLY disk. This bit is set if the\n    // user selects single sided during disk creation and should not require modification. This flag is\n    // used only to save PC hard disk space and is never required.\n    //\n    // [DMK] Bit 6 of this byte, if set, means this disk is to be single density size and the emulator\n    // will access one byte instead of two when doing I/O in single density. Double density can still\n    // be written to a single density disk but with half the track length only 10 256 byte sectors can be\n    // written in either density. Mixed density is also possible but sector timing may be off so protected\n    // disks may not work, a maximum of 10 256 byte sectors of mixed density can be written to a\n    // single density disk. A program like \"Spook House\" which has a mixed density track 0 with 1 SD sector\n    // and 1 DD sector and the rest of the disk consisting of 10 SD sectors/track will work with this flag set\n    // and save half the PC hard disk space. The protected disk \"Super Utility + 3.0\" however has 6 SD and 6 DD\n    // sectors/track for a total of 12 256 byte sectors/track. This disk cannot be single density.\n    // This bit is set if the user selects single density during disk creation and should\n    // not require modification. This flag is used only to save PC hard disk space and is never required.\n    //\n    // [DMK] Bit 7 of this byte, if set, means density is to be ignored when accessing this disk. The disk MUST\n    // be formatted in double density but the emulator will then read and write the sectors in either density.\n    // The emulator will access one byte instead of two when doing I/O in single density.\n    // This flag was an early way to support mixed density disks it is no longer needed for this purpose.\n    // It is now used for compatibility with old virtual disks created without the double byte now used when in\n    // single density. This bit can be set manually in a hex editor to access old virtual disks written\n    // in single density.\n    const flags = binary[4];\n    const flagParts = [];\n    const singleSided = (flags & 0x10) !== 0;\n    if (singleSided) {\n        flagParts.push(\"SS\");\n    }\n    if ((flags & 0x40) !== 0) {\n        flagParts.push(\"SD\");\n    }\n    if ((flags & 0x80) !== 0) {\n        flagParts.push(\"ignore density\");\n    }\n    annotations.push(new ProgramAnnotation(\"Flags: [\" + flagParts.join(\",\") + \"]\", 4, 5));\n\n    // Sanity check.\n    const sideCount = singleSided ? 1 : 2;\n    const expectedLength = FILE_HEADER_SIZE + sideCount*trackCount*trackLength;\n    if (binary.length !== expectedLength) {\n        console.error(`DMK file wrong size (${binary.length} != ${expectedLength})`);\n        return undefined;\n    }\n\n    // Check that these are zero.\n    for (let i = 5; i < 12; i++) {\n        if (binary[i] !== 0x00) {\n            console.error(\"DMK: Reserved byte \" + i + \" is not zero: 0x\" + toHexByte(binary[i]));\n            return undefined;\n        }\n    }\n    annotations.push(new ProgramAnnotation(\"Reserved\", 5, 12));\n\n    // [DMK] Must be zero if virtual disk is in emulator's native format.\n    //\n    // [DMK] Must be 12345678h if virtual disk is a REAL disk specification file used to access\n    // REAL TRS-80 floppies in compatible PC drives.\n    if (binary[12] + binary[13] + binary[14] + binary[15] !== 0x00) {\n        return undefined;\n    }\n    annotations.push(new ProgramAnnotation(\"Virtual disk\", 12, 16));\n\n    const floppyDisk = new DmkFloppyDisk(binary, error, annotations, true,\n        writeProtected, trackCount, trackLength, flags);\n\n    // Read the tracks.\n    let binaryOffset = FILE_HEADER_SIZE;\n    for (let trackNumber = 0; trackNumber < trackCount; trackNumber++) {\n        for (let side = 0; side < sideCount; side++) {\n            const trackOffset = binaryOffset;\n            const track = new DmkTrack(floppyDisk, trackNumber, numberToSide(side), trackOffset);\n\n            // Read the track header. The term \"IDAM\" in the comment below refers to the \"ID access mark\",\n            // where \"ID\" is referring to the sector ID, the few byte just before the sector data.\n\n            // [DMK] Each side of each track has a 128 (80H) byte header which contains an offset pointer\n            // to each IDAM in the track. This allows a maximum of 64 sector IDAMs/track. This is more than\n            // twice what an 8 inch disk would require and 3.5 times that of a normal TRS-80 5 inch DD disk.\n            // This should more than enough for any protected disk also.\n            //\n            // [DMK] These IDAM pointers MUST adhere to the following rules:\n            //\n            // * Each pointer is a 2 byte offset to the FEh byte of the IDAM. In double byte single density\n            //   the pointer is to the first FEh.\n            // * The offset includes the 128 byte header. For example, an IDAM 10h bytes into the track would\n            //   have a pointer of 90h, 10h+80h=90h.\n            // * The IDAM offsets MUST be in ascending order with no unused or bad pointers.\n            // * If all the entries are not used the header is terminated with a 0000h entry. Unused entries\n            //   must also be zero filled..\n            // * Any IDAMs overwritten during a sector write command should have their entry removed from the\n            //   header and all other pointer entries shifted to fill in.\n            // * The IDAM pointers are created during the track write command (format). A completed track write\n            //   MUST remove all previous IDAM pointers. A partial track write (aborted with the forced interrupt\n            //   command) MUST have it's previous pointers that were not overwritten added to the new IDAM pointers.\n            // * The pointer bytes are stored in reverse order (LSB/MSB).\n            //\n            // [DMK] Each IDAM pointer has two flags. Bit 15 is set if the sector is double density. Bit 14 is\n            // currently undefined. These bits must be masked to get the actual sector offset. For example,\n            // an offset to an IDAM at byte 90h would be 0090h if single density and 8090h if double density.\n\n            for (let i = 0; i < TRACK_HEADER_SIZE; i += 2) {\n                const sectorOffset = binary[binaryOffset + i] + (binary[binaryOffset + i + 1] << 8);\n                if (sectorOffset !== 0) {\n                    track.sectors.push(new DmkSector(track,\n                        (sectorOffset & 0x8000) !== 0,\n                        sectorOffset & 0x3FFF));\n                }\n            }\n            annotations.push(new ProgramAnnotation(`Track ${trackNumber} header`,\n                binaryOffset, binaryOffset + TRACK_HEADER_SIZE));\n\n            for (const sector of track.sectors) {\n                let i = trackOffset + sector.offset;\n\n                annotations.push(new ProgramAnnotation(\"Sector ID access mark\",\n                    i, i + 1));\n                i++;\n\n                annotations.push(new ProgramAnnotation(\"Cylinder \" + sector.getCylinder(),\n                    i, i + 1));\n                i++;\n\n                annotations.push(new ProgramAnnotation(\"Side \" + sector.getSide(),\n                    i, i + 1));\n                i++;\n\n                annotations.push(new ProgramAnnotation(\"Sector \" + sector.getSectorNumber(),\n                    i, i + 1));\n                i++;\n\n                const sectorLength = sector.getLength();\n                annotations.push(new ProgramAnnotation(\"Length \" + sectorLength, i, i + 1));\n                i++;\n\n                const actualIdamCrc = sector.computeIdemCrc();\n                const expectedIdamCrc = sector.getIdamCrc();\n                let idamCrcLabel = \"IDAM CRC\";\n                if (actualIdamCrc === expectedIdamCrc) {\n                    idamCrcLabel += \" (valid)\";\n                } else {\n                    idamCrcLabel += ` (got 0x${toHexWord(actualIdamCrc)}, expected 0x${toHexWord(expectedIdamCrc)})`;\n                }\n                annotations.push(new ProgramAnnotation(idamCrcLabel, i, i + 2));\n                i += 2;\n\n                i = trackOffset + sector.offset + sector.dataIndex;\n                annotations.push(new ProgramAnnotation(\"Sector data\", i, i + sectorLength));\n                i += sectorLength;\n\n                const actualDataCrc = sector.computeDataCrc();\n                const expectedDataCrc = sector.getDataCrc();\n                let dataCrcLabel = \"Data CRC\";\n                if (actualDataCrc === expectedDataCrc) {\n                    dataCrcLabel += \" (valid)\";\n                } else {\n                    dataCrcLabel += ` (got 0x${toHexWord(actualDataCrc)}, expected 0x${toHexWord(expectedDataCrc)})`;\n                }\n                annotations.push(new ProgramAnnotation(dataCrcLabel, i, i + 2));\n                i += 2;\n            }\n\n            floppyDisk.tracks.push(track);\n            binaryOffset += trackLength;\n        }\n    }\n\n    return floppyDisk;\n}\n","import {BasicProgram, decodeBasicProgram} from \"./Basic\";\nimport {Cassette, decodeCassette} from \"./Cassette\";\nimport {CmdProgram, decodeCmdProgram} from \"./CmdProgram\";\nimport {RawBinaryFile} from \"./RawBinaryFile\";\nimport {decodeJv1FloppyDisk, Jv1FloppyDisk} from \"./Jv1FloppyDisk\";\nimport {decodeJv3FloppyDisk, Jv3FloppyDisk} from \"./Jv3FloppyDisk\";\nimport {decodeDmkFloppyDisk, DmkFloppyDisk} from \"./DmkFloppyDisk\";\nimport {decodeSystemProgram, SystemProgram} from \"./SystemProgram\";\n\n/**\n * All the possible programs we can decode.\n */\nexport type Trs80File = BasicProgram |\n    Jv1FloppyDisk |\n    Jv3FloppyDisk |\n    DmkFloppyDisk |\n    Cassette |\n    SystemProgram |\n    CmdProgram |\n    RawBinaryFile;\n\n/**\n * Get the extension of the filename, including the dot, in upper case, or\n * an empty string if the filename does not contain an extension.\n */\nfunction getExtension(filename: string): string {\n    // Strip pathname, in case the filename has no dot but a path component does.\n    // Not sure if we need to support backslash here.\n    const slash = filename.lastIndexOf(\"/\");\n    if (slash >= 0) {\n        filename = filename.substr(slash + 1);\n    }\n\n    // Look for extension.\n    const dot = filename.lastIndexOf(\".\");\n\n    // If the dot is at position 0, then it's just a hidden file, not an extension.\n    return dot > 0 ? filename.substr(dot).toUpperCase() : \"\";\n}\n\n/**\n * Decode a file that's known to be a floppy disk, but not what kind specifically.\n */\nfunction decodeDsk(binary: Uint8Array): Trs80File | undefined {\n    // TODO see trs_disk.c:trs_disk_emutype()\n    // TODO see DiskDrive.cpp:Dectect_JV1, etc.\n\n    let trs80File: Trs80File | undefined;\n\n    trs80File = decodeDmkFloppyDisk(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    trs80File = decodeJv1FloppyDisk(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    trs80File = decodeJv3FloppyDisk(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    return undefined;\n}\n\n/**\n * Top-level decoder for any TRS-80 file.\n *\n * @param binary the bytes of the file.\n * @param filename optional filename to help with detection.\n */\nexport function decodeTrs80File(binary: Uint8Array, filename: string | undefined): Trs80File {\n    let trs80File: Trs80File | undefined;\n    const extension = filename === undefined ? \"\" : getExtension(filename);\n\n    if (extension === \".JV1\") {\n        return decodeJv1FloppyDisk(binary) ?? new RawBinaryFile(binary);\n    }\n\n    if (extension === \".DSK\") {\n        return decodeDsk(binary) ?? new RawBinaryFile(binary);\n    }\n\n    if (extension === \".DMK\") {\n        return decodeDmkFloppyDisk(binary) ?? new RawBinaryFile(binary);\n    }\n\n    // \"Model III BiNary\" format, invented by George Phillips for trs80gp.\n    // Rarely used as a stand-alone file, usually just embedded in .CAS files.\n    if (extension === \".3BN\") {\n        return decodeSystemProgram(binary) ?? new RawBinaryFile(binary);\n    }\n\n    trs80File = decodeCassette(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    trs80File = decodeCmdProgram(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    trs80File = decodeBasicProgram(binary);\n    if (trs80File !== undefined) {\n        return trs80File;\n    }\n\n    return new RawBinaryFile(binary);\n}\n","import {decodeSystemProgram} from \"./SystemProgram\";\nimport {AbstractTrs80File} from \"./Trs80File\";\nimport {decodeTrs80File} from \"./Trs80FileDecoder\";\nimport {ProgramAnnotation} from \"./ProgramAnnotation\";\nimport {Trs80File} from \"./Trs80FileDecoder\";\n\n// Low-speed header and sync constants.\nconst LOW_SPEED_HEADER_BYTE = 0x00;\nconst LOW_SPEED_SYNC_BYTE = 0xA5;\nconst LOW_SPEED_ACCEPTABLE_HEADER =\n    (LOW_SPEED_HEADER_BYTE << 24) |\n    (LOW_SPEED_HEADER_BYTE << 16) |\n    (LOW_SPEED_HEADER_BYTE << 8) |\n    (LOW_SPEED_HEADER_BYTE << 0);\nconst LOW_SPEED_DETECT =\n    (LOW_SPEED_HEADER_BYTE << 24) |\n    (LOW_SPEED_HEADER_BYTE << 16) |\n    (LOW_SPEED_HEADER_BYTE << 8) |\n    (LOW_SPEED_SYNC_BYTE << 0);\n\n// High-speed header and sync constants.\nconst HIGH_SPEED_HEADER_BYTE = 0x55;\nconst HIGH_SPEED_SYNC_BYTE = 0x7F;\nconst HIGH_SPEED_ACCEPTABLE_HEADER1 =\n    (HIGH_SPEED_HEADER_BYTE << 24) |\n    (HIGH_SPEED_HEADER_BYTE << 16) |\n    (HIGH_SPEED_HEADER_BYTE << 8) |\n    (HIGH_SPEED_HEADER_BYTE << 0);\nconst HIGH_SPEED_ACCEPTABLE_HEADER2 = ~HIGH_SPEED_ACCEPTABLE_HEADER1;\nconst HIGH_SPEED_DETECT =\n    (HIGH_SPEED_HEADER_BYTE << 24) |\n    (HIGH_SPEED_HEADER_BYTE << 16) |\n    (HIGH_SPEED_HEADER_BYTE << 8) |\n    (HIGH_SPEED_SYNC_BYTE << 0);\n\nexport enum CassetteSpeed {\n    LOW_SPEED,\n    HIGH_SPEED,\n}\n\n/**\n * See if actual and reference are equal, modulo some bit offset.\n *\n * @param actual the last 32 bits of the stream.\n * @param reference the 32 bits we're looking for.\n * @return the number of extra bits (0 to 7 inclusive) in \"actual\" after the end of reference,\n * or undefined if not a match.\n */\nfunction checkMatch(actual: number, reference: number): number | undefined {\n    for (let offset = 0; offset < 8; offset++) {\n        if ((actual & ~((1 << offset) - 1)) === reference << offset) {\n            return offset;\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Represents a file on a cassette. (Not the CAS file itself.)\n */\nexport class CassetteFile {\n    // Offset into the cassette's binary.\n    public readonly offset: number;\n    public readonly speed: CassetteSpeed;\n    public readonly file: Trs80File;\n\n    constructor(offset: number, speed: CassetteSpeed, file: Trs80File) {\n        this.offset = offset;\n        this.speed = speed;\n        this.file = file;\n    }\n\n    /**\n     * Return the file's annotations adjusted by the offset into the cassette.\n     */\n    public adjustedAnnotations(): ProgramAnnotation[] {\n        return this.file.annotations.map(annotation => annotation.adjusted(this.offset));\n    }\n}\n\n/**\n * Represents a cassette (CAS file).\n */\nexport class Cassette extends AbstractTrs80File {\n    public readonly className = \"Cassette\";\n    public readonly files: CassetteFile[];\n\n    constructor(binary: Uint8Array, error: string | undefined, annotations: ProgramAnnotation[],\n                files: CassetteFile[]) {\n        super(binary, error, annotations);\n        this.files = files;\n    }\n\n    public getDescription(): string {\n        if (this.files.length === 0) {\n            return \"Empty cassette\";\n        } else if (this.files.length === 1) {\n            const cassetteFile = this.files[0];\n            return cassetteFile.file.getDescription() + \" on a \" +\n                (cassetteFile.speed === CassetteSpeed.LOW_SPEED ? \"low\" : \"high\") + \" speed cassette\";\n        } else {\n            return \"Cassette with \" + this.files.length + \" files\";\n        }\n    }\n}\n\n/**\n * High-speed CAS files have start bits built-in. Strip these out because\n * we re-insert them below when encoding. We could also remove the\n * writing of start bits below, but we don't really know how many bits\n * there are at the end that we shouldn't write.\n *\n * Update: We no longer insert start bits in encodeHighSpeed(), so this\n * routine is no longer necessary, but we keep it around anyway.\n */\nfunction stripStartBits(inBytes: Uint8Array): Uint8Array {\n    // Compute new size of array.\n    const outBytes = new Uint8Array(Math.floor(inBytes.length*8/9));\n\n    // Fill output buffer.\n    for (let i = 0; i < outBytes.length; i++) {\n        // Index of most-significant data bit.\n        const bitIndex =  i*9 + 1;\n        const byteIndex = Math.floor(bitIndex/8);\n        const bitOffset = bitIndex%8;\n\n        let value = inBytes[byteIndex] << bitOffset;\n        if (bitOffset !== 0) {\n            value |= inBytes[byteIndex + 1] >> (8 - bitOffset);\n        }\n        outBytes[i] = value;\n    }\n\n    return outBytes;\n}\n\n/**\n * Decodes a CAS from the binary. If the binary is not at all a cassette,\n * returns undefined. If it's a cassette with decoding errors, returns\n * partially-decoded object and sets the \"error\" field.\n */\nexport function decodeCassette(binary: Uint8Array): Cassette | undefined {\n    const start = 0;\n    const annotations: ProgramAnnotation[] = [];\n    const cassetteFiles: CassetteFile[] = [];\n\n    while (true) {\n        let recentBits = 0xFFFFFFFF;\n        let programBinary: Uint8Array | undefined;\n        let speed: CassetteSpeed | undefined;\n        let programStartIndex = 0;\n\n        for (let i = start; i < binary.length; i++) {\n            const byte = binary[i];\n            recentBits = (recentBits << 8) | byte;\n\n            const lowSpeedBitOffset = checkMatch(recentBits, LOW_SPEED_DETECT);\n            if (lowSpeedBitOffset !== undefined) {\n                if (lowSpeedBitOffset !== 0) {\n                    // TODO\n                    throw new Error(\"We don't yet handle low-speed cassettes with bit offsets of \" + lowSpeedBitOffset);\n                }\n\n                annotations.push(new ProgramAnnotation(\"Low speed header\", 0, i));\n                annotations.push(new ProgramAnnotation(\"Low speed sync byte\", i, i + 1));\n\n                speed = CassetteSpeed.LOW_SPEED;\n                programStartIndex = i + 1;\n                programBinary = binary.subarray(programStartIndex);\n                break;\n            }\n\n            const highSpeedBitOffset = checkMatch(recentBits, HIGH_SPEED_DETECT);\n            if (highSpeedBitOffset !== undefined) {\n                if (highSpeedBitOffset !== 0) {\n                    // TODO\n                    throw new Error(\"We don't yet handle high-speed cassettes with bit offsets of \" +\n                        highSpeedBitOffset);\n                }\n\n                annotations.push(new ProgramAnnotation(\"High speed header\", 0, i));\n                annotations.push(new ProgramAnnotation(\"High speed sync byte\", i, i + 1));\n\n                speed = CassetteSpeed.HIGH_SPEED;\n                programStartIndex = i + 1;\n                programBinary = stripStartBits(binary.subarray(programStartIndex));\n                break;\n            }\n\n            if (i >= start + 4 &&\n                recentBits !== LOW_SPEED_ACCEPTABLE_HEADER &&\n                recentBits !== HIGH_SPEED_ACCEPTABLE_HEADER1 &&\n                recentBits !== HIGH_SPEED_ACCEPTABLE_HEADER2) {\n\n                // We should be seeing the header bits.\n                break;\n            }\n        }\n\n        if (programBinary === undefined || speed === undefined) {\n            // Not a CAS file.\n            return undefined;\n        }\n\n        // See what kind of file it is. System program aren't decoded by decodeTrs80File() because\n        // these are always on cassettes or with a .3BN extension. So try that ourselves first.\n        let file: Trs80File | undefined = decodeSystemProgram(programBinary);\n        if (file === undefined) {\n            file = decodeTrs80File(programBinary, undefined);\n        }\n        cassetteFiles.push(new CassetteFile(programStartIndex, speed, file));\n\n        // TODO handle multiple files. See HAUNT.CAS.\n        break;\n    }\n\n    // Merge the annotations of the files into ours.\n    for (const file of cassetteFiles) {\n        annotations.push(... file.adjustedAnnotations());\n    }\n\n    return new Cassette(binary, undefined, annotations, cassetteFiles);\n}\n","/**\n * Classes for handling TRSDOS diskettes.\n *\n * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/zaps-and-patches/#guidedtour\n * http://www.manmrk.net/tutorials/TRS80/Software/ldos/trs80/doc/prgguide.pdf\n */\n\nimport {concatByteArrays} from \"teamten-ts-utils\";\nimport {FloppyDisk, Side} from \"./FloppyDisk\";\n\n// Number of bytes per dir entry in the sector.\nconst DIR_ENTRY_LENGTH = 48;\n\n// Apparently this is constant in TRSDOS.\nconst BYTES_PER_SECTOR = 256;\n\n// Apparently this is 3, but somewhere else I read 6.\nconst SECTORS_PER_GRANULE = 3;\n\n// The number of sectors on each track, numbered 1 to 18.\nconst SECTORS_PER_TRACK = 18;\n\n// Copyright in the last 16 bytes of each directory sector.\nconst EXPECTED_TANDY = \"(c) 1980 Tandy\";\n\n// Password value that means \"no password\".\nconst NO_PASSWORD = 0xEF5C;\n\n// Password value for \"PASSWORD\".\nconst PASSWORD = 0xD38F;\n\n/**\n * Decodes binary into an ASCII string. Returns undefined if any non-ASCII value is\n * found in the string, where \"ASCII\" is defined as being in the range 32 to 126 inclusive.\n */\nfunction decodeAscii(binary: Uint8Array, trim: boolean = true): string | undefined {\n    const parts: string[] = [];\n\n    for (const b of binary) {\n        if (b === 0x0D) {\n            // Auto command ends with carriage return.\n            break;\n        }\n        if (b < 32 || b >= 127) {\n            return undefined;\n        }\n\n        parts.push(String.fromCodePoint(b));\n    }\n\n    let s = parts.join(\"\");\n\n    if (trim) {\n        s = s.trim();\n    }\n\n    return s;\n}\n\n/**\n * Lowest three bits of the directory entry's flag.\n */\nexport enum TrsdosProtectionLevel {\n    // Keep this values in this order, they match the bit values (0 to 7).\n    FULL,\n    REMOVE,\n    RENAME,\n    WRITE,\n    UPDATE,\n    READ,\n    EXEC,\n    NO_ACCESS,\n}\n\n/**\n * Gets the string version of the protection level enum.\n * @param level\n */\nexport function trsdosProtectionLevelToString(level: TrsdosProtectionLevel): string {\n    switch (level) {\n        case TrsdosProtectionLevel.FULL:\n            return \"FULL\";\n        case TrsdosProtectionLevel.REMOVE:\n            return \"REMOVE\";\n        case TrsdosProtectionLevel.RENAME:\n            return \"RENAME\";\n        case TrsdosProtectionLevel.WRITE:\n            return \"WRITE\";\n        case TrsdosProtectionLevel.UPDATE:\n            return \"UPDATE\";\n        case TrsdosProtectionLevel.READ:\n            return \"READ\";\n        case TrsdosProtectionLevel.EXEC:\n            return \"EXEC\";\n        case TrsdosProtectionLevel.NO_ACCESS:\n            return \"NO_ACCESS\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n\n/**\n * A contiguous number of sectors for storing part of a file.\n */\nexport class TrsdosExtent {\n    public readonly trackNumber: number;\n    public readonly granuleOffset: number;\n    public readonly granuleCount: number;\n\n    constructor(trackNumber: number, granuleOffset: number, granuleCount: number) {\n        this.trackNumber = trackNumber;\n        this.granuleOffset = granuleOffset;\n        this.granuleCount = granuleCount;\n    }\n}\n\n/**\n * Decode an array of extents.\n *\n * @param binary byte we'll be pulling the extents from.\n * @param begin index of first extent in binary.\n * @param end index past last extent in binary.\n * @param trackFirst whether the track comes first or second.\n */\nfunction decodeExtents(binary: Uint8Array, begin: number, end: number,\n                       trackFirst: boolean): TrsdosExtent[] | undefined {\n\n    const extents: TrsdosExtent[] = [];\n\n    for (let i = begin; i < end; i += 2) {\n        if (binary[i] === 0xFF && binary[i + 1] === 0xFF) {\n            break;\n        }\n\n        const trackNumber = binary[trackFirst ? i : i + 1];\n        const granuleByte = binary[trackFirst ? i + 1 : i];\n        const granuleOffset = granuleByte >> 5;\n        const granuleCount = granuleByte & 0x1F;\n\n        if (trackNumber >= 40) {\n            // Not a TRSDOS disk.\n            return undefined;\n        }\n\n        extents.push(new TrsdosExtent(trackNumber, granuleOffset, granuleCount));\n    }\n\n    return extents;\n}\n\n/**\n * The Granule Allocation Table sector info.\n */\nexport class TrsdosGatInfo {\n    public readonly gat: Uint8Array;\n    public readonly password: number;\n    public readonly name: string;\n    public readonly date: string;\n    public readonly autoCommand: string;\n\n    constructor(gat: Uint8Array, password: number, name: string, date: string, autoCommand: string) {\n        this.gat = gat;\n        this.password = password;\n        this.name = name;\n        this.date = date;\n        this.autoCommand = autoCommand;\n    }\n}\n\n/**\n * Converts a sector to a GAT object, or undefined if we don't think this is a GAT sector.\n */\nfunction decodeGatInfo(binary: Uint8Array): TrsdosGatInfo | undefined {\n    // One byte for each track.\n    const gat = binary.subarray(0, 40);\n\n    // Top two bits don't map to anything, so must be zero.\n    for (const g of gat) {\n        if ((g & 0xC0) !== 0) {\n            return undefined;\n        }\n    }\n\n    // Assume big endian.\n    const password = (binary[0xCE] << 8) | binary[0xCF];\n    const name = decodeAscii(binary.subarray(0xD0, 0xD8));\n    const date = decodeAscii(binary.subarray(0xD8, 0xE0));\n    const autoCommand = decodeAscii(binary.subarray(0xE0));\n\n    // Implies that this is not a TRSDOS disk.\n    if (name === undefined || date === undefined || autoCommand === undefined) {\n        return undefined;\n    }\n\n    return new TrsdosGatInfo(gat, password, name, date, autoCommand);\n}\n\n/**\n * The Hash Allocation Table sector info.\n */\nexport class TrsdosHitInfo {\n    public readonly hit: Uint8Array;\n    public readonly systemFiles: TrsdosExtent[];\n\n    constructor(hit: Uint8Array, systemFiles: TrsdosExtent[]) {\n        this.hit = hit;\n        this.systemFiles = systemFiles;\n    }\n}\n\n/**\n * Decode the Hash Index Table sector, or undefined if we don't think this is a TRSDOS disk.\n */\nfunction decodeHitInfo(binary: Uint8Array): TrsdosHitInfo | undefined {\n    // One byte for each file.\n    const hit = binary.subarray(0, 80);\n    const systemFiles = decodeExtents(binary, 0xE0, binary.length, false);\n    if (systemFiles === undefined) {\n        return undefined;\n    }\n\n    return new TrsdosHitInfo(hit, systemFiles);\n}\n\n/**\n * Single (valid) directory entry for a file.\n */\nexport class TrsdosDirEntry {\n    public readonly flags: number;\n    public readonly month: number;\n    public readonly year: number;\n    public readonly lastSectorSize: number;\n    // Logical record length.\n    public readonly lrl: number;\n    public readonly rawFilename: string;\n    public readonly updatePassword: number;\n    public readonly accessPassword: number;\n    // This is the number of *full* sectors. It doesn't include a possible\n    // additional partial sector of \"lastSectorSize\" bytes.\n    public readonly sectorCount: number;\n    public readonly extents: TrsdosExtent[];\n\n    constructor(flags: number, month: number, year: number, lastSectorSize: number, lrl: number,\n                filename: string, updatePassword: number, accessPassword: number,\n                sectorCount: number, extents: TrsdosExtent[]) {\n\n        this.flags = flags;\n        this.month = month;\n        this.year = year;\n        this.lastSectorSize = lastSectorSize;\n        this.lrl = lrl;\n        this.rawFilename = filename;\n        this.updatePassword = updatePassword;\n        this.accessPassword = accessPassword;\n        this.sectorCount = sectorCount;\n        this.extents = extents;\n    }\n\n    /**\n     * Get the protection level for the file.\n     */\n    public getProtectionLevel(): TrsdosProtectionLevel {\n        return (this.flags & 0x07) as TrsdosProtectionLevel;\n    }\n\n    /**\n     * Whether the file is hidden in a directory listing.\n     */\n    public isHidden(): boolean {\n        return (this.flags & 0x08) !== 0;\n    }\n\n    /**\n     * Whether the file has an entry in the HIT table. This bit is set to 0 when\n     * deleting a file.\n     */\n    public isActive(): boolean {\n        return (this.flags & 0x10) !== 0;\n    }\n\n    /**\n     * Whether there should be limitations to how many times you can copy this file.\n     * Other docs (maybe for LDOS) say that this indicates \"Partitioned Data Set\".\n     */\n    public hasBackupLimitation(): boolean {\n        return (this.flags & 0x20) !== 0;\n    }\n\n    /**\n     * Whether this is a system file (as opposed to user file).\n     */\n    public isSystemFile(): boolean {\n        return (this.flags & 0x40) !== 0;\n    }\n\n    /**\n     * Whether this is an extended entry (as opposed to primary entry). Each entry can\n     * only encode four extents, so subsequent extents are stored in extended entries.\n     * TODO this says max four extents, but we have space for 13 extents in the binary.\n     */\n    public isExtendedEntry(): boolean {\n        return (this.flags & 0x80) !== 0;\n    }\n\n    public getFlagsString(): string {\n        const parts: string[] = [];\n\n        parts.push(trsdosProtectionLevelToString(this.getProtectionLevel()));\n        if (this.isHidden()) {\n            parts.push(\"hidden\");\n        }\n        if (!this.isActive()) {\n            // Should never happen.\n            parts.push(\"inactive\");\n        }\n        if (this.hasBackupLimitation()) {\n            parts.push(\"limits\");\n        }\n        if (this.isSystemFile()) {\n            parts.push(\"system\");\n        }\n        if (this.isExtendedEntry()) {\n            parts.push(\"extended\");\n        }\n\n        return \"[\" + parts.join(\",\") + \"]\";\n    }\n\n    /**\n     * Get the basename (part before the period) of the filename.\n     */\n    public getBasename(): string {\n        return this.rawFilename.substr(0, 8).trim();\n    }\n\n    /**\n     * Get the extension of the filename.\n     */\n    public getExtension(): string {\n        return this.rawFilename.substr(8).trim();\n    }\n\n    /**\n     * Get the full filename (without the internal spaces of the raw filename). If the\n     * file has an extension, it will be preceded by the specified separator.\n     */\n    public getFilename(extensionSeparator: string): string {\n        const extension = this.getExtension();\n        return this.getBasename() + (extension === \"\" ? \"\" : extensionSeparator + extension);\n    }\n\n    /**\n     * Return the size in bytes.\n     */\n    public getSize(): number {\n        return this.sectorCount*BYTES_PER_SECTOR + this.lastSectorSize;\n    }\n\n    /**\n     * Return the date in MM/YY format.\n     */\n    public getDateString(): string {\n        return this.month.toString().padStart(2, \"0\") + \"/\" +  this.year.toString().padStart(2, \"0\");\n    }\n\n    /**\n     * Return the date as an object.\n     */\n    public getDate(): Date {\n        return new Date(1900 + this.year, this.month - 1);\n    }\n}\n\n/**\n * Decodes a directory entry from a 48-byte chunk, or undefined if the directory entry is empty.\n */\nfunction decodeDirEntry(binary: Uint8Array): TrsdosDirEntry | undefined {\n    const flags = binary[0];\n    // Check \"active\" bit. Setting this to zero is how files are deleted. Also check empty filename.\n    if ((flags & 0x10) === 0 || binary[5] === 0) {\n        return undefined;\n    }\n\n    const month = binary[1];\n    const year = binary[2];\n    const lastSectorSize = binary[3];\n    const lrl = ((binary[4] - 1) & 0xFF) + 1; // 0 -> 256.\n    const filename = decodeAscii(binary.subarray(5, 16));\n    // Not sure how to convert these two into a number. Just use big endian.\n    const updatePassword = (binary[16] << 8) | binary[17];\n    const accessPassword = (binary[18] << 8) | binary[19];\n    // Little endian.\n    const sectorCount = (binary[21] << 8) | binary[20];\n    const extents = decodeExtents(binary, 22, binary.length, true);\n\n    if (filename === undefined || extents === undefined) {\n        // This signals empty directory, but really should imply a non-TRSDOS disk.\n        return undefined;\n    }\n\n    return new TrsdosDirEntry(flags, month, year, lastSectorSize, lrl, filename, updatePassword,\n        accessPassword, sectorCount, extents);\n}\n\n/**\n * A decoded TRSDOS diskette.\n */\nexport class Trsdos {\n    public readonly disk: FloppyDisk;\n    public readonly gatInfo: TrsdosGatInfo;\n    public readonly hitInfo: TrsdosHitInfo;\n    public readonly dirEntries: TrsdosDirEntry[];\n\n    constructor(disk: FloppyDisk, gatInfo: TrsdosGatInfo,\n                hitInfo: TrsdosHitInfo, dirEntries: TrsdosDirEntry[]) {\n\n        this.disk = disk;\n        this.gatInfo = gatInfo;\n        this.hitInfo = hitInfo;\n        this.dirEntries = dirEntries;\n    }\n\n    /**\n     * Read the binary for a file on the diskette.\n     */\n    public readFile(dirEntry: TrsdosDirEntry): Uint8Array {\n        const parts: Uint8Array[] = [];\n\n        let sectorCount = dirEntry.sectorCount + (dirEntry.lastSectorSize > 0 ? 1 : 0);\n        for (const extent of dirEntry.extents) {\n            let trackNumber = extent.trackNumber;\n            let sectorNumber = extent.granuleOffset*SECTORS_PER_GRANULE + 1;\n            for (let i = 0;\n                 i < extent.granuleCount*SECTORS_PER_GRANULE && sectorCount > 0;\n                 i++, sectorNumber++, sectorCount--) {\n\n                if (sectorNumber > SECTORS_PER_TRACK) {\n                    // Move to the next track.\n                    sectorNumber -= SECTORS_PER_TRACK;\n                    trackNumber += 1;\n                }\n                const sector = this.disk.readSector(trackNumber, Side.FRONT, sectorNumber);\n                if (sector === undefined) {\n                    console.log(`Sector couldn't be read ${trackNumber}, ${sectorNumber}`);\n                    // TODO\n                } else {\n                    // TODO check deleted?\n                    if (sector.crcError) {\n                        console.log(\"Sector has CRC error\");\n                    }\n                    if (sector.deleted) {\n                        // console.log(\"Sector \" + sectorNumber + \" is deleted\");\n                    }\n                    parts.push(sector.data);\n                }\n            }\n        }\n\n        // Clip last sector.\n        if (parts.length > 0 && dirEntry.lastSectorSize > 0) {\n            parts[parts.length - 1] = parts[parts.length - 1].subarray(0, dirEntry.lastSectorSize);\n        }\n\n        return concatByteArrays(parts);\n    }\n}\n\n/**\n * Decode a TRSDOS diskette, or return undefined if this does not look like such a diskette.\n */\nexport function decodeTrsdos(disk: FloppyDisk): Trsdos | undefined {\n    // Decode Granule Allocation Table sector.\n    const gatSector = disk.readSector(17, Side.FRONT, 1);\n    if (gatSector === undefined || gatSector.deleted) {\n        return undefined;\n    }\n    const gatInfo = decodeGatInfo(gatSector.data);\n    if (gatInfo === undefined) {\n        return undefined;\n    }\n\n    // Decode Hash Index Table sector.\n    const hitSector = disk.readSector(17, Side.FRONT, 2);\n    if (hitSector === undefined || hitSector.deleted) {\n        return undefined;\n    }\n    const hitInfo = decodeHitInfo(hitSector.data);\n    if (hitInfo === undefined) {\n        return undefined;\n    }\n\n    // Decode directory entries.\n    const dirEntries: TrsdosDirEntry[] = [];\n    for (let k = 0; k < 16; k++) {\n        const dirSector = disk.readSector(17, Side.FRONT, k + 3);\n        if (dirSector !== undefined) {\n            const tandy = decodeAscii(dirSector.data.subarray(5*DIR_ENTRY_LENGTH));\n            if (tandy !== EXPECTED_TANDY) {\n                console.error(`Expected \"${EXPECTED_TANDY}\", got \"${tandy}\"`);\n                return undefined;\n            }\n            for (let j = 0; j < 5; j++) {\n                const dirEntry = decodeDirEntry(dirSector.data.subarray(j*DIR_ENTRY_LENGTH, (j + 1)*DIR_ENTRY_LENGTH));\n                if (dirEntry !== undefined) {\n                    dirEntries.push(dirEntry);\n                }\n            }\n        }\n    }\n\n    return new Trsdos(disk, gatInfo, hitInfo, dirEntries);\n}\n","\n// RAM address range of screen.\nexport const TRS80_SCREEN_BEGIN = 15 * 1024;\nexport const TRS80_SCREEN_END = 16 * 1024;\n","\nexport * from \"./Basic\";\nexport * from \"./CmdProgram\";\nexport * from \"./Cassette\";\nexport * from \"./SystemProgram\";\nexport * from \"./RawBinaryFile\";\nexport * from \"./Trs80FileDecoder\";\nexport * from \"./FloppyDisk\";\nexport * from \"./Jv1FloppyDisk\";\nexport * from \"./Trsdos\";\nexport * from \"./Addresses\";\n","import jss from './Jss';\nimport { Highlightable } from \"./Highlighter\";\nimport { ElementType } from \"trs80-base\";\n/**\n * Add text to the line with the specified class.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    error: {\n        color: \"var(--red)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--red)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    lineNumber: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    punctuation: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    keyword: {\n        color: \"var(--blue)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    regular: {\n        color: \"var(--foreground)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    string: {\n        color: \"var(--orange)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--orange)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    comment: {\n        color: \"var(--cyan)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * Render an array of Basic elements to a DIV.\n */\nexport function toDiv(basicProgram, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    // Map from byte address to HTML element for that byte.\n    const elements = [];\n    if (basicProgram === undefined) {\n        // Not sure what to do here.\n        return elements;\n    }\n    let line = undefined;\n    for (const basicElement of basicProgram.elements) {\n        let className;\n        if (line === undefined || basicElement.elementType === ElementType.LINE_NUMBER) {\n            line = document.createElement(\"div\");\n            out.appendChild(line);\n        }\n        switch (basicElement.elementType) {\n            case ElementType.ERROR:\n                className = classes.error;\n                break;\n            case ElementType.LINE_NUMBER:\n                className = classes.lineNumber;\n                break;\n            case ElementType.PUNCTUATION:\n                className = classes.punctuation;\n                break;\n            case ElementType.KEYWORD:\n                className = classes.keyword;\n                break;\n            case ElementType.REGULAR:\n            default:\n                className = classes.regular;\n                break;\n            case ElementType.STRING:\n                className = classes.string;\n                break;\n            case ElementType.COMMENT:\n                className = classes.comment;\n                break;\n        }\n        const e = add(line, basicElement.text, className);\n        if (basicElement.offset !== undefined) {\n            elements.push(new Highlightable(basicElement.offset, basicElement.offset + basicElement.length - 1, e));\n        }\n    }\n    return elements;\n}\n","/**\n * Interface for fetching cassette audio data. We make this a concrete\n * class because rollup.js can't handle exported interfaces.\n */\nexport class CassettePlayer {\n    /**\n     * The number of samples per second that this audio represents.\n     */\n    public samplesPerSecond: number = 44100;\n\n    /**\n     * Called when the motor starts.\n     */\n    public onMotorStart(): void {\n        // Optional function.\n    }\n\n    /**\n     * Read the next sample. Must be in the range -1 to 1. If we try to read off\n     * the end of the cassette, just return zero.\n     */\n    public readSample(): number {\n        return 0;\n    }\n\n    /**\n     * Called when the motor stops.\n     */\n    public onMotorStop(): void {\n        // Optional function.\n    }\n}\n","\n// Handle keyboard mapping. The TRS-80 Model III keyboard has keys in different\n// places, so we must occasionally fake a Shift key being up or down when it's\n// really not.\n\n// Keyboard is in several identical (mirrored) banks.\nconst BANK_SIZE = 0x100;\nconst BANK_COUNT = 4;\nconst BEGIN_ADDR = 0x3800;\nconst END_ADDR = BEGIN_ADDR + BANK_SIZE*BANK_COUNT;\nconst KEY_DELAY_CLOCK_CYCLES = 50000;\n\n// Whether to force a Shift key, and how.\nenum ShiftState {\n    NEUTRAL, FORCE_DOWN, FORCE_UP,\n}\n\n// For each ASCII character or key we keep track of how to trigger it.\nclass KeyInfo {\n    public byteIndex: number;\n    public bitNumber: number;\n    public shiftForce: ShiftState;\n\n    constructor(byteIndex: number, bitNumber: number, shiftForce: ShiftState) {\n        this.byteIndex = byteIndex;\n        this.bitNumber = bitNumber;\n        this.shiftForce = shiftForce;\n    }\n}\n\n// A queued-up key.\nclass KeyActivity {\n    public keyInfo: KeyInfo;\n    public isPressed: boolean;\n\n    constructor(keyInfo: KeyInfo, isPressed: boolean) {\n        this.keyInfo = keyInfo;\n        this.isPressed = isPressed;\n    }\n}\n\n// Map from ASCII or special key to the info of which byte and bit it's mapped\n// to, and whether to force Shift.\nconst keyMap = new Map<string, KeyInfo>();\n\n// http://www.trs-80.com/trs80-zaps-internals.htm#keyboard13\nkeyMap.set(\"@\", new KeyInfo(0, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"`\", new KeyInfo(0, 0, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\"A\", new KeyInfo(0, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"B\", new KeyInfo(0, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"C\", new KeyInfo(0, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"D\", new KeyInfo(0, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"E\", new KeyInfo(0, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"F\", new KeyInfo(0, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"G\", new KeyInfo(0, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"H\", new KeyInfo(1, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"I\", new KeyInfo(1, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"J\", new KeyInfo(1, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"K\", new KeyInfo(1, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"L\", new KeyInfo(1, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"M\", new KeyInfo(1, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"N\", new KeyInfo(1, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"O\", new KeyInfo(1, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"P\", new KeyInfo(2, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Q\", new KeyInfo(2, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"R\", new KeyInfo(2, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"S\", new KeyInfo(2, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"T\", new KeyInfo(2, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"U\", new KeyInfo(2, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"V\", new KeyInfo(2, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"W\", new KeyInfo(2, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"X\", new KeyInfo(3, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Y\", new KeyInfo(3, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Z\", new KeyInfo(3, 2, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\"a\", new KeyInfo(0, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"b\", new KeyInfo(0, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"c\", new KeyInfo(0, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"d\", new KeyInfo(0, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"e\", new KeyInfo(0, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"f\", new KeyInfo(0, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"g\", new KeyInfo(0, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"h\", new KeyInfo(1, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"i\", new KeyInfo(1, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"j\", new KeyInfo(1, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"k\", new KeyInfo(1, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"l\", new KeyInfo(1, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"m\", new KeyInfo(1, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"n\", new KeyInfo(1, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"o\", new KeyInfo(1, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"p\", new KeyInfo(2, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"q\", new KeyInfo(2, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"r\", new KeyInfo(2, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"s\", new KeyInfo(2, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"t\", new KeyInfo(2, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"u\", new KeyInfo(2, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"v\", new KeyInfo(2, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"w\", new KeyInfo(2, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"x\", new KeyInfo(3, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"y\", new KeyInfo(3, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"z\", new KeyInfo(3, 2, ShiftState.FORCE_UP));\n\nkeyMap.set(\"0\", new KeyInfo(4, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"1\", new KeyInfo(4, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"2\", new KeyInfo(4, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"3\", new KeyInfo(4, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"4\", new KeyInfo(4, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"5\", new KeyInfo(4, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"6\", new KeyInfo(4, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"7\", new KeyInfo(4, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"8\", new KeyInfo(5, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"9\", new KeyInfo(5, 1, ShiftState.FORCE_UP));\n\nkeyMap.set(\"_\", new KeyInfo(4, 0, ShiftState.FORCE_DOWN)); // Simulate Shift-0, like trsemu.\nkeyMap.set(\"!\", new KeyInfo(4, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"\\\"\", new KeyInfo(4, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"#\", new KeyInfo(4, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"$\", new KeyInfo(4, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"%\", new KeyInfo(4, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"&\", new KeyInfo(4, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"'\", new KeyInfo(4, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"(\", new KeyInfo(5, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\")\", new KeyInfo(5, 1, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\":\", new KeyInfo(5, 2, ShiftState.FORCE_UP));\nkeyMap.set(\";\", new KeyInfo(5, 3, ShiftState.FORCE_UP));\nkeyMap.set(\",\", new KeyInfo(5, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"-\", new KeyInfo(5, 5, ShiftState.FORCE_UP));\nkeyMap.set(\".\", new KeyInfo(5, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"/\", new KeyInfo(5, 7, ShiftState.FORCE_UP));\n\nkeyMap.set(\"*\", new KeyInfo(5, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"+\", new KeyInfo(5, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"<\", new KeyInfo(5, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"=\", new KeyInfo(5, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\">\", new KeyInfo(5, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"?\", new KeyInfo(5, 7, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\"Enter\", new KeyInfo(6, 0, ShiftState.NEUTRAL));\nkeyMap.set(\"\\\\\", new KeyInfo(6, 1, ShiftState.NEUTRAL)); // Clear\nkeyMap.set(\"Escape\", new KeyInfo(6, 2, ShiftState.NEUTRAL)); // Break\nkeyMap.set(\"ArrowUp\", new KeyInfo(6, 3, ShiftState.NEUTRAL));\nkeyMap.set(\"ArrowDown\", new KeyInfo(6, 4, ShiftState.NEUTRAL));\nkeyMap.set(\"ArrowLeft\", new KeyInfo(6, 5, ShiftState.NEUTRAL));\nkeyMap.set(\"Backspace\", new KeyInfo(6, 5, ShiftState.NEUTRAL)); // Left arrow\nkeyMap.set(\"ArrowRight\", new KeyInfo(6, 6, ShiftState.NEUTRAL));\nkeyMap.set(\" \", new KeyInfo(6, 7, ShiftState.NEUTRAL));\nkeyMap.set(\"Shift\", new KeyInfo(7, 0, ShiftState.NEUTRAL));\n\nexport class Keyboard {\n    public static isInRange(address: number): boolean {\n        return address >= BEGIN_ADDR && address < END_ADDR;\n    }\n\n    // We queue up keystrokes so that we don't overwhelm the ROM polling routines.\n    public keyQueue: KeyActivity[]  = [];\n    // Whether browser keys should be intercepted.\n    public interceptKeys = false;\n    public keyProcessMinClock: number = 0;\n    // 8 bytes, each a bitfield of keys currently pressed.\n    private keys = new Uint8Array(8);\n    private shiftForce = ShiftState.NEUTRAL;\n\n    // Release all keys.\n    public clearKeyboard(): void {\n        this.keys.fill(0);\n        this.shiftForce = ShiftState.NEUTRAL;\n    }\n\n    // Read a byte from the keyboard memory bank. This is an odd system where\n    // bits in the address map to the various bytes, and you can read the OR'ed\n    // addresses to read more than one byte at a time. For the last byte we fake\n    // the Shift key if necessary.\n    public readKeyboard(addr: number, clock: number): number {\n        addr = (addr - BEGIN_ADDR) % BANK_SIZE;\n        let b = 0;\n\n        // Dequeue if necessary.\n        if (clock > this.keyProcessMinClock) {\n            const keyWasPressed = this.processKeyQueue();\n            if (keyWasPressed) {\n                this.keyProcessMinClock = clock + KEY_DELAY_CLOCK_CYCLES;\n            }\n        }\n\n        // OR together the various bytes.\n        for (let i = 0; i < this.keys.length; i++) {\n            let keys = this.keys[i];\n            if ((addr & (1 << i)) !== 0) {\n                if (i === 7) {\n                    // Modify keys based on the shift force.\n                    switch (this.shiftForce) {\n                        case ShiftState.NEUTRAL:\n                            // Nothing.\n                            break;\n\n                        case ShiftState.FORCE_UP:\n                            // On the Model III the first two bits are left and right shift,\n                            // though we don't handle the right shift anywhere.\n                            keys &= ~0x03;\n                            break;\n\n                        case ShiftState.FORCE_DOWN:\n                            keys |= 0x01;\n                            break;\n                    }\n                }\n\n                b |= keys;\n            }\n        }\n\n        return b;\n    }\n\n    // Enqueue a key press or release.\n    public keyEvent(key: string, isPressed: boolean) {\n        // Look up the key info.\n        const keyInfo = keyMap.get(key);\n        if (keyInfo === undefined) {\n            if (key !== \"Meta\" && key !== \"Control\" && key !== \"Alt\" && key !== \"Tab\") {\n                console.log(\"Unknown key \\\"\" + key + \"\\\"\");\n            }\n        } else {\n            // Append key to queue.\n            this.keyQueue.push(new KeyActivity(keyInfo, isPressed));\n        }\n    }\n\n    // Convert keys on the keyboard to ASCII letters or special strings like \"Enter\".\n    public configureKeyboard(): void {\n        // Handle a key event by mapping it and sending it to the emulator.\n        const keyEvent = (event: KeyboardEvent, isPressed: boolean) => {\n            // Don't do anything if we're not active.\n            if (!this.interceptKeys) {\n                return;\n            }\n\n            // Don't send to virtual computer if a text input field is selected.\n            // if ($(document.activeElement).attr(\"type\") === \"text\") {\n            //     return;\n            // }\n\n            // Don't interfere with browser keys.\n            if (event.metaKey || event.ctrlKey) {\n                return;\n            }\n\n            const key = event.key;\n            if (key !== \"\") {\n                this.keyEvent(key, isPressed);\n                event.preventDefault();\n            }\n        };\n\n        const body = document.getElementsByTagName(\"body\")[0];\n        body.addEventListener(\"keydown\", (event) => keyEvent(event, true));\n        body.addEventListener(\"keyup\", (event) => keyEvent(event, false));\n        body.addEventListener(\"paste\", (event) => {\n            // Don't do anything if we're not active.\n            if (!this.interceptKeys) {\n                return;\n            }\n\n            if (event.clipboardData) {\n                const pastedText = event.clipboardData.getData(\"text/plain\");\n                if (pastedText) {\n                    this.simulateKeyboardText(pastedText);\n                }\n            }\n            event.preventDefault();\n        });\n    }\n\n    /**\n     * Simulate this text being entered by the user.\n     */\n    public simulateKeyboardText(text: string): void {\n        for (let ch of text) {\n            if (ch === \"\\n\" || ch === \"\\r\") {\n                ch = \"Enter\";\n            }\n            this.keyEvent(ch, true);\n            this.keyEvent(ch, false);\n        }\n    }\n\n    // Dequeue the next key and set its bit. Return whether a key was processed.\n    private processKeyQueue(): boolean {\n        const keyActivity = this.keyQueue.shift();\n        if (keyActivity === undefined) {\n            return false;\n        }\n\n        this.shiftForce = keyActivity.keyInfo.shiftForce;\n        const bit = 1 << keyActivity.keyInfo.bitNumber;\n        if (keyActivity.isPressed) {\n            this.keys[keyActivity.keyInfo.byteIndex] |= bit;\n        } else {\n            this.keys[keyActivity.keyInfo.byteIndex] &= ~bit;\n        }\n\n        return true;\n    }\n}\n","export const model1Level1Rom = `\n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\n`;\n","export const model1Level2Rom = `\\n`;\n","export const model3Rom = `\n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\n`;\n","\n/**\n * The TRS-80 models we support.\n */\nexport enum ModelType {\n    MODEL1,\n    MODEL3,\n}\n\n/**\n * The levels of Basic.\n */\nexport enum BasicLevel {\n    LEVEL1,\n    LEVEL2,\n}\n\n/**\n * The character generator chip we support.\n */\nexport enum CGChip {\n    ORIGINAL,\n    LOWER_CASE,\n}\n\n/**\n * The amounts of RAM we support.\n */\nexport enum RamSize {\n    RAM_4_KB,\n    RAM_16_KB,\n    RAM_32_KB,\n    RAM_48_KB,\n}\n\n/**\n * Phosphor color.\n */\nexport enum Phosphor {\n    WHITE,\n    GREEN,\n    AMBER,\n}\n\n/**\n * Background color.\n */\nexport enum Background {\n    BLACK,\n    AUTHENTIC,\n}\n\n/**\n * Whether to display scan lines.\n */\nexport enum ScanLines {\n    OFF,\n    ON,\n}\n\n/**\n * A specific configuration of model and RAM.\n */\nexport class Config {\n    public readonly modelType: ModelType;\n    public readonly basicLevel: BasicLevel;\n    public readonly cgChip: CGChip;\n    public readonly ramSize: RamSize;\n    public readonly phosphor: Phosphor;\n    public readonly background: Background;\n    public readonly scanLines: ScanLines;\n\n    constructor(modelType: ModelType, basicLevel: BasicLevel, cgChip: CGChip, ramSize: RamSize,\n                phosphor: Phosphor, background: Background, scanLines: ScanLines) {\n\n        this.modelType = modelType;\n        this.basicLevel = basicLevel;\n        this.cgChip = cgChip;\n        this.ramSize = ramSize;\n        this.phosphor = phosphor;\n        this.background = background;\n        this.scanLines = scanLines;\n    }\n\n    public withModelType(modelType: ModelType): Config {\n        return new Config(modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withBasicLevel(basicLevel: BasicLevel): Config {\n        return new Config(this.modelType, basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withCGChip(cgChip: CGChip): Config {\n        return new Config(this.modelType, this.basicLevel, cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withRamSize(ramSize: RamSize): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withPhosphor(phosphor: Phosphor): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, phosphor, this.background, this.scanLines);\n    }\n\n    public withBackground(background: Background): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, background, this.scanLines);\n    }\n\n    public withScanLines(scanLines: ScanLines): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, scanLines);\n    }\n\n    /**\n     * Make a default configuration.\n     */\n    public static makeDefault(): Config {\n        return new Config(ModelType.MODEL3, BasicLevel.LEVEL2, CGChip.LOWER_CASE, RamSize.RAM_48_KB,\n            Phosphor.WHITE, Background.AUTHENTIC, ScanLines.OFF);\n    }\n\n    /**\n     * Whether this particular config is valid.\n     */\n    public isValid(): boolean {\n        // Model III only had Level 2. (I've read that it actually shipped with Level 1, but\n        // we don't have that ROM.)\n        if (this.modelType === ModelType.MODEL3 && this.basicLevel === BasicLevel.LEVEL1) {\n            return false;\n        }\n\n        // Model III only had lower case.\n        if (this.modelType === ModelType.MODEL3 && this.cgChip === CGChip.ORIGINAL) {\n            return false;\n        }\n\n        // Rest are okay.\n        return true;\n    }\n\n    /**\n     * Whether this new config needs to be rebooted, if the emulator currently is running the old config.\n     */\n    public needsReboot(oldConfig: Config): boolean {\n        // Maybe here we could not reboot if only the CG chip changed. The software is able to detect the\n        // difference (since bit 6 is synthetic in one case).\n        return this.modelType !== oldConfig.modelType ||\n            this.basicLevel !== oldConfig.basicLevel ||\n            this.cgChip !== oldConfig.cgChip ||\n            this.ramSize !== oldConfig.ramSize;\n    }\n\n    /**\n     * Return the RAM size in bytes.\n     */\n    public getRamSize(): number {\n        let kb: number;\n\n        switch (this.ramSize) {\n            case RamSize.RAM_4_KB:\n                kb = 4;\n                break;\n            case RamSize.RAM_16_KB:\n                kb = 16;\n                break;\n            case RamSize.RAM_32_KB:\n                kb = 32;\n                break;\n            case RamSize.RAM_48_KB:\n            default:\n                kb = 48;\n                break;\n        }\n\n        return kb*1024;\n    }\n}\n","\n\n/**\n * Type of event, for mass canceling.\n */\nexport enum EventType {\n    // Disk events.\n    DISK_DONE = 1 << 0,\n    DISK_LOST_DATA = 1 << 1,\n    DISK_FIRST_DRQ = 1 << 2,\n\n    // All disk events.\n    DISK_ALL = DISK_DONE | DISK_LOST_DATA | DISK_FIRST_DRQ,\n}\n\n\n/**\n * An event scheduled for the future.\n */\nexport class ScheduledEvent {\n    public readonly eventType: EventType | undefined;\n    public readonly handle: number;\n    public readonly tStateCount: number;\n    public readonly callback: () => void;\n\n    constructor(eventType: EventType | undefined, handle: number, tStateCount: number, callback: () => void) {\n        this.eventType = eventType;\n        this.handle = handle;\n        this.tStateCount = Math.round(tStateCount);\n        this.callback = callback;\n    }\n\n    /**\n     * Whether the event type of this event is included in the mask.\n     */\n    public matchesEventTypeMask(eventTypeMask: EventType): boolean {\n        return this.eventType !== undefined && (this.eventType & eventTypeMask) !== 0;\n    }\n}\n\n/**\n * Stores events in chronological order and fires them off.\n */\nexport class EventScheduler {\n    private counter = 1;\n    // Sorted by tStateCount.\n    private events: ScheduledEvent[] = [];\n\n    /**\n     * Dispatch all events ready to go.\n     *\n     * @param tStateCount current clock count.\n     */\n    public dispatch(tStateCount: number): void {\n        while (this.events.length > 0 && tStateCount >= this.events[0].tStateCount) {\n            const scheduledEvent = this.events.shift() as ScheduledEvent;\n            scheduledEvent.callback();\n        }\n    }\n\n    /**\n     * Schedule an event to happen at tStateCount clocks. The callback will be called\n     * at the end of an instruction step.\n     *\n     * @return a handle that can be passed to cancel().\n     */\n    public add(eventType: EventType | undefined, tStateCount: number, callback: () => void): number {\n        let handle = this.counter++;\n\n        this.events.push(new ScheduledEvent(eventType, handle, tStateCount, callback));\n        this.events.sort((a, b) => {\n            if (a.tStateCount < b.tStateCount) {\n                return -1;\n            } else if (a.tStateCount > b.tStateCount) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n\n        return handle;\n    }\n\n    /**\n     * Cancel an event scheduled by add().\n     */\n    public cancel(handle: number): void {\n        for (let i = 0; i < this.events.length; i++) {\n            if (this.events[i].handle === handle) {\n                this.events.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Cancel all events that are included in the mask.\n     */\n    public cancelByEventTypeMask(eventTypeMask: EventType): void {\n        this.events = this.events.filter(e => !e.matchesEventTypeMask(eventTypeMask));\n    }\n\n    /**\n     * Returns the first (next to dispatch) event included in the mask, or undefined if none.\n     * Does not remove the event from the queue.\n     */\n    public getFirstEvent(eventTypeMask: EventType): ScheduledEvent | undefined {\n        for (const event of this.events) {\n            if (event.matchesEventTypeMask(eventTypeMask)) {\n                return event;\n            }\n        }\n\n        return undefined;\n    }\n}\n","/**\n * Floppy disk controller for the TRS-80.\n *\n * References:\n *\n * https://hansotten.file-hunter.com/technical-info/wd1793/\n */\n\nimport {FloppyDisk, SectorData, Side} from \"trs80-base\";\nimport {SimpleEventDispatcher} from \"strongly-typed-events\";\nimport {Machine} from \"./Machine\";\nimport {toHexByte} from \"z80-base\";\nimport {EventType} from \"./EventScheduler\";\n\n// Whether this controller supports writing.\nconst SUPPORT_WRITING = false;\n\n// Number of physical drives.\nexport const FLOPPY_DRIVE_COUNT = 4;\n\n// Width of the index hole as a fraction of the circumference.\nconst HOLE_WIDTH = 0.01;\n\n// Speed of disk.\nconst RPM = 300;\n\n// How long the disk motor stays on after drive selected, in seconds.\nconst MOTOR_TIME_AFTER_SELECT = 2;\n\n/**\n * Converts boolean for \"back\" to a Side.\n */\nfunction booleanToSide(back: boolean): Side {\n    return back ? Side.BACK : Side.FRONT;\n}\n\n// Type I status bits.\nconst STATUS_BUSY = 0x01;             // Whether a command is in progress.\nconst STATUS_INDEX = 0x02;            // The head is currently over the index hole.\nconst STATUS_TRACK_ZERO = 0x04;       // Head is on track 0.\nconst STATUS_CRC_ERROR = 0x08;        // CRC error.\nconst STATUS_SEEK_ERROR = 0x10;       // Seek error.\nconst STATUS_HEAD_ENGAGED = 0x20;     // Head engaged.\nconst STATUS_WRITE_PROTECTED = 0x40;  // Write-protected.\nconst STATUS_NOT_READY = 0x80;        // Disk not ready (motor not running).\n\n// Type II and III status bits.\n//    STATUS_BUSY = 0x01;\nconst STATUS_DRQ = 0x02;                // Data is ready to be read or written.\nconst STATUS_LOST_DATA = 0x04;          // CPU was too slow to read.\n//    STATUS_CRC_ERROR = 0x08;\nconst STATUS_NOT_FOUND = 0x10;          // Track, sector, or side were not found.\nconst STATUS_DELETED = 0x20;            // On read: Sector was deleted (data is invalid, 0xF8 DAM).\nconst STATUS_FAULT = 0x20;              // On write: Indicates a write fault.\nconst STATUS_REC_TYPE = 0x60;\n//    STATUS_WRITE_PROTECTED = 0x40;\n//    STATUS_NOT_READY = 0x80;\n\n// Select register bits for writeSelect().\nconst SELECT_DRIVE_0 = 0x01;\nconst SELECT_DRIVE_1 = 0x02;\nconst SELECT_DRIVE_2 = 0x04;\nconst SELECT_DRIVE_3 = 0x08;\nconst SELECT_SIDE = 0x10;  // 0 = front, 1 = back.\nconst SELECT_PRECOMP = 0x20;\nconst SELECT_WAIT = 0x40; // Controller should block OUT until operation is done.\nconst SELECT_MFM = 0x80; // Double density.\nconst SELECT_DRIVE_MASK = SELECT_DRIVE_0 | SELECT_DRIVE_1 | SELECT_DRIVE_2 | SELECT_DRIVE_3;\n\n// Type of command (see below for specific commands in each type).\nenum CommandType {\n    TYPE_I,\n    TYPE_II,\n    TYPE_III,\n    TYPE_IV,\n}\n\n// Commands and various sub-flags.\nconst COMMAND_MASK = 0xF0;\n\n// Type I commands: cccchvrr, where\n//     cccc = command number\n//     h = head load\n//     v = verify (i.e., read next address to check we're on the right track)\n//     rr = step rate:  00=6ms, 01=12ms, 10=20ms, 11=40ms\nconst COMMAND_RESTORE = 0x00;\nconst COMMAND_SEEK = 0x10;\nconst COMMAND_STEP = 0x20; // Doesn't update track register.\nconst COMMAND_STEPU = 0x30; // Updates track register.\nconst COMMAND_STEP_IN = 0x40;\nconst COMMAND_STEP_INU = 0x50;\nconst COMMAND_STEP_OUT = 0x60;\nconst COMMAND_STEP_OUTU = 0x70;\nconst MASK_H = 0x08;\nconst MASK_V = 0x04;\n\n// Type II commands: ccccbecd, where\n//     cccc = command number\n//     e = delay for head engage (10ms)\n//     b = side expected\n//     c = side compare (0=disable, 1=enable)\n//     d = select data address mark (writes only, 0 for reads):\n//         0=FB (normal), 1=F8 (deleted)\nconst COMMAND_READ = 0x80; // Single sector.\nconst COMMAND_READM = 0x90; // Multiple sectors.\nconst COMMAND_WRITE = 0xA0;\nconst COMMAND_WRITEM = 0xB0;\nconst MASK_B = 0x08; // Side (0 = front, 1 = back).\nconst MASK_E = 0x04;\nconst MASK_C = 0x02; // Whether side (MASK_B) is defined.\nconst MASK_D = 0x01; // Deleted: 0 = Data is valid, DAM is 0xFB; 1 = Data is invalid, DAM is 0xF8.\n\n// Type III commands: ccccxxxs (?), where\n//     cccc = command number\n//     xxx = ?? (usually 010)\n//     s = 1=READ_TRACK no synchronize; otherwise 0\nconst COMMAND_READ_ADDRESS = 0xC0;\nconst COMMAND_READ_TRACK = 0xE0;\nconst COMMAND_WRITE_TRACK = 0xF0;\n\n// Type IV command: cccciiii, where\n//     cccc = command number\n//     iiii = bitmask of events to terminate and interrupt on (unused on TRS-80).\n//            0000 for immediate terminate with no interrupt.\nconst COMMAND_FORCE_INTERRUPT = 0xD0;\n\n/**\n * Given a command, returns its type.\n */\nfunction getCommandType(command: number): CommandType {\n    switch (command & COMMAND_MASK) {\n        case COMMAND_RESTORE:\n        case COMMAND_SEEK:\n        case COMMAND_STEP:\n        case COMMAND_STEPU:\n        case COMMAND_STEP_IN:\n        case COMMAND_STEP_INU:\n        case COMMAND_STEP_OUT:\n        case COMMAND_STEP_OUTU:\n            return CommandType.TYPE_I;\n\n        case COMMAND_READ:\n        case COMMAND_READM:\n        case COMMAND_WRITE:\n        case COMMAND_WRITEM:\n            return CommandType.TYPE_II;\n\n        case COMMAND_READ_ADDRESS:\n        case COMMAND_READ_TRACK:\n        case COMMAND_WRITE_TRACK:\n            return CommandType.TYPE_III;\n\n        case COMMAND_FORCE_INTERRUPT:\n            return CommandType.TYPE_IV;\n\n        default:\n            throw new Error(\"Unknown command 0x\" + toHexByte(command));\n    }\n}\n\n/**\n * Whether a command is for reading or writing.\n */\nfunction isReadWriteCommand(command: number): boolean {\n    switch (getCommandType(command)) {\n        case CommandType.TYPE_II:\n        case CommandType.TYPE_III:\n            return true;\n\n        default:\n            return false;\n    }\n}\n\n/**\n * State of a physical drive.\n */\nclass FloppyDrive {\n    public physicalTrack = 0;\n    public writeProtected = true;\n    public floppyDisk: FloppyDisk | undefined = undefined;\n}\n\n/**\n * The disk controller. We only emulate the WD1791/93, not the Model I's WD1771.\n */\nexport class FloppyDiskController {\n    private readonly machine: Machine;\n\n    // Registers.\n    private status = STATUS_TRACK_ZERO | STATUS_NOT_READY;\n    private track = 0;\n    private sector = 0;\n    private data = 0;\n\n    // Internal state.\n    private currentCommand = COMMAND_RESTORE;\n    private side = Side.FRONT;\n    private doubleDensity = false;\n    private currentDrive = 0;\n    private motorOn = false;\n    // ID index found in by last COMMAND_READ_ADDRESS.\n    private lastReadAddress: number | undefined = undefined;\n\n    // State for current command.\n    public dataIndex = 0;\n    private sectorData: SectorData | undefined = undefined;\n\n    // Floppy drives.\n    private readonly drives: FloppyDrive[] = [];\n\n    // Timeout handle for turning off the motor.\n    private motorOffTimeoutHandle: number | undefined = undefined;\n\n    // Which drive is currently active, for lighting up an LED.\n    public readonly onActiveDrive = new SimpleEventDispatcher<number | undefined>();\n\n    // Event when a drive moves the head this many tracks.\n    public readonly onTrackMove = new SimpleEventDispatcher<number>();\n\n    constructor(foo: Machine) {\n        this.machine = foo;\n\n        for (let i = 0; i < FLOPPY_DRIVE_COUNT; i++) {\n            this.drives.push(new FloppyDrive());\n        }\n    }\n\n    /**\n     * Put a floppy in the specified drive (0 to 3).\n     */\n    public loadFloppyDisk(floppyDisk: FloppyDisk | undefined, driveNumber: number): void {\n        if (driveNumber < 0 || driveNumber >= this.drives.length) {\n            throw new Error(\"Invalid drive number \" + driveNumber);\n        }\n\n        this.drives[driveNumber].floppyDisk = floppyDisk;\n    }\n\n    public readStatus(): number {\n        // If no disk was loaded into drive 0, just pretend that we don't\n        // have a disk system. Otherwise we have to hold down Break while\n        // booting (to get to cassette BASIC) and that's annoying.\n        if (this.drives[0].floppyDisk === undefined) {\n            return 0xFF;\n        }\n\n        this.updateStatus();\n\n        // Clear interrupt.\n        this.machine.diskIntrqInterrupt(false);\n\n        return this.status;\n    }\n\n    public readTrack(): number {\n        return this.track;\n    }\n\n    public readSector(): number {\n        return this.sector;\n    }\n\n    /**\n     * Read a byte of data from the sector.\n     */\n    public readData(): number {\n        const drive = this.drives[this.currentDrive];\n\n        // The read command can do various things depending on the specific\n        // current command, but we only support reading from the diskette.\n        switch (this.currentCommand & COMMAND_MASK) {\n            case COMMAND_READ:\n                // Keep reading from the buffer.\n                if (this.sectorData !== undefined && (this.status & STATUS_DRQ) !== 0 && drive.floppyDisk !== undefined) {\n                    this.data = this.sectorData.data[this.dataIndex];\n                    this.dataIndex++;\n                    if (this.dataIndex >= this.sectorData.data.length) {\n                        this.sectorData = undefined;\n                        this.status &= ~STATUS_DRQ;\n                        this.machine.diskDrqInterrupt(false);\n                        this.machine.eventScheduler.cancelByEventTypeMask(EventType.DISK_LOST_DATA);\n                        this.machine.eventScheduler.add(EventType.DISK_DONE, this.machine.tStateCount + 64,\n                            () => this.done(0));\n                    }\n                }\n                break;\n\n            default:\n                // Might be okay, not sure.\n                throw new Error(\"Unhandled case in readData()\");\n        }\n\n        return this.data;\n    }\n\n    /**\n     * Set current command.\n     */\n    public writeCommand(cmd: number): void {\n        const drive = this.drives[this.currentDrive];\n\n        // Cancel \"lost data\" event.\n        this.machine.eventScheduler.cancelByEventTypeMask(EventType.DISK_LOST_DATA);\n\n        this.machine.diskIntrqInterrupt(false);\n        this.sectorData = undefined;\n        this.currentCommand = cmd;\n\n        // Kick off anything that's based on the command.\n        switch (cmd & COMMAND_MASK) {\n            case COMMAND_RESTORE:\n                this.lastReadAddress = undefined;\n                drive.physicalTrack = 0;\n                this.track = 0;\n                this.status = STATUS_TRACK_ZERO | STATUS_BUSY;\n                if ((cmd & MASK_V) != 0) {\n                    this.verify();\n                }\n                this.machine.eventScheduler.add(EventType.DISK_DONE, this.machine.tStateCount + 2000,\n                    () => this.done(0));\n                break;\n\n            case COMMAND_SEEK:\n                this.lastReadAddress = undefined;\n                const moveCount = this.data - this.track;\n                if (moveCount !== 0) {\n                    this.onTrackMove.dispatch(moveCount);\n                }\n                drive.physicalTrack += moveCount;\n                this.track = this.data;\n                if (drive.physicalTrack <= 0) {\n                    // this.track too?\n                    drive.physicalTrack = 0;\n                    this.status = STATUS_TRACK_ZERO | STATUS_BUSY;\n                } else {\n                    this.status = STATUS_BUSY;\n                }\n                // Should this set lastDirection?\n                if ((cmd & MASK_V) != 0) {\n                    this.verify();\n                }\n                this.machine.eventScheduler.add(EventType.DISK_DONE, this.machine.tStateCount + 2000,\n                    () => this.done(0));\n                break;\n\n            case COMMAND_READ:\n                // Read the sector. The bytes will be read later.\n                this.lastReadAddress = undefined;\n                this.status = STATUS_BUSY;\n                // Not sure how to use this. Ignored for now:\n                const goalSide = (cmd & MASK_C) === 0 ? undefined : booleanToSide((cmd & MASK_B) !== 0);\n\n                console.log(`Sector read: ${drive.physicalTrack}, ${this.sector}, ${this.side}`);\n                const sectorData = drive.floppyDisk === undefined\n                    ? undefined\n                    : drive.floppyDisk.readSector(drive.physicalTrack, this.side, this.sector);\n\n                if (sectorData === undefined) {\n                    this.machine.eventScheduler.add(EventType.DISK_DONE, this.machine.tStateCount + 512,\n                        () => this.done(0));\n                    console.error(`Didn't find sector ${this.sector} on track ${drive.physicalTrack}`);\n                } else {\n                    let newStatus = 0;\n                    if (sectorData.deleted) {\n                        newStatus |= STATUS_DELETED;\n                    }\n                    if (sectorData.crcError) {\n                        newStatus |= STATUS_CRC_ERROR;\n                    }\n                    this.sectorData = sectorData;\n                    this.dataIndex = 0;\n                    this.machine.eventScheduler.add(EventType.DISK_FIRST_DRQ, this.machine.tStateCount + 64,\n                        () => this.firstDrq(newStatus));\n                }\n                break;\n\n            case COMMAND_WRITE:\n                console.log(`Sector write: ${drive.physicalTrack}, ${this.sector}, ${this.side}`);\n                this.status = STATUS_WRITE_PROTECTED;\n                break;\n\n            case COMMAND_FORCE_INTERRUPT:\n                // Stop whatever is going on and forget it.\n                this.machine.eventScheduler.cancelByEventTypeMask(EventType.DISK_ALL);\n                this.status = 0;\n                this.updateStatus();\n                if ((cmd & 0x07) !== 0) {\n                    throw new Error(\"Conditional interrupt features not implemented\");\n                } else if ((cmd & 0x08) !== 0) {\n                    // Immediate interrupt.\n                    this.machine.diskIntrqInterrupt(true);\n                } else {\n                    this.machine.diskIntrqInterrupt(false);\n                }\n                break;\n\n            default:\n                throw new Error(\"Don't handle command 0x\" + toHexByte(cmd));\n        }\n    }\n\n    public writeTrack(track: number): void {\n        this.track = track;\n    }\n\n    public writeSector(sector: number): void {\n        this.sector = sector;\n    }\n\n    public writeData(data: number): void {\n        const command = this.currentCommand & COMMAND_MASK;\n        if (command === COMMAND_WRITE || command === COMMAND_WRITE_TRACK) {\n            throw new Error(\"Can't yet write data\");\n        }\n\n        this.data = data;\n    }\n\n    /**\n     * Select a drive.\n     */\n    public writeSelect(value: number): void {\n        this.status &= ~STATUS_NOT_READY;\n        this.side = booleanToSide((value & SELECT_SIDE) !== 0);\n        this.doubleDensity = (value & SELECT_MFM) != 0;\n        if ((value & SELECT_WAIT) != 0) {\n            // If there was an event pending, simulate waiting until it was due.\n            const event = this.machine.eventScheduler.getFirstEvent(EventType.DISK_ALL & ~EventType.DISK_LOST_DATA);\n            if (event !== undefined) {\n                // This puts the clock ahead immediately, but the main loop of the emulator\n                // will then sleep to make the real-time correct.\n                // TODO is this legit? Can we use another method?\n                this.machine.tStateCount = event.tStateCount;\n                this.machine.eventScheduler.dispatch(this.machine.tStateCount);\n            }\n        }\n\n        // Which drive is being enabled?\n        const previousDrive = this.currentDrive;\n        switch (value & SELECT_DRIVE_MASK) {\n            case 0:\n                this.status |= STATUS_NOT_READY;\n                break;\n\n            case SELECT_DRIVE_0:\n                this.currentDrive = 0;\n                break;\n\n            case SELECT_DRIVE_1:\n                this.currentDrive = 1;\n                break;\n\n            case SELECT_DRIVE_2:\n                this.currentDrive = 2;\n                break;\n\n            case SELECT_DRIVE_3:\n                this.currentDrive = 3;\n                break;\n\n            default:\n                throw new Error(\"Not drive specified in select: 0x\" + toHexByte(value));\n        }\n\n        if (this.currentDrive !== previousDrive) {\n            this.updateMotorOn();\n        }\n\n        // If a drive was selected, turn on its motor.\n        if ((this.status & STATUS_NOT_READY) == 0) {\n            this.setMotorOn(true);\n\n            // Set timer to later turn off motor.\n            if (this.motorOffTimeoutHandle !== undefined) {\n                this.machine.eventScheduler.cancel(this.motorOffTimeoutHandle);\n            }\n            this.motorOffTimeoutHandle = this.machine.eventScheduler.add(undefined,\n                this.machine.tStateCount + MOTOR_TIME_AFTER_SELECT*this.machine.clockHz, () => {\n                this.motorOffTimeoutHandle = undefined;\n                this.status |= STATUS_NOT_READY;\n                this.setMotorOn(false);\n            });\n        }\n    }\n\n    /**\n     * Verify that head is on the expected track. Set either STATUS_NOT_FOUND or\n     * STATUS_SEEK_ERROR if a problem is found.\n     */\n    private verify(): void {\n        const drive = this.drives[this.currentDrive];\n        if (drive.floppyDisk === undefined) {\n            this.status |= STATUS_NOT_FOUND;\n        } else if (drive.physicalTrack !== this.track) {\n            this.status |= STATUS_SEEK_ERROR;\n        } else {\n            // Make sure a sector exists on this track.\n            const sectorData = drive.floppyDisk.readSector(this.track, Side.FRONT, undefined);\n            if (sectorData === undefined) {\n                this.status |= STATUS_NOT_FOUND;\n            }\n            if (this.doubleDensity && !drive.floppyDisk.supportsDoubleDensity) {\n                this.status |= STATUS_NOT_FOUND;\n            }\n        }\n    }\n\n    /**\n     * If we're doing a non-read/write command, update the status with the state\n     * of the disk, track, and head position.\n     */\n    private updateStatus(): void {\n        if (isReadWriteCommand(this.currentCommand)) {\n            // Don't modify status.\n            return;\n        }\n\n        const drive = this.drives[this.currentDrive];\n\n        if (drive.floppyDisk === undefined) {\n            this.status |= STATUS_INDEX;\n        } else {\n            // See if we're over the index hole.\n            if (this.angle() < HOLE_WIDTH) {\n                this.status |= STATUS_INDEX;\n            } else {\n                this.status &= ~STATUS_INDEX;\n            }\n\n            // See if the diskette is write protected.\n            if (drive.writeProtected || !SUPPORT_WRITING) {\n                this.status |= STATUS_WRITE_PROTECTED;\n            } else {\n                this.status &= ~STATUS_WRITE_PROTECTED;\n            }\n        }\n\n        // See if we're on track 0, which for some reason has a special bit.\n        if (drive.physicalTrack === 0) {\n            this.status |= STATUS_TRACK_ZERO;\n        } else {\n            this.status &= ~STATUS_TRACK_ZERO;\n        }\n\n        // RDY and HLT inputs are wired together on TRS-80 I/III/4/4P.\n        if ((this.status & STATUS_NOT_READY) !== 0) {\n            this.status &= ~STATUS_HEAD_ENGAGED;\n        } else {\n            this.status |= STATUS_HEAD_ENGAGED;\n        }\n    }\n\n    /**\n     * Turn motor on or off.\n     */\n    private setMotorOn(motorOn: boolean): void {\n        if (motorOn !== this.motorOn) {\n            this.motorOn = motorOn;\n            this.machine.diskMotorOffInterrupt(!motorOn);\n            this.updateMotorOn();\n        }\n    }\n\n    /**\n     * Dispatch a change to the motor light.\n     */\n    private updateMotorOn(): void {\n        this.onActiveDrive.dispatch(this.motorOn ? this.currentDrive : undefined);\n    }\n\n    // Return a value in [0,1) indicating how far we've rotated\n    // from the leading edge of the index hole. For the first HOLE_WIDTH we're\n    // on the hole itself.\n    private angle(): number {\n        // Use simulated time.\n        const clocksPerRevolution = Math.round(this.machine.clockHz / (RPM/60));\n        return (this.machine.tStateCount % clocksPerRevolution) / clocksPerRevolution;\n    }\n\n    /**\n     * Event used for delayed command completion.  Clears BUSY,\n     * sets any additional bits specified, and generates a command\n     * completion interrupt.\n     */\n    private done(bits: number): void {\n        this.status &= ~STATUS_BUSY;\n        this.status |= bits;\n        this.machine.diskIntrqInterrupt(true);\n    }\n\n    /**\n     * Event to abort the last command with LOST_DATA if it is\n     * still in progress.\n     */\n    private lostData(cmd: number): void {\n        if (this.currentCommand === cmd) {\n            this.status &= ~STATUS_BUSY;\n            this.status |= STATUS_LOST_DATA;\n            this.sectorData = undefined;\n            this.machine.diskIntrqInterrupt(true);\n        }\n    }\n\n    /**\n     * Event used as a delayed command start. Sets DRQ, generates a DRQ interrupt,\n     * sets any additional bits specified, and schedules a lostData() event.\n     */\n    private firstDrq(bits: number): void {\n        this.status |= STATUS_DRQ | bits;\n        this.machine.diskDrqInterrupt(true);\n\n        // Evaluate this now, not when the callback is run.\n        const currentCommand = this.currentCommand;\n\n        // If we've not finished our work within half a second, trigger a lost data interrupt.\n        this.machine.eventScheduler.add(EventType.DISK_LOST_DATA, this.machine.tStateCount + this.machine.clockHz/2,\n            () => this.lostData(currentCommand));\n    }\n}\n","import {Mutable} from \"./Mutable\";\n\nconst PROCESSOR_NAME = \"trs80-audio-processor\";\n\n// Get these straight from my GitHub repo.\nconst SPIN_URL = \"https://raw.githubusercontent.com/lkesteloot/trs80-emulator/83e7fabd7d26f3e197329ee05a7c8ffc4063362c/sounds/spin.mp3\";\nconst TRACK_URL = \"https://raw.githubusercontent.com/lkesteloot/trs80-emulator/83845b15b3c99daa8237e22b48f00426fcdc0cbf/sounds/track.mp3\";\n\nconst SPIN_VOLUME = 0.6;\nconst TRACK_VOLUME = 0.3;\n\nconst PROCESSOR_JS = `\n// Generates the TRS-80 sound.\nclass Trs80SoundProcessor extends AudioWorkletProcessor {\n    // This parameter is the audio itself. We just pass it on.\n    static get parameterDescriptors() {\n        return [{\n            name: \"audioValue\",\n            defaultValue: 0,\n        }];\n    }\n\n    constructor() {\n        super();\n    }\n\n    // Process 128 audio samples at a time.\n    process(inputs, outputs, parameters) {\n        // We only have one output.\n        const output = outputs[0];\n\n        // The parameter that holds the actual audio.\n        const audioValue = parameters.audioValue;\n\n        // We should be mono, but send to all channels anyway.\n        for (let channelNumber = 0; channelNumber < output.length; channelNumber++) {\n            const channel = output[channelNumber];\n\n            for (let i = 0; i < channel.length; i++) {\n                const value = audioValue.length === 1 ? audioValue[0] : audioValue[i];\n                \n                // 10% volume.\n                channel[i] = value/10;\n            }\n        }\n\n        // Keep going.\n        return true;\n    }\n}\n\n// Register ourselves by name.\nregisterProcessor(\"${PROCESSOR_NAME}\", Trs80SoundProcessor);\n`;\n\n/**\n * Minimum time of silence before we suspend the audio player. Be generous here because we lose a bit of\n * audio after resuming, so you really only want to do it after the sound-making program has stopped.\n */\nconst MIN_SILENT_TIME_S = 30;\n\n/**\n * Handles playing of sound through the cassette port.\n */\nexport class SoundPlayer implements Mutable {\n    private muted = true;\n    private audioContext: AudioContext | undefined = undefined;\n    private audioValue: AudioParam | undefined = undefined;\n    private floppyMotorOn = false;\n    private floppySpinAudioBuffer: AudioBuffer | undefined = undefined;\n    private floppySpinSourceNode: AudioBufferSourceNode | undefined = undefined;\n    private floppySpinGainNode: GainNode | undefined = undefined;\n    private trackAudioBuffer: AudioBuffer | undefined = undefined;\n    // Difference between computer time and audio time, in seconds.\n    private adjustment = 0;\n    private lastAudioTime = 0;\n    private isSuspended = false;\n\n    /**\n     * Resume the audio context if necessary.\n     */\n    private resumeAudio(): void {\n        if (this.isSuspended && this.audioContext !== undefined) {\n            this.audioContext.resume();\n            this.isSuspended = false;\n        }\n    }\n\n    /**\n     * Sets the value sent to the cassette, from the set -1, 0, or 1.\n     */\n    public setAudioValue(value: number, tStateCount: number, clockHz: number): void {\n        if (!this.muted && this.audioContext !== undefined && this.audioValue !== undefined) {\n            this.resumeAudio();\n\n            const computerTime = tStateCount / clockHz;\n            const audioTime = this.audioContext.currentTime;\n\n            const delta = computerTime - audioTime;\n            const error = delta - this.adjustment;\n            if (error < 0 || error > 0.050) {\n                // We always need computer time to be ahead of audio time or it won't be heard.\n                this.adjustment = delta - 0.025;\n            }\n\n            this.audioValue.setValueAtTime(value, computerTime - this.adjustment);\n\n            // Remember when we last played audio.\n            this.lastAudioTime = audioTime;\n        }\n    }\n\n    /**\n     * Mutes the audio. This is the default.\n     */\n    public mute(): void {\n        if (!this.muted) {\n            this.muted = true;\n            if (this.audioContext !== undefined) {\n                this.audioContext.suspend();\n                this.isSuspended = true;\n            }\n        }\n    }\n\n    /**\n     * Unmutes the audio.\n     */\n    public unmute(): void {\n        if (this.muted) {\n            if (this.audioContext === undefined) {\n                this.enableAudio();\n            }\n            this.muted = false;\n            if (this.audioContext !== undefined) {\n                this.audioContext.resume();\n                this.isSuspended = false;\n            }\n        }\n    }\n\n    /**\n     * Update the sound system about the state of the floppy motors.\n     */\n    public setFloppyMotorOn(motorOn: boolean): void {\n        this.floppyMotorOn = motorOn;\n        this.updateFloppySpin();\n    }\n\n    /**\n     * Start or stop the background floppy spinning noise depending on the state of the motor.\n     */\n    private updateFloppySpin(): void {\n        if (!this.floppyMotorOn && this.floppySpinSourceNode !== undefined &&\n            this.floppySpinGainNode !== undefined && this.audioContext !== undefined) {\n\n            // Stop playing spin sound.\n\n            const endTime = this.audioContext.currentTime + 0.2;\n            this.floppySpinGainNode.gain.setValueAtTime(SPIN_VOLUME, this.audioContext.currentTime);\n            this.floppySpinGainNode.gain.linearRampToValueAtTime(0, endTime);\n            this.floppySpinSourceNode.stop(endTime);\n            this.floppySpinSourceNode = undefined;\n            this.floppySpinGainNode = undefined;\n        } else if (this.floppyMotorOn && this.floppySpinSourceNode === undefined &&\n            this.floppySpinAudioBuffer !== undefined && this.audioContext !== undefined) {\n\n            // Start playing spin sound.\n\n            this.resumeAudio();\n\n            this.floppySpinGainNode = this.audioContext.createGain();\n            this.floppySpinGainNode.connect(this.audioContext.destination);\n            this.floppySpinGainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n            this.floppySpinGainNode.gain.linearRampToValueAtTime(SPIN_VOLUME, this.audioContext.currentTime + 0.2);\n\n            this.floppySpinSourceNode = this.audioContext.createBufferSource();\n            this.floppySpinSourceNode.buffer = this.floppySpinAudioBuffer;\n            this.floppySpinSourceNode.connect(this.floppySpinGainNode);\n            this.floppySpinSourceNode.loop = true;\n            this.floppySpinSourceNode.start();\n\n            // Remember when we last played audio.\n            this.lastAudioTime = this.audioContext.currentTime;\n        }\n    }\n\n    /**\n     * Play the sound of the head moving one track over.\n     */\n    private playTrackSound(): void {\n        if (this.audioContext !== undefined && this.trackAudioBuffer !== undefined) {\n            this.resumeAudio();\n\n            const gainNode = this.audioContext.createGain();\n            gainNode.connect(this.audioContext.destination);\n            gainNode.gain.setValueAtTime(TRACK_VOLUME, this.audioContext.currentTime);\n\n            const sourceNode = this.audioContext.createBufferSource();\n            sourceNode.buffer = this.trackAudioBuffer;\n            sourceNode.connect(gainNode);\n            sourceNode.start();\n\n            // Remember when we last played audio.\n            this.lastAudioTime = this.audioContext.currentTime;\n        }\n    }\n\n    /**\n     * Inform the sound system that a drive head has moved.\n     */\n    public trackMoved(moveCount: number): void {\n        // We don't currently pay attention to the track move count. We tried spacing them out by 5ms or 10ms\n        // and it didn't sound good. So just play one track move sound.\n        this.playTrackSound();\n    }\n\n    /**\n     * Whether we're muted.\n     */\n    public isMuted(): boolean {\n        return this.muted;\n    }\n\n    /**\n     * Check whether it's been too long since we played audio and we should suspend the player (so that the\n     * speaker icon disappears from the tab).\n     */\n    private checkAutoSuspend(): void {\n        if (this.audioContext !== undefined && !this.isSuspended &&\n            this.floppySpinSourceNode === undefined &&\n            this.audioContext.currentTime - this.lastAudioTime >= MIN_SILENT_TIME_S) {\n\n            this.audioContext.suspend();\n            this.isSuspended = true;\n        }\n    }\n\n    /**\n     * Start the audio processor.\n     */\n    private enableAudio() {\n        // Create the audio context. We have to do this as a result of a user action, like a mouse click.\n        this.audioContext = new AudioContext({\n            latencyHint: \"interactive\",\n        });\n\n        const audioContext = this.audioContext;\n\n        // Safari doesn't have this.\n        if (window.AudioWorkletNode !== undefined) {\n            // Load our module.\n            const moduleUrl = \"data:text/javascript;base64,\" + btoa(PROCESSOR_JS);\n            this.audioContext.audioWorklet.addModule(moduleUrl).then(() => {\n                // I don't know why we need this, but I can't figure out a way to \"start\" our own node.\n                const constantSourceNode = audioContext.createConstantSource();\n\n                /**\n                 * Simple node to access the processor.\n                 */\n                class Trs80SoundNode extends AudioWorkletNode {\n                    constructor(context: AudioContext) {\n                        super(context, PROCESSOR_NAME);\n                    }\n                }\n\n                // Our own node, which ignores its input and generates the audio.\n                const node = new Trs80SoundNode(audioContext);\n\n                // Into this parameter we'll write the actual audio values.\n                this.audioValue = node.parameters.get(\"audioValue\");\n                if (this.audioValue === undefined) {\n                    throw new Error(\"Unknown param audioValue\");\n                }\n\n                // Automatically suspend the audio if we've not played sound in a while.\n                setInterval(() => this.checkAutoSuspend(), 1000);\n\n                // Hook up the pipeline.\n                constantSourceNode.connect(node).connect(audioContext.destination);\n                constantSourceNode.start();\n            });\n        }\n\n        // Get the background spin sound.\n        fetch(SPIN_URL)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.blob();\n                } else {\n                    return Promise.reject(\"fetch failed: \" + response.statusText);\n                }\n            })\n            .then(blob => blob.arrayBuffer())\n            .then(arrayBuffer => audioContext.decodeAudioData(arrayBuffer))\n            .then(audioBuffer => {\n                this.floppySpinAudioBuffer = audioBuffer;\n                this.updateFloppySpin();\n            })\n            .catch(e => {\n                // TODO.\n                console.error(e);\n            });\n\n\n        // Get the track movement sound.\n        fetch(TRACK_URL)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.blob();\n                } else {\n                    return Promise.reject(\"fetch failed: \" + response.statusText);\n                }\n            })\n            .then(blob => blob.arrayBuffer())\n            .then(arrayBuffer => audioContext.decodeAudioData(arrayBuffer))\n            .then(audioBuffer => {\n                this.trackAudioBuffer = audioBuffer;\n            })\n            .catch(e => {\n                // TODO.\n                console.error(e);\n            });\n    }\n}\n","import {hi, lo, toHex, toHexWord} from \"z80-base\";\nimport {Hal, Z80} from \"z80-emulator\";\nimport {CassettePlayer} from \"./CassettePlayer\";\nimport {Keyboard} from \"./Keyboard\";\nimport {model1Level1Rom} from \"./Model1Level1Rom\";\nimport {model1Level2Rom} from \"./Model1Level2Rom\";\nimport {model3Rom} from \"./Model3Rom\";\nimport {Trs80Screen} from \"./Trs80Screen\";\nimport {BasicLevel, CGChip, Config, ModelType} from \"./Config\";\nimport {\n    BASIC_HEADER_BYTE,\n    BasicProgram,\n    Cassette,\n    CmdLoadBlockChunk,\n    CmdProgram,\n    CmdTransferAddressChunk,\n    decodeBasicProgram,\n    ElementType,\n    SystemProgram,\n    TRS80_SCREEN_BEGIN,\n    TRS80_SCREEN_END,\n    Trs80File\n} from \"trs80-base\";\nimport {FloppyDisk} from \"trs80-base/dist/FloppyDisk\";\nimport {FLOPPY_DRIVE_COUNT, FloppyDiskController} from \"./FloppyDiskController\";\nimport {Machine} from \"./Machine\";\nimport {EventScheduler} from \"./EventScheduler\";\nimport {SoundPlayer} from \"./SoundPlayer\";\nimport {SimpleEventDispatcher} from \"strongly-typed-events\";\n\n// IRQs\nconst M1_TIMER_IRQ_MASK = 0x80;\nconst M3_CASSETTE_RISE_IRQ_MASK = 0x01;\nconst M3_CASSETTE_FALL_IRQ_MASK = 0x02;\nconst M3_TIMER_IRQ_MASK = 0x04;\nconst M3_IO_BUS_IRQ_MASK = 0x08;\nconst M3_UART_SED_IRQ_MASK = 0x10;\nconst M3_UART_RECEIVE_IRQ_MASK = 0x20;\nconst M3_UART_ERROR_IRQ_MASK = 0x40;\nconst CASSETTE_IRQ_MASKS = M3_CASSETTE_RISE_IRQ_MASK | M3_CASSETTE_FALL_IRQ_MASK;\n\n// NMIs\nconst RESET_NMI_MASK = 0x20;\nconst DISK_MOTOR_OFF_NMI_MASK = 0x40;\nconst DISK_INTRQ_NMI_MASK = 0x80;\n\n// Timer.\nconst M1_TIMER_HZ = 40;\nconst M3_TIMER_HZ = 30;\nconst M4_TIMER_HZ = 60;\n\nconst ROM_SIZE = 14*1024;\nconst RAM_START = 16*1024;\n\n// CPU clock speeds.\nconst M1_CLOCK_HZ = 1_774_080;\nconst M3_CLOCK_HZ = 2_027_520;\nconst M4_CLOCK_HZ = 4_055_040;\n\nconst INITIAL_CLICKS_PER_TICK = 2000;\n\n/**\n * Converts the two-bit cassette port to an audio value. These values are from \"More TRS-80 Assembly\n * Language Programming\", page 222, with the last value taken from \"The B00K\" volume 2 (page 5-2).\n */\nconst CASSETTE_BITS_TO_AUDIO_VALUE = [0, 1, -1, -1];\n\nconst CASSETTE_THRESHOLD = 5000/32768.0;\n\n// State of the cassette hardware. We don't support writing.\nenum CassetteState {\n    CLOSE, READ, FAIL,\n}\n\n// Value of wave in audio: negative, neutral (around zero), or positive.\nenum CassetteValue {\n    NEGATIVE, NEUTRAL, POSITIVE,\n}\n\n/**\n * Whether the memory address maps to a screen location.\n */\nfunction isScreenAddress(address: number): boolean {\n    return address >= TRS80_SCREEN_BEGIN && address < TRS80_SCREEN_END;\n}\n\n/**\n * See the FONT.md file for an explanation of this, but basically bit 6 is the NOR of bits 5 and 7.\n */\nfunction computeVideoBit6(value: number): number {\n    const bit5 = (value >> 5) & 1;\n    const bit7 = (value >> 7) & 1;\n    const bit6 = (bit5 | bit7) ^ 1;\n\n    return (value & 0xBF) | (bit6 << 6);\n}\n\nconst WARN_ONCE_SET = new Set<string>();\n\n/**\n * Send this warning message to the console once. This is to avoid a program repeatedly doing something\n * that results in a warning (such as reading from an unmapped memory address) and crashing the browser.\n */\nfunction warnOnce(message: string): void {\n    if (!WARN_ONCE_SET.has(message)) {\n        WARN_ONCE_SET.add(message);\n        console.warn(message + \" (further warnings suppressed)\");\n    }\n}\n\n/**\n * HAL for the TRS-80 Model III.\n */\nexport class Trs80 implements Hal, Machine {\n    private config: Config;\n    private timerHz = M3_TIMER_HZ;\n    public clockHz = M3_CLOCK_HZ;\n    public tStateCount = 0;\n    private readonly screen: Trs80Screen;\n    private readonly fdc = new FloppyDiskController(this);\n    private cassette: CassettePlayer;\n    private memory = new Uint8Array(0);\n    private keyboard = new Keyboard();\n    private modeImage = 0x80;\n    // Which IRQs should be handled.\n    private irqMask = 0;\n    // Which IRQs have been requested by the hardware.\n    private irqLatch = 0;\n    // Which NMIs should be handled.\n    private nmiMask = 0;\n    // Which NMIs have been requested by the hardware.\n    private nmiLatch = 0;\n    // Whether we've seen this NMI and handled it.\n    private nmiSeen = false;\n    private previousTimerClock = 0;\n    private z80 = new Z80(this);\n    private clocksPerTick = INITIAL_CLICKS_PER_TICK;\n    private startTime = Date.now();\n    private tickHandle: number | undefined;\n    public started = false;\n    // Internal state of the cassette controller.\n    // Whether the motor is running.\n    private cassetteMotorOn = false;\n    // State machine.\n    private cassetteState = CassetteState.CLOSE;\n    // Internal register state.\n    private cassetteValue = CassetteValue.NEUTRAL;\n    private cassetteLastNonZeroValue = CassetteValue.NEUTRAL;\n    private cassetteFlipFlop = false;\n    // When we turned on the motor (started reading the file) and how many samples\n    // we've read since then.\n    private cassetteMotorOnClock = 0;\n    private cassetteSamplesRead = 0;\n    private cassetteRiseInterruptCount = 0;\n    private cassetteFallInterruptCount = 0;\n    public readonly soundPlayer = new SoundPlayer();\n    public readonly eventScheduler = new EventScheduler();\n\n    constructor(screen: Trs80Screen, cassette: CassettePlayer) {\n        this.screen = screen;\n        this.cassette = cassette;\n        this.config = Config.makeDefault();\n        this.updateFromConfig();\n        this.loadRom();\n        this.tStateCount = 0;\n        this.keyboard.configureKeyboard();\n        this.fdc.onActiveDrive.subscribe(activeDrive => this.soundPlayer.setFloppyMotorOn(activeDrive !== undefined));\n        this.fdc.onTrackMove.subscribe(moveCount => this.soundPlayer.trackMoved(moveCount));\n    }\n\n    /**\n     * Get the current emulator's configuration.\n     */\n    public getConfig(): Config {\n        return this.config;\n    }\n\n    /**\n     * Sets a new configuration and reboots into it if necessary.\n     */\n    public setConfig(config: Config): void {\n        const needsReboot = config.needsReboot(this.config);\n        this.config = config;\n\n        this.screen.setConfig(this.config);\n\n        if (needsReboot) {\n            this.updateFromConfig();\n            this.reset();\n        }\n    }\n\n    /**\n     * Update our settings based on the config. Wipes memory.\n     */\n    private updateFromConfig(): void {\n        this.memory = new Uint8Array(RAM_START + this.config.getRamSize());\n        this.memory.fill(0);\n        this.loadRom();\n\n        switch (this.config.modelType) {\n            case ModelType.MODEL1:\n                this.timerHz = M1_TIMER_HZ;\n                this.clockHz = M1_CLOCK_HZ;\n                break;\n            case ModelType.MODEL3:\n            default:\n                this.timerHz = M3_TIMER_HZ;\n                this.clockHz = M3_CLOCK_HZ;\n                break;\n        }\n    }\n\n    /**\n     * Load the config-specific ROM into memory.\n     */\n    private loadRom(): void {\n        let rom: string;\n        switch (this.config.modelType) {\n            case ModelType.MODEL1:\n                switch (this.config.basicLevel) {\n                    case BasicLevel.LEVEL1:\n                        rom = model1Level1Rom;\n                        break;\n\n                    case BasicLevel.LEVEL2:\n                    default:\n                        rom = model1Level2Rom;\n                        break;\n                }\n                break;\n\n            case ModelType.MODEL3:\n            default:\n                rom = model3Rom;\n                break;\n        }\n\n        const raw = window.atob(rom);\n        for (let i = 0; i < raw.length; i++) {\n            this.memory[i] = raw.charCodeAt(i);\n        }\n    }\n\n    /**\n     * Event dispatcher for floppy drive activity, indicating which drive (0-based) has its motor on, if any.\n     */\n    get onMotorOn(): SimpleEventDispatcher<number | undefined> {\n        return this.fdc.onActiveDrive;\n    }\n\n    /**\n     * Reset the state of the Z80 and hardware.\n     */\n    public reset(): void {\n        this.setIrqMask(0);\n        this.setNmiMask(0);\n        this.resetCassette();\n        this.keyboard.clearKeyboard();\n        this.setTimerInterrupt(false);\n        this.z80.reset();\n    }\n\n    /**\n     * Jump the Z80 emulator to the specified address.\n     */\n    public jumpTo(address: number): void {\n        this.z80.regs.pc = address;\n    }\n\n    /**\n     * Set the stack pointer to the specified address.\n     */\n    private setStackPointer(address: number): void {\n        this.z80.regs.sp = address;\n    }\n\n    /**\n     * Start the executable at the given address. This sets up some\n     * state and jumps to the address.\n     */\n    private startExecutable(address: number): void {\n        // Disable the cursor.\n        this.writeMemory(0x4022, 0);\n\n        // Disable interrupts.\n        this.z80.regs.iff1 = 0;\n        this.z80.regs.iff2 = 0;\n\n        this.jumpTo(address);\n    }\n\n    /**\n     * Start the CPU and intercept browser keys.\n     */\n    public start(): void {\n        if (!this.started) {\n            this.keyboard.interceptKeys = true;\n            this.scheduleNextTick();\n            this.started = true;\n        }\n    }\n\n    /**\n     * Stop the CPU and no longer intercept browser keys.\n     *\n     * @return whether it was started.\n     */\n    public stop(): boolean {\n        if (this.started) {\n            this.keyboard.interceptKeys = false;\n            this.cancelTickTimeout();\n            this.started = false;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Set the mask for IRQ (regular) interrupts.\n     */\n    public setIrqMask(irqMask: number): void {\n        this.irqMask = irqMask;\n    }\n\n    /**\n     * Set the mask for non-maskable interrupts. (Yes.)\n     */\n    public setNmiMask(nmiMask: number): void {\n        // Reset is always allowed:\n        this.nmiMask = nmiMask | RESET_NMI_MASK;\n        this.updateNmiSeen();\n    }\n\n    private interruptLatchRead(): number {\n        if (this.config.modelType === ModelType.MODEL1) {\n            const irqLatch = this.irqLatch;\n            this.setTimerInterrupt(false);\n            // TODO irq = this.irqLatch !== 0;\n            return irqLatch;\n        } else {\n            return ~this.irqLatch & 0xFF;\n        }\n    }\n\n    /**\n     * Take one Z80 step and update the state of the hardware.\n     */\n    public step(): void {\n        this.z80.step();\n\n        // Handle non-maskable interrupts.\n        if ((this.nmiLatch & this.nmiMask) !== 0 && !this.nmiSeen) {\n            this.z80.nonMaskableInterrupt();\n            this.nmiSeen = true;\n\n            // Simulate the reset button being released.\n            this.resetButtonInterrupt(false);\n        }\n\n        // Handle interrupts.\n        if ((this.irqLatch & this.irqMask) !== 0) {\n            this.z80.maskableInterrupt();\n        }\n\n        // Set off a timer interrupt.\n        if (this.tStateCount > this.previousTimerClock + this.clockHz / this.timerHz) {\n            this.handleTimer();\n            this.previousTimerClock = this.tStateCount;\n        }\n\n        // Update cassette state.\n        this.updateCassette();\n\n        // Dispatch scheduled events.\n        this.eventScheduler.dispatch(this.tStateCount);\n    }\n\n    public contendMemory(address: number): void {\n        // Ignore.\n    }\n\n    public contendPort(address: number): void {\n        // Ignore.\n    }\n\n    public readMemory(address: number): number {\n        if (address < ROM_SIZE || address >= RAM_START || isScreenAddress(address)) {\n            return address < this.memory.length ? this.memory[address] : 0xFF;\n        } else if (address === 0x37E8) {\n            // Printer. 0x30 = Printer selected, ready, with paper, not busy.\n            return 0x30;\n        } else if (Keyboard.isInRange(address)) {\n            // Keyboard.\n            return this.keyboard.readKeyboard(address, this.tStateCount);\n        } else {\n            // Unmapped memory.\n            warnOnce(\"Reading from unmapped memory at 0x\" + toHex(address, 4));\n            return 0;\n        }\n    }\n\n    public readPort(address: number): number {\n        const port = address & 0xFF;\n        let value = 0xFF; // Default value for missing ports.\n\n        switch (port) {\n            case 0x00:\n                // Joystick.\n                value = 0xFF;\n                break;\n\n            case 0xE0:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // IRQ latch read.\n                    value = this.interruptLatchRead();\n                }\n                break;\n\n            case 0xE4:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // NMI latch read.\n                    value = ~this.nmiLatch & 0xFF;\n                }\n                break;\n\n            case 0xEC:\n            case 0xED:\n            case 0xEE:\n            case 0xEF:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Acknowledge timer.\n                    this.setTimerInterrupt(false);\n                    value = 0xFF;\n                }\n                break;\n\n            case 0xF0:\n                value = this.fdc.readStatus();\n                break;\n\n            case 0xF1:\n                value = this.fdc.readTrack();\n                break;\n\n            case 0xF2:\n                value = this.fdc.readSector();\n                break;\n\n            case 0xF3:\n                value = this.fdc.readData();\n                break;\n\n            case 0xF8:\n                // Printer status. Printer selected, ready, with paper, not busy.\n                value = 0x30;\n                break;\n\n            case 0xFF:\n                // Cassette and various flags.\n                if (this.config.modelType === ModelType.MODEL1) {\n                    value = 0x3F;\n                    if (!this.screen.isExpandedCharacters()) {\n                        value |= 0x40;\n                    }\n                } else {\n                    value = this.modeImage & 0x7E;\n                }\n                value |= this.getCassetteByte();\n                break;\n\n            default:\n                // Not sure what a good default value is, but other emulators use 0xFF.\n                warnOnce(\"Reading from unknown port 0x\" + toHex(lo(address), 2));\n                value = 0xFF;\n                break;\n        }\n\n        // console.log(\"Reading 0x\" + toHex(value, 2) + \" from port 0x\" + toHex(lo(address), 2));\n        return value;\n    }\n\n    public writePort(address: number, value: number): void {\n        const port = address & 0xFF;\n        switch (port) {\n            case 0xE0:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Set interrupt mask.\n                    this.setIrqMask(value);\n                }\n                break;\n\n            case 0xE4:\n            case 0xE5:\n            case 0xE6:\n            case 0xE7:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Set NMI state.\n                    this.setNmiMask(value);\n                }\n                break;\n\n            case 0xEC:\n            case 0xED:\n            case 0xEE:\n            case 0xEF:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Various controls.\n                    this.modeImage = value;\n                    this.setCassetteMotor((value & 0x02) !== 0);\n                    this.screen.setExpandedCharacters((value & 0x04) !== 0);\n                    this.screen.setAlternateCharacters((value & 0x08) === 0);\n                }\n                break;\n\n            case 0xF0:\n                this.fdc.writeCommand(value);\n                break;\n\n            case 0xF1:\n                this.fdc.writeTrack(value);\n                break;\n\n            case 0xF2:\n                this.fdc.writeSector(value);\n                break;\n\n            case 0xF3:\n                this.fdc.writeData(value);\n                break;\n\n            case 0xF4:\n            case 0xF5:\n            case 0xF6:\n            case 0xF7:\n                this.fdc.writeSelect(value);\n                break;\n\n            case 0xF8:\n            case 0xF9:\n            case 0xFA:\n            case 0xFB:\n                // Printer write.\n                console.log(\"Writing \\\"\" + String.fromCodePoint(value) + \"\\\" to printer\");\n                break;\n\n            case 0xFC:\n            case 0xFD:\n            case 0xFE:\n            case 0xFF:\n                if (this.config.modelType === ModelType.MODEL1) {\n                    this.setCassetteMotor((value & 0x04) !== 0);\n                    this.screen.setExpandedCharacters((value & 0x08) !== 0);\n                }\n                if ((value & 0x20) !== 0) {\n                    // Model III Micro Labs graphics card.\n                    console.log(\"Sending 0x\" + toHex(value, 2) + \" to Micro Labs graphics card\");\n                } else {\n                    // Do cassette emulation.\n                    this.putCassetteByte(value & 0x03);\n                }\n                break;\n\n            default:\n                warnOnce(\"Writing 0x\" + toHex(value, 2) + \" to unknown port 0x\" + toHex(port, 2));\n                return;\n        }\n        // console.log(\"Wrote 0x\" + toHex(value, 2) + \" to port 0x\" + toHex(port, 2));\n    }\n\n    public writeMemory(address: number, value: number): void {\n        if (address < ROM_SIZE) {\n            warnOnce(\"Warning: Writing to ROM location 0x\" + toHex(address, 4));\n        } else {\n            if (address >= TRS80_SCREEN_BEGIN && address < TRS80_SCREEN_END) {\n                if (this.config.cgChip === CGChip.ORIGINAL) {\n                    // No bit 6 in video memory, need to compute it.\n                    value = computeVideoBit6(value);\n                }\n\n                this.screen.writeChar(address, value);\n            } else if (address < RAM_START) {\n                warnOnce(\"Writing to unmapped memory at 0x\" + toHex(address, 4));\n            }\n            this.memory[address] = value;\n        }\n    }\n\n    /**\n     * Write a block of data to memory.\n     *\n     * @return the address just past the block.\n     */\n    public writeMemoryBlock(address: number, values: Uint8Array, startIndex: number = 0, length?: number): number {\n        length = length ?? values.length;\n\n        for (let i = 0; i < length; i++) {\n            this.writeMemory(address++, values[startIndex + i]);\n        }\n\n        return address;\n    }\n\n    /**\n     * Reset cassette edge interrupts.\n     */\n    public cassetteClearInterrupt(): void {\n        this.irqLatch &= ~CASSETTE_IRQ_MASKS;\n    }\n\n    /**\n     * Check whether the software has enabled these interrupts.\n     */\n    public cassetteInterruptsEnabled(): boolean {\n        return (this.irqMask & CASSETTE_IRQ_MASKS) !== 0;\n    }\n\n    /**\n     * Get an opaque string that represents the state of the screen. Flashes the screen.\n     */\n    public getScreenshot(): string {\n        const buf: number[] = [];\n\n        // First byte is screen mode, where 0 means normal (64 columns) and 1 means wide (32 columns).\n        buf.push(this.screen.isExpandedCharacters() ? 1 : 0);\n\n        // Run-length encode bytes with (value,count) pairs, with a max count of 255. Bytes\n        // in the range 33 to 127 inclusive have an implicit count of 1.\n        for (let address = TRS80_SCREEN_BEGIN; address < TRS80_SCREEN_END; address++) {\n            const value = this.memory[address];\n            if (value > 32 && value < 128) {\n                // Bytes in this range don't store a count.\n                buf.push(value);\n            } else if (buf.length < 2 || buf[buf.length - 1] === 255 || buf[buf.length - 2] !== value) {\n                // New entry.\n                buf.push(value);\n                buf.push(1);\n            } else {\n                // Increment existing count.\n                buf[buf.length - 1] += 1;\n            }\n        }\n\n        // Convert to a binary string.\n        let s = buf.map(n => String.fromCharCode(n)).join(\"\");\n\n        // Start visual flash effect.\n        Trs80.flashNode(this.screen.getNode());\n\n        // Base-64 encode and prefix with version number.\n        return \"0:\" + btoa(s);\n    }\n\n    /**\n     * Flash the node as if a photo were taken.\n     */\n    private static flashNode(node: HTMLElement): void {\n        // Position a semi-transparent white div over the screen, and reduce its transparency over time.\n        const oldNodePosition = node.style.position;\n        node.style.position = \"relative\";\n\n        const overlay = document.createElement(\"div\");\n        overlay.style.position = \"absolute\";\n        overlay.style.left = \"0\";\n        overlay.style.top = \"0\";\n        overlay.style.right = \"0\";\n        overlay.style.bottom = \"0\";\n        overlay.style.backgroundColor = \"#ffffff\";\n\n        // Fade out.\n        let opacity = 1;\n        const updateOpacity = () => {\n            overlay.style.opacity = opacity.toString();\n            opacity -= 0.1;\n            if (opacity >= 0) {\n                window.requestAnimationFrame(updateOpacity);\n            } else {\n                node.removeChild(overlay);\n                node.style.position = oldNodePosition;\n            }\n        };\n        updateOpacity();\n        node.appendChild(overlay);\n    }\n\n    // Reset whether we've seen this NMI interrupt if the mask and latch no longer overlap.\n    private updateNmiSeen(): void {\n        if ((this.nmiLatch & this.nmiMask) === 0) {\n            this.nmiSeen = false;\n        }\n    }\n\n    /**\n     * Run a certain number of CPU instructions and schedule another tick.\n     */\n    private tick(): void {\n        for (let i = 0; i < this.clocksPerTick && this.started; i++) {\n            this.step();\n        }\n        // We might have stopped in the step() routine (e.g., with scheduled event).\n        if (this.started) {\n            this.scheduleNextTick();\n        }\n    }\n\n    /**\n     * Figure out how many CPU cycles we should optimally run and how long\n     * to wait until scheduling it, then schedule it to be run later.\n     */\n    private scheduleNextTick(): void {\n        let delay: number;\n        if (this.cassetteMotorOn || this.keyboard.keyQueue.length > 4) {\n            // Go fast if we're accessing the cassette or pasting.\n            this.clocksPerTick = 100_000;\n            delay = 0;\n        } else {\n            // Delay to match original clock speed.\n            const now = Date.now();\n            const actualElapsed = now - this.startTime;\n            const expectedElapsed = this.tStateCount * 1000 / this.clockHz;\n            let behind = expectedElapsed - actualElapsed;\n            if (behind < -100 || behind > 100) {\n                // We're too far behind or ahead. Catch up artificially.\n                this.startTime = now - expectedElapsed;\n                behind = 0;\n            }\n            delay = Math.round(Math.max(0, behind));\n            if (delay === 0) {\n                // Delay too short, do more each tick.\n                this.clocksPerTick = Math.min(this.clocksPerTick + 100, 10000);\n            } else if (delay > 1) {\n                // Delay too long, do less each tick.\n                this.clocksPerTick = Math.max(this.clocksPerTick - 100, 100);\n            }\n        }\n        // console.log(this.clocksPerTick, delay);\n\n        this.cancelTickTimeout();\n        this.tickHandle = window.setTimeout(() => {\n            this.tickHandle = undefined;\n            this.tick();\n        }, delay);\n    }\n\n    /**\n     * Stop the tick timeout, if it's running.\n     */\n    private cancelTickTimeout(): void {\n        if (this.tickHandle !== undefined) {\n            window.clearTimeout(this.tickHandle);\n            this.tickHandle = undefined;\n        }\n    }\n\n    // Set or reset the timer interrupt.\n    private setTimerInterrupt(state: boolean): void {\n        if (this.config.modelType === ModelType.MODEL1) {\n            if (state) {\n                this.irqLatch |= M1_TIMER_IRQ_MASK;\n            } else {\n                this.irqLatch &= ~M1_TIMER_IRQ_MASK;\n            }\n        } else {\n            if (state) {\n                this.irqLatch |= M3_TIMER_IRQ_MASK;\n            } else {\n                this.irqLatch &= ~M3_TIMER_IRQ_MASK;\n            }\n        }\n    }\n\n    // What to do when the hardware timer goes off.\n    private handleTimer(): void {\n        this.setTimerInterrupt(true);\n    }\n\n    // Set the state of the reset button interrupt.\n    private resetButtonInterrupt(state: boolean): void {\n        if (state) {\n            this.nmiLatch |= RESET_NMI_MASK;\n        } else {\n            this.nmiLatch &= ~RESET_NMI_MASK;\n        }\n        this.updateNmiSeen();\n    }\n\n    // Set the state of the disk motor off interrupt.\n    public diskMotorOffInterrupt(state: boolean): void {\n        if (state) {\n            this.nmiLatch |= DISK_MOTOR_OFF_NMI_MASK;\n        } else {\n            this.nmiLatch &= ~DISK_MOTOR_OFF_NMI_MASK;\n        }\n        this.updateNmiSeen();\n    }\n\n    // Set the state of the disk interrupt.\n    public diskIntrqInterrupt(state: boolean): void {\n        if (state) {\n            this.nmiLatch |= DISK_INTRQ_NMI_MASK;\n        } else {\n            this.nmiLatch &= ~DISK_INTRQ_NMI_MASK;\n        }\n        this.updateNmiSeen();\n    }\n\n    // Set the state of the disk interrupt.\n    public diskDrqInterrupt(state: boolean): void {\n        // No effect.\n    }\n\n    // Reset the controller to a known state.\n    private resetCassette() {\n        this.setCassetteState(CassetteState.CLOSE);\n    }\n\n    // Get a byte from the I/O port.\n    private getCassetteByte(): number {\n        // If the motor's running, and we're reading a byte, then get into read mode.\n        if (this.cassetteMotorOn) {\n            this.setCassetteState(CassetteState.READ);\n        }\n\n        // Clear any interrupt that may have triggered this read.\n        this.cassetteClearInterrupt();\n\n        // Cassette owns bits 0 and 7.\n        let b = 0;\n        if (this.cassetteFlipFlop) {\n            b |= 0x80;\n        }\n        if (this.config.modelType !== ModelType.MODEL1 && this.cassetteLastNonZeroValue === CassetteValue.POSITIVE) {\n            b |= 0x01;\n        }\n        return b;\n    }\n\n    // Write to the cassette port. We don't support writing tapes, but this is used\n    // for 500-baud reading to trigger the next analysis of the tape.\n    private putCassetteByte(b: number) {\n        if (this.cassetteMotorOn) {\n            if (this.cassetteState === CassetteState.READ) {\n                this.updateCassette();\n                this.cassetteFlipFlop = false;\n            }\n        } else {\n            this.soundPlayer.setAudioValue(CASSETTE_BITS_TO_AUDIO_VALUE[b], this.tStateCount, this.clockHz);\n        }\n    }\n\n    // Kick off the reading process when doing 1500-baud reads.\n    private kickOffCassette() {\n        if (this.cassetteMotorOn &&\n                    this.cassetteState === CassetteState.CLOSE &&\n                    this.cassetteInterruptsEnabled()) {\n\n            // Kick off the process.\n            this.cassetteRiseInterrupt();\n            this.cassetteFallInterrupt();\n        }\n    }\n\n    // Turn the motor on or off.\n    private setCassetteMotor(cassetteMotorOn: boolean) {\n        if (cassetteMotorOn !== this.cassetteMotorOn) {\n            if (cassetteMotorOn) {\n                this.cassetteFlipFlop = false;\n                this.cassetteLastNonZeroValue = CassetteValue.NEUTRAL;\n\n                // Waits a second before kicking off the cassette.\n                // TODO this should be in CPU cycles, not browser cycles.\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    setTimeout(() => this.kickOffCassette(), 1000);\n                }\n            } else {\n                this.setCassetteState(CassetteState.CLOSE);\n            }\n            this.cassetteMotorOn = cassetteMotorOn;\n\n            if (cassetteMotorOn) {\n                this.cassette.onMotorStart();\n            } else {\n                this.cassette.onMotorStop();\n            }\n        }\n    }\n\n    // Read some of the cassette to see if we should be triggering a rise/fall interrupt.\n    private updateCassette() {\n        if (this.cassetteMotorOn && this.setCassetteState(CassetteState.READ) >= 0) {\n            // See how many samples we should have read by now.\n            const samplesToRead = Math.round((this.tStateCount - this.cassetteMotorOnClock) *\n                this.cassette.samplesPerSecond / this.clockHz);\n\n            // Catch up.\n            while (this.cassetteSamplesRead < samplesToRead) {\n                const sample = this.cassette.readSample();\n                this.cassetteSamplesRead++;\n\n                // Convert to state, where neutral is some noisy in-between state.\n                let cassetteValue = CassetteValue.NEUTRAL;\n                if (sample > CASSETTE_THRESHOLD) {\n                    cassetteValue = CassetteValue.POSITIVE;\n                } else if (sample < -CASSETTE_THRESHOLD) {\n                    cassetteValue = CassetteValue.NEGATIVE;\n                }\n\n                // See if we've changed value.\n                if (cassetteValue !== this.cassetteValue) {\n                    if (cassetteValue === CassetteValue.POSITIVE) {\n                        // Positive edge.\n                        this.cassetteFlipFlop = true;\n                        this.cassetteRiseInterrupt();\n                    } else if (cassetteValue === CassetteValue.NEGATIVE) {\n                        // Negative edge.\n                        this.cassetteFlipFlop = true;\n                        this.cassetteFallInterrupt();\n                    }\n\n                    this.cassetteValue = cassetteValue;\n                    if (cassetteValue !== CassetteValue.NEUTRAL) {\n                        this.cassetteLastNonZeroValue = cassetteValue;\n                    }\n                }\n            }\n        }\n    }\n\n    // Returns 0 if the state was changed, 1 if it wasn't, and -1 on error.\n    private setCassetteState(newState: CassetteState): number {\n        const oldCassetteState = this.cassetteState;\n\n        // See if we're changing anything.\n        if (oldCassetteState === newState) {\n            return 1;\n        }\n\n        // Once in error, everything will fail until we close.\n        if (oldCassetteState === CassetteState.FAIL && newState !== CassetteState.CLOSE) {\n            return -1;\n        }\n\n        // Change things based on new state.\n        switch (newState) {\n            case CassetteState.READ:\n                this.openCassetteFile();\n                break;\n        }\n\n        // Update state.\n        this.cassetteState = newState;\n\n        return 0;\n    }\n\n    // Open file, get metadata, and get read to read the tape.\n    private openCassetteFile(): void {\n        // TODO open/rewind cassette?\n\n        // Reset the clock.\n        this.cassetteMotorOnClock = this.tStateCount;\n        this.cassetteSamplesRead = 0;\n    }\n\n    // Saw a positive edge on cassette.\n    private cassetteRiseInterrupt(): void {\n        this.cassetteRiseInterruptCount++;\n        this.irqLatch = (this.irqLatch & ~M3_CASSETTE_RISE_IRQ_MASK) |\n            (this.irqMask & M3_CASSETTE_RISE_IRQ_MASK);\n    }\n\n    // Saw a negative edge on cassette.\n    private cassetteFallInterrupt(): void {\n        this.cassetteFallInterruptCount++;\n        this.irqLatch = (this.irqLatch & ~M3_CASSETTE_FALL_IRQ_MASK) |\n            (this.irqMask & M3_CASSETTE_FALL_IRQ_MASK);\n    }\n\n    /**\n     * Clear screen and home cursor.\n     */\n    private cls(): void {\n        for (let address = TRS80_SCREEN_BEGIN; address < TRS80_SCREEN_END; address++) {\n            this.writeMemory(address, 32);\n        }\n        this.positionCursor(0, 0);\n    }\n\n    /**\n     * Move the cursor (where the ROM's write routine will write to next) to the\n     * given location.\n     *\n     * @param col 0-based text column.\n     * @param row 0-based text row.\n     */\n    private positionCursor(col: number, row: number): void {\n        const address = TRS80_SCREEN_BEGIN + row*64 + col;\n\n        // This works on Model III, not sure if it works on Model I or in wide mode.\n        this.writeMemory(0x4020, lo(address));\n        this.writeMemory(0x4021, hi(address));\n    }\n\n    /**\n     * Run a TRS-80 program. The exact behavior depends on the type of program.\n     */\n    public runTrs80File(trs80File: Trs80File): void {\n        this.ejectAllFloppyDisks();\n\n        switch (trs80File.className) {\n            case \"CmdProgram\":\n                this.runCmdProgram(trs80File);\n                break;\n            case \"Cassette\":\n                if (trs80File.files.length === 1) {\n                    this.runTrs80File(trs80File.files[0].file);\n                } else {\n                    // TODO.\n                    console.error(\"Can't currently run multiple cassette files\");\n                }\n                break;\n            case \"SystemProgram\":\n                this.runSystemProgram(trs80File);\n                break;\n            case \"BasicProgram\":\n                this.runBasicProgram(trs80File);\n                break;\n            case \"Jv1FloppyDisk\":\n            case \"Jv3FloppyDisk\":\n            case \"DmkFloppyDisk\":\n                this.runFloppyDisk(trs80File);\n                break;\n            default:\n                console.error(\"Don't know how to run\", trs80File);\n                break;\n        }\n    }\n\n    /**\n     * Load a CMD program into memory and run it.\n     */\n    public runCmdProgram(cmdProgram: CmdProgram): void {\n        this.reset();\n        this.eventScheduler.add(undefined, this.tStateCount + this.clockHz*0.1, () => {\n            this.cls();\n\n            for (const chunk of cmdProgram.chunks) {\n                if (chunk.className === \"CmdLoadBlockChunk\") {\n                    this.writeMemoryBlock(chunk.address, chunk.loadData);\n                } else if (chunk.className === \"CmdTransferAddressChunk\") {\n                    this.startExecutable(chunk.address);\n\n                    // Don't load any more after this. I assume on a real machine the jump\n                    // happens immediately and CMD parsing ends.\n                    break;\n                }\n            }\n        });\n    }\n\n    /**\n     * Load a system program into memory and run it.\n     */\n    public runSystemProgram(systemProgram: SystemProgram): void {\n        this.reset();\n        this.eventScheduler.add(undefined, this.tStateCount + this.clockHz*0.1, () => {\n            this.cls();\n\n            for (const chunk of systemProgram.chunks) {\n                this.writeMemoryBlock(chunk.loadAddress, chunk.data);\n            }\n\n            // Do what the SYSTEM command does.\n            this.setStackPointer(0x4288);\n            this.startExecutable(systemProgram.entryPointAddress);\n        });\n    }\n\n    /**\n     * Load a Basic program into memory and run it.\n     */\n    public runBasicProgram(basicProgram: BasicProgram): void {\n        this.reset();\n\n        // Wait for Cass?\n        this.eventScheduler.add(undefined, this.tStateCount + this.clockHz*0.1, () => {\n            this.keyboard.simulateKeyboardText(\"\\n0\\n\");\n\n            // Wait for Ready prompt.\n            this.eventScheduler.add(undefined, this.tStateCount + this.clockHz*0.2, () => {\n                this.loadBasicProgram(basicProgram);\n                this.keyboard.simulateKeyboardText(\"RUN\\n\");\n            });\n        });\n    }\n\n    /**\n     * Get the address of the first line of the Basic program, or a string explaining the error.\n     */\n    private getBasicAddress(): number | string {\n        const addr = this.readMemory(0x40A4) + (this.readMemory(0x40A5) << 8);\n        if (addr < 0x4200) {\n            return `Basic load address (0x${toHexWord(addr)}) is uninitialized (0x${toHexWord(addr)})`;\n        }\n\n        return addr;\n    }\n\n    /**\n     * Load a Basic program into memory, replacing the one that's there. Does not run it.\n     */\n    public loadBasicProgram(basicProgram: BasicProgram): void {\n        // Find address to load to.\n        const addrOrError = this.getBasicAddress();\n        if (typeof(addrOrError) === \"string\") {\n            console.error(addrOrError);\n            return;\n        }\n        let addr = addrOrError as number;\n\n        // Terminate current line (if any) and set up the new one.\n        let lineStart: number | undefined;\n        const newLine = () => {\n            if (lineStart !== undefined) {\n                // End-of-line marker.\n                this.writeMemory(addr++, 0);\n\n                // Update previous line's next-line pointer.\n                this.writeMemory(lineStart, lo(addr));\n                this.writeMemory(lineStart + 1, hi(addr));\n            }\n\n            // Remember address of next-line pointer.\n            lineStart = addr;\n\n            // Next-line pointer.\n            this.writeMemory(addr++, 0);\n            this.writeMemory(addr++, 0);\n        };\n\n        // Write elements to memory.\n        for (const e of basicProgram.elements) {\n            if (e.offset !== undefined) {\n                if (e.elementType === ElementType.LINE_NUMBER) {\n                    newLine();\n                }\n\n                // Write element.\n                addr = this.writeMemoryBlock(addr, basicProgram.binary, e.offset, e.length);\n            }\n        }\n\n        newLine();\n\n        // End of Basic program pointer.\n        this.writeMemory(0x40F9, lo(addr));\n        this.writeMemory(0x40FA, hi(addr));\n\n        // Start of array variables pointer.\n        this.writeMemory(0x40FB, lo(addr));\n        this.writeMemory(0x40FC, hi(addr));\n\n        // Start of free memory pointer.\n        this.writeMemory(0x40FD, lo(addr));\n        this.writeMemory(0x40FE, hi(addr));\n    }\n\n    /**\n     * Remove floppy disks from all drives.\n     */\n    public ejectAllFloppyDisks(): void {\n        for (let i = 0; i < FLOPPY_DRIVE_COUNT; i++) {\n            this.loadFloppyDisk(undefined, i);\n        }\n    }\n\n    /**\n     * Load the floppy disk into the specified drive.\n     * @param floppyDisk the floppy, or undefined to unmount.\n     * @param driveNumber the drive number, 0-based.\n     */\n    public loadFloppyDisk(floppyDisk: FloppyDisk | undefined, driveNumber: number): void {\n        this.fdc.loadFloppyDisk(floppyDisk, driveNumber);\n    }\n\n    /**\n     * Load a floppy and reboot into it.\n     */\n    private runFloppyDisk(floppyDisk: FloppyDisk): void {\n        // Mount floppy.\n        this.loadFloppyDisk(floppyDisk, 0);\n\n        // Reboot.\n        this.reset();\n    }\n\n    /**\n     * Pulls the Basic program currently in memory, or returns a string with an error.\n     */\n    public getBasicProgramFromMemory(): BasicProgram | string {\n        const addrOrError = this.getBasicAddress();\n        if (typeof(addrOrError) === \"string\") {\n            return addrOrError;\n        }\n        let addr = addrOrError as number;\n\n        // Walk through the program lines to find the end.\n        const beginAddr = addr;\n        while (true) {\n            // Find end address.\n            const nextLine = this.readMemory(addr) + (this.readMemory(addr + 1) << 8);\n            if (nextLine === 0) {\n                break;\n            }\n            if (nextLine < addr) {\n                // Error, went backward.\n                return `Next address 0x${toHexWord(nextLine)} is less than current address 0x${toHexWord(addr)}`;\n            }\n            addr = nextLine;\n        }\n        const endAddr = addr + 2;\n\n        // Put together the binary of just the program.\n        const binary = new Uint8Array(endAddr - beginAddr + 1);\n        binary[0] = BASIC_HEADER_BYTE;\n        binary.set(this.memory.subarray(beginAddr, endAddr), 1);\n\n        // Decode the program.\n        const basic = decodeBasicProgram(binary);\n        if (basic === undefined) {\n            return \"Basic couldn't be decoded\";\n        }\n\n        return basic;\n    }\n}\n","import {Config} from \"./Config\";\nimport {TRS80_SCREEN_BEGIN, TRS80_SCREEN_END} from \"trs80-base\";\n\n/**\n * Abstract base class for displaying a screen.\n */\nexport class Trs80Screen {\n    private expanded = false;\n    private alternate = false;\n\n    /**\n     * Set the config for this screen. Before this is called, the screen is permitted to use any config\n     * it wants.\n     */\n    public setConfig(config: Config): void {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Write a character to the screen.\n     * @param address address of the character, where 15360 is the upper-left of the screen.\n     * @param value the 0-255 value to write.\n     */\n    public writeChar(address: number, value: number): void {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Get the HTML node for this screen.\n     */\n    public getNode(): HTMLElement {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Enable or disable expanded (wide) character mode.\n     */\n    public setExpandedCharacters(expanded: boolean): void {\n        this.expanded = expanded;\n    }\n\n    /**\n     * Return whether we're in expanded (wide) character mode.\n     */\n    public isExpandedCharacters(): boolean {\n        return this.expanded;\n    }\n\n    /**\n     * Enable or disable alternate (Katakana) character mode.\n     */\n    public setAlternateCharacters(alternate: boolean): void {\n        this.alternate = alternate;\n    }\n\n    /**\n     * Return whether we're in alternate (Katakana) character mode.\n     */\n    public isAlternateCharacters(): boolean {\n        return this.alternate;\n    }\n\n    /**\n     * Fill the screen with the screenshot.\n     */\n    public displayScreenshot(screenshot: string): void {\n        // Leave it blank if screenshot string is blank.\n        if (screenshot === \"\") {\n            return;\n        }\n\n        if (!screenshot.startsWith(\"0:\")) {\n            throw new Error(\"Invalid screenshot version number\");\n        }\n\n        // Decode screenshot.\n        const s = atob(screenshot.substring(2));\n        if (s.length === 0) {\n            throw new Error(\"Screenshot string is empty\");\n        }\n\n        // Set expanded mode.\n        this.setExpandedCharacters(s.charCodeAt(0) === 1);\n\n        let address = TRS80_SCREEN_BEGIN;\n        for (let i = 1; i < s.length; i++) {\n            const value = s.charCodeAt(i);\n            let count = 1;\n            if (value > 32 && value < 128) {\n                // Implicit count of 1.\n            } else {\n                i++;\n                if (i === s.length) {\n                    throw new Error(\"Missing count in RLE\");\n                }\n                count = s.charCodeAt(i);\n            }\n\n            // Emit \"count\" values.\n            while (count--) {\n                this.writeChar(address++, value);\n            }\n        }\n\n        if (address !== TRS80_SCREEN_END) {\n            throw new Error(\"Screenshot was of the wrong length\");\n        }\n    }\n}\n","\n/**\n * These fonts are from the xtrs emulator, and the CG# references match those.\n * They're identical to the fonts in the sdltrs emulator. They don't include\n * the 2x3 graphical characters; we generate those procedurally.\n *\n * See the original trs_chars.c file for Tim Mann's explanations and historical\n * notes.\n */\n\n// Here is the LICENSE file from the xtrs emulator:\n/*\n\nCopyright (C) 1992 Clarendon Hill Software.\n\nPermission is granted to any individual or institution to use, copy,\nor redistribute this software, provided this copyright notice is retained. \n\nThis software is provided \"as is\" without any expressed or implied\nwarranty.  If this software brings on any sort of damage -- physical,\nmonetary, emotional, or brain -- too bad.  You've got no one to blame\nbut yourself. \n\nThe software may be modified for your own purposes, but modified versions\nmust retain this notice.\n\n***\n\nCopyright (c) 1996-2020, Timothy P. Mann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\n/**\n * Original Model I character set.\n */\nconst GLYPH_CG1 = [\n    0x00,0x1f,0x11,0x11,0x11,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x1e,0x04,0x08,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x1b,0x15,0x1b,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x08,0x05,0x03,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1f,0x0a,0x0a,0x1b,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x0f,0x12,0x14,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x00,0x00,0x1f,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x15,0x0e,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x1b,0x15,0x1b,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x15,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x1f,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x15,0x15,0x1d,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1d,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x17,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x15,0x15,0x17,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x14,0x08,0x15,0x03,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x0a,0x0a,0x0a,0x0a,0x0a,0x1b,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x1f,0x10,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x0a,0x04,0x0a,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x0e,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x02,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x15,0x15,0x17,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x17,0x15,0x15,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x1d,0x15,0x15,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x15,0x15,0x1d,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x0a,0x1f,0x0a,0x1f,0x0a,0x0a,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x1e,0x05,0x0e,0x14,0x0f,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x03,0x13,0x08,0x04,0x02,0x19,0x18,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x05,0x05,0x02,0x15,0x09,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x08,0x08,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x15,0x0e,0x1f,0x0e,0x15,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x04,0x1f,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x08,0x04,0x02,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x19,0x15,0x13,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x06,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x0e,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x0c,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x0c,0x0a,0x09,0x1f,0x08,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x0f,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0c,0x02,0x01,0x0f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x10,0x08,0x04,0x02,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x0e,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1e,0x10,0x08,0x06,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x06,0x06,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x02,0x01,0x02,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x08,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0c,0x0c,0x04,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x10,0x1e,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x0d,0x13,0x11,0x13,0x0d,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x16,0x19,0x11,0x19,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x1f,0x01,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x14,0x04,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x16,0x19,0x19,0x16,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x00,0x06,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x00,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x09,0x05,0x03,0x05,0x09,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0b,0x15,0x15,0x15,0x15,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0d,0x13,0x11,0x13,0x0d,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x16,0x19,0x11,0x19,0x16,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0d,0x13,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1e,0x01,0x0e,0x10,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x1f,0x04,0x04,0x14,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x11,0x19,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x11,0x0a,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x15,0x15,0x0a,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x0a,0x04,0x0a,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x1e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x08,0x04,0x02,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x04,0x02,0x04,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x00,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x04,0x08,0x04,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x15,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x15,0x0a,0x15,0x0a,0x15,0x0a,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Model I character set with official Radio Shack upgrade.\n */\nconst GLYPH_CG2 = [\n    0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x1f,0x0a,0x1f,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x1e,0x05,0x0e,0x14,0x0f,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x03,0x13,0x08,0x04,0x02,0x19,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x05,0x05,0x02,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x08,0x08,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x15,0x0e,0x1f,0x0e,0x15,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x1f,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x08,0x04,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x19,0x15,0x13,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x06,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x0e,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x0c,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x0c,0x0a,0x09,0x1f,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x0f,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x02,0x01,0x0f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x0e,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x1e,0x10,0x08,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x02,0x01,0x02,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1f,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x08,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x08,0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x02,0x07,0x02,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x10,0x1e,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x0d,0x13,0x11,0x13,0x0d,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x16,0x19,0x11,0x19,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x1f,0x01,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x14,0x04,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x11,0x1e,0x10,0x0e,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x00,0x06,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x00,0x18,0x10,0x10,0x10,0x12,0x0c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x12,0x0a,0x06,0x0a,0x12,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0b,0x15,0x15,0x15,0x15,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x13,0x0d,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x16,0x19,0x19,0x16,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1e,0x01,0x0e,0x10,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x0e,0x04,0x04,0x14,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x19,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x15,0x15,0x0a,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x0a,0x04,0x0a,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x1e,0x10,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1f,0x08,0x04,0x02,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x04,0x02,0x04,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x00,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x04,0x08,0x04,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x0a,0x04,0x1f,0x04,0x1f,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x15,0x0a,0x15,0x0a,0x15,0x0a,0x15,0x0a,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Original Model III character set.\n */\nconst GLYPH_CG4 = [\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x3e,0x08,0x48,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x3c,0x42,0x7e,0x02,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x00,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x28,0x00,0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0xb8,0x44,0x64,0x54,0x4c,0x44,0x3a,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x34,0x4c,0x44,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x1c,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x5e,0x22,0x22,0x1e,0x12,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x28,0x00,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x44,0x4c,0x54,0x64,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x28,0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x90,0x68,0x64,0x54,0x4c,0x2c,0x12,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x3c,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x44,0x44,0x3c,0x44,0x44,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x00,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x18,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x54,0x50,0x38,0x14,0x54,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x14,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x02,0x3e,0x42,0x7c,0x40,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x7c,0x04,0x7c,0x04,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x78,0x24,0x64,0x3c,0x24,0x64,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x04,0x04,0x44,0x38,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x4c,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x00,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x7e,0x24,0x7e,0x24,0x24,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x78,0x14,0x38,0x50,0x3c,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x46,0x26,0x10,0x08,0x64,0x62,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x12,0x12,0x0c,0x52,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x08,0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x10,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x54,0x38,0x7c,0x38,0x54,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x7c,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x62,0x5a,0x46,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x18,0x14,0x10,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x30,0x0c,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x38,0x40,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x30,0x28,0x24,0x7e,0x20,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x1e,0x20,0x40,0x22,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x04,0x02,0x3e,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x20,0x10,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x3c,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x7c,0x40,0x20,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x00,0x00,0x10,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x60,0x30,0x18,0x0c,0x18,0x30,0x60,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7e,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x0c,0x18,0x30,0x18,0x0c,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x30,0x08,0x00,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x52,0x6a,0x32,0x04,0x78,0x00,0x00,0x00,0x00,0x00,\n    0x18,0x24,0x42,0x7e,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x44,0x44,0x3c,0x44,0x44,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x02,0x02,0x02,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x24,0x44,0x44,0x44,0x24,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x02,0x1e,0x02,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x02,0x1e,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x02,0x72,0x42,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x70,0x20,0x20,0x20,0x20,0x22,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x22,0x12,0x0e,0x12,0x22,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x02,0x02,0x02,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x66,0x5a,0x5a,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x46,0x4a,0x52,0x62,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x42,0x42,0x3e,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x42,0x52,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x42,0x42,0x3e,0x12,0x22,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x02,0x3c,0x40,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x5a,0x5a,0x66,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x44,0x44,0x44,0x38,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x20,0x18,0x04,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x04,0x04,0x04,0x04,0x04,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x20,0x20,0x20,0x20,0x20,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x3a,0x46,0x42,0x46,0x3a,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x02,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x40,0x5c,0x62,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x7e,0x02,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x3e,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x5c,0x62,0x62,0x5c,0x40,0x3c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x3a,0x46,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x00,0x18,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x00,0x30,0x20,0x20,0x20,0x22,0x1c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x22,0x12,0x0a,0x16,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x18,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x6e,0x92,0x92,0x92,0x92,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x46,0x3a,0x02,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x5c,0x62,0x62,0x5c,0x40,0x40,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x02,0x3c,0x40,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x08,0x3e,0x08,0x08,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x42,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x82,0x92,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x24,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x62,0x5c,0x40,0x3c,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7e,0x20,0x18,0x04,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x08,0x08,0x04,0x08,0x08,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x00,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x10,0x10,0x20,0x10,0x10,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x92,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x7c,0x10,0x10,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x7c,0xfe,0xfe,0x7c,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x6c,0xfe,0xfe,0x7c,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x7c,0xfe,0x7c,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x38,0x10,0xd6,0xfe,0xd6,0x10,0x38,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xa5,0x81,0xa5,0x99,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xa5,0x81,0x99,0xa5,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x04,0x08,0x10,0x20,0x3c,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x3c,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x9c,0x62,0x62,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x44,0x3c,0x44,0x44,0x3c,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x86,0x48,0x28,0x18,0x08,0x0c,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x30,0x50,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x60,0x10,0x08,0x7c,0x08,0x10,0x60,0x00,0x00,0x00,0x00,0x00,\n    0x68,0x60,0x10,0x08,0x38,0x40,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x34,0x4a,0x48,0x48,0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x7c,0x44,0x28,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x12,0x0a,0x06,0x0a,0x52,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x08,0x08,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x24,0x24,0x5c,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x4c,0x48,0x28,0x18,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x04,0x18,0x04,0x38,0x40,0x30,0x00,0x00,0x00,0x00,\n    0x00,0x18,0x24,0x42,0x42,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x2a,0x28,0x28,0x28,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x18,0x24,0x24,0x1c,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x12,0x12,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x12,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x26,0x24,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x54,0x54,0x54,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x46,0x28,0x10,0x28,0xc4,0x00,0x00,0x00,0x00,0x00,\n    0x92,0x54,0x54,0x38,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x44,0x82,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x82,0x82,0xc6,0x44,0xc6,0x00,0x00,0x00,0x00,0x00,\n    0x78,0x08,0x08,0x08,0x0a,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x00,0x7c,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x04,0x08,0x30,0x08,0x04,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x4c,0x32,0x00,0x4c,0x32,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x28,0x44,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x08,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,\n    0x80,0x40,0xfe,0x10,0xfe,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x20,0x7c,0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,\n    0xfc,0x4a,0x24,0x10,0x48,0xa4,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x82,0x82,0xfe,0x44,0x44,0xc6,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x6c,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x20,0x12,0x0a,0x06,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x78,0x04,0x38,0x44,0x38,0x40,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x44,0xaa,0x54,0x28,0x54,0xaa,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xb9,0x85,0x85,0xb9,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x42,0x24,0x18,0x24,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x52,0x52,0x5c,0x50,0x50,0x50,0x50,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x54,0x14,0x54,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x5e,0xa5,0xa5,0x9d,0x95,0x66,0x3c,0x00,0x00,0x00,0x00,\n    0xfa,0x06,0xc6,0x46,0x26,0xde,0x06,0xfa,0x00,0x00,0x00,0x00,\n    0xff,0x20,0xc0,0x3f,0x40,0x3f,0x20,0x1f,0x00,0x00,0x00,0x00,\n    0x3f,0x40,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x22,0x22,0x1e,0x52,0x22,0xd2,0x00,0x00,0x00,0x00,0x00,\n    0x86,0x41,0x21,0x16,0x68,0x94,0x92,0x61,0x00,0x00,0x00,0x00,\n    0x70,0x60,0x50,0x0e,0x09,0x09,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x44,0x44,0x38,0x10,0x38,0x10,0x00,0x00,0x00,0x00,\n    0x70,0x10,0x10,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0xff,0xc7,0xbb,0xcf,0xef,0xff,0xef,0xff,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x38,0x54,0x10,0x28,0x44,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x38,0x54,0x28,0x7c,0x28,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x44,0x44,0x54,0x6c,0x44,0x00,0x00,0x00,0x00,\n    0x44,0x28,0x10,0x7c,0x10,0x7c,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x04,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x20,0x20,0x20,0x20,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x02,0x04,0x08,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x20,0x3c,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x40,0x30,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x20,0x10,0x18,0x14,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x7c,0x44,0x40,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x38,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x3c,0x18,0x14,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x08,0x7c,0x48,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x38,0x20,0x20,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x40,0x78,0x40,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x54,0x54,0x44,0x20,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x28,0x18,0x08,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x20,0x10,0x18,0x14,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x44,0x44,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x10,0x10,0x10,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7e,0x10,0x18,0x14,0x12,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x48,0x48,0x44,0x72,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x10,0x7c,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x44,0x44,0x42,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x7c,0x14,0x12,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x40,0x40,0x40,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x7e,0x24,0x24,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x1c,0x40,0x4e,0x40,0x40,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x20,0x10,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x28,0x08,0x48,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x44,0x48,0x20,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x50,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x50,0x3e,0x10,0x7c,0x10,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x00,0x7e,0x40,0x20,0x10,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x00,0x7c,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x1c,0x24,0x44,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x10,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x00,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x28,0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7e,0x40,0x20,0x30,0x58,0x14,0x00,0x00,0x00,0x00,0x00,\n    0x60,0x40,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x20,0x50,0x50,0x50,0x48,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x7e,0x02,0x02,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x20,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x08,0x14,0x22,0x40,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x10,0x54,0x54,0x54,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x28,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x3c,0x42,0x3c,0x42,0x3c,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x04,0x12,0x22,0x5e,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x44,0x28,0x10,0x28,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x08,0x3c,0x08,0x08,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x28,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x20,0x20,0x20,0x10,0x08,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x7c,0x40,0x40,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x54,0x54,0x44,0x40,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x42,0x22,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x0a,0x4a,0x4a,0x2a,0x1a,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x44,0x44,0x24,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x42,0x42,0x42,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x40,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x4e,0x40,0x40,0x40,0x20,0x12,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x12,0x24,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Options when rasterizing each glyph.\n */\nexport interface GlyphOptions {\n    /**\n     * RGB (0-255) of \"on\" pixels.\n     */\n    color: number[];\n\n    /**\n     * Whether to draw fake scanlines.\n     */\n    scanLines: boolean;\n}\n\n/**\n * Class representing a font and able to generate its glyphs.\n */\nexport class Font {\n    // Bit array. Each character is 12 bytes, top to bottom.\n    public readonly bits: number[];\n    // Number of horizontal pixels in each character, left-aligned in the bits.\n    public readonly width: number;\n    // Number of vertical pixels in each character, top-aligned in the bits.\n    public readonly height: number;\n    // Index of each 64-character bank, or -1 for graphics characters.\n    private readonly banks: number[];\n    // Cache from glyph key (see makeImage()) to the canvas element for it.\n    private readonly glyphCache = new Map<string,HTMLCanvasElement>();\n\n    constructor(bits: number[], width: number, height: number, banks: number[]) {\n        this.bits = bits;\n        this.width = width;\n        this.height = height;\n        this.banks = banks;\n    }\n\n    /**\n     * Make a bitmap for the specified character (0-255). \"on\" pixels are the\n     * specified color, \"off\" pixels are fully transparent.\n     */\n    public makeImage(char: number, expanded: boolean, options: GlyphOptions): HTMLCanvasElement {\n        const key = {\n            char: char,\n            expanded: expanded,\n            options: options,\n        };\n        const stringKey = JSON.stringify(key);\n\n        // Cache the glyph since we create a set of these for each created canvas.\n        let glyph = this.glyphCache.get(stringKey);\n        if (glyph === undefined) {\n            glyph = this.makeImageInternal(char, expanded, options);\n            this.glyphCache.set(stringKey, glyph);\n        }\n\n        return glyph;\n    }\n\n    /**\n     * Actually creates the glyph.\n     */\n    private makeImageInternal(char: number, expanded: boolean, options: GlyphOptions): HTMLCanvasElement {\n        const canvas = document.createElement(\"canvas\");\n        let expandedMultiplier = expanded ? 2 : 1;\n        canvas.width = this.width*expandedMultiplier;\n        canvas.height = this.height*2;\n\n        const ctx = canvas.getContext(\"2d\");\n        if (ctx === null) {\n            throw new Error(\"2d context not supported\");\n        }\n        const imageData = ctx.createImageData(canvas.width, canvas.height);\n\n        // Light pixel at (x,y) in imageData if bit \"bit\" of \"byte\" is on.\n        const lightPixel = (x: number, y: number, byte: number, bit: number): void => {\n            const pixel = (byte & (1 << bit)) !== 0;\n            if (pixel) {\n                const pixelOffset = (y * canvas.width + x) * 4;\n                const alpha = options.scanLines ? (y % 2 == 0 ? 0xFF : 0xAA) : 0xFF;\n\n                imageData.data[pixelOffset + 0] = options.color[0];\n                imageData.data[pixelOffset + 1] = options.color[1];\n                imageData.data[pixelOffset + 2] = options.color[2];\n                imageData.data[pixelOffset + 3] = alpha;\n            }\n        };\n\n        const bankOffset = this.banks[Math.floor(char/64)];\n        if (bankOffset === -1) {\n            // Graphical character.\n            const byte = char%64;\n            for (let y = 0; y < canvas.height; y++) {\n                const py = Math.floor(y/(canvas.height/3));\n                for (let x = 0; x < canvas.width; x++) {\n                    const px = Math.floor(x/(canvas.width/2));\n                    const bit = py*2 + px;\n                    lightPixel(x, y, byte, bit);\n                }\n            }\n        } else {\n            // Bitmap character.\n            const charOffset = bankOffset + char % 64;\n            const byteOffset = charOffset * 12;\n\n            for (let y = 0; y < canvas.height; y++) {\n                const byte = this.bits[byteOffset + Math.floor(y / 2)];\n                for (let x = 0; x < canvas.width; x++) {\n                    lightPixel(x, y, byte, Math.floor(x/expandedMultiplier));\n                }\n            }\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n\n        return canvas;\n    }\n}\n\n// Original Model I.\nexport const MODEL1A_FONT = new Font(GLYPH_CG1, 6, 12, [0, 64, -1, -1]);\n// Model I with lower case mod.\nexport const MODEL1B_FONT = new Font(GLYPH_CG2, 6, 12, [0, 64, -1, -1]);\n// Original Model III, with special symbols.\nexport const MODEL3_FONT = new Font(GLYPH_CG4, 8, 12, [0, 64, -1, 128]);\n// Original Model III, with Katakana.\nexport const MODEL3_ALT_FONT = new Font(GLYPH_CG4, 8, 12, [0, 64, -1, 192]);\n","import {Trs80Screen} from \"./Trs80Screen\";\nimport {GlyphOptions, MODEL1A_FONT, MODEL1B_FONT, MODEL3_ALT_FONT, MODEL3_FONT} from \"./Fonts\";\nimport {Background, CGChip, Config, ModelType, Phosphor, ScanLines} from \"./Config\";\nimport {toHexByte} from \"z80-base\";\nimport {TRS80_SCREEN_BEGIN, TRS80_SCREEN_END} from \"trs80-base\";\n\nexport const AUTHENTIC_BACKGROUND = \"#334843\";\nexport const BLACK_BACKGROUND = \"#000000\";\n\nconst PADDING = 10;\nconst BORDER_RADIUS = 8;\n\nconst WHITE_PHOSPHOR = [230, 231, 252];\nconst AMBER_PHOSPHOR = [247, 190, 64];\nconst GREEN_PHOSPHOR = [122, 244, 96];\n\n// Gets an RGB array (0-255) for a phosphor.\nexport function phosphorToRgb(phosphor: Phosphor): number[] {\n    switch (phosphor) {\n        case Phosphor.WHITE:\n        default:\n            return WHITE_PHOSPHOR;\n\n        case Phosphor.GREEN:\n            return GREEN_PHOSPHOR;\n\n        case Phosphor.AMBER:\n            return AMBER_PHOSPHOR;\n    }\n}\n\n/**\n * TRS-80 screen based on an HTML canvas element.\n */\nexport class CanvasScreen extends Trs80Screen {\n    public readonly scale: number = 1;\n    public readonly padding: number;\n    private readonly node: HTMLElement;\n    private readonly canvas: HTMLCanvasElement;\n    private readonly context: CanvasRenderingContext2D;\n    private readonly memory: Uint8Array = new Uint8Array(TRS80_SCREEN_END - TRS80_SCREEN_BEGIN);\n    private readonly glyphs: HTMLCanvasElement[] = [];\n    private config: Config = Config.makeDefault();\n    private glyphWidth = 0;\n\n    /**\n     * Create a canvas screen.\n     *\n     * @param scale size multiplier. If greater than 1, use multiples of 0.5.\n     */\n    constructor(scale: number = 1) {\n        super();\n\n        this.node = document.createElement(\"div\");\n        // Fit canvas horizontally so that the nested objects (panels and progress bars) are\n        // displayed in the canvas.\n        this.node.style.maxWidth = \"max-content\";\n\n        this.scale = scale;\n        this.padding = Math.round(PADDING*this.scale);\n\n        this.canvas = document.createElement(\"canvas\");\n        // Make it block so we don't have any weird text margins on the bottom.\n        this.canvas.style.display = \"block\";\n        this.canvas.width = 64*8*this.scale + 2*this.padding;\n        this.canvas.height = 16*24*this.scale + 2*this.padding;\n        this.node.append(this.canvas);\n\n        this.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n        this.updateFromConfig();\n    }\n\n    public getWidth(): number {\n        return this.canvas.width;\n    }\n\n    public getHeight(): number {\n        return this.canvas.height;\n    }\n\n    setConfig(config: Config): void {\n        this.config = config;\n        this.updateFromConfig();\n    }\n\n    /**\n     * Update the font and screen from the config and other state.\n     */\n    private updateFromConfig(): void {\n        let font;\n        switch (this.config.cgChip) {\n            case CGChip.ORIGINAL:\n                font = MODEL1A_FONT;\n                break;\n            case CGChip.LOWER_CASE:\n            default:\n                switch (this.config.modelType) {\n                    case ModelType.MODEL1:\n                        font = MODEL1B_FONT;\n                        break;\n                    case ModelType.MODEL3:\n                    default:\n                        font = this.isAlternateCharacters() ? MODEL3_ALT_FONT : MODEL3_FONT;\n                        break;\n                }\n                break;\n        }\n\n        const glyphOptions: GlyphOptions = {\n            color: phosphorToRgb(this.config.phosphor),\n            scanLines: this.config.scanLines === ScanLines.ON,\n        };\n        for (let i = 0; i < 256; i++) {\n            this.glyphs[i] = font.makeImage(i, this.isExpandedCharacters(), glyphOptions);\n        }\n        this.glyphWidth = font.width;\n\n        this.drawBackground();\n        this.refresh();\n    }\n\n    writeChar(address: number, value: number): void {\n        const offset = address - TRS80_SCREEN_BEGIN;\n        this.memory[offset] = value;\n        this.drawChar(offset, value);\n    }\n\n    public getForegroundColor(): string {\n        const color = phosphorToRgb(this.config.phosphor);\n        return \"#\" + toHexByte(color[0]) + toHexByte(color[1]) + toHexByte(color[2]);\n    }\n\n    /**\n     * Get the background color as a CSS color based on the current config.\n     */\n    public getBackgroundColor(): string {\n        switch (this.config.background) {\n            case Background.BLACK:\n                return BLACK_BACKGROUND;\n\n            case Background.AUTHENTIC:\n            default:\n                return AUTHENTIC_BACKGROUND;\n        }\n    }\n\n    public getBorderRadius(): number {\n        return BORDER_RADIUS*this.scale;\n    }\n\n    /**\n     * Draw a single character to the canvas.\n     */\n    private drawChar(offset: number, value: number): void {\n        const screenX = (offset % 64)*8*this.scale + this.padding;\n        const screenY = Math.floor(offset / 64)*24*this.scale + this.padding;\n\n        this.context.fillStyle = this.getBackgroundColor();\n\n        if (this.isExpandedCharacters()) {\n            if (offset % 2 === 0) {\n                this.context.fillRect(screenX, screenY, 16*this.scale, 24*this.scale);\n                this.context.drawImage(this.glyphs[value], 0, 0, this.glyphWidth * 2, 24,\n                    screenX, screenY, 16*this.scale, 24*this.scale);\n            }\n        } else {\n            this.context.fillRect(screenX, screenY, 8*this.scale, 24*this.scale);\n            this.context.drawImage(this.glyphs[value], 0, 0, this.glyphWidth, 24,\n                screenX, screenY, 8*this.scale, 24*this.scale);\n        }\n    }\n\n    getNode(): HTMLElement {\n        return this.node;\n    }\n\n    setExpandedCharacters(expanded: boolean): void {\n        if (expanded !== this.isExpandedCharacters()) {\n            super.setExpandedCharacters(expanded);\n            this.updateFromConfig();\n        }\n    }\n\n    setAlternateCharacters(alternate: boolean): void {\n        if (alternate !== this.isAlternateCharacters()) {\n            super.setAlternateCharacters(alternate);\n            this.updateFromConfig();\n        }\n    }\n\n    /**\n     * Draw the background of the canvas.\n     */\n    private drawBackground(): void {\n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        const radius = this.getBorderRadius();\n\n        this.context.fillStyle = this.getBackgroundColor();\n        this.context.beginPath();\n        this.context.moveTo(radius, 0);\n        this.context.arcTo(width, 0, width, radius, radius);\n        this.context.arcTo(width, height, width - radius, height, radius);\n        this.context.arcTo(0, height, 0, height - radius, radius);\n        this.context.arcTo(0, 0, radius, 0, radius);\n        this.context.fill();\n    }\n\n    /**\n     * Refresh the display based on what we've kept track of.\n     */\n    private refresh(): void {\n        for (let offset = 0; offset < this.memory.length; offset++) {\n            this.drawChar(offset, this.memory[offset]);\n        }\n    }\n\n    /**\n     * Returns the canvas as an <img> element that can be resized. This is relatively\n     * expensive.\n     *\n     * This method is deprecated, use asImageAsync instead.\n     */\n    public asImage(): HTMLImageElement {\n        const image = document.createElement(\"img\");\n        image.src = this.canvas.toDataURL();\n        return image;\n    }\n\n    /**\n     * Returns the canvas as an <img> element that can be resized. Despite the\n     * \"async\" name, there's still some synchronous work, about 13ms.\n     */\n    public asImageAsync(): Promise<HTMLImageElement> {\n        return new Promise<HTMLImageElement>((resolve, reject) => {\n            // According to this answer:\n            //     https://stackoverflow.com/a/59025746/211234\n            // the toBlob() method still has to copy the image synchronously, so this whole method still\n            // takes about 13ms. It's better than toDataUrl() because it doesn't have to make an actual\n            // base64 string. The Object URL is just a reference to the blob.\n            this.canvas.toBlob(blob => {\n                if (blob === null) {\n                    reject(\"Cannot make image from screen\");\n                } else {\n                    const image = document.createElement(\"img\");\n                    const url = URL.createObjectURL(blob);\n                    image.addEventListener(\"load\", () => {\n                        URL.revokeObjectURL(url);\n                        // Resolve when the image is fully loaded so that there's no UI glitching.\n                        resolve(image);\n                    });\n                    image.src = url;\n                }\n            });\n        });\n    }\n}\n","\nexport const CSS_PREFIX = \"trs80-emulator\";\n","import {CSS_PREFIX} from \"./Utils\";\nimport {Background, BasicLevel, CGChip, Config, ModelType, Phosphor, RamSize, ScanLines} from \"./Config\";\nimport {Trs80} from \"./Trs80\";\nimport {AUTHENTIC_BACKGROUND, BLACK_BACKGROUND, phosphorToRgb} from \"./CanvasScreen\";\n\nconst gCssPrefix = CSS_PREFIX + \"-settings-panel\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gPanelCssClass = gCssPrefix + \"-panel\";\nconst gShownCssClass = gCssPrefix + \"-shown\";\nconst gAcceptButtonCssClass = gCssPrefix + \"-accept\";\nconst gRebootButtonCssClass = gCssPrefix + \"-reboot\";\nconst gOptionsClass = gCssPrefix + \"-options\";\nconst gButtonsClass = gCssPrefix + \"-buttons\";\nconst gColorButtonClass = gCssPrefix + \"-color-button\";\nconst gDarkColorButtonClass = gCssPrefix + \"-dark-color-button\";\nconst gAcceptButtonColor = \"#449944\";\n\nconst GLOBAL_CSS = `\n.${gPanelCssClass} {\n    display: flex;\n    align-items: stretch;\n    justify-content: center;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity .20s ease-in-out, visibility .20s ease-in-out;\n}\n\n.${gPanelCssClass}.${gShownCssClass} {\n    opacity: 1;\n    visibility: visible;\n}\n\n.${gPanelCssClass} > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    background-color: rgba(40, 40, 40, 0.8);\n    border-radius: 15px;\n    color: #ccc;\n    font-family: sans-serif;\n    font-size: 10pt;\n    line-height: normal;\n    margin: 20px 0;\n    padding: 10px 30px;\n    min-width: 200px;\n}\n\n.${gPanelCssClass} h1 {\n    text-transform: uppercase;\n    text-align: center;\n    letter-spacing: .5px;\n    font-size: 10pt;\n    margin: 0 0 10px 0;\n}\n\n.${gPanelCssClass} .${gOptionsClass} {\n    display: flex;\n    justify-content: center;\n}\n\n.${gPanelCssClass} input[type=radio] {\n    display: none;\n}\n\n.${gPanelCssClass} input[type=radio] + label {\n    display: block;\n    flex-grow: 1;\n    flex-basis: 0;\n    text-align: center;\n    padding: 4px 16px;\n    margin-left: 10px;\n    border-radius: 3px;\n    background-color: #44443A;\n    white-space: nowrap;\n}\n\n.${gPanelCssClass} input[type=radio] + label.${gColorButtonClass} {\n    flex-grow: 0;\n    flex-basis: auto;\n    width: 24px;\n    height: 24px;\n    padding: 0;\n    border-radius: 999px;\n    border: 2px solid transparent;\n    color: transparent;\n    transition: color .20s ease-in-out;\n}\n\n.${gPanelCssClass} input[type=radio] + label.${gColorButtonClass}.${gDarkColorButtonClass} {\n    border: solid 2px #ccc;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass}::after {\n    content: \"✓\";\n    font-size: 20px;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass} {\n    color: black;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass}.${gDarkColorButtonClass} {\n    color: #ccc;\n}\n\n.${gPanelCssClass} input[type=radio] + label:first-of-type {\n    margin-left: 0;\n}\n\n.${gPanelCssClass} input[type=radio]:enabled + label:hover {\n    background-color: #66665A;\n}\n\n.${gPanelCssClass} input[type=radio]:disabled + label {\n    color: #666;\n}\n\n.${gPanelCssClass} input[type=radio]:enabled:checked + label {\n    color: #444;\n    background-color: #ccc;\n}\n\n.${gPanelCssClass} .${gButtonsClass} {\n    display: flex;\n}\n\n.${gPanelCssClass} a {\n    display: block;\n    flex-grow: 1;\n    flex-basis: 0;\n    text-align: center;\n    padding: 4px 16px;\n    border-radius: 3px;\n    margin-left: 10px;\n    color: #ccc;\n    background-color: #44443A;\n    cursor: default;\n}\n\n.${gPanelCssClass} a:first-of-type {\n    margin-left: 0;\n}\n\n.${gPanelCssClass} a.${gAcceptButtonCssClass} {\n    font-weight: bold;\n    color: #eee;\n    background-color: ${gAcceptButtonColor};\n}\n\n.${gPanelCssClass} a.${gAcceptButtonCssClass}:hover {\n    background-color: #338833;\n}\n\n.${gPanelCssClass} a.${gRebootButtonCssClass} {\n    background-color: #D25F43;\n}\n\n.${gPanelCssClass} a:hover {\n    background-color: #66665A;\n}\n\n.${gPanelCssClass} a.${gRebootButtonCssClass}:hover {\n    background-color: #BD563C;\n}\n\n.${gScreenNodeCssClass} {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n`;\n\n/**\n * An option in the settings screen, like a specific model or RAM amount.\n */\ninterface Option {\n    label: string;\n    value: any;\n}\n\n/**\n * A block of options that are mutually exclusive, like all the models.\n */\ninterface OptionBlock {\n    title: string;\n    /**\n     * Whether the option should be checked, based on this config.\n     */\n    isChecked: (value: any, config: Config) => boolean;\n    /**\n     * Return a modified config, given that this option was selected by the user.\n     */\n    updateConfig: (value: any, config: Config) => Config;\n    options: Option[];\n}\n\n/**\n * An option that's currently displayed to the user.\n */\nclass DisplayedOption {\n    public readonly input: HTMLInputElement;\n    public readonly block: OptionBlock;\n    public readonly option: Option;\n\n    constructor(input: HTMLInputElement, block: OptionBlock, option: Option) {\n        this.input = input;\n        this.block = block;\n        this.option = option;\n    }\n}\n\n// Convert RGB array (0-255) to a CSS string.\nfunction rgbToCss(color: number[]): string {\n    return \"#\" + color.map(c => c.toString(16).padStart(2, \"0\").toUpperCase()).join(\"\");\n}\n\n// Multiplies an RGB (0-255) color by a factor.\nfunction adjustColor(color: number[], factor: number): number[] {\n    return color.map(c => Math.max(0, Math.min(255, Math.round(c*factor))));\n}\n\n/**\n * Our full configuration options.\n */\nconst HARDWARE_OPTION_BLOCKS: OptionBlock[] = [\n    {\n        title: \"Model\",\n        isChecked: (modelType: ModelType, config: Config) => modelType === config.modelType,\n        updateConfig: (modelType: ModelType, config: Config) => config.withModelType(modelType),\n        options: [\n            {\n                label: \"Model I\",\n                value: ModelType.MODEL1,\n            },\n            {\n                label: \"Model III\",\n                value: ModelType.MODEL3,\n            },\n        ]\n    },\n    {\n        title: \"Basic\",\n        isChecked: (basicLevel: BasicLevel, config: Config) => basicLevel === config.basicLevel,\n        updateConfig: (basicLevel: BasicLevel, config: Config) => config.withBasicLevel(basicLevel),\n        options: [\n            {\n                label: \"Level 1\",\n                value: BasicLevel.LEVEL1,\n            },\n            {\n                label: \"Level 2\",\n                value: BasicLevel.LEVEL2,\n            },\n        ]\n    },\n    {\n        title: \"Characters\",\n        isChecked: (cgChip: CGChip, config: Config) => cgChip === config.cgChip,\n        updateConfig: (cgChip: CGChip, config: Config) => config.withCGChip(cgChip),\n        options: [\n            {\n                label: \"Original\",\n                value: CGChip.ORIGINAL,\n            },\n            {\n                label: \"Lower case\",\n                value: CGChip.LOWER_CASE,\n            },\n        ]\n    },\n    {\n        title: \"RAM\",\n        isChecked: (ramSize: RamSize, config: Config) => ramSize === config.ramSize,\n        updateConfig: (ramSize: RamSize, config: Config) => config.withRamSize(ramSize),\n        options: [\n            {\n                label: \"4 kB\",\n                value: RamSize.RAM_4_KB,\n            },\n            {\n                label: \"16 kB\",\n                value: RamSize.RAM_16_KB,\n            },\n            {\n                label: \"32 kB\",\n                value: RamSize.RAM_32_KB,\n            },\n            {\n                label: \"48 kB\",\n                value: RamSize.RAM_48_KB,\n            },\n        ]\n    },\n];\nconst VIEW_OPTION_BLOCKS: OptionBlock[] = [\n    {\n        title: \"Phosphor\",\n        isChecked: (phosphor: Phosphor, config: Config) => phosphor === config.phosphor,\n        updateConfig: (phosphor: Phosphor, config: Config) => config.withPhosphor(phosphor),\n        options: [\n            {\n                label: rgbToCss(adjustColor(phosphorToRgb(Phosphor.WHITE), 0.8)),\n                value: Phosphor.WHITE,\n            },\n            {\n                // Cheat and use the green from the OK button so that the two greens don't clash.\n                label: gAcceptButtonColor,\n                value: Phosphor.GREEN,\n            },\n            {\n                label: rgbToCss(adjustColor(phosphorToRgb(Phosphor.AMBER), 0.8)),\n                value: Phosphor.AMBER,\n            },\n        ]\n    },\n    {\n        title: \"Background\",\n        isChecked: (background: Background, config: Config) => background === config.background,\n        updateConfig: (background: Background, config: Config) => config.withBackground(background),\n        options: [\n            {\n                label: BLACK_BACKGROUND,\n                value: Background.BLACK,\n            },\n            {\n                label: AUTHENTIC_BACKGROUND,\n                value: Background.AUTHENTIC,\n            },\n        ]\n    },\n    {\n        title: \"Scan Lines\",\n        isChecked: (scanLines: ScanLines, config: Config) => scanLines === config.scanLines,\n        updateConfig: (scanLines: ScanLines, config: Config) => config.withScanLines(scanLines),\n        options: [\n            {\n                label: \"Off\",\n                value: ScanLines.OFF,\n            },\n            {\n                label: \"On\",\n                value: ScanLines.ON,\n            },\n        ]\n    },\n];\n\n// Type of panel to show.\nexport enum PanelType {\n    // Model, RAM, etc.\n    HARDWARE,\n    // Phosphor color, background, etc.\n    VIEW,\n}\n\n// Get the right options blocks for the panel type.\nfunction optionBlocksForPanelType(panelType: PanelType): OptionBlock[] {\n    switch (panelType) {\n        case PanelType.HARDWARE:\n        default:\n            return HARDWARE_OPTION_BLOCKS;\n\n        case PanelType.VIEW:\n            return VIEW_OPTION_BLOCKS;\n    }\n}\n\n/**\n * Whether the given CSS color is dark.\n *\n * @param color an CSS color in the form \"#rrggbb\".\n */\nfunction isDarkColor(color: string): boolean {\n    if (!color.startsWith(\"#\") || color.length !== 7) {\n        throw new Error(\"isDarkColor: not a color (\" + color + \")\");\n    }\n\n    const red = parseInt(color.substr(1, 2), 16);\n    const grn = parseInt(color.substr(3, 2), 16);\n    const blu = parseInt(color.substr(5, 2), 16);\n    const gray = red*0.3 + grn*0.6 + blu*0.1;\n\n    return gray < 110;\n}\n\nlet gRadioButtonCounter = 1;\n\n/**\n * A full-screen control panel for configuring the emulator.\n */\nexport class SettingsPanel {\n    public onOpen: (() => void) | undefined;\n    public onClose: (() => void) | undefined;\n    public readonly panelType: PanelType;\n    private readonly trs80: Trs80;\n    private readonly panelNode: HTMLElement;\n    private readonly displayedOptions: DisplayedOption[] = [];\n    private readonly acceptButton: HTMLElement;\n\n    constructor(screenNode: HTMLElement, trs80: Trs80, panelType: PanelType) {\n        this.panelType = panelType;\n        this.trs80 = trs80;\n\n        // Make global CSS if necessary.\n        SettingsPanel.configureStyle();\n\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.panelNode = document.createElement(\"div\");\n        this.panelNode.classList.add(gPanelCssClass);\n        screenNode.appendChild(this.panelNode);\n\n        const div = document.createElement(\"div\");\n        this.panelNode.appendChild(div);\n\n        for (const block of optionBlocksForPanelType(panelType)) {\n            const name = gCssPrefix + \"-\" + gRadioButtonCounter++;\n\n            const blockDiv = document.createElement(\"div\");\n            div.appendChild(blockDiv);\n\n            const h1 = document.createElement(\"h1\");\n            h1.innerText = block.title;\n            blockDiv.appendChild(h1);\n\n            const optionsDiv = document.createElement(\"div\");\n            optionsDiv.classList.add(gOptionsClass);\n            blockDiv.appendChild(optionsDiv);\n\n            for (const option of block.options) {\n                const id = gCssPrefix + \"-\" + gRadioButtonCounter++;\n\n                const input = document.createElement(\"input\");\n                input.id = id;\n                input.type = \"radio\";\n                input.name = name;\n                input.addEventListener(\"change\", () => this.updateEnabledOptions());\n                optionsDiv.appendChild(input);\n\n                const label = document.createElement(\"label\");\n                label.htmlFor = id;\n                if (option.label.startsWith(\"#\")) {\n                    // It's a color, show a swatch.\n                    label.classList.add(gColorButtonClass);\n                    label.style.backgroundColor = option.label;\n                    if (isDarkColor(option.label)) {\n                        label.classList.add(gDarkColorButtonClass);\n                    }\n                } else {\n                    label.innerText = option.label;\n                }\n                optionsDiv.appendChild(label);\n\n                this.displayedOptions.push(new DisplayedOption(input, block, option));\n            }\n        }\n\n        const buttonsDiv = document.createElement(\"div\");\n        buttonsDiv.classList.add(gButtonsClass);\n        div.appendChild(buttonsDiv);\n\n        this.acceptButton = document.createElement(\"a\");\n        this.acceptButton.classList.add(gAcceptButtonCssClass);\n        this.acceptButton.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            this.accept();\n        });\n        buttonsDiv.appendChild(this.acceptButton);\n        this.configureAcceptButton(this.trs80.getConfig());\n\n        const cancelButton = document.createElement(\"a\");\n        cancelButton.innerText = \"Cancel\";\n        cancelButton.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            this.close();\n        });\n        buttonsDiv.appendChild(cancelButton);\n    }\n\n    /**\n     * Open the settings panel.\n     */\n    public open(): void {\n        if (this.onOpen !== undefined) {\n            this.onOpen();\n        }\n\n        // Configure options.\n        for (const displayedOption of this.displayedOptions) {\n            displayedOption.input.checked = displayedOption.block.isChecked(displayedOption.option.value, this.trs80.getConfig());\n        }\n        this.updateEnabledOptions();\n\n        this.panelNode.classList.add(gShownCssClass);\n    }\n\n    /**\n     * Accept the changes, configure the machine, and close the dialog box.\n     */\n    private accept(): void {\n        this.trs80.setConfig(this.getConfig());\n        this.close();\n    }\n\n    /**\n     * Close the settings panel.\n     */\n    private close(): void {\n        this.panelNode.classList.remove(gShownCssClass);\n\n        if (this.onClose !== undefined) {\n            this.onClose();\n        }\n    }\n\n    /**\n     * Update which options are enabled based on the current selection.\n     */\n    private updateEnabledOptions(): void {\n        const config = this.getConfig();\n        for (const displayedOption of this.displayedOptions) {\n            const enabled = displayedOption.block.updateConfig(displayedOption.option.value, config).isValid();\n            displayedOption.input.disabled = !enabled;\n        }\n\n        this.configureAcceptButton(config);\n    }\n\n    /**\n     * Set the accept button to be OK or Reboot.\n     */\n    private configureAcceptButton(config: Config) {\n        if (config.needsReboot(this.trs80.getConfig())) {\n            this.acceptButton.classList.add(gRebootButtonCssClass);\n            this.acceptButton.innerText = \"Reboot\";\n        } else {\n            this.acceptButton.classList.remove(gRebootButtonCssClass);\n            this.acceptButton.innerText = \"OK\";\n        }\n    }\n\n    /**\n     * Make a new config from the user's currently selected options.\n     */\n    private getConfig(): Config {\n        let config = this.trs80.getConfig();\n\n        for (const displayedOption of this.displayedOptions) {\n            if (displayedOption.input.checked) {\n                config = displayedOption.block.updateConfig(displayedOption.option.value, config);\n            }\n        }\n\n        return config;\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","\nimport {CSS_PREFIX} from \"./Utils\";\nimport {PanelType, SettingsPanel} from \"./SettingsPanel\";\nimport {Mutable} from \"./Mutable\";\n\nconst gCssPrefix = CSS_PREFIX + \"-control-panel\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gPanelCssClass = gCssPrefix + \"-panel\";\nconst gButtonCssClass = gCssPrefix + \"-button\";\nconst gButtonHiddenCssClass = gCssPrefix + \"-button-hidden\";\nconst gShowingOtherPanelCssClass = gCssPrefix + \"-showing-other-panel\";\n\n// https://thenounproject.com/search/?q=reset&i=3012384\nconst RESET_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    <title>Reboot the computer</title>\n    <g fill=\"white\">\n        <path d=\"M5273.1,2400.1v-2c0-2.8-5-4-9.7-4s-9.7,1.3-9.7,4v2c0,1.8,0.7,3.6,2,4.9l5,4.9c0.3,0.3,0.4,0.6,0.4,1v6.4     c0,0.4,0.2,0.7,0.6,0.8l2.9,0.9c0.5,0.1,1-0.2,1-0.8v-7.2c0-0.4,0.2-0.7,0.4-1l5.1-5C5272.4,2403.7,5273.1,2401.9,5273.1,2400.1z      M5263.4,2400c-4.8,0-7.4-1.3-7.5-1.8v0c0.1-0.5,2.7-1.8,7.5-1.8c4.8,0,7.3,1.3,7.5,1.8C5270.7,2398.7,5268.2,2400,5263.4,2400z\"/>\n        <path d=\"M5268.4,2410.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1c0-0.6-0.4-1-1-1H5268.4z\"/>\n        <path d=\"M5272.7,2413.7h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2414.1,5273.3,2413.7,5272.7,2413.7z\"/>\n        <path d=\"M5272.7,2417h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2417.5,5273.3,2417,5272.7,2417z\"/>\n        <path d=\"M84.3,18C67.1,0.8,39.5,0.4,21.8,16.5l-4.1-4.1c-1.6-1.6-4-2.2-6.2-1.6c-2.2,0.7-3.9,2.5-4.3,4.7L2.6,36.9    c-0.4,2.1,0.2,4.2,1.7,5.7c1.5,1.5,3.6,2.1,5.7,1.7l21.4-4.5c1.2-0.3,2.3-0.9,3.1-1.7c0.7-0.7,1.3-1.6,1.6-2.6    c0.6-2.2,0-4.6-1.6-6.2l-3.9-3.9C43.5,14,63.1,14.5,75.4,26.8c12.8,12.8,12.8,33.6,0,46.4C62.6,86,41.8,86,29,73.2    c-4.1-4.1-7-9.2-8.5-14.8c-0.9-3.3-4.3-5.3-7.6-4.4c-3.3,0.9-5.3,4.3-4.4,7.6c2,7.7,6.1,14.8,11.8,20.4    c17.7,17.7,46.4,17.7,64.1,0C101.9,64.4,101.9,35.6,84.3,18z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=camera&i=1841396\nconst CAMERA_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    <title>Take a screenshot</title>\n    <g fill=\"white\">\n        <circle cx=\"50\" cy=\"55.4\" r=\"13.8\"/>\n        <path d=\"M80.6,25.4H67.1l-1.8-7.2c-0.5-2.1-2.5-3.6-4.7-3.6H39.3c-2.2,0-4.1,1.5-4.7,3.6l-1.8,7.2H19.4C11.5,25.4,5,31.9,5,39.8V71   c0,7.9,6.5,14.4,14.4,14.4h61.2C88.5,85.4,95,78.9,95,71V39.8C95,31.9,88.5,25.4,80.6,25.4z M50,76.4c-11.6,0-21-9.4-21-21   s9.4-21,21-21s21,9.4,21,21S61.6,76.4,50,76.4z M81.4,40.3c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6s3.6,1.6,3.6,3.6   C85,38.7,83.4,40.3,81.4,40.3z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=previous%20track&i=658409\nconst PREVIOUS_TRACK_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -2 16 21\">\n    <title>Rewind the cassette</title>\n    <g fill=\"white\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-320.000000, -618.000000)\">\n            <path d=\"M330,628.032958 L330,634.00004 C330,634.545291 330.45191,635 331.009369,635 L332.990631,635 C333.556647,635 334,634.552303 334,634.00004 L334,618.99996 C334,618.454709 333.54809,618 332.990631,618 L331.009369,618 C330.443353,618 330,618.447697 330,618.99996 L330,624.967057 C329.894605,624.850473 329.775773,624.739153 329.643504,624.634441 L322.356496,618.865559 C321.054403,617.834736 320,618.3432 320,620.000122 L320,632.999878 C320,634.663957 321.055039,635.164761 322.356496,634.134441 L329.643504,628.365559 C329.775779,628.260841 329.894611,628.149527 330,628.032958 Z\" transform=\"translate(327.000000, 626.500000) scale(-1, 1) translate(-327.000000, -626.500000) \"/>\n        </g>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=settings&i=3593545\nconst HARDWARE_SETTINGS_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"7 7 121 121\">\n    <title>Show the settings panel</title>\n    <g fill=\"white\" transform=\"translate(0,-161.53332)\">\n        <path d=\"m 61.57997,173.33818 c -1.653804,0 -3.159177,0.77847 -4.132553,1.85984 -0.973402,1.08136 -1.513575,2.40442 -1.771491,3.76721 a 2.1609049,2.1609049 0 0 0 0,0.002 l -1.654678,8.74831 c -2.047981,0.67947 -4.038494,1.50768 -5.964476,2.48047 l -7.367508,-5.02347 c -1.145302,-0.78076 -2.462953,-1.33572 -3.916045,-1.41232 -1.4546,-0.0764 -3.068029,0.44118 -4.235926,1.60921 l -8.699209,8.69921 c -1.169405,1.16909 -1.685211,2.78351 -1.609725,4.23643 0.07501,1.45291 0.629259,2.7738 1.410256,3.92018 l 5.001762,7.336 c -0.9702,1.93582 -1.794192,3.93628 -2.468589,5.99392 l -8.740034,1.65417 c -1.362789,0.25787 -2.688378,0.79815 -3.769783,1.77147 -1.081405,0.97346 -1.859333,2.4815 -1.859333,4.13526 v 12.30262 c 0,1.65378 0.777928,3.1592 1.859333,4.13255 1.081405,0.97338 2.406994,1.51567 3.769783,1.77353 l 8.754004,1.6583 c 0.679477,2.04603 1.506088,4.03461 2.478379,5.95882 l -5.025522,7.3675 c -0.781606,1.14644 -1.334744,2.4664 -1.410256,3.91967 -0.07498,1.45325 0.439817,3.06745 1.609725,4.23643 l 8.699209,8.69921 c 1.1693,1.16941 2.782914,1.68325 4.235926,1.60713 1.452986,-0.0761 2.771908,-0.63037 3.918109,-1.41179 l 7.33597,-5.00022 c 1.9363,0.97001 3.937926,1.79294 5.996014,2.46702 l 1.654175,8.74004 c 0.257889,1.36284 0.798486,2.68843 1.771994,3.76981 0.973402,1.08138 2.478749,1.8593 4.132553,1.8593 H 73.88672 c 1.653805,0 3.159152,-0.77792 4.132554,-1.8593 0.973005,-1.0809 1.513999,-2.40554 1.771994,-3.76772 v -0.003 l 1.656212,-8.74778 c 2.048113,-0.67943 4.038415,-1.50768 5.964502,-2.48047 l 7.365445,5.02142 c 1.146095,0.78144 2.465096,1.33567 3.918108,1.41179 1.452905,0.0761 3.068585,-0.43786 4.237995,-1.60713 l 8.6992,-8.69921 c 1.16931,-1.16946 1.68395,-2.78551 1.60767,-4.23852 -0.076,-1.45301 -0.63074,-2.77196 -1.41232,-3.91811 l -5.00177,-7.33547 c 0.9705,-1.93617 1.79398,-3.93639 2.46857,-5.99445 l 8.74003,-1.65418 c 1.36271,-0.25794 2.68841,-0.80018 3.76981,-1.77352 1.0813,-0.97335 1.85931,-2.47881 1.85931,-4.13256 v -12.30312 c 0,-1.65378 -0.77801,-3.16127 -1.85931,-4.13465 -1.0809,-0.97292 -2.40562,-1.51344 -3.76772,-1.77146 l -8.74988,-1.65624 c -0.67918,-2.04684 -1.50825,-4.03585 -2.48046,-5.96088 l 5.02348,-7.36698 c 0.78118,-1.14583 1.33572,-2.46501 1.41232,-3.91811 0.077,-1.45309 -0.43952,-3.06905 -1.60973,-4.2385 l -8.69714,-8.69921 c -1.16962,-1.16891 -2.78461,-1.68557 -4.238494,-1.6092 -1.4528,0.0768 -2.770425,0.63186 -3.915542,1.41232 l -7.33597,5.00176 c -1.9363,-0.96998 -3.937926,-1.79297 -5.996014,-2.46703 l -1.656768,-8.74211 c -0.257783,-1.36269 -0.798062,-2.68582 -1.771464,-3.76721 -0.973297,-1.0814 -2.478749,-1.85984 -4.132554,-1.85984 z m 6.152595,34.74051 c 11.726704,0 21.185664,9.46065 21.185267,21.18735 0,11.7262 -9.459066,21.18696 -21.185267,21.18733 -11.726704,0 -21.187463,-9.4606 -21.18786,-21.18733 0,-11.72726 9.460653,-21.18772 21.18786,-21.18735 z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=view&i=485540\nconst VIEW_SETTINGS_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"20 20 60 60\">\n    <title>Show the settings panel</title>\n    <g fill=\"white\">\n        <path d=\"M80,48.6c-7.8-10.4-18.4-16.7-30-16.7c-11.6,0-22.2,6.4-30,16.7c-0.6,0.9-0.6,2,0,2.9c7.8,10.4,18.4,16.7,30,16.7  s22.2-6.4,30-16.7C80.7,50.6,80.7,49.4,80,48.6z M62.8,50.8c-0.4,6.4-5.6,11.6-12,12c-7.7,0.5-14.1-5.9-13.6-13.6  c0.4-6.4,5.6-11.6,12-12C56.9,36.7,63.3,43.1,62.8,50.8z M56.9,50.4c-0.2,3.4-3,6.2-6.4,6.4c-4.2,0.3-7.6-3.2-7.3-7.3  c0.2-3.4,3-6.2,6.4-6.4C53.7,42.8,57.2,46.3,56.9,50.4z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=edit&i=1072354\nconst EDIT_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-25 -25 562 562\">\n    <title>Edit the program (Ctrl-Enter)</title>\n    <g fill=\"white\">\n        <path d=\"M318.37,85.45L422.53,190.11,158.89,455,54.79,350.38ZM501.56,60.2L455.11,13.53a45.93,45.93,0,0,0-65.11,0L345.51,58.24,449.66,162.9l51.9-52.15A35.8,35.8,0,0,0,501.56,60.2ZM0.29,497.49a11.88,11.88,0,0,0,14.34,14.17l116.06-28.28L26.59,378.72Z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=checkmark&i=1409439\nconst CHECK_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    <title>Save (Ctrl-Enter)</title>\n    <g fill=\"white\">\n        <line x1=\"19.713\" y1=\"55.055\" x2=\"33.258\" y2=\"68.6\"/>\n        <path d=\"M92.059,19.7c-2.733-2.733-7.165-2.734-9.9,0L33.258,68.6L17.841,53.183c-2.734-2.732-7.166-2.733-9.899,0.001   c-2.734,2.733-2.734,7.165,0,9.899l20.367,20.366c1.367,1.366,3.158,2.05,4.95,2.05s3.583-0.684,4.95-2.05l53.85-53.85   C94.792,26.866,94.792,22.434,92.059,19.7z\"/>\n    </g>\n</svg>\n\n`;\n\n// https://thenounproject.com/search/?q=close&i=1609004\nconst CROSS_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-5 -5 110 110\">\n    <title>Cancel</title>\n    <path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.2,50.5l32.1,32.1c3,3,3,7.7,0,10.7c-3,3-7.7,3-10.7,0L50.5,61.2L18.4,93.3c-3,3-7.7,3-10.7,0  c-3-3-3-7.7,0-10.7l32.1-32.1L7.7,18.4c-3-3-3-7.7,0-10.7s7.7-3,10.7,0l32.1,32.1L82.6,7.7c3-3,7.7-3,10.7,0c3,3,3,7.7,0,10.7  L61.2,50.5z\"/>\n</svg>\n`;\n\n// https://thenounproject.com/term/mute/1915537\nconst MUTED_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-100 0 1024 1024\">\n    <title>Unmute</title>\n    <path fill=\"white\" d=\"M 706,852.3 V 781 c -6.7,-6.6 -13.3,-13.3 -20,-19.9 -6.7,-6.6 -13.3,-13.3 -20,-19.9 -2.3,-2.2 -4.5,-4.5 -6.8,-6.7 L 469,545.2 c -61.6,-61.3 -123.3,-122.6 -184.9,-184 -1.6,-1.6 -3.3,-3.2 -4.9,-4.9 -5.2,-5.1 -10.3,-10.2 -15.5,-15.4 -6.7,-6.7 -13.4,-13 -20.1,-20 H 90 c -10.8,0 -20,9.1 -20,20 v 299.9 c 0,13.8 -0.4,27.7 0,41.5 v 0.6 c 0,10.8 9.2,20 20,20 h 214.7 c 22,19 44,37.6 66,56.3 46.5,39.8 93.1,79.5 139.6,119.3 29.3,25 58.7,50.1 88,75.2 22.8,19.5 58,30.7 83.1,9.3 17.3,-14.7 23.1,-40.3 24.5,-62 1,-16 0.1,-32.5 0.1,-48.7 z\"/>\n    <path fill=\"white\" d=\"m 694.3,70.7 c -8,-11.7 -19.6,-19.1 -33.6,-21 -16.8,-2.3 -34.9,2.8 -49.5,11.3 -5.1,2.9 -9.6,7.5 -14,11.3 -10.3,8.8 -20.7,17.6 -31,26.4 -33.9,28.9 -67.8,57.7 -101.7,86.5 -23.5,19.9 -47,39.8 -70.4,59.8 4.7,4.7 9.4,9.4 14.2,14.1 4.7,4.7 9.4,9.4 14.2,14.1 6.5,6.5 13,13 19.6,19.5 63.4,63.1 126.8,126.1 190.1,189.2 11.3,11.2 22.6,22.5 33.8,33.7 6.7,6.6 13.3,13.3 20,19.9 6.7,6.6 13.3,13.3 20,19.9 V 119 c -0.1,-16.3 -2.2,-34.5 -11.7,-48.3 z\"/>\n    <path stroke=\"white\" stroke-width=\"80.1\" stroke-linecap=\"round\" d=\"M 139.75018,103.02184 934.53553,895.07339\"/>\n</svg>\n`;\n\n// https://thenounproject.com/term/mute/1915537 (modified by me to get rid of line).\nconst UNMUTED_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-100 0 1024 1024\">\n    <title>Mute</title>\n    <path fill=\"white\" d=\"M 88.65873,702.7619 304.7,702.9 605.71429,960 c 40.51022,32.06833 100.31746,5.28523 100.31746,-46.98413 l -0.41421,-806.94435 c 0,-57.136329 -64.88295,-70.781271 -94.96826,-45.714278 L 304.7,320.8616 93.968254,321.01984 c -14.687138,0 -23.396825,7.42695 -23.396825,21.27778 l -0.08532,344.06151 c 0,7.13959 8.057136,16.40277 18.172619,16.40277 z\"/>\n</svg>\n`;\n\nconst GLOBAL_CSS = `\n.${gPanelCssClass} {\n    background-color: rgba(40, 40, 40, 0.8);\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    border-radius: 5px;\n    opacity: 0;\n    transition: opacity .20s ease-in-out;\n}\n\n.${gScreenNodeCssClass} {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n\n.${gScreenNodeCssClass}:hover .${gPanelCssClass} {\n    opacity: 1;\n}\n\n/* Hide the control panel if any other panel is showing (like settings). */\n.${gScreenNodeCssClass}.${gShowingOtherPanelCssClass}:hover .${gPanelCssClass} {\n    opacity: 0;\n}\n\n.${gButtonCssClass} {\n    display: block;\n    /* background-color: red; */\n    margin: 15px;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity .05s ease-in-out, transform 0.05s ease-in-out;\n\n    /* For icons that stick out a bit: */\n    overflow: visible;\n}\n\n.${gButtonCssClass}:hover {\n    opacity: 1;\n}\n\n.${gButtonCssClass}:active {\n    transform: scale(1.15);\n}\n\n.${gButtonCssClass}.${gButtonHiddenCssClass} {\n    display: none;\n}\n\n`;\n\n/**\n * Control panel that hovers in the screen for doing things like resetting the computer.\n */\nexport class ControlPanel {\n    private readonly screenNode: HTMLElement;\n    private readonly panelNode: HTMLElement;\n\n    /**\n     * @param screenNode the node from the Trs80Screen object's getNode() method.\n     */\n    constructor(screenNode: HTMLElement) {\n        // Make global CSS if necessary.\n        ControlPanel.configureStyle();\n\n        this.screenNode = screenNode;\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.panelNode = document.createElement(\"div\");\n        this.panelNode.classList.add(gPanelCssClass);\n        screenNode.appendChild(this.panelNode);\n    }\n\n    /**\n     * Generic function to add a button to the control panel.\n     */\n    private addButton(iconSvg: string, callback?: () => void): HTMLElement {\n        const icon = new DOMParser().parseFromString(iconSvg, \"image/svg+xml\").documentElement;\n        icon.classList.add(gButtonCssClass);\n        icon.setAttribute(\"width\", \"30\");\n        icon.setAttribute(\"height\", \"30\");\n        if (callback !== undefined) {\n            icon.addEventListener(\"click\", callback);\n        }\n        this.panelNode.append(icon);\n        return icon;\n    }\n\n    /**\n     * Add a reset button.\n     */\n    public addResetButton(callback: () => void): HTMLElement {\n        return this.addButton(RESET_ICON, callback);\n    }\n\n    /**\n     * Add a screenshot button.\n     */\n    public addScreenshotButton(callback: () => void): HTMLElement {\n        return this.addButton(CAMERA_ICON, callback);\n    }\n\n    /**\n     * Add a tape rewind button.\n     */\n    public addTapeRewindButton(callback: () => void): HTMLElement {\n        return this.addButton(PREVIOUS_TRACK_ICON, callback);\n    }\n\n    /**\n     * Add a settings button.\n     */\n    public addSettingsButton(settingsPanel: SettingsPanel): HTMLElement {\n        settingsPanel.onOpen = () => this.screenNode.classList.add(gShowingOtherPanelCssClass);\n        settingsPanel.onClose = () => this.screenNode.classList.remove(gShowingOtherPanelCssClass);\n\n        let iconSvg: string;\n        switch (settingsPanel.panelType) {\n            case PanelType.HARDWARE:\n            default:\n                iconSvg = HARDWARE_SETTINGS_ICON;\n                break;\n            case PanelType.VIEW:\n                iconSvg = VIEW_SETTINGS_ICON;\n                break;\n        }\n\n        return this.addButton(iconSvg, () => settingsPanel.open());\n    }\n\n    /**\n     * Add a button to edit the program.\n     */\n    public addEditorButton(callback: () => void): HTMLElement {\n        return this.addButton(EDIT_ICON, callback);\n    }\n\n    /**\n     * Add button to toggle mute.\n     */\n    public addMuteButton(mutable: Mutable): void {\n        const mutedButton = this.addButton(MUTED_ICON);\n        const unmutedButton = this.addButton(UNMUTED_ICON);\n\n        const updateVisibility = () => {\n            const isMuted = mutable.isMuted();\n            mutedButton.classList.toggle(gButtonHiddenCssClass, !isMuted);\n            unmutedButton.classList.toggle(gButtonHiddenCssClass, isMuted);\n        };\n\n        mutedButton.addEventListener(\"click\", () => {\n            mutable.unmute();\n            updateVisibility();\n        });\n        unmutedButton.addEventListener(\"click\", () => {\n            mutable.mute();\n            updateVisibility();\n        });\n\n        updateVisibility();\n    }\n\n    /**\n     * Add a button to save.\n     */\n    public addSaveButton(callback: () => void): void {\n        this.addButton(CHECK_ICON, callback);\n    }\n\n    /**\n     * Add a button to cancel.\n     */\n    public addCancelButton(callback: () => void): void {\n        this.addButton(CROSS_ICON, callback);\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","\nimport {CSS_PREFIX} from \"./Utils\";\n\nconst gCssPrefix = CSS_PREFIX + \"-progress-bar\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gBarCssClass = gCssPrefix + \"-bar\";\nconst gSubbarCssClass = gCssPrefix + \"-subbar\";\n\nconst GLOBAL_CSS = \".\" + gBarCssClass + ` {\n    background-color: rgba(0, 0, 0, 0.2);\n    position: absolute;\n    left: 15%;\n    width: 70%;\n    bottom: 10%;\n    height: 20px;\n    border-radius: 10px;\n    overflow: hidden;\n    opacity: 0;\n    transition: opacity .20s ease-in-out;\n}\n\n.` + gSubbarCssClass + ` {\n    background-color: rgba(255, 255, 255, 0.4);\n    width: 0;\n    height: 20px;\n}\n\n.` + gScreenNodeCssClass + ` {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n\n`;\n\n/**\n * Overlay on top of a screen to show progress, for instance the position of a cassette tape.\n */\nexport class ProgressBar {\n    private readonly barNode: HTMLElement;\n    private readonly subbarNode: HTMLElement;\n    private maxValue: number = 100;\n\n    /**\n     * @param screenNode the node from the Trs80Screen object's getNode() method.\n     */\n    constructor(screenNode: HTMLElement) {\n        // Make global CSS if necessary.\n        ProgressBar.configureStyle();\n\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.barNode = document.createElement(\"div\");\n        this.barNode.classList.add(gBarCssClass);\n        screenNode.appendChild(this.barNode);\n\n        this.subbarNode = document.createElement(\"div\");\n        this.subbarNode.classList.add(gSubbarCssClass);\n        this.barNode.appendChild(this.subbarNode);\n    }\n\n    public setMaxValue(maxValue: number) {\n        this.maxValue = maxValue;\n    }\n\n    public setValue(value: number) {\n        this.subbarNode.style.width = \"\" + Math.round(value*100/this.maxValue) + \"%\";\n    }\n\n    public show() {\n        this.barNode.style.opacity = \"1\";\n    }\n\n    public hide() {\n        this.barNode.style.opacity = \"0\";\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","\nimport {CSS_PREFIX} from \"./Utils\";\nimport {FLOPPY_DRIVE_COUNT} from \"./FloppyDiskController\";\n\nconst gCssPrefix = CSS_PREFIX + \"-drive-indicators\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gIndicatorCssClass = gCssPrefix + \"-indicator\";\nconst gIndicatorDriveOnCssClass = gCssPrefix + \"-drive-on\";\n\nconst GLOBAL_CSS = `\n.${gScreenNodeCssClass} {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n\n.${gIndicatorCssClass} {\n    position: absolute;\n    background-color: #CC0000;\n    right: 10px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    opacity: 0;\n    transition: opacity .20s ease-in-out;\n    filter: drop-shadow(0 0 3px #ff0000);\n}\n\n.${gIndicatorDriveOnCssClass} {\n    opacity: .75;\n}\n`;\n\n/**\n * Red lights on top of the screen that indicate which drives are spinning.\n */\nexport class DriveIndicators {\n    private readonly lights: HTMLElement[] = [];\n\n    /**\n     * @param screenNode the node from the Trs80Screen object's getNode() method.\n     */\n    constructor(screenNode: HTMLElement) {\n        // Make global CSS if necessary.\n        DriveIndicators.configureStyle();\n\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        for (let i = 0; i < FLOPPY_DRIVE_COUNT; i++) {\n            const light = document.createElement(\"div\");\n            light.classList.add(gIndicatorCssClass);\n            light.style.bottom = (12 + 20*i) + \"px\";\n            screenNode.append(light);\n\n            this.lights.push(light);\n        }\n    }\n\n    /**\n     * Set the drive number (0-based) that's currently on, if any.\n     * @param drive\n     */\n    public setActiveDrive(drive: number | undefined): void {\n        for (let i = 0; i < FLOPPY_DRIVE_COUNT; i++) {\n            this.lights[i].classList.toggle(gIndicatorDriveOnCssClass, i === drive);\n        }\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","export {CassettePlayer} from \"./CassettePlayer\";\nexport {Trs80} from \"./Trs80\";\nexport {CanvasScreen} from \"./CanvasScreen\";\nexport {ControlPanel} from \"./ControlPanel\";\nexport {SettingsPanel, PanelType} from \"./SettingsPanel\";\nexport {ProgressBar} from \"./ProgressBar\";\nexport {DriveIndicators} from \"./DriveIndicators\";\n","\nexport const TRS80_MODEL_III_KNOWN_LABELS: [number, string][] = [\n    [0x0298, \"clkon\"], // Turn clock on.\n    [0x02a1, \"clkoff\"], // Turn clock off.\n    [0x0296, \"cshin\"], // Search for cassette header and sync byte.\n    [0x0235, \"csin\"],  // Read cassette byte.\n    [0x0287, \"cshwr\"], // Write cassette leader and sync byte.\n    [0x01f8, \"csoff\"], // Turn off cassette.\n    [0x0264, \"csout\"], // Write byte to cassette.\n    [0x3033, \"date\"], // Get today's date.\n    [0x0060, \"delay\"], // Delay for a specified interval (2.46 + 14.8*BC microseconds).\n    [0x0069, \"initio\"], // Initialize all I/O drivers.\n    [0x002b, \"kbchar\"], // Get a keyboard character if available.\n    [0x0040, \"kbline\"], // Wait for a line from the keyboard.\n    [0x0049, \"kbwait\"], // Wait for a keyboard character.\n    [0x028d, \"kbbrk\"], // Check for a Break key only.\n    [0x003b, \"prchar\"], // Output a character to the printer.\n    [0x01d9, \"prscn\"], // Print entire screen contents.\n    [0x1a19, \"ready\"], // Jump to Model III Basic \"Ready\".\n    [0x0000, \"reset\"], // Jump to reset.\n    [0x006c, \"route\"], // Change I/O device routing.\n    [0x005a, \"rsinit\"], // Initialize the RS-232-C interface.\n    [0x0050, \"rsrcv\"], // Receive a character from the RS-232-C interface.\n    [0x0055, \"rstx\"], // Transmit a character to the RS-232-C interface.\n    [0x3042, \"setcas\"], // Prompt user to set cassette baud rate.\n    [0x3036, \"time\"], // Get the time.\n    [0x0033, \"vdchar\"], // Display a character.\n    [0x01c9, \"vdcls\"], // Clear the video display screen.\n    [0x021b, \"vdline\"], // Display a line.\n];\n","\nimport {\n    CmdLoadBlockChunk,\n    CmdProgram,\n    CmdTransferAddressChunk, SystemChunk,\n    SystemProgram,\n    TRS80_SCREEN_BEGIN,\n    TRS80_SCREEN_END\n} from \"trs80-base\";\nimport {Disasm, Z80_KNOWN_LABELS} from \"z80-disasm\";\nimport {TRS80_MODEL_III_KNOWN_LABELS} from \"./KnownLabels\";\n\n// Whether to try to disassemble this chunk.\nfunction shouldDisassembleSystemProgramChunk(chunk: SystemChunk): boolean {\n    if (chunk.loadAddress >= TRS80_SCREEN_BEGIN && chunk.loadAddress + chunk.data.length <= TRS80_SCREEN_END) {\n        return false;\n    }\n\n    // Various addresses that don't represent code.\n    if (chunk.loadAddress === 0x4210 || chunk.loadAddress === 0x401E) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Create and configure a disassembler for the specified program.\n */\nexport function disasmForTrs80Program(program: SystemProgram | CmdProgram): Disasm {\n    const disasm = new Disasm();\n\n    disasm.addLabels(Z80_KNOWN_LABELS);\n    disasm.addLabels(TRS80_MODEL_III_KNOWN_LABELS);\n    if (program.entryPointAddress !== undefined) {\n        disasm.addLabels([[program.entryPointAddress, \"main\"]]);\n    }\n    if (program.className === \"CmdProgram\") {\n        for (const chunk of program.chunks) {\n            if (chunk instanceof CmdLoadBlockChunk) {\n                disasm.addChunk(chunk.loadData, chunk.address);\n            }\n            if (chunk instanceof CmdTransferAddressChunk) {\n                // Not sure what to do here. I've seen junk after this block, and we risk\n                // overwriting valid things in memory. I suspect that CMD parsers of the time,\n                // when running into this block, would immediately just jump to the address\n                // and ignore everything after it, so let's emulate that.\n                break;\n            }\n        }\n    } else if (program.className === \"SystemProgram\") {\n        for (const chunk of program.chunks) {\n            if (shouldDisassembleSystemProgramChunk(chunk)) {\n                disasm.addChunk(chunk.data, chunk.loadAddress);\n            }\n        }\n    } else {\n        throw new Error(\"program is neither SystemProgram nor CmdProgram\");\n    }\n    if (program.entryPointAddress !== undefined) {\n        disasm.addEntryPoint(program.entryPointAddress);\n    }\n\n    return disasm;\n}\n","\nexport * from \"./Main\";\nexport * from \"./KnownLabels\";\n","import jss from './Jss';\nimport { toHexByte, toHexWord } from \"z80-base\";\nimport { Highlightable } from \"./Highlighter\";\nimport { CanvasScreen } from \"trs80-emulator\";\nimport { disasmForTrs80Program } from \"trs80-disasm\";\nimport { TRS80_SCREEN_BEGIN, TRS80_SCREEN_END } from \"trs80-base\";\nimport { ProgramAnnotation } from \"trs80-base/dist/ProgramAnnotation\";\n/**\n * Add text to the line with the specified class.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    error: {\n        color: \"var(--red)\",\n    },\n    address: {\n        color: \"var(--foreground-secondary)\",\n    },\n    hex: {\n        color: \"var(--blue)\",\n    },\n    opcodes: {\n        color: \"var(--cyan)\",\n    },\n    label: {\n        color: \"var(--orange)\",\n    },\n    space: {\n        color: \"var(--foreground-secondary)\",\n    },\n    punctuation: {\n        color: \"var(--foreground-secondary)\",\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n        backgroundColor: \"var(--foreground-secondary)\",\n        \"& $hex\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $punctuation\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $space\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $label\": {\n            backgroundColor: \"var(--orange)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $opcodes\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $address\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $error\": {\n            backgroundColor: \"var(--red)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * Render a disassembled system program.\n *\n * @return array of the elements added, with the index being the offset into the original bytes array.\n */\nexport function toDiv(systemProgram, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    // Every element we render that maps to a byte in the program.\n    const elements = [];\n    // Waveform annotations.\n    const annotations = [];\n    if (systemProgram.error !== undefined) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        add(line, systemProgram.error, classes.error);\n    }\n    // Prepare screenshot, in case loading process writes to screen.\n    const screen = new CanvasScreen();\n    let wroteToScreen = false;\n    // List chunks on tape.\n    let h1 = document.createElement(\"h1\");\n    h1.innerText = \"Chunks\";\n    out.appendChild(h1);\n    // Display a row for each chunk.\n    let programAddress = undefined;\n    for (const chunk of systemProgram.chunks) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        // Address and length.\n        let length = chunk.data.length;\n        let text = toHexWord(chunk.loadAddress) + \"-\" + toHexWord(chunk.loadAddress + length - 1) +\n            \" (\" + length + \" byte\" + (length === 1 ? \"\" : \"s\") + \")\";\n        text = text.padEnd(23, \" \");\n        add(line, text, classes.address);\n        // First few bytes.\n        const bytes = chunk.data.slice(0, Math.min(3, length));\n        text = Array.from(bytes).map(toHexByte).join(\" \") + (bytes.length < length ? \" ...\" : \"\");\n        text = text.padEnd(14, \" \");\n        add(line, text, classes.hex);\n        // Write explanation.\n        if (chunk.loadAddress >= TRS80_SCREEN_BEGIN && chunk.loadAddress + chunk.data.length <= TRS80_SCREEN_END) {\n            add(line, \"Screen\", classes.opcodes);\n            if (!wroteToScreen) {\n                add(line, \" (see screenshot below)\", classes.error);\n            }\n            for (let i = 0; i < length; i++) {\n                screen.writeChar(chunk.loadAddress + i, chunk.data[i]);\n            }\n            wroteToScreen = true;\n        }\n        else if (chunk.loadAddress === 0x4210) {\n            add(line, \"Port 0xEC bitmask\", classes.opcodes);\n        }\n        else if (chunk.loadAddress === 0x401E) {\n            add(line, \"Video driver pointer\", classes.opcodes);\n        }\n        else {\n            add(line, \"Program code\", classes.opcodes);\n            if (programAddress !== undefined && chunk.loadAddress !== programAddress) {\n                add(line, \" (not contiguous, expected \" + toHexWord(programAddress) + \")\", classes.error);\n            }\n            programAddress = chunk.loadAddress + length;\n        }\n        if (!chunk.isChecksumValid()) {\n            add(line, \" (invalid checksum)\", classes.error);\n        }\n    }\n    const entryPointDiv = document.createElement(\"div\");\n    entryPointDiv.style.marginTop = \"10px\";\n    out.appendChild(entryPointDiv);\n    add(entryPointDiv, \"Entry point: \", classes.label);\n    add(entryPointDiv, toHexWord(systemProgram.entryPointAddress), classes.address);\n    if (wroteToScreen) {\n        h1 = document.createElement(\"h1\");\n        h1.innerText = \"Loading Screen\";\n        out.appendChild(h1);\n        const screenDiv = document.createElement(\"div\");\n        screenDiv.append(screen.asImage());\n        out.append(screenDiv);\n    }\n    h1 = document.createElement(\"h1\");\n    h1.innerText = \"Disassembly\";\n    out.appendChild(h1);\n    const disasm = disasmForTrs80Program(systemProgram);\n    const instructions = disasm.disassemble();\n    for (const instruction of instructions) {\n        if (instruction.label !== undefined) {\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, \"                  \", classes.space);\n            add(line, instruction.label, classes.label);\n            add(line, \":\", classes.punctuation);\n        }\n        let address = instruction.address;\n        const bytes = instruction.bin;\n        while (bytes.length > 0) {\n            const subbytes = bytes.slice(0, Math.min(4, bytes.length));\n            const subbytesText = subbytes.map(toHexByte).join(\" \");\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, toHexWord(instruction.address), classes.address);\n            add(line, \"  \", classes.space);\n            add(line, subbytesText, classes.hex);\n            if (address === instruction.address) {\n                add(line, \"\".padEnd(12 - subbytesText.length + 8), classes.space);\n                add(line, instruction.toText(), classes.opcodes);\n            }\n            const byteOffset = systemProgram.addressToByteOffset(address);\n            if (byteOffset !== undefined) {\n                const endIndex = byteOffset + subbytes.length;\n                elements.push(new Highlightable(byteOffset, endIndex - 1, line));\n                annotations.push(new ProgramAnnotation(instruction.toText() + \"\\n\" + instruction.binText(), byteOffset, endIndex));\n            }\n            address += subbytes.length;\n            bytes.splice(0, subbytes.length);\n        }\n    }\n    return [elements, annotations];\n}\n","import jss from './Jss';\nimport { toHexByte, toHexWord } from \"z80-base\";\nimport { Highlightable } from \"./Highlighter\";\nimport { disasmForTrs80Program } from \"trs80-disasm\";\nimport { ProgramAnnotation } from \"trs80-base/dist/ProgramAnnotation\";\n/**\n * Add text to the line with the specified class.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    error: {\n        color: \"var(--red)\",\n    },\n    address: {\n        color: \"var(--foreground-secondary)\",\n    },\n    hex: {\n        color: \"var(--blue)\",\n    },\n    opcodes: {\n        color: \"var(--cyan)\",\n    },\n    label: {\n        color: \"var(--orange)\",\n    },\n    space: {\n        color: \"var(--foreground-secondary)\",\n    },\n    punctuation: {\n        color: \"var(--foreground-secondary)\",\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n        backgroundColor: \"var(--foreground-secondary)\",\n        \"& $hex\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $punctuation\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $space\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $label\": {\n            backgroundColor: \"var(--orange)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $opcodes\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $address\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $error\": {\n            backgroundColor: \"var(--red)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * Render a disassembled system program.\n *\n * @return array of the elements added, with the index being the offset into the original bytes array.\n */\nexport function toDiv(cmdProgram, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    // Every element we render that maps to a byte in the program.\n    const elements = [];\n    // Waveform annotations.\n    const annotations = [];\n    if (cmdProgram.error !== undefined) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        add(line, cmdProgram.error, classes.error);\n    }\n    // List chunks in file.\n    let h1 = document.createElement(\"h1\");\n    h1.innerText = \"Chunks\";\n    out.appendChild(h1);\n    // Display a row for each chunk.\n    let programAddress = undefined;\n    for (const chunk of cmdProgram.chunks) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        // Chunk type.\n        add(line, toHexByte(chunk.type) + \"  \", classes.address);\n        switch (chunk.className) {\n            case \"CmdLoadBlockChunk\": {\n                add(line, \"Load at \", classes.opcodes);\n                add(line, toHexWord(chunk.address), classes.address);\n                add(line, \": \", classes.opcodes);\n                const bytes = chunk.loadData.slice(0, Math.min(3, chunk.loadData.length));\n                const text = Array.from(bytes).map(toHexByte).join(\" \") + (bytes.length < chunk.loadData.length ? \" ...\" : \"\");\n                add(line, text, classes.hex);\n                add(line, \" (\" + chunk.loadData.length + \" byte\" + (chunk.loadData.length == 1 ? \"\" : \"s\") + \")\", classes.address);\n                if (programAddress !== undefined && chunk.address !== programAddress) {\n                    add(line, \" (not contiguous, expected \" + toHexWord(programAddress) + \")\", classes.error);\n                }\n                programAddress = chunk.address + chunk.loadData.length;\n                break;\n            }\n            case \"CmdTransferAddressChunk\":\n                if (chunk.rawData.length !== 2) {\n                    add(line, \"Transfer address chunk has invalid length \" + chunk.rawData.length, classes.error);\n                }\n                else {\n                    add(line, \"Jump to \", classes.opcodes);\n                    add(line, toHexWord(chunk.address), classes.address);\n                }\n                break;\n            case \"CmdLoadModuleHeaderChunk\":\n                add(line, \"Load module header: \", classes.opcodes);\n                add(line, chunk.filename, classes.hex);\n                break;\n            default:\n                add(line, \"Unknown type: \", classes.error);\n                const bytes = chunk.rawData.slice(0, Math.min(3, chunk.rawData.length));\n                const text = Array.from(bytes).map(toHexByte).join(\" \") + (bytes.length < chunk.rawData.length ? \" ...\" : \"\");\n                add(line, text, classes.hex);\n                add(line, \" (\" + chunk.rawData.length + \" byte\" + (chunk.rawData.length == 1 ? \"\" : \"s\") + \")\", classes.address);\n                break;\n        }\n    }\n    h1 = document.createElement(\"h1\");\n    h1.innerText = \"Disassembly\";\n    out.appendChild(h1);\n    const disasm = disasmForTrs80Program(cmdProgram);\n    const instructions = disasm.disassemble();\n    for (const instruction of instructions) {\n        if (instruction.label !== undefined) {\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, \"                  \", classes.space);\n            add(line, instruction.label, classes.label);\n            add(line, \":\", classes.punctuation);\n        }\n        let address = instruction.address;\n        const bytes = instruction.bin;\n        while (bytes.length > 0) {\n            const subbytes = bytes.slice(0, Math.min(4, bytes.length));\n            const subbytesText = subbytes.map(toHexByte).join(\" \");\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, toHexWord(instruction.address), classes.address);\n            add(line, \"  \", classes.space);\n            add(line, subbytesText, classes.hex);\n            if (address === instruction.address) {\n                add(line, \"\".padEnd(12 - subbytesText.length + 8), classes.space);\n                add(line, instruction.toText(), classes.opcodes);\n            }\n            const byteOffset = cmdProgram.addressToByteOffset(address);\n            if (byteOffset !== undefined) {\n                const endIndex = byteOffset + subbytes.length;\n                elements.push(new Highlightable(byteOffset, endIndex - 1, line));\n                annotations.push(new ProgramAnnotation(instruction.toText() + \"\\n\" + instruction.binText(), byteOffset, endIndex));\n            }\n            address += subbytes.length;\n            bytes.splice(0, subbytes.length);\n        }\n    }\n    return [elements, annotations];\n}\n","// Tools for generating a hex dump of a binary file.\nimport jss from './Jss';\nimport { pad } from \"./Utils\";\nimport { Highlightable } from \"./Highlighter\";\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    address: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    hex: {\n        color: \"var(--blue)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    ascii: {\n        color: \"var(--cyan)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    asciiUnprintable: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\nexport function create(binary, div) {\n    sheet.attach();\n    const classes = sheet.classes;\n    const hexElements = [];\n    const asciiElements = [];\n    for (let addr = 0; addr < binary.length; addr += 16) {\n        const line = document.createElement(\"div\");\n        let e = document.createElement(\"span\");\n        e.classList.add(classes.address);\n        e.innerText = pad(addr, 16, 4) + \"  \";\n        line.appendChild(e);\n        // Hex.\n        let subAddr;\n        for (subAddr = addr; subAddr < binary.length && subAddr < addr + 16; subAddr++) {\n            e = document.createElement(\"span\");\n            e.classList.add(classes.hex);\n            e.innerText = pad(binary[subAddr], 16, 2);\n            hexElements.push(new Highlightable(hexElements.length, hexElements.length, e));\n            line.appendChild(e);\n            line.appendChild(document.createTextNode(\" \"));\n        }\n        for (; subAddr < addr + 16; subAddr++) {\n            line.appendChild(document.createTextNode(\"   \"));\n        }\n        line.appendChild(document.createTextNode(\"  \"));\n        // ASCII.\n        for (subAddr = addr; subAddr < binary.length && subAddr < addr + 16; subAddr++) {\n            const c = binary[subAddr];\n            e = document.createElement(\"span\");\n            if (c >= 32 && c < 127) {\n                e.classList.add(classes.ascii);\n                e.innerText = String.fromCharCode(c);\n            }\n            else {\n                e.classList.add(classes.asciiUnprintable);\n                e.innerText = \".\";\n            }\n            asciiElements.push(new Highlightable(asciiElements.length, asciiElements.length, e));\n            line.appendChild(e);\n        }\n        div.appendChild(line);\n    }\n    return [hexElements, asciiElements];\n}\n","import { BitType } from \"./BitType\";\nimport { Highlight } from \"./Highlight\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { toHexByte } from \"z80-base\";\nimport { drawBraceAndLabel } from \"./Annotations\";\nimport { clearElement, withCommas } from \"./Utils\";\nimport { frameDurationToString, frameToTimestamp } from \"./AudioUtils\";\nimport { writeWavFile } from \"./WavFile\";\nimport { getToken } from \"trs80-base\";\nlet gRadioButtonCounter = 1;\n/**\n * Whether the user is selecting whole bytes or audio samples.\n */\nexport var SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[SelectionMode[\"BYTES\"] = 0] = \"BYTES\";\n    SelectionMode[SelectionMode[\"SAMPLES\"] = 1] = \"SAMPLES\";\n})(SelectionMode || (SelectionMode = {}));\n/**\n * When adjusting the selection, whether changing one of its ends, or creating it from scratch.\n */\nvar SelectionAdjustMode;\n(function (SelectionAdjustMode) {\n    SelectionAdjustMode[SelectionAdjustMode[\"LEFT\"] = 0] = \"LEFT\";\n    SelectionAdjustMode[SelectionAdjustMode[\"CREATE\"] = 1] = \"CREATE\";\n    SelectionAdjustMode[SelectionAdjustMode[\"RIGHT\"] = 2] = \"RIGHT\";\n})(SelectionAdjustMode || (SelectionAdjustMode = {}));\n/**\n * An individual waveform to be displayed.\n */\nclass Waveform {\n    constructor(canvas, infoPanel, samples) {\n        this.canvas = canvas;\n        this.infoPanel = infoPanel;\n        this.samples = samples;\n    }\n}\n/**\n * Displays a list of different waveforms, synchronizing their pan and zoom.\n */\nexport class WaveformDisplay {\n    constructor(sampleRate) {\n        /**\n         * Dispatchers when the user highlights or selects in the canvas.\n         */\n        this.onHighlight = new SimpleEventDispatcher();\n        this.onSelection = new SimpleEventDispatcher();\n        this.onDoneSelecting = new SimpleEventDispatcher();\n        /**\n         * The width of the canvases, in pixels.\n         */\n        this.displayWidth = 0;\n        /**\n         * The zoom level, where 0 means all the way zoomed in and each original\n         * audio sample maps to one column of pixels on the screen; 1 means\n         * zoomed out from that by a factor of two, etc.\n         */\n        this.zoom = 0; // Initialized in zoomToFitAll()\n        /**\n         * The max value that zoom can have.\n         */\n        this.maxZoom = 0;\n        /**\n         * The min value that zoom can have.\n         */\n        this.minZoom = -4;\n        /**\n         * The sample in the middle of the display, in original samples.\n         */\n        this.centerSample = 0; // Initialized in zoomToFitAll()\n        /**\n         * All the waveforms we're displaying, and their canvases.\n         */\n        this.waveforms = [];\n        /**\n         * All the programs represented on these waveforms.\n         */\n        this.programs = [];\n        /**\n         * Listeners of the maxZoom property.\n         */\n        this.onMaxZoom = new SimpleEventDispatcher();\n        /**\n         * Listeners of the zoom property.\n         */\n        this.onZoom = new SimpleEventDispatcher();\n        /**\n         * What the user wants to select.\n         */\n        this.selectionMode = SelectionMode.BYTES;\n        /**\n         * Waveform annotations to draw.\n         */\n        this.waveformAnnotations = [];\n        /**\n         * Handle to the timeout to redraw.\n         */\n        this.drawTimeout = undefined;\n        this.sampleRate = sampleRate;\n    }\n    /**\n     * Add a waveform to display.\n     */\n    addWaveform(canvas, infoPanel, samples) {\n        const displayWidth = canvas.width;\n        if (this.displayWidth === 0) {\n            this.displayWidth = displayWidth;\n        }\n        else if (this.displayWidth !== displayWidth) {\n            throw new Error(\"Widths of the canvases must match\");\n        }\n        // Compute max display level.\n        let newMaxZoom = samples.samplesList.length - 1;\n        if (newMaxZoom !== this.maxZoom) {\n            this.maxZoom = newMaxZoom;\n            this.onMaxZoom.dispatch(newMaxZoom);\n        }\n        this.waveforms.push(new Waveform(canvas, infoPanel, samples));\n        this.configureCanvas(canvas);\n    }\n    /**\n     * Make the canvas and its surrounding elements to display a waveform.\n     */\n    addWaveformAndChrome(label, samples, parent) {\n        let labelElement = document.createElement(\"p\");\n        labelElement.innerText = label;\n        parent.appendChild(labelElement);\n        let container = document.createElement(\"div\");\n        container.style.display = \"flex\";\n        container.style.flexFlow = \"row nowrap\";\n        container.style.justifyContent = \"flex-start\";\n        container.style.alignItems = \"flex-start\";\n        parent.appendChild(container);\n        let canvas = document.createElement(\"canvas\");\n        canvas.classList.add(\"waveform\");\n        canvas.width = 800;\n        canvas.height = 400;\n        container.appendChild(canvas);\n        let infoPanel = document.createElement(\"div\");\n        infoPanel.style.marginLeft = \"30px\";\n        container.appendChild(infoPanel);\n        this.addWaveform(canvas, infoPanel, samples);\n        this.queueDraw();\n    }\n    /**\n     * Add a program to highlight in the waveform.\n     */\n    addProgram(program) {\n        this.programs.push(program);\n    }\n    /**\n     * Add the list of annotations.\n     */\n    addWaveformAnnotations(waveformAnnotations) {\n        this.waveformAnnotations.push(...waveformAnnotations);\n        this.queueDraw();\n    }\n    /**\n     * Add an annotation to draw.\n     */\n    addWaveformAnnotation(waveformAnnotation) {\n        this.waveformAnnotations.push(waveformAnnotation);\n        this.queueDraw();\n    }\n    /**\n     * Update the current highlight.\n     */\n    setHighlight(highlight) {\n        this.startHighlightFrame = undefined;\n        this.endHighlightFrame = undefined;\n        if (highlight !== undefined) {\n            let byteData = highlight.program.byteData[highlight.firstIndex];\n            if (byteData !== undefined) {\n                this.startHighlightFrame = byteData.startFrame;\n                this.endHighlightFrame = byteData.endFrame;\n            }\n            byteData = highlight.program.byteData[highlight.lastIndex];\n            if (byteData !== undefined) {\n                this.endHighlightFrame = byteData.endFrame;\n            }\n        }\n        this.queueDraw();\n    }\n    /**\n     * Update the current highlight.\n     */\n    setSelection(selection) {\n        this.startSelectionFrame = undefined;\n        this.endSelectionFrame = undefined;\n        if (selection !== undefined) {\n            let byteData = selection.program.byteData[selection.firstIndex];\n            if (byteData !== undefined) {\n                this.startSelectionFrame = byteData.startFrame;\n                this.endSelectionFrame = byteData.endFrame;\n            }\n            byteData = selection.program.byteData[selection.lastIndex];\n            if (byteData !== undefined) {\n                this.endSelectionFrame = byteData.endFrame;\n            }\n        }\n        this.draw();\n        this.updateInfoPanels();\n    }\n    /**\n     * Zoom to fit the current selection, if any.\n     */\n    doneSelecting() {\n        if (this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n            this.zoomToFit(this.startSelectionFrame, this.endSelectionFrame);\n        }\n    }\n    /**\n     * Makes a block element to place above a set of waveform displays.\n     */\n    makeControls(showSelectionType) {\n        const controls = document.createElement(\"div\");\n        // Zoom controls.\n        controls.appendChild(this.makeZoomControls());\n        // Instructions.\n        const instructions = document.createElement(\"span\");\n        instructions.innerHTML = \"<b>Shift</b>: Zoom in&nbsp;&nbsp;&nbsp;&nbsp;<b>Alt-Shift</b>: Zoom out&nbsp;&nbsp;&nbsp;&nbsp;<b>Alt</b>: Select\";\n        instructions.style.marginLeft = \"30px\";\n        controls.appendChild(instructions);\n        // Selection type.\n        if (showSelectionType) {\n            const selectionLabel = document.createElement(\"span\");\n            selectionLabel.innerText = \"Select: \";\n            selectionLabel.style.marginLeft = \"30px\";\n            selectionLabel.style.fontWeight = \"bold\";\n            controls.append(selectionLabel);\n            // Unique name for this group of inputs.\n            const name = \"selection-type-radio-name-\" + gRadioButtonCounter;\n            gRadioButtonCounter += 1;\n            // Options for selection mode.\n            let selectionModes = [\n                {\n                    label: \"Bytes\",\n                    selectionMode: SelectionMode.BYTES,\n                    checked: true,\n                },\n                {\n                    label: \"Samples\",\n                    selectionMode: SelectionMode.SAMPLES,\n                    checked: false,\n                },\n            ];\n            for (const { label, selectionMode, checked } of selectionModes) {\n                const labelNode = document.createElement(\"label\");\n                const radioInput = document.createElement(\"input\");\n                radioInput.type = \"radio\";\n                radioInput.name = name;\n                radioInput.checked = checked;\n                radioInput.addEventListener(\"change\", () => this.setSelectionMode(selectionMode));\n                labelNode.appendChild(radioInput);\n                labelNode.append(\" \" + label);\n                controls.appendChild(labelNode);\n            }\n        }\n        return controls;\n    }\n    /**\n     * Sets the selection mode. Does not update the radio buttons. Defaults to BYTES.\n     */\n    setSelectionMode(selectionMode) {\n        this.selectionMode = selectionMode;\n        this.draw();\n        this.updateInfoPanels();\n    }\n    /**\n     * Create zoom control elements, bind them to this waveform display, and return them.\n     * These are not guaranteed to be a block element. Caller should warp them in\n     * a div if that's what they want.\n     */\n    makeZoomControls() {\n        const label = document.createElement(\"label\");\n        label.innerText = \"Zoom: \";\n        const input = document.createElement(\"input\");\n        input.type = \"range\";\n        label.appendChild(input);\n        // We want to flip this horizontally, so make the slider's value\n        // the negative of the real zoom.\n        input.min = (-this.maxZoom).toString();\n        input.max = (-this.minZoom).toString();\n        this.onMaxZoom.subscribe(maxZoom => input.min = (-maxZoom).toString());\n        this.onZoom.subscribe(zoom => input.value = (-zoom).toString());\n        input.addEventListener(\"input\", () => {\n            this.setZoom(-parseInt(input.value), undefined);\n        });\n        return label;\n    }\n    /**\n     * Configure the mouse and keyboard events in the canvas.\n     */\n    configureCanvas(canvas) {\n        let dragging = false;\n        let dragInitialX = 0;\n        let dragInitialCenterSample = 0;\n        let inCanvas = false;\n        let holdingShift = false;\n        let holdingAlt = false;\n        let selectionStart = undefined;\n        let selectingSamples = false;\n        let selectionAdjustMode = SelectionAdjustMode.CREATE;\n        let lastSeenMouseX = 0;\n        let lastSeenMouseY = 0;\n        const updateCursor = () => {\n            canvas.style.cursor = holdingShift ? (holdingAlt ? \"zoom-out\" : \"zoom-in\")\n                : holdingAlt ? (selectionAdjustMode === SelectionAdjustMode.CREATE ? \"auto\" : \"col-resize\")\n                    : dragging ? \"grabbing\"\n                        : \"grab\";\n        };\n        updateCursor();\n        // See if we're on the edge of a sample selection area.\n        const updateSelectionAdjustMode = () => {\n            selectionAdjustMode = SelectionAdjustMode.CREATE;\n            if (holdingAlt && this.selectionMode === SelectionMode.SAMPLES &&\n                this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                const startX = this.originalFrameToScreenX(this.startSampleSelectionFrame);\n                if (Math.abs(lastSeenMouseX - startX) < 4) {\n                    selectionAdjustMode = SelectionAdjustMode.LEFT;\n                }\n                const endX = this.originalFrameToScreenX(this.endSampleSelectionFrame);\n                if (Math.abs(lastSeenMouseX - endX) < 4) {\n                    selectionAdjustMode = SelectionAdjustMode.RIGHT;\n                }\n            }\n            updateCursor();\n        };\n        // Mouse enter/leave events.\n        canvas.addEventListener(\"mouseenter\", event => {\n            inCanvas = true;\n            holdingAlt = event.altKey;\n            holdingShift = event.shiftKey;\n            updateSelectionAdjustMode();\n            updateCursor();\n        });\n        canvas.addEventListener(\"mouseleave\", () => {\n            inCanvas = false;\n        });\n        // Mouse click events.\n        canvas.addEventListener(\"mousedown\", event => {\n            if (holdingShift) {\n                // Zoom.\n                if (holdingAlt) {\n                    // Zoom out.\n                    this.setZoom(this.zoom + 1, event.offsetX);\n                }\n                else {\n                    // Zoom in.\n                    this.setZoom(this.zoom - 1, event.offsetX);\n                }\n            }\n            else if (holdingAlt) {\n                // Start selecting.\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                if (this.selectionMode === SelectionMode.BYTES) {\n                    // Selecting bytes.\n                    const highlight = this.highlightAt(frame);\n                    if (highlight !== undefined) {\n                        selectionStart = highlight;\n                        this.onSelection.dispatch(highlight);\n                    }\n                }\n                else {\n                    // Selecting samples.\n                    switch (selectionAdjustMode) {\n                        case SelectionAdjustMode.LEFT:\n                            this.startSampleSelectionFrame = this.endSampleSelectionFrame;\n                            break;\n                        case SelectionAdjustMode.CREATE:\n                            this.startSampleSelectionFrame = frame;\n                            break;\n                        case SelectionAdjustMode.RIGHT:\n                            // Nothing.\n                            break;\n                    }\n                    this.endSampleSelectionFrame = frame;\n                    selectingSamples = true;\n                    this.draw();\n                }\n                this.updateInfoPanels();\n            }\n            else {\n                // Start pan.\n                dragging = true;\n                dragInitialX = event.offsetX;\n                dragInitialCenterSample = this.centerSample;\n                updateCursor();\n            }\n        });\n        window.addEventListener(\"mouseup\", () => {\n            if (dragging) {\n                dragging = false;\n                updateCursor();\n            }\n            else if (selectionStart !== undefined) {\n                this.onDoneSelecting.dispatch(this);\n                this.updateInfoPanels();\n                selectionStart = undefined;\n            }\n            else if (selectingSamples) {\n                // Done selecting samples.\n                if (this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                    if (this.startSampleSelectionFrame === this.endSampleSelectionFrame) {\n                        // Deselect.\n                        this.startSampleSelectionFrame = undefined;\n                        this.endSampleSelectionFrame = undefined;\n                    }\n                    else if (this.startSampleSelectionFrame > this.endSampleSelectionFrame) {\n                        // Put in the right order.\n                        const tmp = this.startSampleSelectionFrame;\n                        this.startSampleSelectionFrame = this.endSampleSelectionFrame;\n                        this.endSampleSelectionFrame = tmp;\n                    }\n                }\n                selectingSamples = false;\n                this.draw();\n                this.updateInfoPanels();\n            }\n        });\n        canvas.addEventListener(\"mousemove\", event => {\n            lastSeenMouseX = event.offsetX;\n            lastSeenMouseY = event.offsetY;\n            if (dragging) {\n                const dx = event.offsetX - dragInitialX;\n                const mag = Math.pow(2, this.zoom);\n                this.centerSample = Math.round(dragInitialCenterSample - dx * mag);\n                this.draw();\n            }\n            else if (selectionStart !== undefined) {\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                const highlight = this.highlightAt(frame);\n                if (highlight !== undefined && highlight.program === selectionStart.program) {\n                    this.onSelection.dispatch(new Highlight(highlight.program, selectionStart.firstIndex, highlight.lastIndex));\n                }\n            }\n            else if (selectingSamples) {\n                this.endSampleSelectionFrame = this.screenXToOriginalFrame(event.offsetX);\n                this.draw();\n                this.updateInfoPanels();\n            }\n            else if (holdingAlt) {\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                const highlight = this.highlightAt(frame);\n                this.onHighlight.dispatch(highlight);\n                updateSelectionAdjustMode();\n            }\n        });\n        canvas.addEventListener(\"wheel\", event => {\n            // Can't do both at once, so just pick major axis.\n            if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n                const mag = Math.pow(2, this.zoom);\n                this.centerSample = Math.round(this.centerSample + event.deltaX * mag);\n                this.draw();\n                event.preventDefault();\n            }\n        });\n        // Keyboard events.\n        document.addEventListener(\"keydown\", event => {\n            if (inCanvas) {\n                if (event.key === \"Alt\") {\n                    holdingAlt = true;\n                    updateSelectionAdjustMode();\n                    updateCursor();\n                }\n                if (event.key === \"Shift\") {\n                    holdingShift = true;\n                    updateCursor();\n                }\n            }\n        });\n        document.addEventListener(\"keyup\", event => {\n            if (inCanvas) {\n                if (event.key === \"Alt\") {\n                    holdingAlt = false;\n                    updateSelectionAdjustMode();\n                    updateCursor();\n                }\n                if (event.key === \"Shift\") {\n                    holdingShift = false;\n                    updateCursor();\n                }\n            }\n        });\n    }\n    /**\n     * Queue a redraw to happen as soon as possible. This is useful if many of these might be called\n     * synchronously -- they will be collapsed.\n     */\n    queueDraw() {\n        this.cancelQueuedDraw();\n        this.drawTimeout = window.setTimeout(() => this.draw(), 0);\n    }\n    /**\n     * Cancel any queued draw.\n     */\n    cancelQueuedDraw() {\n        if (this.drawTimeout !== undefined) {\n            window.clearTimeout(this.drawTimeout);\n            this.drawTimeout = undefined;\n        }\n    }\n    /**\n     * Draw all the waveforms.\n     */\n    draw() {\n        this.cancelQueuedDraw();\n        for (const waveform of this.waveforms) {\n            this.drawInCanvas(waveform.canvas, waveform.samples);\n        }\n    }\n    /**\n     * Compute fit level to fit the specified number of samples.\n     *\n     * @param sampleCount number of samples we want to display.\n     */\n    computeFitLevel(sampleCount) {\n        let zoom = Math.ceil(Math.log2(sampleCount / this.displayWidth));\n        zoom = Math.max(zoom, 0);\n        zoom = Math.min(zoom, sampleCount - 1);\n        return zoom;\n    }\n    /**\n     * @param {HTMLCanvasElement} canvas\n     * @param {DisplaySamples} displaySamples\n     */\n    drawInCanvas(canvas, displaySamples) {\n        const ctx = canvas.getContext(\"2d\");\n        const width = canvas.width;\n        const height = canvas.height;\n        // Get the theme variables.\n        canvas.classList.add(\"dark-mode\");\n        const style = getComputedStyle(canvas);\n        const backgroundColor = style.getPropertyValue(\"--background\");\n        const selectionColor = style.getPropertyValue(\"--background-highlights\");\n        const highlightColor = \"rgba(0, 0, 0, 0.2)\";\n        const braceColor = style.getPropertyValue(\"--foreground-secondary\");\n        const labelColor = style.getPropertyValue(\"--foreground\");\n        const waveformColor = style.getPropertyValue(\"--blue\");\n        const startColor = style.getPropertyValue(\"--cyan\");\n        const badColor = style.getPropertyValue(\"--red\");\n        // Background.\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(0, 0, width, height);\n        // Terminology:\n        //\n        // \"zoom\" is user-visible zoom (0 = one-to-one with pixels, positive = zoomed out, negative = zoomed in).\n        // \"orig sample\" is sample at zoom level 0.\n        // \"view sample\" is sample at whatever zoom level we're showing.\n        // Which samples series we're going to use.\n        const samplesZoom = Math.max(this.zoom, 0);\n        // Actual samples we plan to use.\n        const viewSamples = displaySamples.samplesList[samplesZoom];\n        // Number of horizontal pixels per sample.\n        const pixelsPerViewSample = Math.pow(2, samplesZoom - this.zoom);\n        // How many original samples in each view sample.\n        const origSamplesPerViewSamples = Math.pow(2, samplesZoom);\n        // Index of center view sample.\n        const centerViewSample = Math.round(this.centerSample / origSamplesPerViewSamples);\n        // From view sample index to X coordinate in canvas.\n        const viewSampleToX = (viewSample) => Math.round((viewSample - centerViewSample) * pixelsPerViewSample + width / 2);\n        // Compute viewing window in view space.\n        const halfWindowViewSamples = width / 2 / pixelsPerViewSample;\n        const firstViewSample = Math.floor(Math.max(centerViewSample - halfWindowViewSamples, 0));\n        const lastViewSample = Math.ceil(Math.min(centerViewSample + halfWindowViewSamples, viewSamples.length - 1));\n        // Compute viewing window in original space.\n        const firstOrigSample = Math.floor(firstViewSample * origSamplesPerViewSamples);\n        const lastOrigSample = Math.ceil(lastViewSample * origSamplesPerViewSamples);\n        // Whether we're zoomed in enough to draw and line and individual bits.\n        const drawingLine = this.zoom < 3;\n        // Draw selection and highlight.\n        if (this.selectionMode === SelectionMode.BYTES) {\n            // Selection.\n            if (this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n                ctx.fillStyle = selectionColor;\n                const x1 = viewSampleToX(this.startSelectionFrame / origSamplesPerViewSamples);\n                const x2 = viewSampleToX(this.endSelectionFrame / origSamplesPerViewSamples);\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n            }\n            // Highlight.\n            if (this.startHighlightFrame !== undefined && this.endHighlightFrame !== undefined) {\n                ctx.fillStyle = highlightColor;\n                const x1 = viewSampleToX(this.startHighlightFrame / origSamplesPerViewSamples);\n                const x2 = viewSampleToX(this.endHighlightFrame / origSamplesPerViewSamples);\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n            }\n        }\n        else {\n            // Selecting samples.\n            if (this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                ctx.fillStyle = selectionColor;\n                let x1 = viewSampleToX(this.startSampleSelectionFrame / origSamplesPerViewSamples);\n                let x2 = viewSampleToX(this.endSampleSelectionFrame / origSamplesPerViewSamples);\n                if (x2 < x1) {\n                    // Might be backwards while dragging.\n                    const tmp = x1;\n                    x1 = x2;\n                    x2 = tmp;\n                }\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n                // Highlight center of selection.\n                const midX = (x1 + x2) / 2;\n                ctx.strokeStyle = \"rgba(255, 255, 255, 0.2)\";\n                ctx.beginPath();\n                ctx.moveTo(midX, 0);\n                ctx.lineTo(midX, height);\n                ctx.stroke();\n            }\n        }\n        // Y=0 axis.\n        ctx.strokeStyle = selectionColor;\n        ctx.beginPath();\n        ctx.moveTo(0, height / 2);\n        ctx.lineTo(width, height / 2);\n        ctx.stroke();\n        // Programs and bits.\n        for (const program of this.programs) {\n            if (drawingLine) {\n                // Highlight bits.\n                for (const bitInfo of program.bitData) {\n                    if (bitInfo.endFrame >= firstOrigSample && bitInfo.startFrame <= lastOrigSample) {\n                        const x1 = viewSampleToX(bitInfo.startFrame / origSamplesPerViewSamples);\n                        const x2 = viewSampleToX(bitInfo.endFrame / origSamplesPerViewSamples);\n                        let bitBraceColor;\n                        let label;\n                        let bitLabelColor;\n                        switch (bitInfo.bitType) {\n                            case BitType.ZERO:\n                                bitBraceColor = braceColor;\n                                bitLabelColor = labelColor;\n                                label = \"0\";\n                                break;\n                            case BitType.ONE:\n                                bitBraceColor = braceColor;\n                                bitLabelColor = labelColor;\n                                label = \"1\";\n                                break;\n                            case BitType.START:\n                                bitBraceColor = startColor;\n                                bitLabelColor = startColor;\n                                label = \"START\";\n                                break;\n                            case BitType.BAD:\n                                bitBraceColor = badColor;\n                                bitLabelColor = badColor;\n                                label = \"BAD\";\n                                break;\n                        }\n                        drawBraceAndLabel(ctx, height, x1, x2, bitBraceColor, label, bitLabelColor, true);\n                    }\n                }\n            }\n            else if (this.zoom < 5) {\n                // Highlight annotations, if we have them.\n                if (program.annotations !== undefined) {\n                    for (const annotation of program.annotations) {\n                        let startFrame = undefined;\n                        let endFrame = undefined;\n                        for (let i = annotation.begin; i < annotation.end; i++) {\n                            const byteInfo = program.byteData[i];\n                            if (byteInfo !== undefined) {\n                                if (startFrame === undefined || endFrame === undefined) {\n                                    startFrame = byteInfo.startFrame;\n                                    endFrame = byteInfo.endFrame;\n                                }\n                                else {\n                                    startFrame = Math.min(startFrame, byteInfo.startFrame);\n                                    endFrame = Math.max(endFrame, byteInfo.endFrame);\n                                }\n                            }\n                        }\n                        if (endFrame !== undefined && startFrame !== undefined &&\n                            endFrame >= firstOrigSample && startFrame <= lastOrigSample) {\n                            const x1 = viewSampleToX(startFrame / origSamplesPerViewSamples);\n                            const x2 = viewSampleToX(endFrame / origSamplesPerViewSamples);\n                            drawBraceAndLabel(ctx, height, x1, x2, braceColor, annotation.text, labelColor, true);\n                        }\n                    }\n                }\n                else {\n                    // Highlight bytes.\n                    for (const byteInfo of program.byteData) {\n                        if (byteInfo.endFrame >= firstOrigSample && byteInfo.startFrame <= lastOrigSample) {\n                            const x1 = viewSampleToX(byteInfo.startFrame / origSamplesPerViewSamples);\n                            const x2 = viewSampleToX(byteInfo.endFrame / origSamplesPerViewSamples);\n                            let byteValue = byteInfo.value;\n                            const basicToken = getToken(byteValue);\n                            const label = byteValue < 32 ? \"^\" + String.fromCodePoint(byteValue + 64)\n                                : byteValue === 32 ? '\\u2423' // Open box to represent space.\n                                    : byteValue < 128 ? String.fromCodePoint(byteValue)\n                                        : program.isBasicProgram() && basicToken !== undefined ? basicToken\n                                            : toHexByte(byteValue);\n                            drawBraceAndLabel(ctx, height, x1, x2, braceColor, label, labelColor, true);\n                        }\n                    }\n                }\n            }\n            else {\n                // Highlight the whole program.\n                const x1 = viewSampleToX(program.startFrame / origSamplesPerViewSamples);\n                const x2 = viewSampleToX(program.endFrame / origSamplesPerViewSamples);\n                drawBraceAndLabel(ctx, height, x1, x2, braceColor, program.getShortLabel(), labelColor, true);\n            }\n        }\n        // Draw waveform.\n        ctx.strokeStyle = waveformColor;\n        if (drawingLine) {\n            ctx.beginPath();\n        }\n        for (let viewSample = firstViewSample; viewSample <= lastViewSample; viewSample++) {\n            const value = viewSamples[viewSample];\n            const x = viewSampleToX(viewSample);\n            const y = value * height / 65536;\n            if (drawingLine) {\n                if (viewSample === firstViewSample) {\n                    ctx.moveTo(x, height / 2 - y);\n                }\n                else {\n                    ctx.lineTo(x, height / 2 - y);\n                }\n            }\n            else {\n                ctx.beginPath();\n                ctx.moveTo(x, height / 2 - y);\n                ctx.lineTo(x, height / 2 + y);\n                ctx.stroke();\n            }\n        }\n        if (drawingLine) {\n            ctx.stroke();\n        }\n        // Draw waveform annotations.\n        const annotationContext = {\n            width: width,\n            height: height,\n            frameToX(frame) {\n                return viewSampleToX(frame / origSamplesPerViewSamples);\n            },\n            valueToY(value) {\n                return height / 2 - value * height / 65536;\n            },\n            context: ctx,\n            highlightColor: badColor,\n            foregroundColor: style.getPropertyValue(\"--foreground\"),\n            secondaryForegroundColor: style.getPropertyValue(\"--foreground-secondary\"),\n        };\n        for (const waveformAnnotation of this.waveformAnnotations) {\n            waveformAnnotation.draw(annotationContext);\n        }\n    }\n    /**\n     * Set the zoom level to a particular value.\n     *\n     * @param zoom new zoom level.\n     * @param screenX pixel to keep at the same place, or undefined to mean the horizontal center.\n     */\n    setZoom(zoom, screenX) {\n        if (screenX === undefined) {\n            screenX = Math.round(this.displayWidth / 2);\n        }\n        const newZoom = Math.min(Math.max(this.minZoom, zoom), this.maxZoom);\n        if (newZoom !== this.zoom) {\n            const frame = this.screenXToOriginalFrame(screenX);\n            this.zoom = newZoom;\n            this.centerSample = frame - Math.round((screenX - this.displayWidth / 2) * Math.pow(2, newZoom));\n            this.onZoom.dispatch(newZoom);\n            this.draw();\n        }\n    }\n    /**\n     * Zoom to fit a particular bit.\n     */\n    zoomToBitData(bitData) {\n        // Show a bit after a many bits before.\n        const startFrame = bitData.startFrame - 1500;\n        const endFrame = bitData.endFrame + 300;\n        this.zoomToFit(startFrame, endFrame);\n    }\n    /**\n     * Zoom to fit a range of samples.\n     */\n    zoomToFit(startFrame, endFrame) {\n        const sampleCount = endFrame - startFrame;\n        // Visually centered sample (in level 0).\n        this.centerSample = Math.floor((startFrame + endFrame) / 2);\n        // Find appropriate zoom.\n        this.setZoom(this.computeFitLevel(sampleCount), undefined);\n        this.draw();\n    }\n    /**\n     * Zoom to fit all samples.\n     */\n    zoomToFitAll() {\n        if (this.waveforms.length > 0 && this.waveforms[0].samples !== undefined) {\n            this.zoomToFit(0, this.waveforms[0].samples.samplesList[0].length);\n        }\n    }\n    /**\n     * Convert a screen (pixel) X location to the frame number in the original waveform.\n     */\n    screenXToOriginalFrame(screenX) {\n        const mag = Math.pow(2, this.zoom);\n        // Offset in pixels from center of canvas.\n        const pixelOffset = screenX - Math.floor(this.displayWidth / 2);\n        // Convert to frame.\n        let frame = this.centerSample + pixelOffset * mag;\n        // Clamp at end.\n        if (this.waveforms.length > 0) {\n            const waveform = this.waveforms[0];\n            if (waveform.samples.samplesList.length > 0) {\n                const maxFrame = waveform.samples.samplesList[0].length - 1;\n                frame = Math.min(frame, maxFrame);\n            }\n        }\n        // Clamp at start.\n        frame = Math.max(frame, 0);\n        return Math.round(frame);\n    }\n    /**\n     * Convert an original (unzoomed) sample to its X coordinate. Does not clamp to display range.\n     */\n    originalFrameToScreenX(frame) {\n        const mag = Math.pow(2, this.zoom);\n        const centerSample = Math.floor(this.centerSample / mag);\n        return Math.floor(this.displayWidth / 2) + (frame / mag - centerSample);\n    }\n    /**\n     * Return a highlight for the specified frame (in original samples), or undefined\n     * if not found.\n     */\n    highlightAt(frame) {\n        for (const program of this.programs) {\n            for (let byteIndex = 0; byteIndex < program.byteData.length; byteIndex++) {\n                const byteData = program.byteData[byteIndex];\n                if (frame >= byteData.startFrame && frame <= byteData.endFrame) {\n                    return new Highlight(program, byteIndex);\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Update the statistics displayed on the info panels of each waveform.\n     */\n    updateInfoPanels() {\n        let startFrame = undefined;\n        let endFrame = undefined;\n        if (this.selectionMode === SelectionMode.BYTES && this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n            // Swap around.\n            startFrame = Math.min(this.startSelectionFrame, this.endSelectionFrame);\n            endFrame = Math.max(this.startSelectionFrame, this.endSelectionFrame);\n        }\n        else if (this.selectionMode === SelectionMode.SAMPLES && this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n            // Swap around.\n            startFrame = Math.min(this.startSampleSelectionFrame, this.endSampleSelectionFrame);\n            endFrame = Math.max(this.startSampleSelectionFrame, this.endSampleSelectionFrame);\n        }\n        if (startFrame !== undefined && endFrame !== undefined) {\n            for (const waveform of this.waveforms) {\n                const infoPanel = waveform.infoPanel;\n                const duration = endFrame - startFrame;\n                let minValue = undefined;\n                let maxValue = undefined;\n                let samples = waveform.samples.samplesList[0];\n                for (let frame = startFrame; frame <= endFrame; frame++) {\n                    const value = samples[frame];\n                    if (minValue === undefined || value < minValue) {\n                        minValue = value;\n                    }\n                    if (maxValue === undefined || value > maxValue) {\n                        maxValue = value;\n                    }\n                }\n                const parts = [];\n                parts.push(\"<b>Start frame:</b> \" + frameToTimestamp(startFrame, this.sampleRate) + \"<br>\");\n                parts.push(\"<b>End frame:</b> \" + frameToTimestamp(endFrame, this.sampleRate) + \"<br>\");\n                parts.push(\"<b>Duration:</b> \" + frameDurationToString(duration, this.sampleRate) + \"<br>\");\n                if (maxValue !== undefined) {\n                    parts.push(\"<b>Maximum value:</b> \" + withCommas(maxValue) + \"<br>\");\n                }\n                if (minValue !== undefined) {\n                    parts.push(\"<b>Minimum value:</b> \" + withCommas(minValue) + \"<br>\");\n                }\n                infoPanel.innerHTML = parts.join(\"\");\n                // Button to save WAV file of selection.\n                const saveButton = document.createElement(\"button\");\n                saveButton.innerText = \"Save WAV File\";\n                saveButton.classList.add(\"nice_button\");\n                saveButton.style.marginTop = \"20px\";\n                const constStartFrame = startFrame;\n                const constEndFrame = endFrame;\n                saveButton.addEventListener(\"click\", () => this.saveWavFile(waveform.samples.samplesList[0], constStartFrame, constEndFrame));\n                infoPanel.appendChild(saveButton);\n            }\n        }\n        else {\n            // No selection, erase panel.\n            for (const waveform of this.waveforms) {\n                clearElement(waveform.infoPanel);\n            }\n        }\n    }\n    /**\n     * Create a WAV file and auto-download it to the user.\n     */\n    saveWavFile(samples, startFrame, endFrame) {\n        const wav = writeWavFile(samples.subarray(startFrame, endFrame + 1), this.sampleRate);\n        const a = document.createElement(\"a\");\n        const blob = new Blob([wav], { type: \"audio/wav\" });\n        a.href = window.URL.createObjectURL(blob);\n        a.download = \"clip.wav\";\n        a.click();\n    }\n}\n","// Tools for decoding EDTASM programs.\n//\n// http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/edtasm-file-format/\nimport jss from './Jss';\nimport { Highlightable } from \"./Highlighter\";\n// Stylesheet.\nconst BACKGROUND_COLOR = \"#1E1E1E\";\nconst STYLE = {\n    error: {\n        color: \"#aa0000\",\n        \"&$highlighted\": {\n            backgroundColor: \"#aa0000\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    lineNumber: {\n        color: \"#858585\",\n        \"&$highlighted\": {\n            backgroundColor: \"#858585\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    regular: {\n        color: \"#9CDCFE\",\n        \"&$highlighted\": {\n            backgroundColor: \"#9CDCFE\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    comment: {\n        color: \"#6A9955\",\n        \"&$highlighted\": {\n            backgroundColor: \"#6A9955\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"#555555\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * TODO share this code with Basic.ts.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n * @return the new element.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n/**\n * Decoded the program into the DIV, returning the program name and array of created elements.\n */\nexport function decodeEdtasm(bytes, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    const elements = [];\n    let e;\n    // Check magic.\n    if (bytes.length < 7 || bytes[0] !== 0xD3) {\n        add(out, \"EDTASM: missing magic -- not a EDTASM file.\", classes.error);\n        return [\"Error\", elements];\n    }\n    // Read name of program.\n    const name = (String.fromCodePoint(bytes[1]) +\n        String.fromCodePoint(bytes[2]) +\n        String.fromCodePoint(bytes[3]) +\n        String.fromCodePoint(bytes[4]) +\n        String.fromCodePoint(bytes[5]) +\n        String.fromCodePoint(bytes[6])).trim();\n    let i = 7;\n    while (true) {\n        if (bytes.length - i < 5) {\n            // End of program.\n            return [name, elements];\n        }\n        const line = document.createElement(\"div\");\n        // Read line number.\n        for (let j = 0; j < 5; j++) {\n            e = add(line, (bytes[i] - 0xB0).toString(), classes.lineNumber);\n            elements.push(new Highlightable(i, i, e));\n            i++;\n        }\n        // Parse line.\n        let pos = 0;\n        let className = classes.regular;\n        while (i < bytes.length && bytes[i] != 0x0D && bytes[i] !== 0x0A && bytes[i] !== 0x1A) {\n            let text;\n            if (bytes[i] === 0x09) {\n                // Tab.\n                text = \"\";\n                do {\n                    text += \" \";\n                    pos++;\n                } while (pos % 8 !== 0);\n            }\n            else {\n                // Non-tab.\n                text = String.fromCodePoint(bytes[i]);\n                if (text === \";\") {\n                    // Semicolon to end of line is comment.\n                    className = classes.comment;\n                }\n                pos++;\n            }\n            e = add(line, text, className);\n            elements.push(new Highlightable(i, i, e));\n            i++;\n        }\n        // Skip EOL.\n        while (i < bytes.length && (bytes[i] === 0x0D || bytes[i] === 0x0A)) {\n            i++;\n        }\n        out.appendChild(line);\n    }\n}\n","import { frameToTimestamp } from \"./AudioUtils\";\nimport * as BasicRender from \"./BasicRender\";\nimport * as SystemProgramRender from \"./SystemProgramRender\";\nimport * as CmdProgramRender from \"./CmdProgramRender\";\nimport * as Hexdump from \"./Hexdump\";\nimport { Program } from \"./Program\";\nimport { CassettePlayer, ControlPanel, CanvasScreen, ProgressBar, Trs80, SettingsPanel, PanelType } from \"trs80-emulator\";\nimport { WaveformDisplay } from \"./WaveformDisplay\";\nimport * as Edtasm from \"./Edtasm\";\nimport { BitType } from \"./BitType\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { clearElement } from \"./Utils\";\nimport { Highlighter } from \"./Highlighter\";\nimport { DEFAULT_SAMPLE_RATE } from \"./WavFile\";\nimport { decodeBasicProgram, decodeCmdProgram, decodeSystemProgram } from \"trs80-base\";\n/**\n * Generic cassette that reads from a Int16Array.\n */\nclass Int16Cassette extends CassettePlayer {\n    constructor(samples, sampleRate) {\n        super();\n        this.frame = 0;\n        this.motorOn = false;\n        this.rewinding = false;\n        this.samples = samples;\n        this.samplesPerSecond = sampleRate;\n    }\n    rewind() {\n        if (this.progressBar === undefined) {\n            this.frame = 0;\n        }\n        else {\n            this.rewinding = true;\n            this.updateProgressBarVisibility();\n            const updateRewind = () => {\n                var _a;\n                if (this.frame > 0) {\n                    this.frame = Math.max(0, Math.round(this.frame - this.samples.length / 30));\n                    (_a = this.progressBar) === null || _a === void 0 ? void 0 : _a.setValue(this.frame);\n                    window.requestAnimationFrame(updateRewind);\n                }\n                else {\n                    this.rewinding = false;\n                    this.updateProgressBarVisibility();\n                }\n            };\n            // Wait for progress bar to become visible.\n            setTimeout(updateRewind, 150);\n        }\n    }\n    setProgressBar(progressBar) {\n        this.progressBar = progressBar;\n        this.progressBar.setMaxValue(this.samples.length);\n    }\n    onMotorStart() {\n        this.motorOn = true;\n        this.updateProgressBarVisibility();\n    }\n    readSample() {\n        if (this.rewinding) {\n            // Can't read while rewinding.\n            return 0;\n        }\n        else {\n            if (this.frame % this.samplesPerSecond === 0) {\n                console.log(\"Reading tape at \" + frameToTimestamp(this.frame, this.samplesPerSecond));\n            }\n            if (this.progressBar !== undefined &&\n                (this.frame % Math.floor(this.samplesPerSecond / 10) === 0 ||\n                    this.frame == this.samples.length - 1)) {\n                this.progressBar.setValue(this.frame);\n            }\n            return this.frame < this.samples.length ? this.samples[this.frame++] / 32768 : 0;\n        }\n    }\n    onMotorStop() {\n        this.motorOn = false;\n        this.updateProgressBarVisibility();\n    }\n    updateProgressBarVisibility() {\n        if (this.progressBar !== undefined) {\n            if (this.motorOn || this.rewinding) {\n                this.progressBar.show();\n            }\n            else {\n                this.progressBar.hide();\n            }\n        }\n    }\n}\n/**\n * Implementation of Cassette that reads from our displayed data.\n */\nclass TapeCassette extends Int16Cassette {\n    constructor(tape, program) {\n        const samples = tape.originalSamples.samplesList[0];\n        // Start one second before the official program start, so that the machine\n        // can detect the header.\n        const begin = program === undefined ? 0 : Math.max(0, program.startFrame - tape.sampleRate);\n        // Go until one second after the detected end of our program.\n        const end = program === undefined ? samples.length : Math.min(samples.length, program.endFrame + tape.sampleRate);\n        super(samples.subarray(begin, end), tape.sampleRate);\n    }\n}\n/**\n * Implementation of Cassette that reads from our high-speed reconstruction.\n */\nclass ReconstructedCassette extends Int16Cassette {\n    constructor(samples, sampleRate) {\n        super(samples.samplesList[0], sampleRate);\n    }\n}\n/**\n * Empty cassette for when there's nothing to read.\n */\nclass EmptyCassette extends Int16Cassette {\n    constructor() {\n        super(new Int16Array(0), DEFAULT_SAMPLE_RATE);\n    }\n}\n/**\n * Class that keeps track of various information about a pane.\n */\nclass Pane {\n    constructor(element) {\n        this.element = element;\n    }\n}\n/**\n * UI for browsing a tape interactively.\n */\nexport class TapeBrowser {\n    constructor(tape, waveforms, originalCanvas, filteredCanvas, lowSpeedCanvas, tapeContents, topData) {\n        /**\n         * All the panes we created in the upper-right (program, etc.).\n         */\n        this.panes = [];\n        /**\n         * Dispatcher for highlight property.\n         */\n        this.onHighlight = new SimpleEventDispatcher();\n        /**\n         * Dispatcher for selection property.\n         */\n        this.onSelection = new SimpleEventDispatcher();\n        /**\n         * Dispatcher for the selection being done. Value is the source of the selecting process.\n         */\n        this.onDoneSelecting = new SimpleEventDispatcher();\n        this.tape = tape;\n        this.waveforms = waveforms;\n        this.tapeContents = tapeContents;\n        this.topData = topData;\n        this.originalWaveformDisplay = new WaveformDisplay(tape.sampleRate);\n        clearElement(tapeContents);\n        clearElement(topData);\n        this.makeOriginalSamplesWaveforms(waveforms);\n        this.tape.programs.forEach(program => this.originalWaveformDisplay.addProgram(program));\n        this.originalWaveformDisplay.draw();\n        // Update left-side panel.\n        this.updateTapeContents();\n    }\n    /**\n     * Update the highlighted byte.\n     */\n    setHighlight(highlight) {\n        this.highlight = highlight;\n        this.onHighlight.dispatch(this.highlight);\n    }\n    /**\n     * Update the selected byte.\n     */\n    setSelection(selection) {\n        this.selection = selection;\n        this.onSelection.dispatch(this.selection);\n    }\n    /**\n     * Called when the user has finished selecting part of the data (releases the mouse button).\n     */\n    doneSelecting(source) {\n        this.onDoneSelecting.dispatch(source);\n    }\n    /**\n     * Fill the parent with the labels and canvases to display the specified waveforms\n     * and their labels.\n     */\n    makeWaveforms(parent, waveformDisplay, showSelectionType, sampleSets) {\n        clearElement(parent);\n        parent.appendChild(waveformDisplay.makeControls(showSelectionType));\n        for (const sampleSet of sampleSets) {\n            waveformDisplay.addWaveformAndChrome(sampleSet.label, sampleSet.samples, parent);\n        }\n        this.onHighlight.subscribe(highlight => waveformDisplay.setHighlight(highlight));\n        this.onSelection.subscribe(selection => waveformDisplay.setSelection(selection));\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== waveformDisplay) {\n                waveformDisplay.doneSelecting();\n            }\n        });\n        waveformDisplay.onHighlight.subscribe(highlight => this.setHighlight(highlight));\n        waveformDisplay.onSelection.subscribe(selection => this.setSelection(selection));\n        waveformDisplay.onDoneSelecting.subscribe(source => this.doneSelecting(source));\n        waveformDisplay.zoomToFitAll();\n        waveformDisplay.queueDraw();\n    }\n    /**\n     * Make the lower-right pane of original waveforms.\n     */\n    makeOriginalSamplesWaveforms(waveforms) {\n        this.originalWaveformDisplay.addWaveformAnnotations(this.tape.waveformAnnotations);\n        this.makeWaveforms(waveforms, this.originalWaveformDisplay, true, [\n            {\n                label: \"Original waveform:\",\n                samples: this.tape.originalSamples,\n            },\n            {\n                label: \"High-pass filtered to get rid of DC:\",\n                samples: this.tape.filteredSamples,\n            },\n            {\n                label: \"Pre-processed for low-speed decoding:\",\n                samples: this.tape.lowSpeedSamples,\n            },\n        ]);\n    }\n    /**\n     * Make pane of metadata for a program.\n     */\n    makeMetadataPane(program, basicPane, systemPane, edtasmPane, cmdPane, onProgramClick) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"metadata\");\n        div.style.display = \"flex\";\n        const textInfoDiv = document.createElement(\"div\");\n        div.appendChild(textInfoDiv);\n        const h1 = document.createElement(\"h1\");\n        h1.innerText = program instanceof Program\n            ? \"Track \" + program.trackNumber + \", copy \" + program.copyNumber\n            : \"Whole Tape\";\n        textInfoDiv.appendChild(h1);\n        const table = document.createElement(\"table\");\n        textInfoDiv.appendChild(table);\n        // Add entry with any data cell for value. Returns the key element.\n        const addKeyElement = (key, valueElement) => {\n            const row = document.createElement(\"tr\");\n            const keyElement = document.createElement(\"td\");\n            keyElement.classList.add(\"key\");\n            keyElement.innerText = key + \":\";\n            row.appendChild(keyElement);\n            row.appendChild(valueElement);\n            table.appendChild(row);\n            return keyElement;\n        };\n        // Add entry with text (possibly clickable) for value.\n        const addKeyValue = (key, value, click) => {\n            const valueElement = document.createElement(\"td\");\n            valueElement.classList.add(\"value\");\n            valueElement.innerText = value;\n            if (click !== undefined) {\n                valueElement.classList.add(\"clickable\");\n                valueElement.addEventListener(\"click\", click);\n            }\n            addKeyElement(key, valueElement);\n        };\n        const addKeyValues = (key, values, click) => {\n            const valuesElement = document.createElement(\"td\");\n            valuesElement.classList.add(\"value\");\n            for (const value of values) {\n                const valueElement = document.createElement(\"span\");\n                valueElement.innerText = value;\n                if (click !== undefined) {\n                    valueElement.classList.add(\"clickable\");\n                    valueElement.addEventListener(\"click\", () => click(value));\n                }\n                valuesElement.appendChild(valueElement);\n            }\n            addKeyElement(key, valuesElement);\n        };\n        if (program instanceof Program) {\n            addKeyValue(\"Decoder\", program.decoder.getName());\n        }\n        const startFrame = program instanceof Program ? program.startFrame : 0;\n        const endFrame = program instanceof Program ? program.endFrame : program.originalSamples.samplesList[0].length;\n        addKeyValue(\"Start time\", frameToTimestamp(startFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToFit(startFrame - 100, startFrame + 100));\n        addKeyValue(\"End time\", frameToTimestamp(endFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToFit(endFrame - 100, endFrame + 100));\n        addKeyValue(\"Duration\", frameToTimestamp(endFrame - startFrame, this.tape.sampleRate, true), () => this.originalWaveformDisplay.zoomToFit(startFrame, endFrame));\n        if (program instanceof Program) {\n            const binExtention = basicPane !== undefined ? \".BAS\"\n                : systemPane !== undefined ? \".3BN\"\n                    : cmdPane !== undefined ? \".CMD\"\n                        : \".BIN\";\n            addKeyValues(\"Download\", [binExtention, \".CAS\", \".WAV\"], (extension) => {\n                // Download binary.\n                const a = document.createElement(\"a\");\n                let contents;\n                let type;\n                if (extension === \".CAS\") {\n                    contents = program.asCasFile();\n                    type = \"application/octet-stream\";\n                }\n                else if (extension === \".WAV\") {\n                    contents = program.asWavFile();\n                    type = \"audio/wav\";\n                }\n                else {\n                    contents = program.binary;\n                    type = \"application/octet-stream\";\n                }\n                const blob = new Blob([contents], { type: type });\n                a.href = window.URL.createObjectURL(blob);\n                a.download = (this.tape.name + \"-\" + program.getShortLabel()).replace(/ /g, \"-\") + extension;\n                a.click();\n            });\n            if (basicPane !== undefined) {\n                addKeyValue(\"Type\", \"Basic program\", () => this.showPane(basicPane));\n            }\n            else if (systemPane !== undefined) {\n                addKeyValue(\"Type\", \"System program\" + (systemPane.programName ? \" (\" + systemPane.programName + \")\" : \"\"), () => this.showPane(systemPane));\n            }\n            else if (edtasmPane !== undefined) {\n                addKeyValue(\"Type\", \"Assembly program\" + (edtasmPane.programName ? \" (\" + edtasmPane.programName + \")\" : \"\"), () => this.showPane(edtasmPane));\n            }\n            else if (cmdPane !== undefined) {\n                addKeyValue(\"Type\", \"CMD program\" + (cmdPane.programName ? \" (\" + cmdPane.programName + \")\" : \"\"), () => this.showPane(cmdPane));\n            }\n            else {\n                addKeyValue(\"Type\", \"Unknown\");\n            }\n        }\n        else {\n            addKeyValues(\"Download\", [\".CAS\", \".WAV\"], (extension) => {\n                // Download binary.\n                const a = document.createElement(\"a\");\n                let contents;\n                let type;\n                if (extension === \".CAS\") {\n                    contents = program.asCasFile();\n                    type = \"application/octet-stream\";\n                }\n                else {\n                    contents = program.asWavFile();\n                    type = \"audio/wav\";\n                }\n                const blob = new Blob([contents], { type: type });\n                a.href = window.URL.createObjectURL(blob);\n                a.download = (this.tape.name).replace(/ /g, \"-\") + extension;\n                a.click();\n            });\n        }\n        // Add editable fields.\n        if (program instanceof Program) {\n            const td = document.createElement(\"td\");\n            td.classList.add(\"value\");\n            const input = document.createElement(\"input\");\n            input.type = \"text\";\n            input.classList.add(\"name\");\n            program.onName.subscribe(name => input.value = name);\n            input.value = program.name;\n            // Spec says \"off\", but Chrome ignores that, so use \"chrome-off\".\n            input.autocomplete = \"chrome-off\";\n            td.appendChild(input);\n            addKeyElement(\"Name\", td);\n            input.addEventListener(\"input\", event => {\n                program.setName(input.value);\n                this.tape.saveUserData();\n            });\n        }\n        {\n            // Show note.\n            const td = document.createElement(\"td\");\n            td.classList.add(\"value\");\n            const input = document.createElement(\"textarea\");\n            input.classList.add(\"notes\");\n            input.rows = 5;\n            program.onNotes.subscribe(notes => input.value = notes);\n            input.value = program.notes;\n            // Spec says \"off\", but Chrome ignores that, so use \"chrome-off\".\n            input.autocomplete = \"chrome-off\";\n            td.appendChild(input);\n            const keyElement = addKeyElement(\"Notes\", td);\n            keyElement.classList.add(\"top\");\n            input.addEventListener(\"input\", event => {\n                program.setNotes(input.value);\n                this.tape.saveUserData();\n            });\n        }\n        if (program instanceof Program) {\n            // Add bit errors.\n            let count = 1;\n            for (const bitData of program.bitData) {\n                if (bitData.bitType === BitType.BAD) {\n                    addKeyValue(\"Bit error \" + count++, frameToTimestamp(bitData.startFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToBitData(bitData));\n                }\n            }\n            // Add screenshot.\n            const screenshotDiv = document.createElement(\"div\");\n            screenshotDiv.style.marginLeft = \"20pt\";\n            div.appendChild(screenshotDiv);\n            const screenshotScreen = new CanvasScreen();\n            const updateScreenshot = (screenshot) => {\n                clearElement(screenshotDiv);\n                if (screenshot !== \"\") {\n                    screenshotScreen.displayScreenshot(program.screenshot);\n                    screenshotDiv.append(screenshotScreen.asImage());\n                }\n            };\n            program.onScreenshot.subscribe(screenshot => {\n                updateScreenshot(screenshot);\n            });\n            updateScreenshot(program.screenshot);\n        }\n        else {\n            const screenshotsDiv = document.createElement(\"div\");\n            div.appendChild(screenshotsDiv);\n            for (const subprogram of program.programs) {\n                const screenshotDiv = document.createElement(\"div\");\n                screenshotDiv.style.marginLeft = \"20pt\";\n                screenshotDiv.style.marginBottom = \"20pt\";\n                screenshotDiv.style.float = \"left\";\n                if (onProgramClick !== undefined) {\n                    screenshotDiv.style.cursor = \"pointer\";\n                    screenshotDiv.addEventListener(\"click\", () => onProgramClick(subprogram));\n                }\n                screenshotsDiv.appendChild(screenshotDiv);\n                const screenshotScreen = new CanvasScreen();\n                const updateScreenshot = function (screenshot) {\n                    clearElement(screenshotDiv);\n                    if (screenshot !== \"\") {\n                        screenshotScreen.displayScreenshot(screenshot);\n                        const image = screenshotScreen.asImage();\n                        image.style.maxWidth = \"200px\";\n                        screenshotDiv.append(image);\n                        screenshotDiv.style.display = \"block\";\n                    }\n                    else {\n                        screenshotDiv.style.display = \"none\";\n                    }\n                };\n                updateScreenshot(subprogram.screenshot);\n                subprogram.onScreenshot.subscribe(screenshot => {\n                    updateScreenshot(screenshot);\n                });\n            }\n        }\n        return new Pane(div);\n    }\n    makeBinaryPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const hexHighlighter = new Highlighter(this, program, div);\n        const asciiHighlighter = new Highlighter(this, program, div);\n        const [hexElements, asciiElements] = Hexdump.create(program.binary, div);\n        hexHighlighter.addHighlightables(hexElements);\n        asciiHighlighter.addHighlightables(asciiElements);\n        this.onHighlight.subscribe(highlight => {\n            hexHighlighter.highlight(highlight, program, Hexdump.highlightClassName);\n            asciiHighlighter.highlight(highlight, program, Hexdump.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            hexHighlighter.select(selection, program, Hexdump.selectClassName);\n            asciiHighlighter.select(selection, program, Hexdump.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== hexHighlighter && source !== asciiHighlighter) {\n                hexHighlighter.doneSelecting();\n                asciiHighlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        pane.didShow = () => {\n            hexHighlighter.didShow();\n            asciiHighlighter.didShow();\n        };\n        return pane;\n    }\n    /**\n     * Make the pane of the audio sample we reconstruct from the bits.\n     */\n    makeReconstructedPane(samples) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"reconstructed_waveform\");\n        this.makeWaveforms(div, new WaveformDisplay(this.tape.sampleRate), false, [\n            {\n                label: \"Reconstructed low-speed waveform:\",\n                samples: samples,\n            }\n        ]);\n        return new Pane(div);\n    }\n    makeBasicPane(program, basicProgram) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const highlightables = BasicRender.toDiv(basicProgram, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(highlightables);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, BasicRender.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, BasicRender.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeSystemPane(program, systemProgram) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        div.classList.add(\"system-program\");\n        const [highlightables, annotations] = SystemProgramRender.toDiv(systemProgram, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(highlightables);\n        if (program.annotations === undefined) {\n            program.annotations = [];\n        }\n        program.annotations.push(...systemProgram.annotations, ...annotations);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, SystemProgramRender.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, SystemProgramRender.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        if (systemProgram.filename !== \"\") {\n            pane.programName = systemProgram.filename;\n        }\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeCmdPane(program, cmdProgram) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        div.classList.add(\"cmd-program\");\n        const [highlightables, annotations] = CmdProgramRender.toDiv(cmdProgram, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(highlightables);\n        if (program.annotations === undefined) {\n            program.annotations = [];\n        }\n        program.annotations.push(...cmdProgram.annotations, ...annotations);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, CmdProgramRender.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, CmdProgramRender.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        if (cmdProgram.filename !== \"\") {\n            pane.programName = cmdProgram.filename;\n        }\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeEdtasmPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const [name, elements] = Edtasm.decodeEdtasm(program.binary, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(elements);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, Edtasm.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, Edtasm.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        const pane = new Pane(div);\n        pane.programName = name;\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    /**\n     * Create a pane with an emulator pointing at the cassette and program.\n     */\n    makeEmulatorPane(program, cassette, trs80File) {\n        const div = document.createElement(\"div\");\n        const screenDiv = document.createElement(\"div\");\n        div.appendChild(screenDiv);\n        const screen = new CanvasScreen();\n        screenDiv.append(screen.getNode());\n        const trs80 = new Trs80(screen, cassette !== null && cassette !== void 0 ? cassette : new EmptyCassette());\n        const reboot = () => {\n            trs80.reset();\n            if (trs80File !== undefined) {\n                trs80.runTrs80File(trs80File);\n            }\n        };\n        const hardwareSettingsPanel = new SettingsPanel(screen.getNode(), trs80, PanelType.HARDWARE);\n        const viewPanel = new SettingsPanel(screen.getNode(), trs80, PanelType.VIEW);\n        const controlPanel = new ControlPanel(screen.getNode());\n        controlPanel.addResetButton(reboot);\n        if (cassette !== undefined) {\n            controlPanel.addTapeRewindButton(() => {\n                cassette.rewind();\n            });\n        }\n        if (program !== undefined) {\n            controlPanel.addScreenshotButton(() => {\n                const screenshot = trs80.getScreenshot();\n                program.setScreenshot(screenshot);\n                this.tape.saveUserData();\n            });\n        }\n        controlPanel.addSettingsButton(hardwareSettingsPanel);\n        controlPanel.addSettingsButton(viewPanel);\n        if (cassette !== undefined) {\n            const progressBar = new ProgressBar(screen.getNode());\n            cassette.setProgressBar(progressBar);\n        }\n        reboot();\n        let pane = new Pane(div);\n        pane.didShow = () => trs80.start();\n        pane.didHide = () => trs80.stop();\n        return pane;\n    }\n    /**\n     * Show a particular pane and hide all others.\n     */\n    showPane(pane) {\n        var _a, _b, _c, _d, _e, _f;\n        // Hide all others.\n        for (const otherPane of this.panes) {\n            if (otherPane !== pane) {\n                (_a = otherPane.willHide) === null || _a === void 0 ? void 0 : _a.call(otherPane);\n                otherPane.element.classList.add(\"hidden\");\n                (_b = otherPane.row) === null || _b === void 0 ? void 0 : _b.classList.remove(\"selected\");\n                (_c = otherPane.didHide) === null || _c === void 0 ? void 0 : _c.call(otherPane);\n            }\n        }\n        // Show this one.\n        (_d = pane.willShow) === null || _d === void 0 ? void 0 : _d.call(pane);\n        pane.element.classList.remove(\"hidden\");\n        (_e = pane.row) === null || _e === void 0 ? void 0 : _e.classList.add(\"selected\");\n        (_f = pane.didShow) === null || _f === void 0 ? void 0 : _f.call(pane);\n    }\n    /**\n     * Create the panes and the table of contents for them on the left.\n     */\n    updateTapeContents() {\n        var _a;\n        // Add a new section that we can style all at once.\n        const addSection = () => {\n            const sectionDiv = document.createElement(\"div\");\n            this.tapeContents.appendChild(sectionDiv);\n            return sectionDiv;\n        };\n        let sectionDiv = addSection();\n        // Add a row to the table of contents. Returns the row div.\n        const addRow = (text, onClick) => {\n            const rowDiv = document.createElement(\"div\");\n            rowDiv.classList.add(\"tape_contents_row\");\n            rowDiv.innerText = text;\n            if (onClick !== undefined) {\n                rowDiv.classList.add(\"selectable_row\");\n                rowDiv.onclick = onClick;\n            }\n            sectionDiv.appendChild(rowDiv);\n            return rowDiv;\n        };\n        // Show the name of the whole tape.\n        const title = addRow(this.tape.name);\n        title.classList.add(\"tape_title\");\n        // Create panes for each program.\n        let previousTrackNumber = -1;\n        let copiesOfTrack = [];\n        // Add a pane to the top-right, register it, and add it to table of contents.\n        const addPane = (label, pane) => {\n            pane.element.classList.add(\"pane\");\n            pane.element.classList.add(\"hidden\");\n            this.topData.appendChild(pane.element);\n            this.panes.push(pane);\n            pane.row = addRow(\"    \" + label, () => {\n                this.showPane(pane);\n            });\n        };\n        // Map from program to action when its screenshot is clicked.\n        const screenshotClickAction = new WeakMap();\n        // Header for tape.\n        const row = addRow(\"Whole tape\");\n        row.classList.add(\"program_title\");\n        let metadataLabel = frameToTimestamp(0, this.tape.sampleRate, true) + \" to \" +\n            frameToTimestamp(this.tape.originalSamples.samplesList[0].length, this.tape.sampleRate, true);\n        addPane(metadataLabel, this.makeMetadataPane(this.tape, undefined, undefined, undefined, undefined, (program) => {\n            var _a;\n            (_a = screenshotClickAction.get(program)) === null || _a === void 0 ? void 0 : _a();\n        }));\n        addPane(\"Emulator\", this.makeEmulatorPane(undefined, new TapeCassette(this.tape, undefined)));\n        // Section for each program.\n        for (const program of this.tape.programs) {\n            let duplicateOfCopy = undefined;\n            sectionDiv = addSection();\n            // Header for program.\n            const row = addRow(program.name || program.getLabel());\n            program.onName.subscribe(name => row.innerText = program.name || program.getLabel());\n            row.classList.add(\"program_title\");\n            // Dividing line for new tracks.\n            if (program.trackNumber !== previousTrackNumber) {\n                row.classList.add(\"new_track\");\n                previousTrackNumber = program.trackNumber;\n                copiesOfTrack = [];\n            }\n            else {\n                // See if this is an exact version of a previous copy.\n                for (const previousProgram of copiesOfTrack) {\n                    if (program.sameBinaryAs(previousProgram)) {\n                        sectionDiv.classList.add(\"duplicate_copy\");\n                        duplicateOfCopy = previousProgram;\n                        break;\n                    }\n                }\n            }\n            copiesOfTrack.push(program);\n            // Decode the programs.\n            const basicProgram = decodeBasicProgram(program.binary);\n            const systemProgram = decodeSystemProgram(program.binary);\n            const cmdProgram = decodeCmdProgram(program.binary);\n            // Make these panes here so they're accessible from the metadata page.\n            const basicPane = basicProgram !== undefined ? this.makeBasicPane(program, basicProgram) : undefined;\n            const systemPane = systemProgram !== undefined ? this.makeSystemPane(program, systemProgram) : undefined;\n            const edtasmPane = program.isEdtasmProgram() ? this.makeEdtasmPane(program) : undefined;\n            const cmdPane = cmdProgram !== undefined ? this.makeCmdPane(program, cmdProgram) : undefined;\n            // Metadata pane.\n            let metadataLabel = frameToTimestamp(program.startFrame, this.tape.sampleRate, true) + \" to \" +\n                frameToTimestamp(program.endFrame, this.tape.sampleRate, true) + \" (\" +\n                frameToTimestamp(program.endFrame - program.startFrame, this.tape.sampleRate, true) + \")\";\n            const bitErrorCount = program.countBitErrors();\n            if (bitErrorCount > 0) {\n                metadataLabel += \", \" + bitErrorCount + \" error\" + (bitErrorCount === 1 ? \"\" : \"s\");\n            }\n            let metadataPane = this.makeMetadataPane(program, basicPane, systemPane, edtasmPane, cmdPane, undefined);\n            addPane(metadataLabel, metadataPane);\n            screenshotClickAction.set(program, () => {\n                var _a;\n                this.showPane(metadataPane);\n                (_a = metadataPane.row) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                });\n            });\n            // Make the various panes.\n            addPane(\"Binary\" + (duplicateOfCopy !== undefined ? \" (same as copy \" + duplicateOfCopy.copyNumber + \")\" : \"\"), this.makeBinaryPane(program));\n            if (program.reconstructedSamples !== undefined) {\n                addPane(\"Reconstructed\", this.makeReconstructedPane(program.reconstructedSamples));\n            }\n            if (basicPane !== undefined) {\n                addPane(\"Basic program\", basicPane);\n            }\n            if (systemPane !== undefined) {\n                addPane(\"System program\" + (systemPane.programName ? \" (\" + systemPane.programName + \")\" : \"\"), systemPane);\n            }\n            if (cmdPane !== undefined) {\n                addPane(\"CMD program\" + (cmdPane.programName ? \" (\" + cmdPane.programName + \")\" : \"\"), cmdPane);\n            }\n            if (edtasmPane !== undefined) {\n                addPane(\"Assembly\" + (edtasmPane.programName ? \" (\" + edtasmPane.programName + \")\" : \"\"), edtasmPane);\n            }\n            if (basicPane !== undefined || systemPane !== undefined) {\n                let emulatorLabel = \"Emulator (original, \" + (program.decoder.isHighSpeed() ? \"high\" : \"low\") + \" speed)\";\n                addPane(emulatorLabel, this.makeEmulatorPane(program, new TapeCassette(this.tape, program)));\n                if (program.reconstructedSamples !== undefined) {\n                    addPane(\"Emulator (reconstructed, low speed)\", this.makeEmulatorPane(program, new ReconstructedCassette(program.reconstructedSamples, this.tape.sampleRate)));\n                }\n            }\n            const trs80File = (_a = systemProgram !== null && systemProgram !== void 0 ? systemProgram : cmdProgram) !== null && _a !== void 0 ? _a : basicProgram;\n            if (trs80File !== undefined) {\n                addPane(\"Emulator (auto-run)\", this.makeEmulatorPane(program, undefined, trs80File));\n            }\n        }\n        // Show the first pane.\n        if (this.panes.length > 0) {\n            this.showPane(this.panes[0]);\n        }\n    }\n}\n","// Handles uploading WAV files and decoding them.\nimport { AudioFile } from \"./AudioUtils\";\nimport { DEFAULT_SAMPLE_RATE, readWavFile } from \"./WavFile\";\nimport { encodeLowSpeed, wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nimport { encodeHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { wrapBasic } from \"trs80-base\";\nexport class Uploader {\n    /**\n     * @param dropZone any element where files can be dropped.\n     * @param inputElement file type input element.\n     * @param dropS3 buttons to upload from S3.\n     * @param dropProgress progress bar for loading large files.\n     * @param handleAudioBuffer callback with AudioBuffer parameter.\n     */\n    constructor(dropZone, inputElement, dropS3, dropProgress, handleAudioBuffer) {\n        this.uploadInput = inputElement;\n        this.handleAudioBuffer = handleAudioBuffer;\n        this.progressBar = dropProgress;\n        dropZone.ondrop = (ev) => this.dropHandler(ev);\n        dropZone.ondragover = (ev) => {\n            dropZone.classList.add(\"hover\");\n            // Prevent default behavior (prevent file from being opened).\n            ev.preventDefault();\n        };\n        dropZone.ondragleave = () => dropZone.classList.remove(\"hover\");\n        inputElement.onchange = () => {\n            if (inputElement.files) {\n                const file = inputElement.files[0];\n                if (file) {\n                    this.handleDroppedFile(file);\n                }\n            }\n        };\n        inputElement.onprogress = (event) => this.showProgress(event);\n        dropS3.forEach((node) => {\n            const button = node;\n            button.onclick = () => {\n                const url = button.getAttribute(\"data-src\");\n                const request = new XMLHttpRequest();\n                request.open(\"GET\", url, true);\n                request.responseType = \"arraybuffer\";\n                request.onload = () => this.handleArrayBuffer(url, request.response);\n                request.onprogress = (event) => this.showProgress(event);\n                // For testing progress bar only:\n                /// request.setRequestHeader(\"Cache-Control\", \"no-cache, no-store, must-revalidate\");\n                request.send();\n            };\n        });\n    }\n    reset() {\n        this.progressBar.classList.add(\"hidden\");\n        this.uploadInput.value = \"\";\n    }\n    handleDroppedFile(file) {\n        // We could use file.arrayBuffer() here, but as of writing it's buggy\n        // in Firefox 70. https://bugzilla.mozilla.org/show_bug.cgi?id=1585284\n        const fileReader = new FileReader();\n        fileReader.addEventListener(\"loadend\", () => {\n            if (fileReader.result instanceof ArrayBuffer) {\n                this.handleArrayBuffer(file.name, fileReader.result);\n            }\n            else {\n                console.log(\"Error: Unexpected type for fileReader.result: \" +\n                    fileReader.result);\n            }\n        });\n        fileReader.addEventListener(\"progress\", (event) => this.showProgress(event));\n        fileReader.readAsArrayBuffer(file);\n    }\n    showProgress(event) {\n        this.progressBar.classList.remove(\"hidden\");\n        this.progressBar.value = event.loaded;\n        this.progressBar.max = event.total;\n    }\n    handleArrayBuffer(pathname, arrayBuffer) {\n        let audioFile;\n        if (pathname.toLowerCase().endsWith(\".cas\")) {\n            let bytes = new Uint8Array(arrayBuffer);\n            const highSpeed = bytes.length > 0 && bytes[0] === 0x55;\n            const audio = highSpeed ? encodeHighSpeed(bytes, DEFAULT_SAMPLE_RATE) : encodeLowSpeed(bytes, DEFAULT_SAMPLE_RATE);\n            audioFile = new AudioFile(DEFAULT_SAMPLE_RATE, audio);\n        }\n        else if (pathname.toLowerCase().endsWith(\".bas\")) {\n            audioFile = new AudioFile(DEFAULT_SAMPLE_RATE, encodeLowSpeed(wrapLowSpeed(wrapBasic(new Uint8Array(arrayBuffer))), DEFAULT_SAMPLE_RATE));\n        }\n        else if (pathname.toLowerCase().endsWith(\".cmd\")) {\n            audioFile = new AudioFile(DEFAULT_SAMPLE_RATE, encodeLowSpeed(wrapLowSpeed(new Uint8Array(arrayBuffer)), DEFAULT_SAMPLE_RATE));\n        }\n        else {\n            audioFile = readWavFile(arrayBuffer);\n        }\n        this.handleAudioBuffer(pathname, audioFile);\n    }\n    dropHandler(ev) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        if (ev.dataTransfer) {\n            if (ev.dataTransfer.items) {\n                // Use DataTransferItemList interface to access the files.\n                for (const item of ev.dataTransfer.items) {\n                    // If dropped items aren't files, reject them\n                    if (item.kind === \"file\") {\n                        const file = item.getAsFile();\n                        if (file) {\n                            this.handleDroppedFile(file);\n                        }\n                    }\n                }\n            }\n            else {\n                // Use DataTransfer interface to access the files.\n                for (const file of ev.dataTransfer.files) {\n                    this.handleDroppedFile(file);\n                }\n            }\n        }\n    }\n}\n","// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements\n// and very few assumptions about the user's page layout.\nvar global = typeof window !== 'undefined' ? window : null;\nvar ssr = global === null;\nvar document = !ssr ? global.document : undefined;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () { return false; };\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = ssr\n    ? 'calc'\n    : ((['', '-webkit-', '-moz-', '-o-']\n          .filter(function (prefix) {\n              var el = document.createElement('div');\n              el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n\n              return !!el.style.length\n          })\n          .shift()) + \"calc\");\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) { return typeof v === 'string' || v instanceof String; };\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n    if (isString(el)) {\n        var ele = document.querySelector(el);\n        if (!ele) {\n            throw new Error((\"Selector \" + el + \" did not match a DOM element\"))\n        }\n        return ele\n    }\n\n    return el\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n    var value = options[propName];\n    if (value !== undefined) {\n        return value\n    }\n    return def\n};\n\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n    if (isFirst) {\n        if (gutterAlign === 'end') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    } else if (isLast) {\n        if (gutterAlign === 'start') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    }\n\n    return gutterSize\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n    var gut = document.createElement('div');\n    gut.className = \"gutter gutter-\" + gutterDirection;\n    return gut\n};\n\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n    var style = {};\n\n    if (!isString(size)) {\n        style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n    } else {\n        style[dim] = size;\n    }\n\n    return style\n};\n\nvar defaultGutterStyleFn = function (dim, gutSize) {\n    var obj;\n\n    return (( obj = {}, obj[dim] = (gutSize + \"px\"), obj ));\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n    if ( options === void 0 ) options = {};\n\n    if (ssr) { return {} }\n\n    var ids = idsOption;\n    var dimension;\n    var clientAxis;\n    var position;\n    var positionEnd;\n    var clientSize;\n    var elements;\n\n    // Allow HTMLCollection to be used as an argument when supported\n    if (Array.from) {\n        ids = Array.from(ids);\n    }\n\n    // All DOM elements in the split should have a common parent. We can grab\n    // the first elements parent and hope users read the docs because the\n    // behavior will be whacky otherwise.\n    var firstElement = elementOrSelector(ids[0]);\n    var parent = firstElement.parentNode;\n    var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n    var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n    // Set default options.sizes to equal percentages of the parent element.\n    var sizes = getOption(options, 'sizes') || ids.map(function () { return 100 / ids.length; });\n\n    // Standardize minSize to an array if it isn't already. This allows minSize\n    // to be passed as a number.\n    var minSize = getOption(options, 'minSize', 100);\n    var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () { return minSize; });\n\n    // Get other options\n    var expandToMin = getOption(options, 'expandToMin', false);\n    var gutterSize = getOption(options, 'gutterSize', 10);\n    var gutterAlign = getOption(options, 'gutterAlign', 'center');\n    var snapOffset = getOption(options, 'snapOffset', 30);\n    var dragInterval = getOption(options, 'dragInterval', 1);\n    var direction = getOption(options, 'direction', HORIZONTAL);\n    var cursor = getOption(\n        options,\n        'cursor',\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize'\n    );\n    var gutter = getOption(options, 'gutter', defaultGutterFn);\n    var elementStyle = getOption(\n        options,\n        'elementStyle',\n        defaultElementStyleFn\n    );\n    var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\n    // A lot of the behavior in the rest of the library is paramatized down to\n    // rely on CSS strings and classes.\n    if (direction === HORIZONTAL) {\n        dimension = 'width';\n        clientAxis = 'clientX';\n        position = 'left';\n        positionEnd = 'right';\n        clientSize = 'clientWidth';\n    } else if (direction === 'vertical') {\n        dimension = 'height';\n        clientAxis = 'clientY';\n        position = 'top';\n        positionEnd = 'bottom';\n        clientSize = 'clientHeight';\n    }\n\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\n    // Each helper is bound to a pair object that contains its metadata. This\n    // also makes it easy to store references to listeners that that will be\n    // added and removed.\n    //\n    // Even though there are no other functions contained in them, aliasing\n    // this to self saves 50 bytes or so since it's used so frequently.\n    //\n    // The pair object saves metadata like dragging state, position and\n    // event listener references.\n\n    function setElementSize(el, size, gutSize, i) {\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\n        // by string, like '300px'. This is less than ideal, because it breaks\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n        // make sure you calculate the gutter size by hand.\n        var style = elementStyle(dimension, size, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            el.style[prop] = style[prop];\n        });\n    }\n\n    function setGutterSize(gutterElement, gutSize, i) {\n        var style = gutterStyle(dimension, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            gutterElement.style[prop] = style[prop];\n        });\n    }\n\n    function getSizes() {\n        return elements.map(function (element) { return element.size; })\n    }\n\n    // Supports touch events, but not multitouch, so only the first\n    // finger `touches[0]` is counted.\n    function getMousePosition(e) {\n        if ('touches' in e) { return e.touches[0][clientAxis] }\n        return e[clientAxis]\n    }\n\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n    // which allows the viewport to be resized without additional logic.\n    // Element a's size is the same as offset. b's size is total size - a size.\n    // Both sizes are calculated from the initial parent percentage,\n    // then the gutter size is subtracted.\n    function adjust(offset) {\n        var a = elements[this.a];\n        var b = elements[this.b];\n        var percentage = a.size + b.size;\n\n        a.size = (offset / this.size) * percentage;\n        b.size = percentage - (offset / this.size) * percentage;\n\n        setElementSize(a.element, a.size, this[aGutterSize], a.i);\n        setElementSize(b.element, b.size, this[bGutterSize], b.i);\n    }\n\n    // drag, where all the magic happens. The logic is really quite simple:\n    //\n    // 1. Ignore if the pair is not dragging.\n    // 2. Get the offset of the event.\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\n    // 4. Actually adjust each element in the pair to offset.\n    //\n    // ---------------------------------------------------------------------\n    // |    | <- a.minSize               ||              b.minSize -> |    |\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n    // |    |  |                         ||                        |  |    |\n    // |    |  |                         ||                        |  |    |\n    // ---------------------------------------------------------------------\n    // | <- this.start                                        this.size -> |\n    function drag(e) {\n        var offset;\n        var a = elements[this.a];\n        var b = elements[this.b];\n\n        if (!this.dragging) { return }\n\n        // Get the offset of the event from the first side of the\n        // pair `this.start`. Then offset by the initial position of the\n        // mouse compared to the gutter size.\n        offset =\n            getMousePosition(e) -\n            this.start +\n            (this[aGutterSize] - this.dragOffset);\n\n        if (dragInterval > 1) {\n            offset = Math.round(offset / dragInterval) * dragInterval;\n        }\n\n        // If within snapOffset of min or max, set offset to min or max.\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n        // Include the appropriate gutter sizes to prevent overflows.\n        if (offset <= a.minSize + snapOffset + this[aGutterSize]) {\n            offset = a.minSize + this[aGutterSize];\n        } else if (\n            offset >=\n            this.size - (b.minSize + snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.minSize + this[bGutterSize]);\n        }\n\n        // Actually adjust the size.\n        adjust.call(this, offset);\n\n        // Call the drag callback continously. Don't do anything too intensive\n        // in this callback.\n        getOption(options, 'onDrag', NOOP)(getSizes());\n    }\n\n    // Cache some important sizes when drag starts, so we don't have to do that\n    // continously:\n    //\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\n    // `start`: The leading side of the first element.\n    //\n    // ------------------------------------------------\n    // |      aGutterSize -> |||                      |\n    // |                     |||                      |\n    // |                     |||                      |\n    // |                     ||| <- bGutterSize       |\n    // ------------------------------------------------\n    // | <- start                             size -> |\n    function calculateSizes() {\n        // Figure out the parent size minus padding.\n        var a = elements[this.a].element;\n        var b = elements[this.b].element;\n\n        var aBounds = a[getBoundingClientRect]();\n        var bBounds = b[getBoundingClientRect]();\n\n        this.size =\n            aBounds[dimension] +\n            bBounds[dimension] +\n            this[aGutterSize] +\n            this[bGutterSize];\n        this.start = aBounds[position];\n        this.end = aBounds[positionEnd];\n    }\n\n    function innerSize(element) {\n        // Return nothing if getComputedStyle is not supported (< IE9)\n        // Or if parent element has no layout yet\n        if (!getComputedStyle) { return null }\n\n        var computedStyle = getComputedStyle(element);\n\n        if (!computedStyle) { return null }\n\n        var size = element[clientSize];\n\n        if (size === 0) { return null }\n\n        if (direction === HORIZONTAL) {\n            size -=\n                parseFloat(computedStyle.paddingLeft) +\n                parseFloat(computedStyle.paddingRight);\n        } else {\n            size -=\n                parseFloat(computedStyle.paddingTop) +\n                parseFloat(computedStyle.paddingBottom);\n        }\n\n        return size\n    }\n\n    // When specifying percentage sizes that are less than the computed\n    // size of the element minus the gutter, the lesser percentages must be increased\n    // (and decreased from the other elements) to make space for the pixels\n    // subtracted by the gutters.\n    function trimToMin(sizesToTrim) {\n        // Try to get inner size of parent element.\n        // If it's no supported, return original sizes.\n        var parentSize = innerSize(parent);\n        if (parentSize === null) {\n            return sizesToTrim\n        }\n\n        if (minSizes.reduce(function (a, b) { return a + b; }, 0) > parentSize) {\n            return sizesToTrim\n        }\n\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\n        var excessPixels = 0;\n        var toSpare = [];\n\n        var pixelSizes = sizesToTrim.map(function (size, i) {\n            // Convert requested percentages to pixel sizes\n            var pixelSize = (parentSize * size) / 100;\n            var elementGutterSize = getGutterSize(\n                gutterSize,\n                i === 0,\n                i === sizesToTrim.length - 1,\n                gutterAlign\n            );\n            var elementMinSize = minSizes[i] + elementGutterSize;\n\n            // If element is too smal, increase excess pixels by the difference\n            // and mark that it has no pixels to spare\n            if (pixelSize < elementMinSize) {\n                excessPixels += elementMinSize - pixelSize;\n                toSpare.push(0);\n                return elementMinSize\n            }\n\n            // Otherwise, mark the pixels it has to spare and return it's original size\n            toSpare.push(pixelSize - elementMinSize);\n            return pixelSize\n        });\n\n        // If nothing was adjusted, return the original sizes\n        if (excessPixels === 0) {\n            return sizesToTrim\n        }\n\n        return pixelSizes.map(function (pixelSize, i) {\n            var newPixelSize = pixelSize;\n\n            // While there's still pixels to take, and there's enough pixels to spare,\n            // take as many as possible up to the total excess pixels\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n                var takenPixels = Math.min(\n                    excessPixels,\n                    toSpare[i] - excessPixels\n                );\n\n                // Subtract the amount taken for the next iteration\n                excessPixels -= takenPixels;\n                newPixelSize = pixelSize - takenPixels;\n            }\n\n            // Return the pixel size adjusted as a percentage\n            return (newPixelSize / parentSize) * 100\n        })\n    }\n\n    // stopDragging is very similar to startDragging in reverse.\n    function stopDragging() {\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        if (self.dragging) {\n            getOption(options, 'onDragEnd', NOOP)(getSizes());\n        }\n\n        self.dragging = false;\n\n        // Remove the stored event listeners. This is why we store them.\n        global[removeEventListener]('mouseup', self.stop);\n        global[removeEventListener]('touchend', self.stop);\n        global[removeEventListener]('touchcancel', self.stop);\n        global[removeEventListener]('mousemove', self.move);\n        global[removeEventListener]('touchmove', self.move);\n\n        // Clear bound function references\n        self.stop = null;\n        self.move = null;\n\n        a[removeEventListener]('selectstart', NOOP);\n        a[removeEventListener]('dragstart', NOOP);\n        b[removeEventListener]('selectstart', NOOP);\n        b[removeEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = '';\n        a.style.webkitUserSelect = '';\n        a.style.MozUserSelect = '';\n        a.style.pointerEvents = '';\n\n        b.style.userSelect = '';\n        b.style.webkitUserSelect = '';\n        b.style.MozUserSelect = '';\n        b.style.pointerEvents = '';\n\n        self.gutter.style.cursor = '';\n        self.parent.style.cursor = '';\n        document.body.style.cursor = '';\n    }\n\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\n    // It also adds event listeners for mouse/touch events,\n    // and prevents selection while dragging so avoid the selecting text.\n    function startDragging(e) {\n        // Right-clicking can't start dragging.\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Alias frequently used variables to save space. 200 bytes.\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        // Call the onDragStart callback.\n        if (!self.dragging) {\n            getOption(options, 'onDragStart', NOOP)(getSizes());\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault();\n\n        // Set the dragging property of the pair object.\n        self.dragging = true;\n\n        // Create two event listeners bound to the same pair object and store\n        // them in the pair object.\n        self.move = drag.bind(self);\n        self.stop = stopDragging.bind(self);\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        global[addEventListener]('mouseup', self.stop);\n        global[addEventListener]('touchend', self.stop);\n        global[addEventListener]('touchcancel', self.stop);\n        global[addEventListener]('mousemove', self.move);\n        global[addEventListener]('touchmove', self.move);\n\n        // Disable selection. Disable!\n        a[addEventListener]('selectstart', NOOP);\n        a[addEventListener]('dragstart', NOOP);\n        b[addEventListener]('selectstart', NOOP);\n        b[addEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = 'none';\n        a.style.webkitUserSelect = 'none';\n        a.style.MozUserSelect = 'none';\n        a.style.pointerEvents = 'none';\n\n        b.style.userSelect = 'none';\n        b.style.webkitUserSelect = 'none';\n        b.style.MozUserSelect = 'none';\n        b.style.pointerEvents = 'none';\n\n        // Set the cursor at multiple levels\n        self.gutter.style.cursor = cursor;\n        self.parent.style.cursor = cursor;\n        document.body.style.cursor = cursor;\n\n        // Cache the initial sizes of the pair.\n        calculateSizes.call(self);\n\n        // Determine the position of the mouse compared to the gutter\n        self.dragOffset = getMousePosition(e) - self.end;\n    }\n\n    // adjust sizes to ensure percentage is within min size and gutter.\n    sizes = trimToMin(sizes);\n\n    // 5. Create pair and element objects. Each pair has an index reference to\n    // elements `a` and `b` of the pair (first and second elements).\n    // Loop through the elements while pairing them off. Every pair gets a\n    // `pair` object and a gutter.\n    //\n    // Basic logic:\n    //\n    // - Starting with the second element `i > 0`, create `pair` objects with\n    //   `a = i - 1` and `b = i`\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n    // - Create gutter elements and add event listeners.\n    // - Set the size of the elements, minus the gutter sizes.\n    //\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    var pairs = [];\n    elements = ids.map(function (id, i) {\n        // Create the element object.\n        var element = {\n            element: elementOrSelector(id),\n            size: sizes[i],\n            minSize: minSizes[i],\n            i: i,\n        };\n\n        var pair;\n\n        if (i > 0) {\n            // Create the pair object with its metadata.\n            pair = {\n                a: i - 1,\n                b: i,\n                dragging: false,\n                direction: direction,\n                parent: parent,\n            };\n\n            pair[aGutterSize] = getGutterSize(\n                gutterSize,\n                i - 1 === 0,\n                false,\n                gutterAlign\n            );\n            pair[bGutterSize] = getGutterSize(\n                gutterSize,\n                false,\n                i === ids.length - 1,\n                gutterAlign\n            );\n\n            // if the parent has a reverse flex-direction, switch the pair elements.\n            if (\n                parentFlexDirection === 'row-reverse' ||\n                parentFlexDirection === 'column-reverse'\n            ) {\n                var temp = pair.a;\n                pair.a = pair.b;\n                pair.b = temp;\n            }\n        }\n\n        // Determine the size of the current element. IE8 is supported by\n        // staticly assigning sizes without draggable gutters. Assigns a string\n        // to `size`.\n        //\n        // Create gutter elements for each pair.\n        if (i > 0) {\n            var gutterElement = gutter(i, direction, element.element);\n            setGutterSize(gutterElement, gutterSize, i);\n\n            // Save bound event listener for removal later\n            pair[gutterStartDragging] = startDragging.bind(pair);\n\n            // Attach bound event listener\n            gutterElement[addEventListener](\n                'mousedown',\n                pair[gutterStartDragging]\n            );\n            gutterElement[addEventListener](\n                'touchstart',\n                pair[gutterStartDragging]\n            );\n\n            parent.insertBefore(gutterElement, element.element);\n\n            pair.gutter = gutterElement;\n        }\n\n        setElementSize(\n            element.element,\n            element.size,\n            getGutterSize(\n                gutterSize,\n                i === 0,\n                i === ids.length - 1,\n                gutterAlign\n            ),\n            i\n        );\n\n        // After the first iteration, and we have a pair object, append it to the\n        // list of pairs.\n        if (i > 0) {\n            pairs.push(pair);\n        }\n\n        return element\n    });\n\n    function adjustToMin(element) {\n        var isLast = element.i === pairs.length;\n        var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n\n        calculateSizes.call(pair);\n\n        var size = isLast\n            ? pair.size - element.minSize - pair[bGutterSize]\n            : element.minSize + pair[aGutterSize];\n\n        adjust.call(pair, size);\n    }\n\n    elements.forEach(function (element) {\n        var computedSize = element.element[getBoundingClientRect]()[dimension];\n\n        if (computedSize < element.minSize) {\n            if (expandToMin) {\n                adjustToMin(element);\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                element.minSize = computedSize;\n            }\n        }\n    });\n\n    function setSizes(newSizes) {\n        var trimmed = trimToMin(newSizes);\n        trimmed.forEach(function (newSize, i) {\n            if (i > 0) {\n                var pair = pairs[i - 1];\n\n                var a = elements[pair.a];\n                var b = elements[pair.b];\n\n                a.size = trimmed[i - 1];\n                b.size = newSize;\n\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n            }\n        });\n    }\n\n    function destroy(preserveStyles, preserveGutter) {\n        pairs.forEach(function (pair) {\n            if (preserveGutter !== true) {\n                pair.parent.removeChild(pair.gutter);\n            } else {\n                pair.gutter[removeEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                pair.gutter[removeEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n            }\n\n            if (preserveStyles !== true) {\n                var style = elementStyle(\n                    dimension,\n                    pair.a.size,\n                    pair[aGutterSize]\n                );\n\n                Object.keys(style).forEach(function (prop) {\n                    elements[pair.a].element.style[prop] = '';\n                    elements[pair.b].element.style[prop] = '';\n                });\n            }\n        });\n    }\n\n    return {\n        setSizes: setSizes,\n        getSizes: getSizes,\n        collapse: function collapse(i) {\n            adjustToMin(elements[i]);\n        },\n        destroy: destroy,\n        parent: parent,\n        pairs: pairs,\n    }\n};\n\nexport default Split;\n","export var TestType;\n(function (TestType) {\n    // Expect a pulse half-way through the WAV file.\n    TestType[TestType[\"LOW_SPEED_PULSE\"] = 0] = \"LOW_SPEED_PULSE\";\n    // Expect no pulse half-way through the WAV file.\n    TestType[TestType[\"LOW_SPEED_NO_PULSE\"] = 1] = \"LOW_SPEED_NO_PULSE\";\n    // Expect a sequence of header (zero) bits to be proofed. This is different than reading a bunch of zero bits.\n    TestType[TestType[\"LOW_SPEED_PROOF\"] = 2] = \"LOW_SPEED_PROOF\";\n    // Expect a few bits of zeros, then the sync byte, then more bits of data. The \"bin\" field is the bits\n    // after the sync byte (e.g., D3 for a Basic program).\n    TestType[TestType[\"LOW_SPEED_SYNC\"] = 3] = \"LOW_SPEED_SYNC\";\n    // Expect a sequence of bits (in \"bin\" or \"binUrl\"). First sample of WAV is previous bit's clock pulse.\n    TestType[TestType[\"LOW_SPEED_BITS\"] = 4] = \"LOW_SPEED_BITS\";\n    // Expect a sequence of bits (in \"bin\" or \"binUrl\"). Start and end WAV file part-way through pulses.\n    TestType[TestType[\"HIGH_SPEED_BITS\"] = 5] = \"HIGH_SPEED_BITS\";\n})(TestType || (TestType = {}));\nconst STRING_TO_TEST_TYPE = {\n    \"low-speed-pulse\": TestType.LOW_SPEED_PULSE,\n    \"low-speed-no-pulse\": TestType.LOW_SPEED_NO_PULSE,\n    \"low-speed-proof\": TestType.LOW_SPEED_PROOF,\n    \"low-speed-sync\": TestType.LOW_SPEED_SYNC,\n    \"low-speed-bits\": TestType.LOW_SPEED_BITS,\n    \"high-speed-bits\": TestType.HIGH_SPEED_BITS,\n};\n/**\n * Individual test to run.\n */\nexport class Test {\n    constructor(jsonTest) {\n        this.name = jsonTest.name;\n        this.wavUrl = jsonTest.wavUrl;\n        this.type = STRING_TO_TEST_TYPE[jsonTest.type];\n        this.bin = jsonTest.bin;\n        this.binUrl = jsonTest.binUrl;\n    }\n    isHighSpeed() {\n        return this.type === TestType.HIGH_SPEED_BITS;\n    }\n}\n/**\n * Batch of tests from a file.\n */\nexport class TestFile {\n    constructor(url, json) {\n        this.tests = [];\n        this.includes = [];\n        this.url = url;\n        this.name = json.name;\n        const jsonTests = json.tests;\n        if (jsonTests === undefined) {\n            throw new Error(\"file does not have top-level \\\"tests\\\" key\");\n        }\n        for (const jsonTest of jsonTests) {\n            if (typeof jsonTest === \"string\") {\n                this.includes.push(jsonTest);\n            }\n            else {\n                this.tests.push(new Test(jsonTest));\n            }\n        }\n    }\n}\n","import { Decoder } from \"./Decoder\";\nimport { Tape } from \"./Tape\";\nimport { TapeBrowser } from \"./TapeBrowser\";\nimport { Uploader } from \"./Uploader\";\nimport Split from \"split.js\";\nimport { clearElement, flashNode } from \"./Utils\";\nimport { CanvasScreen } from \"trs80-emulator\";\nimport { TestFile, TestType } from \"./Test\";\nimport { readWavFile } from \"./WavFile\";\nimport { SelectionMode, WaveformDisplay } from \"./WaveformDisplay\";\nimport { LowSpeedTapeDecoder, PulseResultType } from \"./LowSpeedTapeDecoder\";\nimport { HighSpeedTapeDecoder } from \"./HighSpeedTapeDecoder\";\nfunction nameFromPathname(pathname) {\n    let name = pathname;\n    // Keep only last component.\n    let pos = name.lastIndexOf(\"/\");\n    if (pos >= 0) {\n        name = name.substr(pos + 1);\n    }\n    // Remove extension.\n    pos = name.lastIndexOf(\".\");\n    if (pos >= 0) {\n        name = name.substr(0, pos);\n    }\n    return name;\n}\n/**\n * Show the screen with the specified ID, hide the rest.\n * @return the shown element.\n */\nfunction showScreen(screenId) {\n    const allScreens = document.getElementsByClassName(\"screen\");\n    let shownScreen = undefined;\n    for (const screen of allScreens) {\n        if (screen.id === screenId) {\n            screen.classList.remove(\"hidden\");\n            shownScreen = screen;\n        }\n        else {\n            screen.classList.add(\"hidden\");\n        }\n    }\n    if (shownScreen === undefined) {\n        throw new Error(\"Cannot find screen \" + screenId);\n    }\n    return shownScreen;\n}\n/**\n * Show the user data.\n */\nfunction populateBrowseScreen(browseScreen) {\n    clearElement(browseScreen);\n    const data = Tape.loadAllData();\n    for (const tapeData of data.tapes) {\n        const h1 = document.createElement(\"h1\");\n        h1.textContent = tapeData.name;\n        browseScreen.appendChild(h1);\n        if (tapeData.notes) {\n            const p = document.createElement(\"p\");\n            p.textContent = tapeData.notes;\n            browseScreen.appendChild(p);\n        }\n        for (const programData of tapeData.programs) {\n            const h2 = document.createElement(\"h2\");\n            h2.textContent = programData.name || \"Untitled\";\n            browseScreen.appendChild(h2);\n            if (programData.notes) {\n                const p = document.createElement(\"p\");\n                p.textContent = programData.notes;\n                browseScreen.appendChild(p);\n            }\n            if (programData.screenshot) {\n                const div = document.createElement(\"div\");\n                browseScreen.appendChild(div);\n                const screen = new CanvasScreen();\n                screen.displayScreenshot(programData.screenshot);\n                div.append(screen.asImage());\n            }\n        }\n    }\n}\n/**\n * Show the export/import panel and the appropriate set of buttons.\n */\nfunction showExportImport(action) {\n    const exportImport = document.getElementById(\"export_import\");\n    exportImport.classList.remove(\"hidden\");\n    // Hide all button groups.\n    for (const buttonGroup of exportImport.getElementsByClassName(\"button_group\")) {\n        buttonGroup.classList.add(\"hidden\");\n    }\n    // Show our button group.\n    const buttonGroup = document.getElementById(action == \"export\" ? \"export_buttons\" : \"import_buttons\");\n    buttonGroup.classList.remove(\"hidden\");\n}\nfunction showExportData() {\n    showExportImport(\"export\");\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.placeholder = \"\";\n    textArea.value = Tape.getAllDataAsJson();\n    textArea.select();\n}\nfunction showImportData() {\n    showExportImport(\"import\");\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.value = \"\";\n    textArea.placeholder = \"Paste exported data here, then click “Import”.\";\n    textArea.focus();\n}\nfunction copyToClipboard() {\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.select();\n    document.execCommand(\"copy\");\n    const exportImport = document.getElementById(\"export_import\");\n    flashNode(exportImport);\n}\nfunction importData() {\n    const textArea = document.getElementById(\"user_data_field\");\n    if (textArea) {\n        Tape.saveAllDataAsJson(textArea.value);\n        const exportImport = document.getElementById(\"export_import\");\n        flashNode(exportImport);\n    }\n}\nfunction handleAudioBuffer(pathname, audioFile) {\n    // console.log(\"Audio is \" + audioFile.rate + \" Hz\");\n    // TODO check that there's 1 channel.\n    const tape = new Tape(nameFromPathname(pathname), audioFile);\n    const decoder = new Decoder(tape);\n    decoder.decode();\n    tape.listenForStorageChanges();\n    tape.loadUserData();\n    const tapeBrowser = new TapeBrowser(tape, document.getElementById(\"waveforms\"), document.getElementById(\"original_canvas\"), document.getElementById(\"filtered_canvas\"), document.getElementById(\"low_speed_canvas\"), document.getElementById(\"tape_contents\"), document.getElementById(\"top_data\"));\n    // Switch screens.\n    showScreen(\"data_screen\");\n    /*\n    const loadAnotherButton = document.getElementById(\"load_another_button\") as HTMLButtonElement;\n    loadAnotherButton.onclick = () => {\n        showScreen(\"drop_screen\");\n        if (uploader !== undefined) {\n            uploader.reset();\n        }\n    };\n    */\n    Split([\"#data_screen > nav\", \"#data_screen > main\"], {\n        sizes: [20, 80],\n        minSize: [200, 200],\n        snapOffset: 0,\n    });\n    Split([\"#top_data\", \"#waveforms\"], {\n        sizes: [50, 50],\n        minSize: [100, 100],\n        snapOffset: 0,\n        direction: \"vertical\",\n    });\n}\n// https://stackoverflow.com/a/6234804/211234\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n/**\n * Makes a pill to show pass or fail for a test.\n */\nfunction makePassFailLabel(pass) {\n    const result = document.createElement(\"span\");\n    result.classList.add(\"test_result\");\n    if (pass) {\n        result.innerText = \"Pass\";\n        result.classList.add(\"test_pass\");\n    }\n    else {\n        result.innerText = \"Fail\";\n        result.classList.add(\"test_fail\");\n    }\n    return result;\n}\n/**\n * Get HTML for a string where the prefix and suffix are dimmed.\n */\nfunction getPrefixSuffixHtml(s, prefix, suffix) {\n    return \"<span style='opacity: 30%'>\" + s.substr(0, prefix) + \"</span>\" +\n        s.substr(prefix, s.length - prefix - suffix) +\n        \"<span style='opacity: 30%'>\" + s.substr(s.length - suffix) + \"</span>\";\n}\n/**\n * Return an HTML string for showing the differences between these bit strings.\n */\nfunction getDiffHtml(expectedBits, actualBits) {\n    if (expectedBits === actualBits) {\n        // Shouldn't happen.\n        throw new Error(\"getDiffHtml must be passed different arguments\");\n    }\n    let commonPrefix = 0;\n    while (expectedBits.substr(0, commonPrefix + 1) === actualBits.substr(0, commonPrefix + 1)) {\n        commonPrefix += 1;\n    }\n    let commonSuffix = 0;\n    while (commonPrefix + commonSuffix < Math.min(expectedBits.length, actualBits.length) &&\n        expectedBits.substr(-(commonSuffix + 1)) === actualBits.substr(-(commonSuffix + 1))) {\n        commonSuffix += 1;\n    }\n    return \"Expected \" + getPrefixSuffixHtml(expectedBits, commonPrefix, commonSuffix) +\n        \" but got \" + getPrefixSuffixHtml(actualBits, commonPrefix, commonSuffix);\n}\nfunction runTests(parent, testFile) {\n    if (testFile.name !== undefined) {\n        const pageHeader = document.createElement(\"h2\");\n        pageHeader.innerText = testFile.name;\n        parent.appendChild(pageHeader);\n    }\n    for (const test of testFile.tests) {\n        const testResult = document.createElement(\"div\");\n        testResult.classList.add(\"test\");\n        parent.append(testResult);\n        const url = new URL(test.wavUrl, testFile.url).href;\n        fetch(url, { cache: \"reload\" })\n            .then(response => {\n            if (response.ok) {\n                return response.arrayBuffer();\n            }\n            throw new Error(response.statusText);\n        })\n            .then(arrayBuffer => {\n            const wavFile = readWavFile(arrayBuffer);\n            const tape = new Tape(url, wavFile);\n            const waveformDisplay = new WaveformDisplay(wavFile.rate);\n            waveformDisplay.setSelectionMode(SelectionMode.SAMPLES);\n            const title = document.createElement(\"span\");\n            title.innerText = test.name;\n            const header = document.createElement(\"div\");\n            header.appendChild(title);\n            header.classList.add(\"test_header\");\n            testResult.append(header);\n            const panel = document.createElement(\"div\");\n            panel.classList.add(\"expandable_panel\");\n            testResult.append(panel);\n            const explanation = document.createElement(\"p\");\n            panel.append(explanation);\n            header.addEventListener(\"click\", () => {\n                testResult.classList.toggle(\"expanded\");\n            });\n            waveformDisplay.addWaveformAndChrome(\"Original samples\", tape.originalSamples, panel);\n            if (test.isHighSpeed()) {\n                waveformDisplay.addWaveformAndChrome(\"High pass filter\", tape.filteredSamples, panel);\n            }\n            else {\n                waveformDisplay.addWaveformAndChrome(\"Low speed filter\", tape.lowSpeedSamples, panel);\n            }\n            let pass;\n            switch (test.type) {\n                case TestType.LOW_SPEED_PULSE:\n                case TestType.LOW_SPEED_NO_PULSE: {\n                    const decoder = new LowSpeedTapeDecoder(tape, 500);\n                    const pulse = decoder.isPulseAt(Math.round(wavFile.samples.length / 2), LowSpeedTapeDecoder.DEFAULT_THRESHOLD, false, true);\n                    waveformDisplay.addWaveformAnnotations(pulse.waveformAnnotations);\n                    if (pulse.explanation !== \"\") {\n                        explanation.innerText = pulse.explanation;\n                    }\n                    else {\n                        explanation.remove();\n                    }\n                    pass = pulse.resultType === PulseResultType.PULSE === (test.type === TestType.LOW_SPEED_PULSE);\n                    break;\n                }\n                case TestType.LOW_SPEED_PROOF: {\n                    const decoder = new LowSpeedTapeDecoder(tape, 500);\n                    const pulse = decoder.findPulse(0, LowSpeedTapeDecoder.DEFAULT_THRESHOLD);\n                    if (pulse === undefined) {\n                        // Ran off the end of the tape.\n                        pass = false;\n                        explanation.innerText = \"Ran off the end of the tape\";\n                    }\n                    else {\n                        const waveformAnnotations = [];\n                        const success = decoder.proofPulseDistance(pulse.frame, waveformAnnotations);\n                        waveformDisplay.addWaveformAnnotations(waveformAnnotations);\n                        if (success) {\n                            explanation.remove();\n                        }\n                        else {\n                            explanation.innerText = \"Proof failed\";\n                        }\n                        pass = success;\n                    }\n                    break;\n                }\n                case TestType.LOW_SPEED_SYNC: {\n                    const decoder = new LowSpeedTapeDecoder(tape, 500);\n                    const pulse = decoder.findPulse(0, LowSpeedTapeDecoder.DEFAULT_THRESHOLD);\n                    if (pulse === undefined) {\n                        // Ran off the end of the tape.\n                        pass = false;\n                        explanation.innerText = \"Ran off the end of the tape\";\n                    }\n                    else {\n                        if (test.bin === undefined) {\n                            // We don't yet support binUrl.\n                            throw new Error(\"must define bin for bits test\");\n                        }\n                        // Don't bother proofing.\n                        const waveformAnnotations = [];\n                        const program = decoder.loadData(pulse.frame, waveformAnnotations);\n                        console.log(program.binary.length, program.binary);\n                        waveformDisplay.addWaveformAnnotations(waveformAnnotations);\n                        waveformDisplay.addProgram(program);\n                        const actualBits = Array.from(program.binary).map(b => b.toString(2).padStart(8, \"0\")).join(\"\");\n                        const expectBits = test.bin.replace(/ /g, \"\");\n                        pass = actualBits === expectBits;\n                        if (pass) {\n                            explanation.remove();\n                        }\n                        else {\n                            explanation.innerHTML = getDiffHtml(expectBits, actualBits);\n                        }\n                    }\n                    break;\n                }\n                case TestType.LOW_SPEED_BITS:\n                case TestType.HIGH_SPEED_BITS: {\n                    const decoder = test.type === TestType.LOW_SPEED_BITS\n                        ? new LowSpeedTapeDecoder(tape, 500)\n                        : new HighSpeedTapeDecoder(tape);\n                    const [actualBits, waveformAnnotations, explanations] = decoder.readBits(0);\n                    if (test.bin === undefined) {\n                        // We don't yet support binUrl.\n                        throw new Error(\"must define bin for bits test\");\n                    }\n                    const expectBits = test.bin.replace(/ /g, \"\");\n                    waveformDisplay.addWaveformAnnotations(waveformAnnotations);\n                    pass = actualBits === expectBits;\n                    if (explanations.length === 0 && pass) {\n                        explanation.remove();\n                    }\n                    else {\n                        let html = \"\";\n                        for (const e of explanations) {\n                            if (html !== \"\") {\n                                html += \"<br>\";\n                            }\n                            html += escapeHtml(e);\n                        }\n                        if (!pass) {\n                            html += \"<br>\" + getDiffHtml(expectBits, actualBits);\n                        }\n                        explanation.innerHTML = html;\n                    }\n                    break;\n                }\n            }\n            header.appendChild(makePassFailLabel(pass));\n        })\n            .catch(reason => {\n            const title = document.createElement(\"span\");\n            title.innerText = test.name + \" (\" + reason + \")\";\n            const header = document.createElement(\"div\");\n            header.appendChild(title);\n            // header.classList.add(\"test_header\");\n            testResult.append(header);\n            header.appendChild(makePassFailLabel(false));\n        });\n    }\n    for (const include of testFile.includes) {\n        const testFileDiv = document.createElement(\"div\");\n        parent.appendChild(testFileDiv);\n        loadTestFile(testFileDiv, include, testFile.url);\n    }\n}\nfunction loadTestFile(parent, relativeUrl, parentUrl) {\n    const url = new URL(relativeUrl, parentUrl).href;\n    fetch(url, { cache: \"reload\" })\n        .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        throw new Error(response.statusText);\n    })\n        .then(json => {\n        runTests(parent, new TestFile(url, json));\n    })\n        .catch(reason => {\n        const title = document.createElement(\"span\");\n        title.innerText = url + \" (\" + reason + \")\";\n        const header = document.createElement(\"div\");\n        header.appendChild(title);\n        // header.classList.add(\"test_header\");\n        parent.append(header);\n        header.appendChild(makePassFailLabel(false));\n    });\n}\n/**\n * Show the test screen and start loading the test JSON file.\n */\nfunction showTestScreen() {\n    const screen = showScreen(\"test_screen\");\n    clearElement(screen);\n    const pageHeader = document.createElement(\"h1\");\n    pageHeader.innerText = \"Test Results\";\n    screen.appendChild(pageHeader);\n    loadTestFile(screen, \"tests/tests.json\", document.baseURI);\n}\nfunction showRetroStoreScreen() {\n    const screen = showScreen(\"retrostore_screen\");\n    clearElement(screen);\n    fetch(\"http://retrostore.org/rpc?m=pubapplist\")\n        .then(response => response.json())\n        .then(json => {\n        console.log(json);\n    });\n}\n/**\n * Handle the browser's back and forward history buttons.\n */\nfunction handleNewLocation() {\n    const hash = window.location.hash;\n    switch (hash) {\n        case \"\":\n        case \"#\":\n        default:\n            showScreen(\"drop_screen\");\n            break;\n        case \"#test\":\n            showTestScreen();\n            break;\n        case \"#retrostore\":\n            showRetroStoreScreen();\n            break;\n    }\n}\nexport function main() {\n    showScreen(\"drop_screen\");\n    // Configure uploading box.\n    const dropZone = document.getElementById(\"drop_zone\");\n    const dropUpload = document.getElementById(\"drop_upload\");\n    const dropS3 = document.querySelectorAll(\"#test_files button\");\n    const dropProgress = document.getElementById(\"drop_progress\");\n    const uploader = new Uploader(dropZone, dropUpload, dropS3, dropProgress, handleAudioBuffer);\n    // Configure action buttons.\n    const exportDataButton = document.getElementById(\"export_data_button\");\n    const importDataButton = document.getElementById(\"import_data_button\");\n    const browseDataButton = document.getElementById(\"browse_data_button\");\n    const runTestsButton = document.getElementById(\"run_tests_button\");\n    const retroStoreButton = document.getElementById(\"retrostore_button\");\n    const copyToClipboardButton = document.getElementById(\"copy_to_clipboard_button\");\n    const importButton = document.getElementById(\"import_button\");\n    exportDataButton.addEventListener(\"click\", event => showExportData());\n    importDataButton.addEventListener(\"click\", event => showImportData());\n    browseDataButton.addEventListener(\"click\", event => {\n        const browseScreen = showScreen(\"browse_screen\");\n        populateBrowseScreen(browseScreen);\n    });\n    runTestsButton.addEventListener(\"click\", () => window.location.href = \"#test\");\n    retroStoreButton.addEventListener(\"click\", () => window.location.href = \"#retrostore\");\n    copyToClipboardButton.addEventListener(\"click\", event => copyToClipboard());\n    importButton.addEventListener(\"click\", event => importData());\n    window.addEventListener(\"popstate\", handleNewLocation);\n}\n","import { main } from \"./Main\";\nmain();\n"],"sourceRoot":""}