{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/strongly-typed-events/dist/index.js","webpack:///./node_modules/ste-core/dist/index.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/ste-core/dist/subscription.js","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/ste-core/dist/dispatching.js","webpack:///./node_modules/ste-core/dist/management.js","webpack:///./node_modules/ste-events/dist/index.js","webpack:///./node_modules/ste-events/dist/events.js","webpack:///./node_modules/ste-simple-events/dist/index.js","webpack:///./node_modules/ste-simple-events/dist/simple-events.js","webpack:///./node_modules/ste-signals/dist/index.js","webpack:///./node_modules/ste-signals/dist/signals.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/BitData.ts","webpack:///./src/BitType.ts","webpack:///./src/TapeDecoderState.ts","webpack:///./src/ByteData.ts","webpack:///./src/DisplaySamples.ts","webpack:///./src/ByteReader.ts","webpack:///./node_modules/z80-base/src/Register.ts","webpack:///./node_modules/z80-base/src/Utils.ts","webpack:///./node_modules/z80-base/src/RegisterSet.ts","webpack:///./node_modules/z80-base/src/Flag.ts","webpack:///./node_modules/z80-base/src/index.ts","webpack:///./src/Annotations.ts","webpack:///./src/SystemProgram.ts","webpack:///./src/Utils.ts","webpack:///./src/AudioUtils.ts","webpack:///./src/HighSpeedTapeEncoder.ts","webpack:///./src/LowSpeedTapeEncoder.ts","webpack:///./src/Program.ts","webpack:///./src/HighSpeedTapeDecoder.ts","webpack:///./src/LowSpeedAnteoTapeDecoder.ts","webpack:///./src/Decoder.ts","webpack:///./src/LowSpeedTapeDecoder.ts","webpack:///./src/Tape.ts","webpack:///./src/Basic.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/is-in-browser/dist/module.js","webpack:///./node_modules/tiny-warning/dist/tiny-warning.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/jss/dist/jss.esm.js","webpack:///./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js","webpack:///./node_modules/jss-plugin-rule-value-observable/dist/jss-plugin-rule-value-observable.esm.js","webpack:///./node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js","webpack:///./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js","webpack:///./node_modules/jss-plugin-extend/dist/jss-plugin-extend.esm.js","webpack:///./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js","webpack:///./node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js","webpack:///./node_modules/hyphenate-style-name/index.js","webpack:///./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js","webpack:///./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js","webpack:///./node_modules/jss-plugin-expand/dist/jss-plugin-expand.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/css-vendor/dist/css-vendor.esm.js","webpack:///./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js","webpack:///./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js","webpack:///./node_modules/jss-preset-default/dist/jss-preset-default.esm.js","webpack:///./src/Jss.ts","webpack:///./src/Highlight.ts","webpack:///./src/Highlighter.ts","webpack:///./src/BasicRender.ts","webpack:///./node_modules/z80-disasm/node_modules/z80-base/src/Register.ts","webpack:///./node_modules/z80-disasm/node_modules/z80-base/src/Utils.ts","webpack:///./node_modules/z80-disasm/node_modules/z80-base/src/RegisterSet.ts","webpack:///./node_modules/z80-disasm/node_modules/z80-base/src/Flag.ts","webpack:///./node_modules/z80-disasm/node_modules/z80-base/src/index.ts","webpack:///./node_modules/z80-disasm/src/Instruction.ts","webpack:///./node_modules/z80-disasm/src/Disasm.ts","webpack:///./node_modules/z80-disasm/src/KnownLabels.ts","webpack:///./node_modules/z80-disasm/src/index.ts","webpack:///./node_modules/trs80-emulator/src/Cassette.ts","webpack:///./node_modules/z80-emulator/src/Decode.ts","webpack:///./node_modules/z80-emulator/src/Z80.ts","webpack:///./node_modules/z80-emulator/src/index.ts","webpack:///./node_modules/trs80-emulator/src/Keyboard.ts","webpack:///./node_modules/trs80-emulator/src/Model1Level1Rom.ts","webpack:///./node_modules/trs80-emulator/src/Model1Level2Rom.ts","webpack:///./node_modules/trs80-emulator/src/Model3Rom.ts","webpack:///./node_modules/trs80-emulator/src/Utils.ts","webpack:///./node_modules/trs80-emulator/src/Config.ts","webpack:///./node_modules/trs80-emulator/src/Trs80.ts","webpack:///./node_modules/trs80-emulator/src/Trs80Screen.ts","webpack:///./node_modules/trs80-emulator/src/Fonts.ts","webpack:///./node_modules/trs80-emulator/src/CanvasScreen.ts","webpack:///./node_modules/trs80-emulator/src/SettingsPanel.ts","webpack:///./node_modules/trs80-emulator/src/ControlPanel.ts","webpack:///./node_modules/trs80-emulator/src/ProgressBar.ts","webpack:///./node_modules/trs80-emulator/src/index.ts","webpack:///./src/SystemProgramRender.ts","webpack:///./src/Hexdump.ts","webpack:///./src/WavFile.ts","webpack:///./src/WaveformDisplay.ts","webpack:///./src/Edtasm.ts","webpack:///./src/TapeBrowser.ts","webpack:///./src/Uploader.ts","webpack:///./node_modules/split.js/dist/split.es.js","webpack:///./src/Test.ts","webpack:///./src/Main.ts","webpack:///./src/index.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,CAAU;AACnC;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,CAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,mBAAO,CAAC,EAAmB;AACrD;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,EAAa;AACzC;AACA;AACA;;;;;;;;AC5Ba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,CAAe;AAC3C;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,CAAgB;AAC7C;;;;;;;;ACfA;AAAA;AACqC;;AAErC;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,UAAU,IAA6B;AACxC;AACA,CAAC,MAAM,EAEN;;AAED,aAAa,oEAAQ;AACN,+DAAM,EAAC;;;;;;;;;AClBT;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,EAAE;AACjB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7CA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;;;AChBa;AACb;AACA,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,CAAc;AACzC,qBAAqB,mBAAO,CAAC,CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,EAAE;AACjB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E,2CAA2C,mCAAmC;AAC9E,mCAAmC,2BAA2B;AAC9D,mCAAmC,2BAA2B;AAC9D,mCAAmC,2BAA2B;AAC9D,mCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAU;AACjC;AACA;AACA;AACA;;;;;;;;ACNa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,CAAU;AACnlLa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,EAAiB;AAC/C;AACA;AACA;AACA;;;;;;;;ACNa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,CAAU;AACna;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,EAAW;AACnC;AACA;AACA;;;;;;;;ACLa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;ACvIA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;ACrB3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;;;ACjB7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;;;;;;ACtBO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;;GAEG;AACH,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE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,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG;IACH,IAAI,SAAS;QACT,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC9C,CAAC;CACJ;AAED;;GAEG;AACI,MAAM,iBAAiB,GAAe;IACzC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAC1C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtB,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ;CAAC,CAAC;;;AC9IxD;;GAEG;AACH,IAAY,IAsCX;AAtCD,WAAY,IAAI;IACZ;;;OAGG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAQ;IACR;;OAEG;IACH,yBAAK;IACL;;OAEG;IACH,2BAAS;IACT;;OAEG;IACH,0BAAQ;IACR;;OAEG;IACH,4BAAS;IACT;;OAEG;IACH,0BAAQ;IACR;;OAEG;IACH,2BAAQ;AACZ,CAAC,EAtCW,IAAI,KAAJ,IAAI,QAsCf;;;ACxC0B;AACG;AACN;AACD;;;ACJvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjIA;AACA;AACA;AACA;AACA;AAC+C;AACC;AACE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,2BAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC,kCAAkC,iBAAiB;AACnD;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA,sCAAsC,iBAAiB;AACvD;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;AACA,sCAAsC,iBAAiB,YAAY,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;AACA,sCAAsC,iBAAiB,cAAc,SAAS;AAC9E;AACA;AACA;AACA,uCAAuC,GAAG;AAC1C;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB,WAAW,SAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClF0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,GAAG,4BAA4B,GAAG;AAC5E;AACA;AACA,4BAA4B,GAAG,qBAAqB,GAAG,qBAAqB,GAAG,2BAA2B,UAAU;AACpH;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,GAAG,4BAA4B,GAAG;AACxE,QAAQ,UAAU,CAAC,GAAG,sBAAsB,UAAU;AACtD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;ACpF2C;AACA;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;AC7L2C;AACA;AAC3C,MAAM,6BAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAAO;AAChB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,6BAAS;AACjC;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,QAAQ,2BAAO;AACf;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;;;ACrEkD;AACY;AACZ;AACd;AACmB;AACF;AAC9C,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA,0BAA0B,6BAAqB;AAC/C,2BAA2B,6BAAqB;AAChD,gCAAgC,6BAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;;;AC/KoC;AACA;AACkB;AAChB;AACF;AACY;AAChD;AACA;AACA;AACA;AACA;AACO,MAAM,yCAAoB;AACjC;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA,wCAAwC,OAAO,OAAO,OAAO;AAC7D;AACA;AACA,wCAAwC,OAAO,OAAO,OAAO;AAC7D;AACA,uCAAuC,OAAO;AAC9C;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrLA;AACA;AACsD;AAClB;AACE;AACF;AACA;AAC+E;AAC9E;AACrC,MAAM,kCAAS;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,iDAAwB;AACrC;AACA,qBAAqB,gBAAgB;AACrC,6BAA6B,iDAAwB;AACrD;AACA;AACA;AACA;AACA,aAAa,EAMJ;AACT,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO,+EAA+E,OAAO;AAC9H;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO,qFAAqF,OAAO,OAAO,OAAO;AAClJ;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA,uCAAuC,kCAAS;AAChD,qDAAqD,eAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA,mBAAmB,eAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD,qCAAqC,eAAe;AACpD,qCAAqC,wBAAwB;AAC7D,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA,6CAA6C,UAAU,gCAAgC,UAAU;AACjG,oEAAoE,UAAU;AAC9E,mCAAmC,UAAU,gDAAgD,UAAU;AACvG,qCAAqC,UAAU,qCAAqC,UAAU;AAC9F,uCAAuC,UAAU,mCAAmC,UAAU;AAC9F;AACA;AACA,uDAAuD,eAAe;AACtE,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,gCAAgC,UAAU;AACjG,oEAAoE,UAAU;AAC9E,mCAAmC,UAAU,gDAAgD,UAAU;AACvG,qCAAqC,UAAU,qCAAqC,UAAU;AAC9F,uCAAuC,UAAU,mCAAmC,UAAU;AAC9F;AACA;AACA,uDAAuD,eAAe;AACtE,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA,8GAA8G,UAAU;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,UAAU;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAwB;;;ACjWxB;AAC8D;AACU;AACF;AACD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iDAAwB;AAC9C,sBAAsB,yCAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc,CAAC,YAAY;AAC9C;AACA,aAAa,EAkBJ;AACT;AACA;;;ACzI4C;AACR;AACA;AACkB;AAChB;AACF;AACpC;AACA;AACA;AACA;AACA;AACO,MAAM,uCAAmB;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAQV;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,+BAA+B,gBAAgB;AAC/C,2BAA2B,eAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,0CAA0C,OAAO,6BAA6B,OAAO;AACrF;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO,mCAAmC,OAAO,OAAO,OAAO;AAC7G;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpMA;AACA;AACA;AAC8C;AACI;AACU;AACE;AAC9D;AACO,MAAM,SAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAAqB;AAC/C,2BAA2B,6BAAqB;AAChD;AACA,mCAAmC,cAAc;AACjD,mCAAmC,cAAc,CAAC,cAAc;AAChE,mCAAmC,cAAc,CAAC,uCAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,QAAQ,SAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxHA;AACgD;AACD;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe;AACf;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjOe;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;AChBA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAEnQ;;AAEQ,yDAAS,EAAC;;;ACJzB,mBAAmB,YAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEe,4DAAO,EAAC;;;ACnBvB;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,C;;ACde;AACf;AACA;AACA;AACA,C;;ACJe;AACf;AACA;AACA;;AAEA;AACA,C;;ACNe;AACf;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA,C;;ACb0D;AAClB;AACL;AAC+B;AACI;AACgB;AACc;;AAEpG,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,IAAI,MAAqC,GAAG,SAA4C;AACxF;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,gDAAgD;AAChD,4EAA4E;AAC5E,yDAAyD;AACzD;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,GAAG,mCAAmC;;;AAGtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA,qBAAqB,aAAa,YAAY;AAC9C;AACA,yBAAyB,0BAA0B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,KAAK;AACL,wBAAwB,YAAY;AACpC;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE;AACA,GAAG;;;AAGH,oDAAoD;;AAEpD;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;;AAEA;AACA;AACA,IAAI,cAAM;AACV;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC,qDAAqD;;AAErD;AACA,wCAAwC,iCAAiC;;AAEzE;AACA,sEAAsE;AACtE;AACA;;AAEA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA8E;AAC5H;;AAEA;AACA;;AAEA;AACA,CAAC;AACD,IAAI,iBAAS;AACb;AACA;AACA,EAAE,cAAc;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,4BAA4B,sBAAsB,CAAC,sBAAsB;AACzE,iCAAiC,cAAM;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,QAAQ,GAAG;AACjC;AACA,KAAK;AACL;AACA;;AAEA,EAAE,YAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA,eAAe,iBAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,uBAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA,sCAAsC,qBAAqB;AAC3D;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,qCAAqC,uBAAe;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,qBAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,MAAM,MAAqC,GAAG,SAAiD;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAM;AACnD,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA,yCAAyC,QAAQ,GAAG;AACpD;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA,wCAAwC,iBAAiB;AACzD;;AAEA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,MAAqC,GAAG,SAAkF;AAChI;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,IAAI,kBAAU;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,cAAM;AACV;AACA,kEAAkE,qBAAa;AAC/E,GAAG;AACH;AACA;AACA;AACA,mCAAmC,kBAAU;AAC7C,8BAA8B,kBAAU;AACxC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,oBAAY;AAChB;AACA;AACA,EAAE,cAAc;;AAEhB;AACA;;AAEA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ,GAAG;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA,iBAAiB,oBAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,cAAM;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,gBAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,eAAe;AACpB;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA,+BAA+B,cAAM;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,iBAAS;AACjC;AACA;AACA,KAAK,0BAA0B,qBAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,iBAAS;AACjC;AACA;AACA,KAAK,0BAA0B,qBAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;;AAE9D,8DAA8D;;AAE9D;AACA,KAAK;AACL,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,kBAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,GAAG;AAC9B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,qBAAqB,gBAAQ;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,wCAAwC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,wCAAwC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU,MAAqC,GAAG,SAAsD;AACxG;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA,IAAI,sBAAc;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,kBAAkB,6BAA6B;;AAE/C;;AAEA,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,YAAY;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAc;;AAE/B;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA6F;AAC3I;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,IAAI,MAAqC,GAAG,SAAmH;AAC/J;AACA;AACA;AACA;AACA;;;AAGA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA,IAAI,MAAqC,GAAG,SAA6E;AACzH;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,sFAAsF,KAAK,MAAqC,GAAG,SAA0D;AAC7L;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,CAAC;;AAED;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH,IAAI,MAAqC,GAAG,SAAsC;AAClF;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,IAAI,WAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,oBAAoB;AACvC;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,QAAQ,GAAG;AACnC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,kBAAU,SAAS,QAAQ,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,QAAQ,GAAG;AACjC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6EAA6E,aAAa;AAC1F;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,qBAAa;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,gBAAO;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,gBAAO;AACb;AACA;;AAEA,EAAE,YAAY;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,WAAG;AAChB;AACA;AACA;AACA;;AAEA,IAAI,aAAK;;AAEM,yDAAK,EAAC;AAC4H;;;AC3qEhH;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU,SAAS;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qFAAc,EAAC;;;;;;ACtDe;AACZ;;AAEjC,IAAI,iDAAY;AAChB,wBAAwB,qBAAY,qBAAqB,qBAAY;AACrE;;AAEA;AACA;AACA;AACA,WAAW,iDAAY,oBAAoB;;AAE3C;AACA,iBAAiB,UAAU,SAAS,WAAW;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iDAAY;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,yFAAgB,EAAC;;;ACjDG;;AAEnC,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA6D;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,qCAAa;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qCAAa;AAChC;AACA;;AAEe,0EAAc,EAAC;;;AC7C4B;AAC3B;;AAE/B;AACA;;AAEA,IAAI,yCAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAQ,CAAC,QAAQ,GAAG;AACzC;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,wCAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,QAAQ,GAAG;AACnE;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,QAAQ,GAAG;AACxD;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,QAAQ,GAAG;AAC5D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,iBAAiB,yCAAmB;AACpC;;AAEA;AACA,iBAAiB,wCAAkB;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;ACxLU;;AAEnC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA0E;AACxH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA,uBAAuB,6BAA6B;AACpD;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;AC3IiC;AACvB;;AAEnC,IAAI,qCAAe;AACnB;AACA,IAAI,+BAAS;AACb;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,MAAqC,GAAG,SAA2I;AACzL;AACA;AACA;;AAEA;AACA,2CAA2C,qCAAe;AAC1D,2CAA2C,qCAAe;AAC1D;;AAEA,mBAAmB,4BAA4B;AAC/C;;AAEA,qBAAqB,4BAA4B;AACjD;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ,GAAG;AACvC;AACA,KAAK;AACL;AACA;;AAEA,kBAAkB,QAAQ,GAAG;AAC7B;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;AACnE;;AAEA,sEAAsE;;AAEtE,oCAAoC,+BAAS;AAC7C,iDAAiD,QAAQ,GAAG;AAC5D;AACA,SAAS;AACT,OAAO;AACP;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;AC9GU;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,8BAA8B,mCAAmC,yBAAyB;;AAE1F;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;AACA,GAAG,0CAA0C,oBAAoB;;;AAGjE;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAA4E;AAC1H;AACA;;AAEA;AACA,MAAM,MAAqC,GAAG,SAAyE;AACvH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;;AAGA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,qEAAU,EAAC;;;ACxE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,2EAAkB;;;AClBY;;AAE7C;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA,gDAAgD,oBAAS;AACzD;AACA;;AAEA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,oBAAS,OAAO;;AAEzC;AACA,qCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,uEAAS,EAAC;;;AC/Dc;;AAEvC,SAAS,gBAAgB;AACzB,IAAI,8BAAE,GAAG,gBAAgB;AACzB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,8BAAE;AACvB,wBAAwB,8BAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAAE;AACxB,yBAAyB,8BAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,2EAAW,EAAC;;;ACtN3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB,+BAA+B;AACjE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qCAAqC;;AAErC;AACA;;AAEA,4DAA4D,2EAA2E;;AAEvI,qEAAqE;AACrE,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;;AAEA;AACA;;AAEA,iEAAiE;;AAEjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,iEAAiE;;AAEjE;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAS,EAAC;;;ACjYV;AACf;AACA,iDAAiD,gBAAgB;AACjE;AACA;;AAEA;AACA;AACA,C;;ACRe;AACf;AACA,C;;ACFe;AACf;AACA,C;;ACFoD;AACJ;AACI;AACrC;AACf,SAAS,kBAAiB,SAAS,gBAAe,SAAS,kBAAiB;AAC5E,C;;ACLwC;AACsC;;AAE9E;AACA;AACA,IAAI,kBAAG;AACP;AACA;AACA,cAAc,WAAW,+CAA+C;;AAExE,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,oBAAK;;AAEX;;AAEA,WAAW,kBAAG;AACd,QAAQ,kBAAG,eAAe,oBAAK;AAC/B,WAAW,kBAAG;AACd,MAAM,kBAAG,YAAY,kBAAG;AACxB;AACA;AACA,GAAG;;;AAGH,wCAAwC,oBAAK;AAC7C;AACA,IAAI,kBAAG;AACP;AACA,GAAG;;;AAGH,mDAAmD,oBAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;;AAGA;AACA;AACA,OAAO,kBAAG;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC,qCAAqC;;AAErC;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,sBAAO;AACX,wBAAwB,sBAAO;AAC/B;AACA,CAAC;AACD;AACA,CAAC;AACD,gBAAgB,sBAAO;AACvB;AACA,CAAC;AACD,kBAAkB,kBAAkB;AACpC;AACA,CAAC;;AAED;AACA,IAAI,oBAAK;;AAET,IAAI,WAAW;AACf,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,oBAAK;AAC5B,GAAG;AACH;;;AAGA;AACA,kBAAkB,oBAAK;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB,MAAM,KAAoC,IAAI,oBAAK;AACnD,WAAW,oBAAK;AAChB,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH,iBAAiB,8BAA8B;AAC/C,IAAI,oBAAK,uDAAuD;;AAEhE,QAAQ,oBAAK;AACb,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;;AAEA,SAAS,oBAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,WAAW;AACf;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH,0CAA0C;;AAE1C,MAAM,KAAoC;AAC1C;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA,+CAA+C;;AAE/C,2EAA2E;;AAE3E,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA,GAAG;;;AAGH,4BAA4B;;AAE5B;AACA;AACA;;AAEyE;;;AC5jBU;AAClD;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA,8BAA8B,cAAc,gBAAgB,UAAU;AACtE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc,OAAO,UAAU;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,oFAAiB,EAAC;;;AC1DjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEe,0EAAY,EAAC;;;AC3B2B;AACG;AACf;AACJ;AACA;AACA;AACE;AACK;AACI;AACX;AACiB;AACV;;AAE9C,IAAI,4BAAK;AACT;AACA;AACA;;AAEA;AACA,cAAc,kCAAS,IAAI,oCAAU,sBAAsB,uBAAQ,IAAI,qBAAM,IAAI,qBAAM,IAAI,qBAAM,IAAI,sBAAO,IAAI,yBAAS,IAAI,2BAAW,uBAAuB,qBAAM,IAAI,8BAAc,IAAI,yBAAS;AACpM;AACA,CAAC;;AAEc,uFAAK,EAAC;;;ACvBC;AACkB;AACxC;AACA,OAAG,OAAO,sBAAM;AACD,mDAAG,EAAC;;;ACJnB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZwC;AACxC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA,0BAA0B,SAAS;AACnC;AACA,8BAA8B,SAAS;AACvC,8BAA8B,SAAS;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;ACtJwB;AACc;AACQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;A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C,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AAE1D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;A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8BAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oCAAgB;AACtB,MAAM,yBAAK;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT;AACA;AACA,mBAAmB,oCAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA,MAAM,yBAAK,GAAG,OAAG,kBAAkB,yBAAK;AACjC,MAAM,sCAAkB,GAAG,yBAAK;AAChC,MAAM,mCAAe,GAAG,yBAAK;AACpC;AACA;AACA;AACA;AACA;AACO,SAAS,yBAAK;AACrB,IAAI,yBAAK;AACT,oBAAoB,yBAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAG;AACX;AACA;AACA,iCAAiC,gCAAY,6CAA6C,8BAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,4BAA4B,SAAS;AACjE;AACA;AACA,QAAQ,uBAAG;AACX;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,QAAQ,uBAAG;AACX;AACA,iCAAiC,gCAAY,6CAA6C,8BAAU;AACpG,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG;AACnB;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG,uCAAuC,SAAS;AACnE;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAG;AACP,IAAI,uBAAG,gBAAgB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAM;AAC7B,qBAAqB,gBAAgB;AACrC,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA,YAAY,uBAAG,OAAO,SAAS;AAC/B,YAAY,uBAAG;AACf,YAAY,uBAAG;AACf;AACA,gBAAgB,uBAAG;AACnB,gBAAgB,uBAAG;AACnB;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7NA;AACwB;AACM;AACgB;AAC9C;AACA,MAAM,wBAAgB;AACtB,MAAM,aAAK;AACX;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,wBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,MAAM,aAAK,GAAG,OAAG,kBAAkB,aAAK;AACjC,MAAM,0BAAkB,GAAG,aAAK;AAChC,MAAM,uBAAe,GAAG,aAAK;AAC7B,SAAS,cAAM;AACtB,IAAI,aAAK;AACT,oBAAoB,aAAK;AACzB;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA,4BAA4B,gDAAgD;AAC5E;AACA;AACA,0BAA0B,GAAG;AAC7B,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA,4BAA4B,gDAAgD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;;;ACxFyC;AACzC;AACA;AACA;AACA,mCAAmC;AACnC,+BAA+B;AAC/B,iCAAiC;AACjC,sCAAsC;AACtC,iCAAiC;AACjC,oCAAoC;AACpC,gCAAgC;AAChC,iCAAiC;AACjC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnMoC;AACI;AACP;AAC6B;AACzB;AACa;AACC;AACoB;AAC9B;AACzC,IAAI,mCAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,+BAAe;AAC5B;AACA;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD,+BAA+B,6BAAqB;AACpD,mCAAmC,6BAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6BAAqB;AAClD;AACA;AACA;AACA,0BAA0B,6BAAqgCAAgC,MAAM,MAAM,MAAM;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmB;AAC3E,YAAY,mCAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,wBAAwB,gCAAgC;AACxkDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,2BAA2B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAc;AAC7D;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,kDAAkD,gBAAgB;AAClE,iDAAiD,qBAAqB;AACtE;AACA,0DAA0D,UAAU;AACpE;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;;;ACv3BA;AACA;AACA;AACwB;AACsB;AAC9C;AACA,MAAM,uBAAgB;AACtB,MAAM,YAAK;AACX;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uBAAgB;AACnC,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,MAAM,YAAK,GAAG,OAAG,kBAAkB,YAAK;AACjC,MAAM,yBAAkB,GAAG,YAAK;AAChC,MAAM,sBAAe,GAAG,YAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,YAAK;AACT,oBAAoB,YAAK;AACzB;AACA;AACA;AACA;AACA,QAAQ,UAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,gBAAgB,UAAG;AACnB,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAG;AACnB,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9HgD;AACf;AACY;AACgB;AACxB;AACD;AACN;AACsF;AAChE;AACjB;AACC;AAC0B;AACvB;AACS;AACJ;AAC5C;AACA;AACA;AACA,MAAM,yBAAa,SAAS,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD;AACA;AACA;AACA,+BAA+B,6BAAqB;AACpD;AACA;AACA;AACA,mCAAmC,6BAAqB;AACxD;AACA;AACA;AACA;AACA,2CAA2C,+BAAe;AAC1D,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA,YAAY,+BAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,eAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAO;AACtC;AACA;AACA,8CAA8C,eAAO;AACrD,4CAA4C,eAAO;AACnD,kCAAkC,gBAAgB;AAClD,gCAAgC,gBAAgB;AAChD,gCAAgC,gBAAgB;AAChD,+BAA+B,eAAO;AACtC;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,eAAO;AACtC;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAY;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAW;AAC9C,qCAAqC,uBAAW;AAChD,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA,yDAAyD,0BAA0B;AACnF,2DAA2D,0BAA0B;AACrF,SAAS;AACT;AACA,sDAAsD,uBAAuB;AAC7E,wDAAwD,uBAAuB;AAC/E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+BAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAiB,CAAC,aAAmB;AACpE,gCAAgC,uBAAW;AAC3C;AACA;AACA,sDAAsD,kBAA8B;AACpF,SAAS;AACT;AACA,mDAAmD,eAA2B;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2BAAa;AAC/C,8CAA8C,yBAAyB;AACvE,gCAAgC,uBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,sCAAsC;AAC5F,SAAS;AACT;AACA,mDAAmD,mCAAmC;AACtF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAmB;AACpD,gCAAgC,uBAAW;AAC3C;AACA;AACA,sDAAsD,yBAAyB;AAC/E,SAAS;AACT;AACA,mDAAmD,sBAAsB;AACzE,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAY;AACvC,0BAA0B,WAAK;AAC/B,0CAA0C,aAAa,0BAA0B,SAAS;AAC1F,8BAA8B,aAAa,0BAA0B,SAAS;AAC9E,iCAAiC,yBAAY;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD,gBAAgB,gBAAgB;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxqBA;AACyC;AACD;AAC6B;AACZ;AACrB;AAC7B,MAAM,iBAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe,gBAAgB,cAAc;AACnF,4BAA4B,SAAS;AACrC;AACA;AACA,4BAA4B,SAAS,OAAO,cAAc,CAAC,YAAY,CAAC,SAAS;AACjF;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpHA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAQ;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAQ;AACzB;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,6BAA6B,qDAAqD;;AAElF;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,iBAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,yBAAyB,EAAE;;AAE/F;AACA;AACA;AACA,2EAA2E,gBAAgB,EAAE;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;;AAEhC;;AAEA,6BAA6B;;AAE7B;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,cAAc,EAAE;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,iBAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,iBAAQ;;AAEhaAAa;AACb;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEe,kDAAK,EAAC;;;ACnwBd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzDoC;AACN;AACc;AACN;AACT;AACqB;AACJ;AACF;AACJ;AACY;AACmC;AACzB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB,iBAAiB,SAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yBAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,QAAQ,SAAI;AACZ;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAI;AACzB,wBAAwB,eAAO;AAC/B;AACA;AACA;AACA,4BAA4B,uBAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAK;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,QAAK;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,WAAW;AACvC,6BAA6B,SAAI;AACjC,wCAAwC,+BAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,+BAAe;AAC3B;AACA,gBAAgB,+BAAe;AAC/B;AACA;AACA,gBAAgB,+BAAe;AAC/B;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,qBAAqB,QAAQ;AAC7B,wCAAwC,iDAAwB;AAChE,4FAA4F,iDAAwB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe,0BAA0B,QAAQ;AACjG;AACA;AACA,qBAAqB,QAAQ;AAC7B,wCAAwC,iDAAwB;AAChE,gEAAgE,iDAAwB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,qBAAqB,QAAQ;AAC7B,kDAAkD,QAAQ;AAC1D,8BAA8B,iDAAwB;AACtD,8BAA8B,yCAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;ACjY8B;AAC9B,IAAI","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ste_core_1 = require(\"ste-core\");\r\nexports.DispatcherBase = ste_core_1.DispatcherBase;\r\nexports.DispatcherWrapper = ste_core_1.DispatcherWrapper;\r\nexports.EventListBase = ste_core_1.EventListBase;\r\nexports.Subscription = ste_core_1.Subscription;\r\nvar ste_events_1 = require(\"ste-events\");\r\nexports.EventDispatcher = ste_events_1.EventDispatcher;\r\nexports.EventHandlingBase = ste_events_1.EventHandlingBase;\r\nexports.EventList = ste_events_1.EventList;\r\nexports.NonUniformEventList = ste_events_1.NonUniformEventList;\r\nvar ste_simple_events_1 = require(\"ste-simple-events\");\r\nexports.SimpleEventDispatcher = ste_simple_events_1.SimpleEventDispatcher;\r\nexports.SimpleEventHandlingBase = ste_simple_events_1.SimpleEventHandlingBase;\r\nexports.SimpleEventList = ste_simple_events_1.SimpleEventList;\r\nexports.NonUniformSimpleEventList = ste_simple_events_1.NonUniformSimpleEventList;\r\nvar ste_signals_1 = require(\"ste-signals\");\r\nexports.SignalDispatcher = ste_signals_1.SignalDispatcher;\r\nexports.SignalHandlingBase = ste_signals_1.SignalHandlingBase;\r\nexports.SignalList = ste_signals_1.SignalList;\r\n","\"use strict\";\r\n/*!\r\n * Strongly Typed Events for TypeScript - Core\r\n * https://github.com/KeesCBakker/StronlyTypedEvents/\r\n * http://keestalkstech.com\r\n *\r\n * Copyright Kees C. Bakker / KeesTalksTech\r\n * Released under the MIT license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dispatching_1 = require(\"./dispatching\");\r\nexports.DispatcherBase = dispatching_1.DispatcherBase;\r\nexports.DispatcherWrapper = dispatching_1.DispatcherWrapper;\r\nexports.EventListBase = dispatching_1.EventListBase;\r\nvar subscription_1 = require(\"./subscription\");\r\nexports.Subscription = subscription_1.Subscription;\r\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Stores a handler. Manages execution meta data.\r\n * @class Subscription\r\n * @template TEventHandler\r\n */\r\nvar Subscription = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of Subscription.\r\n     *\r\n     * @param {TEventHandler} handler The handler for the subscription.\r\n     * @param {boolean} isOnce Indicates if the handler should only be executed once.\r\n     */\r\n    function Subscription(handler, isOnce) {\r\n        this.handler = handler;\r\n        this.isOnce = isOnce;\r\n        /**\r\n         * Indicates if the subscription has been executed before.\r\n         */\r\n        this.isExecuted = false;\r\n    }\r\n    /**\r\n     * Executes the handler.\r\n     *\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} scope The scope the scope of the event.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    Subscription.prototype.execute = function (executeAsync, scope, args) {\r\n        if (!this.isOnce || !this.isExecuted) {\r\n            this.isExecuted = true;\r\n            var fn = this.handler;\r\n            if (executeAsync) {\r\n                setTimeout(function () {\r\n                    fn.apply(scope, args);\r\n                }, 1);\r\n            }\r\n            else {\r\n                fn.apply(scope, args);\r\n            }\r\n        }\r\n    };\r\n    return Subscription;\r\n}());\r\nexports.Subscription = Subscription;\r\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar management_1 = require(\"./management\");\r\nvar subscription_1 = require(\"./subscription\");\r\n/**\r\n * Base class for implementation of the dispatcher. It facilitates the subscribe\r\n * and unsubscribe methods based on generic handlers. The TEventType specifies\r\n * the type of event that should be exposed. Use the asEvent to expose the\r\n * dispatcher as event.\r\n */\r\nvar DispatcherBase = /** @class */ (function () {\r\n    function DispatcherBase() {\r\n        this._wrap = new DispatcherWrapper(this);\r\n        this._subscriptions = new Array();\r\n    }\r\n    Object.defineProperty(DispatcherBase.prototype, \"count\", {\r\n        /**\r\n         * Returns the number of subscriptions.\r\n         *\r\n         * @readonly\r\n         *\r\n         * @memberOf DispatcherBase\r\n         */\r\n        get: function () {\r\n            return this._subscriptions.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.subscribe = function (fn) {\r\n        var _this = this;\r\n        if (fn) {\r\n            this._subscriptions.push(new subscription_1.Subscription(fn, false));\r\n        }\r\n        return function () {\r\n            _this.unsubscribe(fn);\r\n        };\r\n    };\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.sub = function (fn) {\r\n        return this.subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherBase.prototype.one = function (fn) {\r\n        var _this = this;\r\n        if (fn) {\r\n            this._subscriptions.push(new subscription_1.Subscription(fn, true));\r\n        }\r\n        return function () {\r\n            _this.unsubscribe(fn);\r\n        };\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.has = function (fn) {\r\n        if (!fn)\r\n            return false;\r\n        return this._subscriptions.some(function (sub) { return sub.handler == fn; });\r\n    };\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.unsubscribe = function (fn) {\r\n        if (!fn)\r\n            return;\r\n        for (var i = 0; i < this._subscriptions.length; i++) {\r\n            if (this._subscriptions[i].handler == fn) {\r\n                this._subscriptions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Unsubscribes the handler from the dispatcher.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherBase.prototype.unsub = function (fn) {\r\n        this.unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Generic dispatch will dispatch the handlers with the given arguments.\r\n     *\r\n     * @protected\r\n     * @param {boolean} executeAsync True if the even should be executed async.\r\n     * @param {*} The scope the scope of the event. The scope becomes the \"this\" for handler.\r\n     * @param {IArguments} args The arguments for the event.\r\n     */\r\n    DispatcherBase.prototype._dispatch = function (executeAsync, scope, args) {\r\n        var _this = this;\r\n        var _loop_1 = function (sub) {\r\n            var ev = new management_1.EventManagement(function () { return _this.unsub(sub.handler); });\r\n            var nargs = Array.prototype.slice.call(args);\r\n            nargs.push(ev);\r\n            sub.execute(executeAsync, scope, nargs);\r\n            //cleanup subs that are no longer needed\r\n            this_1.cleanup(sub);\r\n            if (!executeAsync && ev.propagationStopped) {\r\n                return \"break\";\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        //execute on a copy because of bug #9\r\n        for (var _i = 0, _a = __spreadArrays(this._subscriptions); _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            var state_1 = _loop_1(sub);\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up subs that ran and should run only once.\r\n     */\r\n    DispatcherBase.prototype.cleanup = function (sub) {\r\n        if (sub.isOnce && sub.isExecuted) {\r\n            var i = this._subscriptions.indexOf(sub);\r\n            if (i > -1) {\r\n                this._subscriptions.splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    DispatcherBase.prototype.asEvent = function () {\r\n        return this._wrap;\r\n    };\r\n    /**\r\n     * Clears all the subscriptions.\r\n     */\r\n    DispatcherBase.prototype.clear = function () {\r\n        this._subscriptions.splice(0, this._subscriptions.length);\r\n    };\r\n    return DispatcherBase;\r\n}());\r\nexports.DispatcherBase = DispatcherBase;\r\n/**\r\n * Base class for event lists classes. Implements the get and remove.\r\n */\r\nvar EventListBase = /** @class */ (function () {\r\n    function EventListBase() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    EventListBase.prototype.get = function (name) {\r\n        var event = this._events[name];\r\n        if (event) {\r\n            return event;\r\n        }\r\n        event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    EventListBase.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    return EventListBase;\r\n}());\r\nexports.EventListBase = EventListBase;\r\n/**\r\n * Hides the implementation of the event dispatcher. Will expose methods that\r\n * are relevent to the event.\r\n */\r\nvar DispatcherWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new EventDispatcherWrapper instance.\r\n     * @param dispatcher The dispatcher.\r\n     */\r\n    function DispatcherWrapper(dispatcher) {\r\n        this._subscribe = function (fn) { return dispatcher.subscribe(fn); };\r\n        this._unsubscribe = function (fn) { return dispatcher.unsubscribe(fn); };\r\n        this._one = function (fn) { return dispatcher.one(fn); };\r\n        this._has = function (fn) { return dispatcher.has(fn); };\r\n        this._clear = function () { return dispatcher.clear(); };\r\n        this._count = function () { return dispatcher.count; };\r\n    }\r\n    Object.defineProperty(DispatcherWrapper.prototype, \"count\", {\r\n        /**\r\n         * Returns the number of subscriptions.\r\n         *\r\n         * @readonly\r\n         * @type {number}\r\n         * @memberOf DispatcherWrapper\r\n         */\r\n        get: function () {\r\n            return this._count();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherWrapper.prototype.subscribe = function (fn) {\r\n        return this._subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe to the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     * @returns A function that unsubscribes the event handler from the event.\r\n     */\r\n    DispatcherWrapper.prototype.sub = function (fn) {\r\n        return this.subscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.unsubscribe = function (fn) {\r\n        this._unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribe from the event dispatcher.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.unsub = function (fn) {\r\n        this.unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribe once to the event with the specified name.\r\n     * @param fn The event handler that is called when the event is dispatched.\r\n     */\r\n    DispatcherWrapper.prototype.one = function (fn) {\r\n        return this._one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param fn The event handler.\r\n     */\r\n    DispatcherWrapper.prototype.has = function (fn) {\r\n        return this._has(fn);\r\n    };\r\n    /**\r\n     * Clears all the subscriptions.\r\n     */\r\n    DispatcherWrapper.prototype.clear = function () {\r\n        this._clear();\r\n    };\r\n    return DispatcherWrapper;\r\n}());\r\nexports.DispatcherWrapper = DispatcherWrapper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Allows the user to interact with the event.\r\n *\r\n * @class EventManagement\r\n * @implements {IEventManagement}\r\n */\r\nvar EventManagement = /** @class */ (function () {\r\n    function EventManagement(unsub) {\r\n        this.unsub = unsub;\r\n        this.propagationStopped = false;\r\n    }\r\n    EventManagement.prototype.stopPropagation = function () {\r\n        this.propagationStopped = true;\r\n    };\r\n    return EventManagement;\r\n}());\r\nexports.EventManagement = EventManagement;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nexports.EventDispatcher = events_1.EventDispatcher;\r\nexports.EventHandlingBase = events_1.EventHandlingBase;\r\nexports.EventList = events_1.EventList;\r\nexports.NonUniformEventList = events_1.NonUniformEventList;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * Dispatcher implementation for events. Can be used to subscribe, unsubscribe\r\n * or dispatch events. Use the ToEvent() method to expose the event.\r\n */\r\nvar EventDispatcher = /** @class */ (function (_super) {\r\n    __extends(EventDispatcher, _super);\r\n    /**\r\n     * Creates a new EventDispatcher instance.\r\n     */\r\n    function EventDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param sender The sender.\r\n     * @param args The arguments object.\r\n     */\r\n    EventDispatcher.prototype.dispatch = function (sender, args) {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the events thread.\r\n     * @param sender The sender.\r\n     * @param args The arguments object.\r\n     */\r\n    EventDispatcher.prototype.dispatchAsync = function (sender, args) {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    EventDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return EventDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.EventDispatcher = EventDispatcher;\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nvar NonUniformEventList = /** @class */ (function () {\r\n    function NonUniformEventList() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformEventList.prototype.get = function (name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        var event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformEventList.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    NonUniformEventList.prototype.createDispatcher = function () {\r\n        return new EventDispatcher();\r\n    };\r\n    return NonUniformEventList;\r\n}());\r\nexports.NonUniformEventList = NonUniformEventList;\r\n/**\r\n * Storage class for multiple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar EventList = /** @class */ (function (_super) {\r\n    __extends(EventList, _super);\r\n    /**\r\n     * Creates a new EventList instance.\r\n     */\r\n    function EventList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    EventList.prototype.createDispatcher = function () {\r\n        return new EventDispatcher();\r\n    };\r\n    return EventList;\r\n}(ste_core_1.EventListBase));\r\nexports.EventList = EventList;\r\n/**\r\n * Extends objects with event handling capabilities.\r\n */\r\nvar EventHandlingBase = /** @class */ (function () {\r\n    function EventHandlingBase() {\r\n        this._events = new EventList();\r\n    }\r\n    Object.defineProperty(EventHandlingBase.prototype, \"events\", {\r\n        /**\r\n         * Gets the list with all the event dispatchers.\r\n         */\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    /**\r\n     * Subscribes to once the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Subscribes to once the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    EventHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    return EventHandlingBase;\r\n}());\r\nexports.EventHandlingBase = EventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar simple_events_1 = require(\"./simple-events\");\r\nexports.SimpleEventDispatcher = simple_events_1.SimpleEventDispatcher;\r\nexports.SimpleEventHandlingBase = simple_events_1.SimpleEventHandlingBase;\r\nexports.SimpleEventList = simple_events_1.SimpleEventList;\r\nexports.NonUniformSimpleEventList = simple_events_1.NonUniformSimpleEventList;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a simple event\r\n */\r\nvar SimpleEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(SimpleEventDispatcher, _super);\r\n    /**\r\n     * Creates a new SimpleEventDispatcher instance.\r\n     */\r\n    function SimpleEventDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the event.\r\n     * @param args The arguments object.\r\n     */\r\n    SimpleEventDispatcher.prototype.dispatch = function (args) {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the events thread.\r\n     * @param args The arguments object.\r\n     */\r\n    SimpleEventDispatcher.prototype.dispatchAsync = function (args) {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    SimpleEventDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return SimpleEventDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n/**\r\n * Similar to EventList, but instead of TArgs, a map of event names ang argument types is provided with TArgsMap.\r\n */\r\nvar NonUniformSimpleEventList = /** @class */ (function () {\r\n    function NonUniformSimpleEventList() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Gets the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformSimpleEventList.prototype.get = function (name) {\r\n        if (this._events[name]) {\r\n            // @TODO avoid typecasting. Not sure why TS thinks this._events[name] could still be undefined.\r\n            return this._events[name];\r\n        }\r\n        var event = this.createDispatcher();\r\n        this._events[name] = event;\r\n        return event;\r\n    };\r\n    /**\r\n     * Removes the dispatcher associated with the name.\r\n     * @param name The name of the event.\r\n     */\r\n    NonUniformSimpleEventList.prototype.remove = function (name) {\r\n        delete this._events[name];\r\n    };\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    NonUniformSimpleEventList.prototype.createDispatcher = function () {\r\n        return new SimpleEventDispatcher();\r\n    };\r\n    return NonUniformSimpleEventList;\r\n}());\r\nexports.NonUniformSimpleEventList = NonUniformSimpleEventList;\r\n/**\r\n * Storage class for multiple simple events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar SimpleEventList = /** @class */ (function (_super) {\r\n    __extends(SimpleEventList, _super);\r\n    /**\r\n     * Creates a new SimpleEventList instance.\r\n     */\r\n    function SimpleEventList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    SimpleEventList.prototype.createDispatcher = function () {\r\n        return new SimpleEventDispatcher();\r\n    };\r\n    return SimpleEventList;\r\n}(ste_core_1.EventListBase));\r\nexports.SimpleEventList = SimpleEventList;\r\n/**\r\n * Extends objects with simple event handling capabilities.\r\n */\r\nvar SimpleEventHandlingBase = /** @class */ (function () {\r\n    function SimpleEventHandlingBase() {\r\n        this._events = new SimpleEventList();\r\n    }\r\n    Object.defineProperty(SimpleEventHandlingBase.prototype, \"events\", {\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SimpleEventHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    return SimpleEventHandlingBase;\r\n}());\r\nexports.SimpleEventHandlingBase = SimpleEventHandlingBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar signals_1 = require(\"./signals\");\r\nexports.SignalDispatcher = signals_1.SignalDispatcher;\r\nexports.SignalHandlingBase = signals_1.SignalHandlingBase;\r\nexports.SignalList = signals_1.SignalList;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ste_core_1 = require(\"ste-core\");\r\n/**\r\n * The dispatcher handles the storage of subsciptions and facilitates\r\n * subscription, unsubscription and dispatching of a signal event.\r\n */\r\nvar SignalDispatcher = /** @class */ (function (_super) {\r\n    __extends(SignalDispatcher, _super);\r\n    /**\r\n     * Creates a new SignalDispatcher instance.\r\n     */\r\n    function SignalDispatcher() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Dispatches the signal.\r\n     */\r\n    SignalDispatcher.prototype.dispatch = function () {\r\n        this._dispatch(false, this, arguments);\r\n    };\r\n    /**\r\n     * Dispatches the signal threaded.\r\n     */\r\n    SignalDispatcher.prototype.dispatchAsync = function () {\r\n        this._dispatch(true, this, arguments);\r\n    };\r\n    /**\r\n     * Creates an event from the dispatcher. Will return the dispatcher\r\n     * in a wrapper. This will prevent exposure of any dispatcher methods.\r\n     */\r\n    SignalDispatcher.prototype.asEvent = function () {\r\n        return _super.prototype.asEvent.call(this);\r\n    };\r\n    return SignalDispatcher;\r\n}(ste_core_1.DispatcherBase));\r\nexports.SignalDispatcher = SignalDispatcher;\r\n/**\r\n * Storage class for multiple signal events that are accessible by name.\r\n * Events dispatchers are automatically created.\r\n */\r\nvar SignalList = /** @class */ (function (_super) {\r\n    __extends(SignalList, _super);\r\n    /**\r\n     * Creates a new SignalList instance.\r\n     */\r\n    function SignalList() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * Creates a new dispatcher instance.\r\n     */\r\n    SignalList.prototype.createDispatcher = function () {\r\n        return new SignalDispatcher();\r\n    };\r\n    return SignalList;\r\n}(ste_core_1.EventListBase));\r\nexports.SignalList = SignalList;\r\n/**\r\n * Extends objects with signal event handling capabilities.\r\n */\r\nvar SignalHandlingBase = /** @class */ (function () {\r\n    function SignalHandlingBase() {\r\n        this._events = new SignalList();\r\n    }\r\n    Object.defineProperty(SignalHandlingBase.prototype, \"events\", {\r\n        get: function () {\r\n            return this._events;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Subscribes once to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.one = function (name, fn) {\r\n        this._events.get(name).one(fn);\r\n    };\r\n    /**\r\n     * Checks it the event has a subscription for the specified handler.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.has = function (name, fn) {\r\n        return this._events.get(name).has(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.subscribe = function (name, fn) {\r\n        this._events.get(name).subscribe(fn);\r\n    };\r\n    /**\r\n     * Subscribes to the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.sub = function (name, fn) {\r\n        this.subscribe(name, fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.unsubscribe = function (name, fn) {\r\n        this._events.get(name).unsubscribe(fn);\r\n    };\r\n    /**\r\n     * Unsubscribes from the event with the specified name.\r\n     * @param name The name of the event.\r\n     * @param fn The event handler.\r\n     */\r\n    SignalHandlingBase.prototype.unsub = function (name, fn) {\r\n        this.unsubscribe(name, fn);\r\n    };\r\n    return SignalHandlingBase;\r\n}());\r\nexports.SignalHandlingBase = SignalHandlingBase;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Information about one particular bit (its position and status).\n */\nexport class BitData {\n    /**\n     * Create an object representing a bit.\n     *\n     * @param startFrame the first frame, inclusive.\n     * @param endFrame the last frame, inclusive.\n     * @param bitType what kind of bit it is.\n     */\n    constructor(startFrame, endFrame, bitType) {\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n        this.bitType = bitType;\n    }\n}\n","/**\n * Information about a particular bit.\n */\nexport var BitType;\n(function (BitType) {\n    /**\n     * Represents a numerical zero (0).\n     */\n    BitType[BitType[\"ZERO\"] = 0] = \"ZERO\";\n    /**\n     * Represents a numerical one (1).\n     */\n    BitType[BitType[\"ONE\"] = 1] = \"ONE\";\n    /**\n     * Represents a start bit in a byte.\n     */\n    BitType[BitType[\"START\"] = 2] = \"START\";\n    /**\n     * Represents an undecoded bit.\n     */\n    BitType[BitType[\"BAD\"] = 3] = \"BAD\";\n})(BitType || (BitType = {}));\n","// Enum for the state of a tape decoder.\nexport var TapeDecoderState;\n(function (TapeDecoderState) {\n    /**\n     * Decoder must start in UNDECIDED state.\n     */\n    TapeDecoderState[TapeDecoderState[\"UNDECIDED\"] = 0] = \"UNDECIDED\";\n    /**\n     * Go from UNDECIDED to DETECTED once it's sure that the encoding is its own. This usually\n     * happens at the end of the header.\n     */\n    TapeDecoderState[TapeDecoderState[\"DETECTED\"] = 1] = \"DETECTED\";\n    /**\n     * Go from DETECTED to FINISHED once the program is fully read.\n     * Once in the FINISHED state, the decoder won't be given any more samples.\n     */\n    TapeDecoderState[TapeDecoderState[\"FINISHED\"] = 2] = \"FINISHED\";\n})(TapeDecoderState || (TapeDecoderState = {}));\n","/**\n * Information about one particular byte (its position).\n */\nexport class ByteData {\n    /**\n     * Create an object representing a byte.\n     *\n     * @param value the byte value (0-255).\n     * @param startFrame the first frame, inclusive.\n     * @param endFrame the last frame, inclusive.\n     */\n    constructor(value, startFrame, endFrame) {\n        this.value = value;\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n    }\n}\n","/**\n * Samples that are pre-filtered so we can display them zoomed out quickly.\n */\nexport class DisplaySamples {\n    constructor(samples) {\n        this.samplesList = [samples];\n        this.filterDown();\n    }\n    /**\n     * Sample down for quick display.\n     */\n    filterDown() {\n        while (this.samplesList[this.samplesList.length - 1].length > 500) {\n            const samples = this.samplesList[this.samplesList.length - 1];\n            const half = Math.floor(samples.length / 2);\n            const down = new Int16Array(half);\n            for (let i = 0, j = 0; i < half; i++, j += 2) {\n                down[i] = Math.max(samples[j], samples[j + 1]);\n            }\n            this.samplesList.push(down);\n        }\n    }\n}\n","export const EOF = -1;\n/**\n * Provides an API for reading through a byte array.\n */\nexport class ByteReader {\n    constructor(b) {\n        this.b = b;\n        this.pos = 0;\n    }\n    /**\n     * Return the next byte, or EOF on end of array.\n     *\n     * @returns {number}\n     */\n    read() {\n        return this.pos < this.b.length ? this.b[this.pos++] : EOF;\n    }\n    /**\n     * Return the byte address of the next byte to be read.\n     */\n    addr() {\n        return this.pos;\n    }\n    /**\n     * Reads a little-endian short (two-byte) integer.\n     *\n     * @param allowEofAfterFirstByte if true, an EOF after the first byte will result in just the\n     * first byte. Otherwise an EOF is returned.\n     * @returns the integer, or EOF on end of file.\n     */\n    readShort(allowEofAfterFirstByte) {\n        const low = this.read();\n        if (low === EOF) {\n            return EOF;\n        }\n        const high = this.read();\n        if (high === EOF) {\n            return allowEofAfterFirstByte ? low : EOF;\n        }\n        return low + high * 256;\n    }\n    /**\n     * Reads a string from the stream. If the returned string is shorter than \"length\", then we hit EOF.\n     */\n    readString(length) {\n        let s = \"\";\n        while (length-- > 0) {\n            const letter = this.read();\n            if (letter === EOF) {\n                break;\n            }\n            // Here we could check to see if it's a valid (ASCII?) letter.\n            s += String.fromCharCode(letter);\n        }\n        return s;\n    }\n    /**\n     * Returns the next \"length\" bytes. If the returned array is shorter than \"length\", then we hit EOF.\n     */\n    readBytes(length) {\n        const pos = this.pos;\n        length = Math.min(length, this.b.length - pos);\n        this.pos += length;\n        // In principle we can use this to get a view to part of the underlying array, but it\n        // doesn't work in Chrome, we get a view to the whole array.\n        /// return new Uint8Array(this.b, pos, length);\n        // So instead make a copy.\n        return this.b.slice(pos, pos + length);\n    }\n}\n","\n/**\n * Type for all byte registers.\n */\nexport type ByteReg = \"a\" | \"f\" | \"b\" | \"c\" | \"d\" | \"e\" | \"h\" | \"l\" | \"ixh\" | \"ixl\" | \"iyh\" | \"iyl\" | \"i\" | \"r\";\n\n/**\n * Type for all word registers. Uses the \"Prime\" suffix instead of an apostrophe so that\n * this can be used as a field name for the RegisterSet class.\n */\nexport type WordReg = \"af\" | \"bc\" | \"de\" | \"hl\" | \"afPrime\" | \"bcPrime\" | \"dePrime\" | \"hlPrime\" | \"ix\" | \"iy\" | \"sp\" | \"pc\";\n\n/**\n * Internal state.\n */\nexport type InternalReg = \"memptr\" | \"i\" | \"r\" | \"iff1\" | \"iff2\" | \"im\" | \"halted\";\n\n/**\n * All registers.\n */\nexport type Register = ByteReg | WordReg | InternalReg;\n\n/**\n * List of all word registers.\n */\nconst WORD_REG = new Set([\"af\", \"bc\", \"de\", \"hl\", \"af'\", \"bc'\", \"de'\", \"hl'\", \"ix\", \"iy\", \"sp\", \"pc\"]);\n/**\n * List of all byte registers.\n */\nconst BYTE_REG = new Set([\"a\", \"f\", \"b\", \"c\", \"d\", \"e\", \"h\", \"l\", \"ixh\", \"ixl\", \"iyh\", \"iyl\"]);\n\n/**\n * Determine whether a register stores a word.\n */\nexport function isWordReg(s: string): boolean {\n    return WORD_REG.has(s.toLowerCase());\n}\n\n/**\n * Determine whether a register stores a byte.\n */\nexport function isByteReg(s: string): boolean {\n    return BYTE_REG.has(s.toLowerCase());\n}\n","\n// Various utility functions.\n\n/**\n * Convert a number to hex and zero-pad to the specified number of hex digits.\n */\nexport function toHex(value: number, digits: number): string {\n    return value.toString(16).toUpperCase().padStart(digits, \"0\");\n}\n\n/**\n * Convert a byte to hex.\n */\nexport function toHexByte(value: number): string {\n    return toHex(value, 2);\n}\n\n/**\n * Convert a word to hex.\n */\nexport function toHexWord(value: number): string {\n    return toHex(value, 4);\n}\n\n/**\n * Return the high byte of a word.\n */\nexport function hi(value: number): number {\n    return (value >> 8) & 0xFF;\n}\n\n/**\n * Return the low byte of a word.\n */\nexport function lo(value: number): number {\n    return value & 0xFF;\n}\n\n/**\n * Create a word from a high and low byte.\n */\nexport function word(highByte: number, lowByte: number): number {\n    return ((highByte & 0xFF) << 8) | (lowByte & 0xFF);\n}\n\n/**\n * Increment a byte.\n */\nexport function inc8(value: number): number {\n    return add8(value, 1);\n}\n\n/**\n * Increment a word.\n */\nexport function inc16(value: number): number {\n    return add16(value, 1);\n}\n\n/**\n * Decrement a byte.\n */\nexport function dec8(value: number): number {\n    return sub8(value, 1);\n}\n\n/**\n * Decrement a word.\n */\nexport function dec16(value: number): number {\n    return sub16(value, 1);\n}\n\n/**\n * Add two bytes together.\n */\nexport function add8(a: number, b: number): number {\n    return (a + b) & 0xFF;\n}\n\n/**\n * Add two words together.\n */\nexport function add16(a: number, b: number): number {\n    return (a + b) & 0xFFFF;\n}\n\n/**\n * Subtract two bytes.\n */\nexport function sub8(a: number, b: number): number {\n    return (a - b) & 0xFF;\n}\n\n/**\n * Subtract two words.\n */\nexport function sub16(a: number, b: number): number {\n    return (a - b) & 0xFFFF;\n}\n\n/**\n * Convert a byte to a signed number (e.g., 0xff to -1).\n */\nexport function signedByte(value: number): number {\n    return value >= 128 ? value - 256 : value;\n}\n","import {Register} from \"./Register\";\nimport {hi, lo, word} from \"./Utils\";\n\n/**\n * All registers in a Z80.\n */\nexport class RegisterSet {\n    // External state:\n    public af: number = 0;\n    public bc: number = 0;\n    public de: number = 0;\n    public hl: number = 0;\n    public afPrime: number = 0;\n    public bcPrime: number = 0;\n    public dePrime: number = 0;\n    public hlPrime: number = 0;\n    public ix: number = 0;\n    public iy: number = 0;\n    public sp: number = 0;\n    public pc: number = 0;\n\n    // Internal state:\n    public memptr: number = 0;\n    public i: number = 0;\n    public r: number = 0;  // Low 7 bits of R.\n    public r7: number = 0; // Bit 7 of R.\n    public iff1: number = 0;\n    public iff2: number = 0;\n    public im: number = 0;\n    public halted: number = 0;\n\n    get a(): number {\n        return hi(this.af);\n    }\n\n    set a(value: number) {\n        this.af = word(value, this.f);\n    }\n\n    get f(): number {\n        return lo(this.af);\n    }\n\n    set f(value: number) {\n        this.af = word(this.a, value);\n    }\n\n    get b(): number {\n        return hi(this.bc);\n    }\n\n    set b(value: number) {\n        this.bc = word(value, this.c);\n    }\n\n    get c(): number {\n        return lo(this.bc);\n    }\n\n    set c(value: number) {\n        this.bc = word(this.b, value);\n    }\n\n    get d(): number {\n        return hi(this.de);\n    }\n\n    set d(value: number) {\n        this.de = word(value, this.e);\n    }\n\n    get e(): number {\n        return lo(this.de);\n    }\n\n    set e(value: number) {\n        this.de = word(this.d, value);\n    }\n\n    get h(): number {\n        return hi(this.hl);\n    }\n\n    set h(value: number) {\n        this.hl = word(value, this.l);\n    }\n\n    get l(): number {\n        return lo(this.hl);\n    }\n\n    set l(value: number) {\n        this.hl = word(this.h, value);\n    }\n\n    get ixh(): number {\n        return hi(this.ix);\n    }\n\n    set ixh(value: number) {\n        this.ix = word(value, this.ixl);\n    }\n\n    get ixl(): number {\n        return lo(this.ix);\n    }\n\n    set ixl(value: number) {\n        this.ix = word(this.ixh, value);\n    }\n\n    get iyh(): number {\n        return hi(this.iy);\n    }\n\n    set iyh(value: number) {\n        this.iy = word(value, this.iyl);\n    }\n\n    get iyl(): number {\n        return lo(this.iy);\n    }\n\n    set iyl(value: number) {\n        this.iy = word(this.iyh, value);\n    }\n\n    /**\n     * Combine the two R parts together.\n     */\n    get rCombined(): number {\n        return (this.r7 & 0x80) | (this.r & 0xF7);\n    }\n}\n\n/**\n * All real fields of RegisterSet, for enumeration.\n */\nexport const registerSetFields: Register[] = [\n    \"af\", \"bc\", \"de\", \"hl\",\n    \"afPrime\", \"bcPrime\", \"dePrime\", \"hlPrime\",\n    \"ix\", \"iy\", \"sp\", \"pc\",\n    \"memptr\", \"i\", \"r\", \"iff1\", \"iff2\", \"im\", \"halted\"];\n","/**\n * The flag bits in the F register.\n */\nexport enum Flag {\n    /**\n     * Carry and borrow. Indicates that the addition or subtraction did not\n     * fit in the register.\n     */\n    C = 0x01,\n    /**\n     * Set if the last operation was a subtraction.\n     */\n    N = 0x02,\n    /**\n     * Parity: Indicates that the result has an even number of bits set.\n     */\n    P = 0x04,\n    /**\n     * Overflow: Indicates that two's complement does not fit in register.\n     */\n    V = P,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X3 = 0x08,\n    /**\n     * Half carry: Carry from bit 3 to bit 4 during BCD operations.\n     */\n    H = 0x10,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X5 = 0x20,\n    /**\n     * Set if value is zero.\n     */\n    Z = 0x40,\n    /**\n     * Set of value is negative.\n     */\n    S = 0x80,\n}\n","\nexport * from \"./Register\";\nexport * from \"./RegisterSet\";\nexport * from \"./Utils\";\nexport * from \"./Flag\";\n","/**\n * Information about one particular section of a program. Because this is program-based, the indices\n * are byte-oriented.\n */\nexport class ProgramAnnotation {\n    /**\n     * Create an object representing a section to annotate.\n     *\n     * @param text any text to display for that section.\n     * @param firstIndex the first index into the binary, inclusive.\n     * @param lastIndex the last index into the binary, inclusive.\n     */\n    constructor(text, firstIndex, lastIndex) {\n        this.text = text;\n        this.firstIndex = firstIndex;\n        this.lastIndex = lastIndex;\n    }\n}\n/**\n * Annotation to draw a point.\n */\nexport class PointAnnotation {\n    constructor(frame, value) {\n        this.frame = frame;\n        this.value = value;\n    }\n    draw(ctx) {\n        const x = ctx.frameToX(this.frame);\n        const y = ctx.valueToY(this.value);\n        ctx.context.fillStyle = ctx.highlightColor;\n        ctx.context.beginPath();\n        ctx.context.arc(x, y, 3, 0, 2 * Math.PI);\n        ctx.context.fill();\n    }\n}\n/**\n * Annotation to draw a horizontal line.\n */\nexport class HorizontalLineAnnotation {\n    constructor(value, x1, x2) {\n        this.value = value;\n        this.x1 = x1;\n        this.x2 = x2;\n    }\n    draw(ctx) {\n        const y = ctx.valueToY(this.value);\n        ctx.context.strokeStyle = ctx.highlightColor;\n        ctx.context.beginPath();\n        ctx.context.moveTo(ctx.frameToX(this.x1), y);\n        ctx.context.lineTo(ctx.frameToX(this.x2), y);\n        ctx.context.stroke();\n    }\n}\n/**\n * Annotation to draw a vertical line.\n */\nexport class VerticalLineAnnotation {\n    constructor(frame) {\n        this.frame = frame;\n    }\n    draw(ctx) {\n        const x = ctx.frameToX(this.frame);\n        ctx.context.strokeStyle = ctx.highlightColor;\n        ctx.context.beginPath();\n        ctx.context.moveTo(x, 0);\n        ctx.context.lineTo(x, ctx.height);\n        ctx.context.stroke();\n    }\n}\n/**\n * Label with braces.\n */\nexport class LabelAnnotation {\n    constructor(label, left, right, onTop) {\n        this.label = label;\n        this.left = left;\n        this.right = right;\n        this.onTop = onTop;\n    }\n    draw(ctx) {\n        const x1 = ctx.frameToX(this.left);\n        const x2 = ctx.frameToX(this.right);\n        drawBraceAndLabel(ctx.context, ctx.height, x1, x2, ctx.secondaryForegroundColor, this.label, ctx.foregroundColor, this.onTop);\n    }\n}\n/**\n * Draw a brace with specified label.\n */\nexport function drawBraceAndLabel(ctx, height, left, right, braceColor, label, labelColor, drawOnTop) {\n    const middle = (left + right) / 2;\n    const leading = 16;\n    // Don't have more than two lines, there's no space for it.\n    const lines = label.split(\"\\n\");\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // Don't use a custom font here, they load asynchronously and we're not told when they\n        // finish loading, so we can't redraw and the initial draw uses some default serif font.\n        ctx.font = '10pt monospace';\n        ctx.fillStyle = labelColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"alphabetic\";\n        const y = drawOnTop ? 38 - (lines.length - i - 1) * leading : height - 35 + i * leading;\n        ctx.fillText(line, middle, y);\n    }\n    ctx.strokeStyle = braceColor;\n    ctx.lineWidth = 1;\n    drawBrace(ctx, left, middle, right, 40, height - 40, drawOnTop);\n}\n/**\n * Draw a horizontal brace.\n */\nexport function drawBrace(ctx, left, middle, right, top, bottom, drawOnTop) {\n    const radius = Math.min(10, (right - left) / 4);\n    const lineY = drawOnTop ? top + 20 : bottom - 20;\n    const pointY = drawOnTop ? top : bottom;\n    const otherY = drawOnTop ? bottom - 40 : top + 40;\n    ctx.beginPath();\n    ctx.moveTo(left, otherY);\n    if (left === right || radius <= 0) {\n        ctx.lineTo(left, lineY);\n    }\n    else {\n        ctx.arcTo(left, lineY, left + radius, lineY, radius);\n        ctx.arcTo(middle, lineY, middle, pointY, radius);\n        ctx.arcTo(middle, lineY, middle + radius, lineY, radius);\n        ctx.arcTo(right, lineY, right, lineY + (drawOnTop ? radius : -radius), radius);\n        ctx.lineTo(right, otherY);\n    }\n    ctx.stroke();\n}\n","/**\n * Tools for dealing with SYSTEM (machine language) programs.\n *\n * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/tape-and-file-formats-structures/\n */\nimport { ByteReader, EOF } from \"./ByteReader\";\nimport { toHexByte, toHexWord } from \"z80-base\";\nimport { ProgramAnnotation } from \"./Annotations\";\nconst FILE_HEADER = 0x55;\nconst DATA_HEADER = 0x3C;\nconst END_OF_FILE_MARKER = 0x78;\nconst FILENAME_LENGTH = 6;\n/**\n * Represents a chunk of bytes from the file, with a checksum.\n */\nexport class SystemChunk {\n    constructor(loadAddress, data, checksum) {\n        this.loadAddress = loadAddress;\n        this.data = data;\n        this.checksum = checksum;\n    }\n    /**\n     * Whether the checksum supplied on tape matches what we compute.\n     */\n    isChecksumValid() {\n        let checksum = 0;\n        // Include load address and data.\n        checksum += (this.loadAddress >> 8) & 0xFF;\n        checksum += this.loadAddress & 0xFF;\n        for (const b of this.data) {\n            checksum += b;\n        }\n        checksum &= 0xFF;\n        return checksum === this.checksum;\n    }\n}\n/**\n * Whether this is a program that can be loaded with the SYSTEM command.\n */\nexport function isSystemProgram(binary) {\n    return binary != null &&\n        binary.length >= 1 &&\n        binary[0] === FILE_HEADER;\n}\n/**\n * Class representing a SYSTEM (machine language) program. If the \"error\" field is set, then something\n * went wrong with the program and the data may be partially loaded.\n */\nexport class SystemProgram {\n    constructor(binary) {\n        this.filename = \"\";\n        this.chunks = [];\n        this.entryPointAddress = 0;\n        this.annotations = [];\n        const b = new ByteReader(binary);\n        this.annotations.push(new ProgramAnnotation(\"File\\nHead\", b.addr(), b.addr()));\n        const headerByte = b.read();\n        if (headerByte === EOF) {\n            this.error = \"File is empty\";\n            return;\n        }\n        if (headerByte != FILE_HEADER) {\n            this.error = \"Not a SYSTEM file\";\n            return;\n        }\n        this.filename = b.readString(FILENAME_LENGTH);\n        if (this.filename.length < FILENAME_LENGTH) {\n            // Binary is truncated.\n            this.error = \"File is truncated at filename\";\n            return;\n        }\n        this.filename = this.filename.trim();\n        this.annotations.push(new ProgramAnnotation(\"Filename\\n\\\"\" + this.filename + \"\\\"\", b.addr() - FILENAME_LENGTH, b.addr() - 1));\n        while (true) {\n            this.annotations.push(new ProgramAnnotation(\"Data\\nHead\", b.addr(), b.addr()));\n            const marker = b.read();\n            if (marker === EOF) {\n                this.error = \"File is truncated at start of block\";\n                return;\n            }\n            if (marker === END_OF_FILE_MARKER) {\n                break;\n            }\n            if (marker !== DATA_HEADER) {\n                this.error = \"Unexpected byte \" + toHexByte(marker) + \" at start of block\";\n                return;\n            }\n            let length = b.read();\n            if (length === EOF) {\n                this.error = \"File is truncated at block length\";\n                return;\n            }\n            // 0 means 256.\n            if (length === 0) {\n                length = 256;\n            }\n            this.annotations.push(new ProgramAnnotation(\"Len\\n\" + length, b.addr() - 1, b.addr() - 1));\n            const loadAddress = b.readShort(false);\n            if (loadAddress === EOF) {\n                this.error = \"File is truncated at load address\";\n                return;\n            }\n            this.annotations.push(new ProgramAnnotation(\"Addr\\n\" + toHexWord(loadAddress), b.addr() - 2, b.addr() - 1));\n            const data = b.readBytes(length);\n            if (data.length < length) {\n                this.error = \"File is truncated at data\";\n                return;\n            }\n            const checksum = b.read();\n            if (loadAddress === EOF) {\n                this.error = \"File is truncated at checksum\";\n                return;\n            }\n            this.annotations.push(new ProgramAnnotation(\"XSum\\n0x\" + toHexByte(checksum), b.addr() - 1, b.addr() - 1));\n            this.chunks.push(new SystemChunk(loadAddress, data, checksum));\n        }\n        this.entryPointAddress = b.readShort(false);\n        if (this.entryPointAddress === EOF) {\n            this.error = \"File is truncated at entry point address\";\n            this.entryPointAddress = 0;\n            return;\n        }\n        this.annotations.push(new ProgramAnnotation(\"Run\\n\" + toHexWord(this.entryPointAddress), b.addr() - 2, b.addr() - 1));\n    }\n    /**\n     * Convert an address in memory to the original byte offset in the binary. Returns undefined if\n     * not found in any chunk.\n     */\n    addressToByteOffset(address) {\n        // Skip file header and block header.\n        let offset = 1 + FILENAME_LENGTH + 4;\n        for (const chunk of this.chunks) {\n            if (address >= chunk.loadAddress && address < chunk.loadAddress + chunk.data.length) {\n                return offset + (address - chunk.loadAddress);\n            }\n            // Skip checksum and block header of the next block.\n            offset += chunk.data.length + 5;\n        }\n        return undefined;\n    }\n}\n","/**\n * Convert a number to a string.\n *\n * @param n number to convert\n * @param base base of the number\n * @param size zero-pad to this many digits\n */\nexport function pad(n, base, size) {\n    let s = n.toString(base);\n    if (base === 16) {\n        // I prefer upper case hex.\n        s = s.toUpperCase();\n    }\n    while (s.length < size) {\n        s = \"0\" + s;\n    }\n    return s;\n}\n/**\n * Generate the string version of a number, in base 10, with commas for thousands groups.\n */\nexport function withCommas(n) {\n    let s = typeof n === \"number\" ? Math.round(n).toString(10) : n;\n    const negative = s.length >= 1 && s.charAt(0) === \"-\";\n    const firstDigit = negative ? 1 : 0;\n    if (s.length - firstDigit > 4) {\n        for (let i = s.length - 3; i > firstDigit; i -= 3) {\n            s = s.substring(0, i) + \",\" + s.substring(i);\n        }\n    }\n    return s;\n}\n/**\n * Remove all children from element.\n */\nexport function clearElement(e) {\n    while (e.firstChild) {\n        e.removeChild(e.firstChild);\n    }\n}\n/**\n * Flash the node as if a photo were taken.\n */\nexport function flashNode(node) {\n    // Position a semi-transparent white div over the screen, and reduce its transparency over time.\n    const oldNodePosition = node.style.position;\n    node.style.position = \"relative\";\n    const overlay = document.createElement(\"div\");\n    overlay.style.position = \"absolute\";\n    overlay.style.left = \"0\";\n    overlay.style.top = \"0\";\n    overlay.style.right = \"0\";\n    overlay.style.bottom = \"0\";\n    overlay.style.backgroundColor = \"#ffffff\";\n    // Fade out.\n    let opacity = 1;\n    const updateOpacity = () => {\n        overlay.style.opacity = opacity.toString();\n        opacity -= 0.05;\n        if (opacity >= 0) {\n            window.requestAnimationFrame(updateOpacity);\n        }\n        else {\n            node.removeChild(overlay);\n            node.style.position = oldNodePosition;\n        }\n    };\n    updateOpacity();\n    node.appendChild(overlay);\n}\n/**\n * Concatenate a list of byte arrays into one.\n */\nexport function concatByteArrays(samplesList) {\n    const length = samplesList.reduce((sum, samples) => sum + samples.length, 0);\n    const allBytes = new Uint8Array(length);\n    let offset = 0;\n    for (const samples of samplesList) {\n        allBytes.set(samples, offset);\n        offset += samples.length;\n    }\n    return allBytes;\n}\n","import { pad, withCommas } from \"./Utils\";\nexport class AudioFile {\n    constructor(rate, samples) {\n        this.rate = rate;\n        this.samples = samples;\n    }\n}\n/**\n * Simple high-pass filter.\n *\n * @param samples samples to filter.\n * @param size size of filter\n * @returns filtered samples.\n */\nexport function highPassFilter(samples, size) {\n    const out = new Int16Array(samples.length);\n    let sum = 0;\n    for (let i = 0; i < size; i++) {\n        sum += samples[i];\n        // Subtract out the average of the last \"size\" samples (to estimate local DC component).\n        out[i] = clampToInt16(samples[i] - sum / size);\n    }\n    for (let i = size; i < samples.length; i++) {\n        sum += samples[i] - samples[i - size];\n        // Subtract out the average of the last \"size\" samples (to estimate local DC component).\n        out[i] = clampToInt16(samples[i] - sum / size);\n    }\n    return out;\n}\n/**\n * @param frame the frame number to be described as a timestamp.\n * @param hz number of frames per second in original recording.\n * @param brief omit hour if zero, omit milliseconds and frame itself.\n */\nexport function frameToTimestamp(frame, hz, brief) {\n    const time = frame / hz;\n    let ms = Math.floor(time * 1000);\n    let sec = Math.floor(ms / 1000);\n    ms -= sec * 1000;\n    let min = Math.floor(sec / 60);\n    sec -= min * 60;\n    const hour = Math.floor(min / 60);\n    min -= hour * 60;\n    if (brief) {\n        return (hour !== 0 ? hour + \":\" + pad(min, 10, 2) : min) + \":\" + pad(sec, 10, 2);\n    }\n    else {\n        return hour + \":\" + pad(min, 10, 2) + \":\" + pad(sec, 10, 2) + \".\" + pad(ms, 10, 3) + \" (frame \" + withCommas(frame) + \")\";\n    }\n}\n/**\n * @param frame the frame duration to be described as a string.\n * @param hz number of frames per second in original recording.\n */\nexport function frameDurationToString(frame, hz) {\n    const time = frame / hz;\n    let us = Math.floor(time * 1000000);\n    let sec = Math.floor(us / 1000000);\n    us -= sec * 1000000;\n    let min = Math.floor(sec / 60);\n    sec -= min * 60;\n    const hour = Math.floor(min / 60);\n    min -= hour * 60;\n    return (hour !== 0 ? hour + \":\" + pad(min, 10, 2) : min) + \":\" + pad(sec, 10, 2) + \".\" +\n        withCommas(pad(us, 10, 6)) + \" (\" + withCommas(frame) + \" frames)\";\n}\n/**\n * Concatenate a list of audio samples into one.\n */\nexport function concatAudio(samplesList) {\n    const length = samplesList.reduce((sum, samples) => sum + samples.length, 0);\n    const allSamples = new Int16Array(length);\n    let offset = 0;\n    for (const samples of samplesList) {\n        allSamples.set(samples, offset);\n        offset += samples.length;\n    }\n    return allSamples;\n}\n/**\n * Clamp the number to the range of signed 16-bit int.\n */\nexport function clampToInt16(x) {\n    return Math.max(Math.min(Math.round(x), 32767), -32768);\n}\n","import { concatAudio } from \"./AudioUtils\";\nimport { concatByteArrays } from \"./Utils\";\nconst SYNC_BYTE = 0x7F;\n/**\n * Generate one cycle of a sine wave.\n * @param length number of samples in the full cycle.\n * @return audio samples for one cycle.\n */\nfunction generateCycle(length) {\n    const audio = new Int16Array(length);\n    for (let i = 0; i < length; i++) {\n        const t = 2 * Math.PI * i / length;\n        // -0.5 to 0.5, matches recorded audio.\n        audio[i] = Math.sin(t) * 16384;\n    }\n    return audio;\n}\n/**\n * Generate a half cycle that fades off to zero instead of coming down hard to zero.\n *\n * @param length number of samples to generate.\n * @param previousBit the previous cycle, so we copy the ending slope.\n */\nfunction generateFinalHalfCycle(length, previousBit) {\n    // Copy the slope of the end of the zero bit.\n    const slope = previousBit[previousBit.length - 1] - previousBit[previousBit.length - 2];\n    // Points on the Bezier.\n    const x1 = 0;\n    const y1 = 0;\n    const y2 = 32767;\n    const x2 = (y2 - y1 + x1 * slope) / slope;\n    const x3 = length / 2;\n    const y3 = 0;\n    const x4 = length - 1;\n    const y4 = 0;\n    // Generated audio;\n    const audio = new Int16Array(length);\n    // Go through Bezier in small steps.\n    let position = 0;\n    for (let i = 0; i <= 128; i++) {\n        const t = i / 128.0;\n        // Compute Bezier value.\n        const x12 = x1 + (x2 - x1) * t;\n        const y12 = y1 + (y2 - y1) * t;\n        const x23 = x2 + (x3 - x2) * t;\n        const y23 = y2 + (y3 - y2) * t;\n        const x34 = x3 + (x4 - x3) * t;\n        const y34 = y3 + (y4 - y3) * t;\n        const x123 = x12 + (x23 - x12) * t;\n        const y123 = y12 + (y23 - y12) * t;\n        const x234 = x23 + (x34 - x23) * t;\n        const y234 = y23 + (y34 - y23) * t;\n        const x1234 = x123 + (x234 - x123) * t;\n        const y1234 = y123 + (y234 - y123) * t;\n        // Draw a crude horizontal line from the previous point.\n        const newPosition = Math.min(Math.floor(x1234), length - 1);\n        while (position <= newPosition) {\n            audio[position] = y1234;\n            position += 1;\n        }\n    }\n    // Finish up anything left.\n    while (position <= length - 1) {\n        audio[position] = 0;\n        position += 1;\n    }\n    return audio;\n}\n/**\n * Adds the byte \"b\" to the samples list, most significant bit first.\n * @param samplesList list of samples we're adding to.\n * @param b byte to generate.\n * @param zero samples for a zero bit.\n * @param one samples for a one bit.\n */\nfunction addByte(samplesList, b, zero, one) {\n    // MSb first.\n    for (let i = 7; i >= 0; i--) {\n        if ((b & (1 << i)) != 0) {\n            samplesList.push(one);\n        }\n        else {\n            samplesList.push(zero);\n        }\n    }\n}\n/**\n * Adds the header bytes and start bits necessary for writing high-speed cassettes. The input bytes\n * must not have the start bits already inserted.\n */\nexport function wrapHighSpeed(bytes) {\n    // Add tape header.\n    const buffers = [\n        new Uint8Array(256).fill(0x55),\n        new Uint8Array([SYNC_BYTE]),\n        insertStartBits(bytes),\n    ];\n    return concatByteArrays(buffers);\n}\n/**\n * Inserts a zero start bit before every byte.\n */\nfunction insertStartBits(inBytes) {\n    const outBytes = new Uint8Array(Math.ceil(inBytes.length * 9 / 8));\n    for (let i = 0; i < inBytes.length; i++) {\n        const byte = inBytes[i];\n        const bitPos = i * 9 + 1;\n        const bytePos = Math.floor(bitPos / 8);\n        const bitOffset = bitPos % 8;\n        outBytes[bytePos] |= byte >> bitOffset;\n        if (bitOffset !== 0) {\n            outBytes[bytePos + 1] |= byte << (8 - bitOffset);\n        }\n    }\n    return outBytes;\n}\n/**\n * High-speed CAS files have start bits built-in. Strip these out because\n * we re-insert them below when encoding. We could also remove the\n * writing of start bits below, but we don't really know how many bits\n * there are at the end that we shouldn't write.\n *\n * Update: We no longer insert start bits in encodeHighSpeed(), so this\n * routine is no longer necessary, but we keep it around anyway.\n */\nexport function stripStartBits(inBytes) {\n    // Find sync byte.\n    let headerSize = undefined;\n    for (let i = 0; i < inBytes.length; i++) {\n        if (inBytes[i] === SYNC_BYTE) {\n            headerSize = i + 1;\n            break;\n        }\n    }\n    if (headerSize === undefined) {\n        console.log(\"Can't find sync byte in high-speed CAS file\");\n        return inBytes;\n    }\n    // Compute new size of array.\n    const outBytes = new Uint8Array(Math.floor(headerSize + (inBytes.length - headerSize) * 8 / 9));\n    // First bytes, up to and including sync byte, don't have a start bit.\n    outBytes.set(inBytes.slice(0, headerSize));\n    // Strip start bit from the rest.\n    for (let i = headerSize; i < outBytes.length; i++) {\n        // Index of most-significant data bit.\n        const bitIndex = headerSize * 8 + (i - headerSize) * 9 + 1;\n        const byteIndex = Math.floor(bitIndex / 8);\n        const bitOffset = bitIndex % 8;\n        let value = inBytes[byteIndex] << bitOffset;\n        if (bitOffset !== 0) {\n            value |= inBytes[byteIndex + 1] >> (8 - bitOffset);\n        }\n        outBytes[i] = value;\n    }\n    return outBytes;\n}\n/**\n * Encode the sequence of bytes as an array of audio samples for high-speed (1500 baud) cassettes.\n * @param bytes cas-style array of bytes, including 256 0x55 bytes, sync byte, and start bits.\n * @param sampleRate number of samples per second in the generated audio.\n */\nexport function encodeHighSpeed(bytes, sampleRate) {\n    // Length of a zero bit, in samples.\n    const zeroLength = Math.round(0.00072 * sampleRate);\n    // Length of a one bit, in samples.\n    const oneLength = Math.round(0.00034 * sampleRate);\n    // Samples representing a zero bit.\n    const zero = generateCycle(zeroLength);\n    // Samples representing a one bit.\n    const one = generateCycle(oneLength);\n    // The final cycle in the entire waveform, which is necessary\n    // to force that last negative-to-positive transition (and interrupt).\n    // We could just use a simple half cycle here, but it's nicer to do\n    // something like the original analog.\n    const finalHalfCycle = generateFinalHalfCycle(zeroLength * 3, zero);\n    // List of samples.\n    const samplesList = [];\n    // Start with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // Write program.\n    for (const b of bytes) {\n        addByte(samplesList, b, zero, one);\n    }\n    // Finish off the last cycle, so that it generates an interrupt.\n    samplesList.push(finalHalfCycle);\n    // End with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // Concatenate all samples.\n    return concatAudio(samplesList);\n}\n","import { concatAudio } from \"./AudioUtils\";\nimport { concatByteArrays } from \"./Utils\";\nconst SYNC_BYTE = 0xA5;\n/**\n * Generate one pulse for 500 baud audio.\n */\nfunction generatePulse(length) {\n    const audio = new Int16Array(length);\n    // Center it in the audio.\n    for (let i = 0; i < length / 2; i++) {\n        const t = 2 * Math.PI * i / (length / 2);\n        // -0.5 to 0.5, matches recorded audio.\n        audio[i + length / 4] = Math.sin(t) * 16384;\n    }\n    return audio;\n}\n/**\n * Adds the byte \"b\" to the samples list, most significant bit first.\n * @param samplesList list of samples we're adding to.\n * @param b byte to generate.\n * @param cycle samples for a cycle.\n * @param silence samples for silence.\n */\nfunction addByte(samplesList, b, cycle, silence) {\n    // MSb first.\n    for (let i = 7; i >= 0; i--) {\n        // Clock pulse.\n        samplesList.push(cycle);\n        // Data pulse.\n        const bit = (b & (1 << i)) != 0;\n        samplesList.push(bit ? cycle : silence);\n    }\n}\n/**\n * Adds the header bytes necessary for writing low-speed cassettes.\n */\nexport function wrapLowSpeed(bytes) {\n    // Add tape header.\n    const buffers = [\n        new Uint8Array(256),\n        new Uint8Array([SYNC_BYTE]),\n        bytes,\n    ];\n    return concatByteArrays(buffers);\n}\n/**\n * Encode the sequence of bytes as an array of audio samples for low-speed (500 baud) cassettes.\n * @param bytes cas-style array of bytes, including 256 zero bytes, sync byte, and trailing zero bytes.\n * @param sampleRate number of samples per second in the generated audio.\n */\nexport function encodeLowSpeed(bytes, sampleRate) {\n    // Length of one cycle, in samples. They're all 1ms.\n    const cycleLength = Math.round(0.001 * sampleRate);\n    // Samples representing one cycle.\n    const cycle = generatePulse(cycleLength);\n    // Samples representing 1ms of silence.\n    const silence = new Int16Array(cycleLength);\n    // List of samples.\n    const samplesList = [];\n    // Start with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // All data bytes.\n    for (let i = 0; i < bytes.length; i++) {\n        addByte(samplesList, bytes[i], cycle, silence);\n    }\n    // End with half a second of silence.\n    samplesList.push(new Int16Array(sampleRate / 2));\n    // Concatenate all samples.\n    return concatAudio(samplesList);\n}\n","import { DisplaySamples } from \"./DisplaySamples\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { isSystemProgram } from \"./SystemProgram\";\nimport { BitType } from \"./BitType\";\nimport { wrapHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nexport class Program {\n    constructor(trackNumber, copyNumber, startFrame, endFrame, decoder, binary, bitData, byteData) {\n        this.name = \"\";\n        this.notes = \"\";\n        this.screenshot = \"\";\n        this.onName = new SimpleEventDispatcher();\n        this.onNotes = new SimpleEventDispatcher();\n        this.onScreenshot = new SimpleEventDispatcher();\n        this.trackNumber = trackNumber;\n        this.copyNumber = copyNumber;\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n        this.decoder = decoder;\n        this.binary = binary;\n        this.bitData = bitData;\n        this.byteData = byteData;\n    }\n    /**\n     * Set the high-speed samples reconstructed from the binary.\n     */\n    setReconstructedSamples(reconstructedSamples) {\n        this.reconstructedSamples = new DisplaySamples(reconstructedSamples);\n    }\n    /**\n     * Get a generic label for the program.\n     */\n    getLabel() {\n        return \"Track \" + this.trackNumber + \", copy \" + this.copyNumber + \", \" + this.decoder.getName();\n    }\n    /**\n     * Get a generic short label for the program.\n     */\n    getShortLabel() {\n        return \"T\" + this.trackNumber + \" C\" + this.copyNumber;\n    }\n    /**\n     * Whether the binary represents a Basic program.\n     */\n    isBasicProgram() {\n        return this.binary != null &&\n            this.binary.length >= 3 &&\n            this.binary[0] === 0xD3 &&\n            this.binary[1] === 0xD3 &&\n            this.binary[2] === 0xD3;\n    }\n    /**\n     * Set the name of the program, as set by the user.\n     */\n    setName(name) {\n        if (name !== this.name) {\n            this.name = name;\n            this.onName.dispatch(name);\n        }\n    }\n    /**\n     * Set the notes for the program, as set by the user.\n     */\n    setNotes(notes) {\n        if (notes !== this.notes) {\n            this.notes = notes;\n            this.onNotes.dispatch(notes);\n        }\n    }\n    /**\n     * Set the screenshot for the program.\n     */\n    setScreenshot(screenshot) {\n        if (screenshot !== this.screenshot) {\n            this.screenshot = screenshot;\n            this.onScreenshot.dispatch(screenshot);\n        }\n    }\n    /**\n     * Get a representative timestamp for this program, in seconds.\n     */\n    getTimestamp(sampleRate) {\n        return (this.startFrame + this.endFrame) / 2 / sampleRate;\n    }\n    /**\n     * Whether the given timestamp (in seconds) could apply to this program.\n     */\n    isForTimestamp(timestamp, sampleRate) {\n        const startTimestamp = this.startFrame / sampleRate;\n        const endTimestamp = this.endFrame / sampleRate;\n        return startTimestamp <= timestamp && timestamp <= endTimestamp;\n    }\n    /**\n     * Whether the binary represents an EDTASM program.\n     *\n     * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/edtasm-file-format/\n     */\n    isEdtasmProgram() {\n        function isValidProgramNameChar(n) {\n            return (n >= 0x41 && n <= 0x5A) || n === 0x20;\n        }\n        function isValidLineNumberChar(n) {\n            return n >= 0xB0 && n <= 0xB9;\n        }\n        return this.binary != null &&\n            this.binary.length >= 13 &&\n            this.binary[0] === 0xD3 &&\n            isValidProgramNameChar(this.binary[1]) &&\n            isValidProgramNameChar(this.binary[2]) &&\n            isValidProgramNameChar(this.binary[3]) &&\n            isValidProgramNameChar(this.binary[4]) &&\n            isValidProgramNameChar(this.binary[5]) &&\n            isValidProgramNameChar(this.binary[6]) &&\n            isValidLineNumberChar(this.binary[7]) &&\n            isValidLineNumberChar(this.binary[8]) &&\n            isValidLineNumberChar(this.binary[9]) &&\n            isValidLineNumberChar(this.binary[10]) &&\n            isValidLineNumberChar(this.binary[11]) &&\n            this.binary[12] === 0x20;\n    }\n    /**\n     * Whether this is a program that can be loaded with the SYSTEM command.\n     *\n     * http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/tape-and-file-formats-structures/\n     */\n    isSystemProgram() {\n        return isSystemProgram(this.binary);\n    }\n    /**\n     * Whether these two programs have the same binaries.\n     */\n    sameBinaryAs(other) {\n        if (this.binary.length !== other.binary.length) {\n            return false;\n        }\n        for (let i = 0; i < this.binary.length; i++) {\n            if (this.binary[i] !== other.binary[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Return a .cas file version of the binary.\n     */\n    asCasFile() {\n        if (this.decoder.isHighSpeed()) {\n            return wrapHighSpeed(this.binary);\n        }\n        else {\n            return wrapLowSpeed(this.binary);\n        }\n    }\n    /**\n     * Whether this program is strictly nested in the other program, with margin to spare.\n     */\n    isNestedIn(candidate, marginFrames) {\n        // Full nested, but also with margin on at least one side.\n        return this.startFrame > candidate.startFrame &&\n            this.endFrame < candidate.endFrame &&\n            (this.startFrame > candidate.startFrame + marginFrames ||\n                this.endFrame < candidate.endFrame - marginFrames);\n    }\n    /**\n     * Return the number of bit errors we've found. This is not super cheap, cache if you need it a lot.\n     */\n    countBitErrors() {\n        let count = 0;\n        for (const bitData of this.bitData) {\n            if (bitData.bitType === BitType.BAD) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n}\n","import { BitData } from \"./BitData\";\nimport { BitType } from \"./BitType\";\nimport { TapeDecoderState } from \"./TapeDecoderState\";\nimport { ByteData } from \"./ByteData\";\nimport { Program } from \"./Program\";\nimport { LabelAnnotation } from \"./Annotations\";\n// What distance away from 0 counts as \"positive\" (or, when negative, \"negative\").\nconst THRESHOLD = 500 / 32768.0;\n/**\n * Decodes high-speed (1500 baud) cassettes.\n */\nexport class HighSpeedTapeDecoder {\n    constructor(tape) {\n        this.state = TapeDecoderState.UNDECIDED;\n        this.programBytes = [];\n        this.bits = [];\n        this.byteData = [];\n        this.tape = tape;\n    }\n    getName() {\n        return \"High speed\";\n    }\n    isHighSpeed() {\n        return true;\n    }\n    findNextProgram(startFrame, waveformAnnotations) {\n        const samples = this.tape.filteredSamples.samplesList[0];\n        let programStartFrame = undefined;\n        let bitCount = 0;\n        let recentBits = 0;\n        while (this.state !== TapeDecoderState.FINISHED) {\n            const bitInfo = this.findBit(samples, startFrame);\n            if (bitInfo === undefined) {\n                // Ran off the end of the cassette.\n                this.state = TapeDecoderState.FINISHED;\n            }\n            else {\n                const [crossing, bit] = bitInfo;\n                if (bit === undefined) {\n                    // Bad bit. If we've not started decoding yet, then it's noise we ignore. Otherwise it indicates\n                    // the end of the recording.\n                    if (this.state === TapeDecoderState.DETECTED) {\n                        this.state = TapeDecoderState.FINISHED;\n                    }\n                }\n                else {\n                    // Bits are MSb to LSb.\n                    recentBits = (recentBits << 1) | (bit ? 1 : 0);\n                    bitCount += 1;\n                    let bitType;\n                    if (bitCount === 1 && this.state === TapeDecoderState.DETECTED) {\n                        // Just got a start bit. Must be zero.\n                        bitType = bit ? BitType.BAD : BitType.START;\n                    }\n                    else {\n                        bitType = bit ? BitType.ONE : BitType.ZERO;\n                    }\n                    this.bits.push(new BitData(startFrame, crossing, bitType));\n                    // If we're in the program, add the bit to our stream.\n                    if (this.state === TapeDecoderState.DETECTED) {\n                        // Got enough bits for a byte (including the start bit).\n                        if (bitCount === 9) {\n                            let byteValue = recentBits & 0xFF;\n                            this.programBytes.push(byteValue);\n                            this.byteData.push(new ByteData(byteValue, this.bits[this.bits.length - 8].startFrame, this.bits[this.bits.length - 1].endFrame));\n                            bitCount = 0;\n                        }\n                    }\n                    else {\n                        // Detect end of header.\n                        if ((recentBits & 0xFFFFFFFF) === 0x5555557F) {\n                            this.state = TapeDecoderState.DETECTED;\n                            bitCount = 0;\n                            recentBits = 0;\n                            programStartFrame = startFrame;\n                            waveformAnnotations.push(new LabelAnnotation(\"Sync\", this.bits[this.bits.length - 8].startFrame, this.bits[this.bits.length - 1].endFrame, false));\n                        }\n                    }\n                }\n                startFrame = crossing;\n            }\n        }\n        if (programStartFrame === undefined) {\n            return undefined;\n        }\n        return new Program(0, 0, programStartFrame, startFrame, this, this.getBinary(), this.getBitData(), this.getByteData());\n    }\n    /**\n     * Find the next bit, starting at the positive crossing of the end of the previous bit. Returns\n     * the positive crossing at the end of this bit, and the value of the bit. The bit is undefined\n     * if the length was too short or too long. Returns undefined if we ran off the end of the tape.\n     */\n    findBit(samples, startFrame) {\n        const crossing = this.findPositiveCrossing(samples, startFrame);\n        if (crossing === undefined) {\n            // Ran off the end of the cassette.\n            return undefined;\n        }\n        const cycleSize = crossing - startFrame;\n        if (cycleSize > 7 && cycleSize < 100) {\n            // Long cycle is \"0\", short cycle is \"1\".\n            const bit = cycleSize < 22;\n            return [crossing, bit];\n        }\n        else {\n            return [crossing, undefined];\n        }\n    }\n    /**\n     * Find the next positive crossing, starting at startFrame. If none is found, returns undefined.\n     */\n    findPositiveCrossing(samples, startFrame) {\n        let oldSign = 0;\n        for (let frame = startFrame; frame < samples.length; frame++) {\n            const sample = samples[frame];\n            const newSign = sample > THRESHOLD ? 1 : sample < -THRESHOLD ? -1 : 0;\n            if (oldSign === -1 && newSign === 1) {\n                // Positive edge.\n                return frame;\n            }\n            if (newSign !== 0) {\n                oldSign = newSign;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Read a sequence of bits (the characters \"0\" and \"1\"). This is for testing.\n     */\n    readBits(frame) {\n        const samples = this.tape.filteredSamples.samplesList[0];\n        let bits = \"\";\n        const waveformAnnotation = [];\n        const explanations = [];\n        let firstBit = true;\n        while (true) {\n            const bitInfo = this.findBit(samples, frame);\n            if (bitInfo === undefined) {\n                // Ran off the end of the cassette.\n                break;\n            }\n            else {\n                const [crossing, bit] = bitInfo;\n                if (bit === undefined) {\n                    waveformAnnotation.push(new LabelAnnotation(\"Bad\", frame, crossing, true));\n                    if (bits.length !== 0) {\n                        break;\n                    }\n                }\n                else {\n                    if (firstBit) {\n                        waveformAnnotation.push(new LabelAnnotation(\"Ign\", frame, crossing, true));\n                        firstBit = false;\n                    }\n                    else {\n                        const bitChar = bit ? \"1\" : \"0\";\n                        waveformAnnotation.push(new LabelAnnotation(bitChar, frame, crossing, true));\n                        bits += bitChar;\n                    }\n                }\n                frame = crossing;\n            }\n        }\n        return [bits, waveformAnnotation, explanations];\n    }\n    getState() {\n        return this.state;\n    }\n    getBinary() {\n        const bytes = new Uint8Array(this.programBytes.length);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = this.programBytes[i];\n        }\n        return bytes;\n    }\n    getBitData() {\n        return this.bits;\n    }\n    getByteData() {\n        return this.byteData;\n    }\n}\n","// Low speed tape decode based on anteo's version.\n// https://github.com/anteo\nimport { TapeDecoderState } from \"./TapeDecoderState\";\nimport { BitData } from \"./BitData\";\nimport { ByteData } from \"./ByteData\";\nimport { Program } from \"./Program\";\nimport { BitType } from \"./BitType\";\nimport { HorizontalLineAnnotation, LabelAnnotation, PointAnnotation, VerticalLineAnnotation } from \"./Annotations\";\nimport { withCommas } from \"./Utils\";\nconst SYNC_BYTE = 0xA5;\n// When not finding a pulse, what kind of audio we found.\nexport var PulseResultType;\n(function (PulseResultType) {\n    // Pulse found.\n    PulseResultType[PulseResultType[\"PULSE\"] = 0] = \"PULSE\";\n    // No pulse found but there was audio there. Could be a mis-read.\n    PulseResultType[PulseResultType[\"NOISE\"] = 1] = \"NOISE\";\n    // Mostly just silence.\n    PulseResultType[PulseResultType[\"SILENCE\"] = 2] = \"SILENCE\";\n})(PulseResultType || (PulseResultType = {}));\n// Result of a pulse detection.\nexport class Pulse {\n    constructor(resultType, value, frame, range, explanation) {\n        this.waveformAnnotations = [];\n        this.resultType = resultType;\n        this.value = value;\n        this.frame = frame;\n        this.range = range;\n        this.explanation = explanation;\n    }\n}\nexport class LowSpeedAnteoTapeDecoder {\n    constructor(tape) {\n        this.state = TapeDecoderState.UNDECIDED;\n        this.peakThreshold = LowSpeedAnteoTapeDecoder.DEFAULT_THRESHOLD;\n        const samples = tape.lowSpeedSamples.samplesList[0];\n        if (true) {\n            this.samples = samples;\n        }\n        else {\n            // Invert samples.\n            this.samples = new Int16Array(samples.length);\n            for (let i = 0; i < samples.length; i++) {\n                this.samples[i] = -samples[i];\n            }\n        }\n        this.period = Math.round(tape.sampleRate * 0.002); // 2ms period.\n        this.halfPeriod = Math.round(this.period / 2);\n        this.quarterPeriod = Math.round(this.period / 4);\n    }\n    findNextProgram(frame, waveformAnnotations) {\n        while (true) {\n            const [_, pulse] = this.findNextPulse(frame, this.peakThreshold);\n            if (pulse === undefined) {\n                // Ran off the end of the tape.\n                return undefined;\n            }\n            frame = pulse.frame;\n            const success = this.proofPulseDistance(frame, waveformAnnotations);\n            if (success) {\n                const program = this.loadData(frame, waveformAnnotations);\n                if (program.binary.length > 0) {\n                    return program;\n                }\n            }\n            // Jump forward 1/10 second.\n            frame += this.period * 50;\n        }\n    }\n    /**\n     * Verifies that we have pulses every period starting at frame.\n     */\n    proofPulseDistance(frame, waveformAnnotations) {\n        const startFrame = frame;\n        for (let i = 0; i < 200; i++) {\n            // We expect a pulse every period.\n            const expectedPulse = this.isPulseAt(frame, this.peakThreshold);\n            if (expectedPulse.resultType !== PulseResultType.PULSE) {\n                waveformAnnotations.push(new LabelAnnotation(\"Missing pulse\", startFrame, expectedPulse.frame, false));\n                return false;\n            }\n            // And no pulse in between, which would indicate a \"1\" bit.\n            const expectedNoPulse = this.isPulseAt(frame + this.halfPeriod, expectedPulse.range / 2, true);\n            if (expectedNoPulse.resultType === PulseResultType.PULSE) {\n                waveformAnnotations.push(new LabelAnnotation(\"Extra pulse\", startFrame, expectedNoPulse.frame, false));\n                return false;\n            }\n            frame = expectedPulse.frame + this.period;\n        }\n        return true;\n    }\n    /**\n     * Load the program starting at the start frame.\n     */\n    loadData(startFrame, waveformAnnotations) {\n        // We want a sequence of 0 bit followed by the sync byte, so initialize our recent bits to\n        // all ones so that if we happen to land at the beginning of a sync byte (preceded by\n        // non-zeros) we don't wrongly detect it. Force all these 1s to get flushed out by\n        // real zeros.\n        let recentBits = 0xFFFFFFFF;\n        let frame = startFrame;\n        let foundSyncByte = false;\n        let bitCount = 0;\n        let allowLateClockPulse = false;\n        const bitData = [];\n        const byteData = [];\n        const binary = [];\n        while (true) {\n            const [bit, clockPulse, dataPulse] = this.readBit(frame, allowLateClockPulse);\n            allowLateClockPulse = false;\n            if (clockPulse.resultType === PulseResultType.SILENCE) {\n                // End of program.\n                break;\n            }\n            if (clockPulse.resultType === PulseResultType.NOISE) {\n                const nextFrame = frame + this.period;\n                recentBits = (recentBits << 1) | 0;\n                bitData.push(new BitData(nextFrame - this.quarterPeriod, nextFrame + this.period - this.quarterPeriod, BitType.BAD));\n                frame = nextFrame;\n            }\n            else {\n                const nextFrame = clockPulse.frame;\n                recentBits = (recentBits << 1) | (bit ? 1 : 0);\n                bitData.push(new BitData(nextFrame - this.quarterPeriod, nextFrame + this.period - this.quarterPeriod, bit ? BitType.ONE : BitType.ZERO));\n                if (foundSyncByte) {\n                    bitCount += 1;\n                    if (bitCount === 8) {\n                        const byteValue = recentBits & 0xFF;\n                        binary.push(byteValue);\n                        byteData.push(new ByteData(byteValue, bitData[bitData.length - 8].startFrame, bitData[bitData.length - 1].endFrame));\n                        bitCount = 0;\n                    }\n                }\n                else {\n                    if (recentBits === SYNC_BYTE) {\n                        waveformAnnotations.push(new LabelAnnotation(\"Sync\", bitData[bitData.length - 8].startFrame, bitData[bitData.length - 1].endFrame, false));\n                        foundSyncByte = true;\n                        allowLateClockPulse = true;\n                        bitCount = 0;\n                    }\n                }\n                frame = nextFrame;\n                this.peakThreshold = Math.round(clockPulse.range / 4);\n            }\n        }\n        // Remove trailing BAD bits, they're probably just junk after the last bit.\n        while (bitData.length > 0 && bitData[bitData.length - 1].bitType === BitType.BAD) {\n            bitData.splice(bitData.length - 1, 1);\n        }\n        return new Program(0, 0, startFrame, frame, this, new Uint8Array(binary), bitData, byteData);\n    }\n    /**\n     * Read a bit at position \"frame\", which should be the position of the previous bit's clock pulse.\n     * @return the value of the bit, the clock pulse, and the data pulse.\n     */\n    readBit(frame, allowLateClockPulse, includeExplanation) {\n        // Clock pulse is one period away.\n        let clockPulse = this.isPulseAt(frame + this.period, this.peakThreshold, includeExplanation);\n        if (clockPulse.resultType !== PulseResultType.PULSE) {\n            if (allowLateClockPulse) {\n                const [_, latePulse] = this.findNextPulse(frame + this.period, this.peakThreshold);\n                if (latePulse === undefined || latePulse.frame > frame + this.period * 3) {\n                    // Failed to find late pulse.\n                    return [false, clockPulse, clockPulse];\n                }\n                clockPulse = latePulse;\n            }\n            else {\n                return [false, clockPulse, clockPulse];\n            }\n        }\n        // Data pulse is half a period after the clock pulse.\n        const dataPulse = this.isPulseAt(clockPulse.frame + this.halfPeriod, this.peakThreshold, includeExplanation);\n        const bit = dataPulse.resultType === PulseResultType.PULSE;\n        return [bit, clockPulse, dataPulse];\n    }\n    /**\n     * Read a sequence of bits (the characters \"0\" and \"1\"). Frame is the position of the previous clock bit.\n     * This is for testing.\n     */\n    readBits(frame) {\n        let bits = \"\";\n        const waveformAnnotation = [];\n        const explanations = [];\n        waveformAnnotation.push(new LabelAnnotation(\"Previous\", frame, frame, true));\n        while (true) {\n            const expectedNextFrame = frame + this.period;\n            const [bit, clockPulse, dataPulse] = this.readBit(frame, false, true);\n            if (clockPulse.resultType === PulseResultType.NOISE || clockPulse.resultType === PulseResultType.SILENCE) {\n                const left = expectedNextFrame - this.quarterPeriod;\n                const right = expectedNextFrame + this.period - this.quarterPeriod;\n                waveformAnnotation.push(new LabelAnnotation(clockPulse.resultType === PulseResultType.NOISE ? \"Noise\" : \"Silence\", left, right, true));\n                if (clockPulse.explanation !== \"\") {\n                    explanations.push(clockPulse.explanation);\n                }\n                waveformAnnotation.push(...clockPulse.waveformAnnotations);\n                break;\n            }\n            const bitChar = bit ? \"1\" : \"0\";\n            bits += bitChar;\n            if (clockPulse.explanation !== \"\") {\n                explanations.push(clockPulse.explanation);\n            }\n            if (dataPulse.explanation !== \"\") {\n                explanations.push(dataPulse.explanation);\n            }\n            waveformAnnotation.push(...clockPulse.waveformAnnotations);\n            waveformAnnotation.push(...dataPulse.waveformAnnotations);\n            const nextFrame = clockPulse.frame;\n            const left = nextFrame - this.quarterPeriod;\n            const right = nextFrame + this.period - this.quarterPeriod;\n            waveformAnnotation.push(new LabelAnnotation(bitChar, left, right, true));\n            frame = nextFrame;\n            this.peakThreshold = Math.round(clockPulse.range / 4);\n        }\n        return [bits, waveformAnnotation, explanations];\n    }\n    /**\n     * Look for the next pulse in the samples, starting at frame.\n     * @return the frame at the end of the pulse, and an optional pulse if one was found. If one was not\n     * found, then the frame ran off the end of the audio.\n     */\n    findNextPulse(frame, threshold) {\n        // Look for next position above the threshold.\n        while (frame < this.samples.length && this.samples[frame] < threshold) {\n            frame++;\n        }\n        if (frame >= this.samples.length) {\n            return [frame, undefined];\n        }\n        // Look for next position below the threshold. Keep track of peak value.\n        let maxValue = -32769;\n        let maxFrame = -1;\n        while (frame < this.samples.length && this.samples[frame] >= threshold) {\n            if (this.samples[frame] > maxValue) {\n                maxValue = this.samples[frame];\n                maxFrame = frame;\n            }\n            frame++;\n        }\n        if (frame >= this.samples.length) {\n            return [frame, undefined];\n        }\n        if (maxFrame === -1) {\n            throw new Error(\"Didn't find peak\");\n        }\n        return [frame, new Pulse(PulseResultType.PULSE, maxValue, maxFrame, threshold, \"\")];\n    }\n    /**\n     * Look for a pulse around frame.\n     */\n    isPulseAt(frame, peakThreshold, includeExplanation) {\n        const distance = Math.round(this.period / 6);\n        const pulseStart = Math.max(frame - distance, 0);\n        const pulseEnd = Math.min(frame + distance, this.samples.length - 1);\n        // Find min and max around frame.\n        let maxFrame = pulseStart;\n        let minFrame = pulseStart;\n        let minValue = this.samples[maxFrame];\n        let maxValue = this.samples[maxFrame];\n        for (let i = pulseStart; i <= pulseEnd; i++) {\n            const value = this.samples[i];\n            if (value < minValue) {\n                minValue = value;\n                minFrame = i;\n            }\n            if (value > maxValue) {\n                maxValue = value;\n                maxFrame = i;\n            }\n        }\n        const range = maxValue - minValue;\n        let pulseEndOffset = peakThreshold / 4;\n        const posPulseEndThreshold = maxValue - pulseEndOffset;\n        const negPulseEndThreshold = minValue + pulseEndOffset;\n        const annotations = [];\n        if (range > peakThreshold) {\n            if (includeExplanation) {\n                annotations.push(new PointAnnotation(pulseStart, this.samples[pulseStart]));\n                annotations.push(new PointAnnotation(pulseEnd, this.samples[pulseEnd]));\n                annotations.push(new HorizontalLineAnnotation(posPulseEndThreshold, pulseStart, pulseEnd));\n                annotations.push(new HorizontalLineAnnotation(negPulseEndThreshold, pulseStart, pulseEnd));\n            }\n            if (this.samples[pulseStart] < posPulseEndThreshold &&\n                this.samples[pulseEnd] < posPulseEndThreshold) {\n                const explanation = includeExplanation ?\n                    \"Looked for pulse at \" + withCommas(frame) + \" and found it at \" + withCommas(maxFrame) +\n                        \", which is within the search radius of \" + withCommas(distance) + \". \" +\n                        \"Range \" + withCommas(range) + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                        \", start \" + withCommas(this.samples[pulseStart]) + \" < \" + withCommas(posPulseEndThreshold) +\n                        \", and end \" + withCommas(this.samples[pulseEnd]) + \" < \" + withCommas(posPulseEndThreshold) + \".\" : \"\";\n                let pulse = new Pulse(PulseResultType.PULSE, maxValue, maxFrame, range, explanation);\n                if (includeExplanation) {\n                    pulse.waveformAnnotations.push(new PointAnnotation(pulse.frame, pulse.value));\n                    pulse.waveformAnnotations.push(new VerticalLineAnnotation(frame));\n                    pulse.waveformAnnotations.push(...annotations);\n                }\n                return pulse;\n            }\n            if (this.samples[pulseStart] > negPulseEndThreshold &&\n                this.samples[pulseEnd] > negPulseEndThreshold) {\n                const explanation = includeExplanation ?\n                    \"Looked for pulse at \" + withCommas(frame) + \" and found it at \" + withCommas(minFrame) +\n                        \", which is within the search radius of \" + withCommas(distance) + \". \" +\n                        \"Range \" + withCommas(range) + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                        \", start \" + withCommas(this.samples[pulseStart]) + \" > \" + withCommas(negPulseEndThreshold) +\n                        \", and end \" + withCommas(this.samples[pulseEnd]) + \" > \" + withCommas(negPulseEndThreshold) + \".\" : \"\";\n                const pulse = new Pulse(PulseResultType.PULSE, minValue, minFrame, range, explanation);\n                if (includeExplanation) {\n                    pulse.waveformAnnotations.push(new PointAnnotation(pulse.frame, pulse.value));\n                    pulse.waveformAnnotations.push(new VerticalLineAnnotation(frame));\n                    pulse.waveformAnnotations.push(...annotations);\n                }\n                return pulse;\n            }\n            const explanation = includeExplanation ? \"Range \" + range + \" is greater than pulse threshold \" + withCommas(peakThreshold) +\n                \" but the sides don't pull away enough.\" : \"\";\n            const pulse = new Pulse(PulseResultType.NOISE, 0, 0, 0, explanation);\n            pulse.waveformAnnotations.push(...annotations);\n            return pulse;\n        }\n        const noiseThreshold = peakThreshold / 2;\n        if (range > noiseThreshold) {\n            const explanation = includeExplanation ? \"Range \" + range + \" is less than pulse threshold \" + withCommas(peakThreshold) +\n                \" but greater than noise threshold \" + noiseThreshold + \".\" : \"\";\n            const pulse = new Pulse(PulseResultType.NOISE, 0, 0, 0, explanation);\n            pulse.waveformAnnotations.push(...annotations);\n            return pulse;\n        }\n        const explanation = includeExplanation ? \"Range \" + range + \" is less than or equal to noise threshold \" + noiseThreshold + \".\" : \"\";\n        let pulse = new Pulse(PulseResultType.SILENCE, 0, 0, 0, explanation);\n        pulse.waveformAnnotations.push(...annotations);\n        return pulse;\n    }\n    getBinary() {\n        return new Uint8Array(0);\n    }\n    getBitData() {\n        return [];\n    }\n    getByteData() {\n        return [];\n    }\n    getName() {\n        return \"Low speed (Anteo)\";\n    }\n    isHighSpeed() {\n        return false;\n    }\n    getState() {\n        return this.state;\n    }\n}\nLowSpeedAnteoTapeDecoder.DEFAULT_THRESHOLD = 3000;\n","// Uses tape decoders to work through the tape, finding programs and decoding them.\nimport { HighSpeedTapeDecoder } from \"./HighSpeedTapeDecoder\";\nimport { encodeHighSpeed, wrapHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { LowSpeedAnteoTapeDecoder } from \"./LowSpeedAnteoTapeDecoder\";\nimport { encodeLowSpeed, wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nclass Transition {\n    constructor(candidate, isStart, frame) {\n        this.candidate = candidate;\n        this.isStart = isStart;\n        this.frame = frame;\n    }\n}\n/**\n * Uses various decoders to decode an audio file.\n */\nexport class Decoder {\n    constructor(tape) {\n        this.tape = tape;\n    }\n    /**\n     * Decode the tape, populating the tape's \"programs\" array.\n     */\n    decode() {\n        let sampleLength = this.tape.filteredSamples.samplesList[0].length;\n        // All decoders we're interested in. We use factories because they're created\n        // multiple times, once for each program found.\n        let tapeDecoderFactories = [\n            // () => new LowSpeedTapeDecoder(this.tape, true),\n            // () => new LowSpeedTapeDecoder(this.tape, false),\n            () => new LowSpeedAnteoTapeDecoder(this.tape),\n            () => new HighSpeedTapeDecoder(this.tape),\n        ];\n        // All programs we detect.\n        const candidates = [];\n        // Clear all annotations.\n        this.tape.waveformAnnotations.splice(0, this.tape.waveformAnnotations.length);\n        // Try each decoder, feeding it the whole tape.\n        for (const tapeDecoderFactory of tapeDecoderFactories) {\n            let startFrame = 0;\n            while (true) {\n                const tapeDecoder = tapeDecoderFactory();\n                const program = tapeDecoder.findNextProgram(startFrame, this.tape.waveformAnnotations);\n                if (program === undefined) {\n                    break;\n                }\n                candidates.push(program);\n                startFrame = Math.round(program.endFrame + this.tape.sampleRate * 0.01);\n            }\n        }\n        // Make a sorted list of start/end of candidates.\n        const transitions = [];\n        for (const candidate of candidates) {\n            transitions.push(new Transition(candidate, true, candidate.startFrame));\n            transitions.push(new Transition(candidate, false, candidate.endFrame));\n        }\n        transitions.sort((a, b) => a.frame - b.frame);\n        // Go through them, keeping track of which candidates are active, and deleting\n        // clearly bad candidates (those completely nested in others).\n        candidates.splice(0, candidates.length);\n        const activeCandidates = [];\n        for (const transition of transitions) {\n            // See if this new one is nested in an active one.\n            if (transition.isStart) {\n                let keepCandidate = true;\n                for (const candidate of activeCandidates) {\n                    if (transition.candidate.isNestedIn(candidate, this.tape.sampleRate * 0.1)) {\n                        keepCandidate = false;\n                        break;\n                    }\n                }\n                if (keepCandidate) {\n                    activeCandidates.push(transition.candidate);\n                    candidates.push(transition.candidate);\n                }\n            }\n            else {\n                const index = activeCandidates.indexOf(transition.candidate);\n                if (index !== -1) {\n                    activeCandidates.splice(index, 1);\n                }\n            }\n        }\n        // Sort programs by tape order.\n        candidates.sort((a, b) => a.startFrame - b.startFrame);\n        // Convert remaining candidates to programs.\n        let trackNumber = 0;\n        let copyNumber = 0;\n        let endOfLastProgram = 0;\n        for (const candidate of candidates) {\n            // Skip very short programs, they're mis-detects.\n            if (candidate.endFrame - candidate.startFrame > this.tape.sampleRate / 10) {\n                // See how long it took to find it. A large gap means a new track.\n                const leadTime = (candidate.startFrame - endOfLastProgram) / this.tape.sampleRate;\n                if (trackNumber === 0 || leadTime > 10) {\n                    trackNumber++;\n                    copyNumber = 1;\n                }\n                else {\n                    copyNumber += 1;\n                }\n                candidate.trackNumber = trackNumber;\n                candidate.copyNumber = copyNumber;\n                candidate.setReconstructedSamples(this.reencode(candidate.binary));\n                this.tape.addProgram(candidate);\n                endOfLastProgram = candidate.endFrame;\n            }\n        }\n    }\n    /**\n     * Re-encodes a binary as a clean low-speed audio.\n     */\n    reencode(binary) {\n        // Here we could re-encode in either low speed or high speed. Do low speed so that\n        // the audio is usable on a Model I.\n        if (true) {\n            return encodeLowSpeed(wrapLowSpeed(binary), this.tape.sampleRate);\n        }\n        else {\n            // Low-speed programs end in two 0x00, but high-speed programs\n            // end in three 0x00. Add the additional 0x00 since we're\n            // saving high-speed.\n            // Note: I think that's true of Basic programs, but maybe not of other programs.\n            let highSpeedBytes;\n            if (binary.length >= 3 &&\n                binary[binary.length - 1] === 0x00 &&\n                binary[binary.length - 2] === 0x00 &&\n                binary[binary.length - 3] !== 0x00) {\n                highSpeedBytes = new Uint8Array(binary.length + 1);\n                highSpeedBytes.set(binary);\n                highSpeedBytes[highSpeedBytes.length - 1] = 0x00;\n            }\n            else {\n                highSpeedBytes = binary;\n            }\n            return encodeHighSpeed(wrapHighSpeed(highSpeedBytes), this.tape.sampleRate);\n        }\n    }\n}\n","import { clampToInt16 } from \"./AudioUtils\";\nimport { BitData } from \"./BitData\";\nimport { BitType } from \"./BitType\";\nimport { TapeDecoderState } from \"./TapeDecoderState\";\nimport { ByteData } from \"./ByteData\";\nimport { Program } from \"./Program\";\n/**\n * Number of consecutive zero bits we require in the header before we're pretty\n * sure this is a low speed program.\n */\nconst MIN_HEADER_ZEROS = 6;\nexport class LowSpeedTapeDecoder {\n    constructor(tape, invert) {\n        this.programBytes = [];\n        this.byteData = [];\n        this.tape = tape;\n        this.invert = invert;\n        this.state = TapeDecoderState.UNDECIDED;\n        // The frame where we last detected a pulse.\n        this.lastPulseFrame = 0;\n        this.eatNextPulse = false;\n        this.bitCount = 0;\n        this.recentBits = 0;\n        this.lenientFirstBit = false;\n        this.detectedZeros = 0;\n        // Height of the previous pulse. We set each pulse's threshold\n        // to 1/3 of the previous pulse's height.\n        this.pulseHeight = 0;\n        this.bitData = [];\n        this.pulseCount = 0;\n        // Number of samples between start of pulse detection and end of pulse. Once\n        // we detect a pulse, we ignore this number of samples.\n        // TODO make tape.sampleRate-sensitive.\n        this.pulseWidth = 22;\n        // Number of samples that determines a zero (longer) or one (shorter) bit.\n        // TODO make tape.sampleRate-sensitive.\n        this.bitDeterminator = 68;\n        // Number of quiet samples that would indicate the end of the program.\n        this.endOfProgramSilence = tape.sampleRate / 10;\n    }\n    /**\n     * Differentiating filter to accentuate pulses.\n     *\n     * @param samples samples to filter.\n     * @param sampleRate number of samples per second in the recording.\n     * @returns filtered samples.\n     */\n    static filterSamples(samples, sampleRate) {\n        const out = new Int16Array(samples.length);\n        // Number of samples between the top of the pulse and the bottom of it. Each pulse\n        // lasts 125µs, so assume the distance between crest and trough is 125µs.\n        const pulseWidth = Math.round(125e-6 * sampleRate);\n        if (false) {\n            for (let i = 0; i < samples.length; i++) {\n                // Differentiate to accentuate a pulse. Pulse go positive, then negative,\n                // with a space of pulseWidth, so subtracting those generates a large\n                // positive value at the bottom of the pulse.\n                const newSample = i >= pulseWidth ? samples[i - pulseWidth] - samples[i] : 0;\n                out[i] = clampToInt16(newSample);\n            }\n        }\n        else {\n            // Convolution with a pulse similar to what the original should have looked like (125 µs pulse\n            // up, then 125 µs pulse down).\n            let posSum = 0;\n            let negSum = 0;\n            let denom = pulseWidth * 2;\n            for (let i = 0; i < samples.length; i++) {\n                let aheadSample = i + pulseWidth >= samples.length ? 0 : samples[i + pulseWidth];\n                let nowSample = samples[i];\n                let behindSample = i - pulseWidth < 0 ? 0 : samples[i - pulseWidth];\n                posSum += nowSample - behindSample;\n                negSum += aheadSample - nowSample;\n                out[i] = clampToInt16((posSum - negSum) / denom);\n            }\n        }\n        return out;\n    }\n    getName() {\n        return \"Low speed\" + (this.invert ? \" (Inv)\" : \"\");\n    }\n    isHighSpeed() {\n        return false;\n    }\n    findNextProgram(startFrame, waveformAnnotation) {\n        const samples = this.tape.lowSpeedSamples.samplesList[0];\n        let programStartFrame = -1;\n        for (let frame = startFrame; frame < samples.length; frame++) {\n            this.handleSample(frame);\n            if (this.state === TapeDecoderState.DETECTED && programStartFrame === -1) {\n                programStartFrame = frame;\n            }\n            if (this.state === TapeDecoderState.FINISHED && programStartFrame !== -1) {\n                return new Program(0, 0, programStartFrame, frame, this, this.getBinary(), this.getBitData(), this.getByteData());\n            }\n        }\n        return undefined;\n    }\n    handleSample(frame) {\n        const samples = this.tape.lowSpeedSamples.samplesList[0];\n        const pulse = this.invert ? -samples[frame] : samples[frame];\n        const timeDiff = frame - this.lastPulseFrame;\n        const pulsing = timeDiff > this.pulseWidth && pulse >= this.pulseHeight / 3;\n        // Keep track of the height of this pulse, to calibrate for the next one.\n        if (timeDiff < this.pulseWidth) {\n            this.pulseHeight = Math.max(this.pulseHeight, pulse);\n        }\n        if (this.state === TapeDecoderState.DETECTED && timeDiff > this.endOfProgramSilence) {\n            // End of program.\n            this.state = TapeDecoderState.FINISHED;\n        }\n        else if (pulsing) {\n            const bit = timeDiff < this.bitDeterminator;\n            if (this.pulseCount++ === 1000) {\n                // For debugging, forces a detection so we can inspect the bits.\n                /// this.state = TapeDecoderState.DETECTED;\n            }\n            if (this.eatNextPulse) {\n                if (this.state === TapeDecoderState.DETECTED && !bit && !this.lenientFirstBit) {\n                    this.bitData.push(new BitData(this.lastPulseFrame, frame, BitType.BAD));\n                }\n                else {\n                    const lastBit = this.bitData[this.bitData.length - 1];\n                    if (lastBit && lastBit.bitType === BitType.ONE && lastBit.endFrame === this.lastPulseFrame) {\n                        // Merge with previous 1 bit.\n                        lastBit.endFrame = frame;\n                    }\n                    const lastByte = this.byteData[this.byteData.length - 1];\n                    if (lastByte && lastByte.endFrame === this.lastPulseFrame) {\n                        // Adjust last bit.\n                        lastByte.endFrame = frame;\n                    }\n                }\n                this.eatNextPulse = false;\n                this.lenientFirstBit = false;\n            }\n            else {\n                // If we see a 1 in the header, reset the count. We want a bunch of consecutive zeros.\n                if (bit && this.state === TapeDecoderState.UNDECIDED && this.detectedZeros < MIN_HEADER_ZEROS) {\n                    // Still not in header. Reset count.\n                    this.detectedZeros = 0;\n                }\n                else {\n                    if (bit) {\n                        this.eatNextPulse = true;\n                    }\n                    else {\n                        this.detectedZeros += 1;\n                    }\n                    this.recentBits = (this.recentBits << 1) | (bit ? 1 : 0);\n                    if (this.lastPulseFrame !== 0) {\n                        this.bitData.push(new BitData(this.lastPulseFrame, frame, bit ? BitType.ONE : BitType.ZERO));\n                    }\n                    if (this.state === TapeDecoderState.UNDECIDED) {\n                        // Haven't found end of header yet. Look for it, preceded by zeros.\n                        if (this.recentBits === 0x000000A5) {\n                            this.bitCount = 0;\n                            // For some reason we don't get a clock after this last 1.\n                            this.lenientFirstBit = true;\n                            this.state = TapeDecoderState.DETECTED;\n                        }\n                    }\n                    else {\n                        this.bitCount += 1;\n                        if (this.bitCount === 8) {\n                            let byteValue = this.recentBits & 0xFF;\n                            this.programBytes.push(byteValue);\n                            this.byteData.push(new ByteData(byteValue, this.bitData[this.bitData.length - 8].startFrame, frame));\n                            this.bitCount = 0;\n                        }\n                    }\n                }\n            }\n            this.lastPulseFrame = frame;\n            this.pulseHeight = 0;\n        }\n    }\n    getState() {\n        return this.state;\n    }\n    getBinary() {\n        const bytes = new Uint8Array(this.programBytes.length);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = this.programBytes[i];\n        }\n        return bytes;\n    }\n    getBitData() {\n        return this.bitData;\n    }\n    getByteData() {\n        return this.byteData;\n    }\n    readBits(frame) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","// Represents a recorded tape, with its audio samples,\n// filtered-down samples for display, and other information\n// we got from it.\nimport { highPassFilter } from \"./AudioUtils\";\nimport { DisplaySamples } from \"./DisplaySamples\";\nimport { LowSpeedTapeDecoder } from \"./LowSpeedTapeDecoder\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nconst LOCAL_DATA_KEY = \"tapes\";\nexport class Tape {\n    /**\n     * @param name text to display (e.g., \"LOAD80-Feb82-s1\").\n     * @param audioFile original samples from the tape.\n     */\n    constructor(name, audioFile) {\n        this.notes = \"\";\n        this.waveformAnnotations = [];\n        this.onName = new SimpleEventDispatcher();\n        this.onNotes = new SimpleEventDispatcher();\n        this.name = name;\n        this.originalSamples = new DisplaySamples(audioFile.samples);\n        this.filteredSamples = new DisplaySamples(highPassFilter(audioFile.samples, 500));\n        this.lowSpeedSamples = new DisplaySamples(LowSpeedTapeDecoder.filterSamples(this.filteredSamples.samplesList[0], audioFile.rate));\n        this.sampleRate = audioFile.rate;\n        this.programs = [];\n    }\n    addProgram(program) {\n        this.programs.push(program);\n    }\n    /**\n     * Set the name of the tape, as set by the user.\n     */\n    setName(name) {\n        if (name !== this.name) {\n            this.name = name;\n            this.onName.dispatch(name);\n        }\n    }\n    /**\n     * Set the notes for the tape, as set by the user.\n     */\n    setNotes(notes) {\n        if (notes !== this.notes) {\n            this.notes = notes;\n            this.onNotes.dispatch(notes);\n        }\n    }\n    /**\n     * Listen for changes to local storage and apply them.\n     */\n    listenForStorageChanges() {\n        window.addEventListener(\"storage\", event => {\n            if (event.key === LOCAL_DATA_KEY) {\n                this.loadUserData();\n            }\n        });\n    }\n    /**\n     * Load the saved user data and apply to existing programs.\n     */\n    loadUserData() {\n        var _a, _b, _c;\n        const data = Tape.loadAllData();\n        for (const tapeData of data.tapes) {\n            if (tapeData.name === this.name) {\n                this.notes = tapeData.notes;\n                for (const programData of tapeData.programs) {\n                    for (const program of this.programs) {\n                        if (program.isForTimestamp(programData.timestamp, this.sampleRate)) {\n                            program.setName((_a = programData.name, (_a !== null && _a !== void 0 ? _a : \"\")));\n                            program.setNotes((_b = programData.notes, (_b !== null && _b !== void 0 ? _b : \"\")));\n                            program.setScreenshot((_c = programData.screenshot, (_c !== null && _c !== void 0 ? _c : \"\")));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Synchronously saves all user data (names and notes) to local storage.\n     */\n    saveUserData() {\n        const data = {\n            tapes: [\n                {\n                    name: this.name,\n                    notes: this.notes,\n                    programs: this.programs.map(program => ({\n                        name: program.name,\n                        notes: program.notes,\n                        screenshot: program.screenshot,\n                        timestamp: program.getTimestamp(this.sampleRate),\n                    })),\n                },\n            ],\n        };\n        Tape.saveAllDataAsJson(JSON.stringify(data));\n    }\n    /**\n     * Get user data as a SavedData object.\n     */\n    static loadAllData() {\n        const jsonData = window.localStorage.getItem(LOCAL_DATA_KEY);\n        if (jsonData === null) {\n            return { tapes: [] };\n        }\n        return JSON.parse(jsonData);\n    }\n    /**\n     * Get user data as a formatted JSON object.\n     */\n    static getAllDataAsJson() {\n        // Re-format it nicely.\n        return JSON.stringify(this.loadAllData(), null, 2);\n    }\n    /**\n     * Set the full data from a JSON string.\n     */\n    static saveAllDataAsJson(jsonData) {\n        window.localStorage.setItem(LOCAL_DATA_KEY, jsonData);\n    }\n}\n","// Tools for decoding Basic programs.\nimport { concatByteArrays, pad } from \"./Utils\";\nimport { ByteReader, EOF } from \"./ByteReader\";\nconst BASIC_HEADER_BYTE = 0xD3;\n// Starts at 0x80.\nconst TOKENS = [\n    \"END\", \"FOR\", \"RESET\", \"SET\", \"CLS\", \"CMD\", \"RANDOM\", \"NEXT\",\n    \"DATA\", \"INPUT\", \"DIM\", \"READ\", \"LET\", \"GOTO\", \"RUN\", \"IF\",\n    \"RESTORE\", \"GOSUB\", \"RETURN\", \"REM\", \"STOP\", \"ELSE\", \"TRON\", \"TROFF\",\n    \"DEFSTR\", \"DEFINT\", \"DEFSNG\", \"DEFDBL\", \"LINE\", \"EDIT\", \"ERROR\", \"RESUME\",\n    \"OUT\", \"ON\", \"OPEN\", \"FIELD\", \"GET\", \"PUT\", \"CLOSE\", \"LOAD\",\n    \"MERGE\", \"NAME\", \"KILL\", \"LSET\", \"RSET\", \"SAVE\", \"SYSTEM\", \"LPRINT\",\n    \"DEF\", \"POKE\", \"PRINT\", \"CONT\", \"LIST\", \"LLIST\", \"DELETE\", \"AUTO\",\n    \"CLEAR\", \"CLOAD\", \"CSAVE\", \"NEW\", \"TAB(\", \"TO\", \"FN\", \"USING\",\n    \"VARPTR\", \"USR\", \"ERL\", \"ERR\", \"STRING\", \"INSTR\", \"POINT\", \"TIME$\",\n    \"MEM\", \"INKEY$\", \"THEN\", \"NOT\", \"STEP\", \"+\", \"-\", \"*\",\n    \"/\", \"[\", \"AND\", \"OR\", \">\", \"=\", \"<\", \"SGN\",\n    \"INT\", \"ABS\", \"FRE\", \"INP\", \"POS\", \"SQR\", \"RND\", \"LOG\",\n    \"EXP\", \"COS\", \"SIN\", \"TAN\", \"ATN\", \"PEEK\", \"CVI\", \"CVS\",\n    \"CVD\", \"EOF\", \"LOC\", \"LOF\", \"MKI\", \"MKS$\", \"MKD$\", \"CINT\",\n    \"CSNG\", \"CDBL\", \"FIX\", \"LEN\", \"STR$\", \"VAL\", \"ASC\", \"CHR$\",\n    \"LEFT$\", \"RIGHT$\", \"MID$\",\n];\nconst REM = 0x93;\nconst DATA = 0x88;\nconst REMQUOT = 0xFB;\nconst ELSE = 0x95;\n/**\n * Parser state.\n */\n// Normal part of line.\nconst NORMAL = 0;\n// Inside string literal.\nconst STRING_LITERAL = 1;\n// After REM or DATA statement to end of line.\nconst RAW = 2;\n// Just ate a colon.\nconst COLON = 3;\n// Just ate a colon and a REM.\nconst COLON_REM = 4;\n/**\n * Get the token for the byte value, or undefined if the value does\n * not map to a token.\n */\nexport function getToken(c) {\n    return c >= 128 && c < 128 + TOKENS.length ? TOKENS[c - 128] : undefined;\n}\n/**\n * Type of Basic element, for syntax highlighting.\n */\nexport var ElementType;\n(function (ElementType) {\n    ElementType[ElementType[\"ERROR\"] = 0] = \"ERROR\";\n    ElementType[ElementType[\"LINE_NUMBER\"] = 1] = \"LINE_NUMBER\";\n    ElementType[ElementType[\"PUNCTUATION\"] = 2] = \"PUNCTUATION\";\n    ElementType[ElementType[\"KEYWORD\"] = 3] = \"KEYWORD\";\n    ElementType[ElementType[\"REGULAR\"] = 4] = \"REGULAR\";\n    ElementType[ElementType[\"STRING\"] = 5] = \"STRING\";\n    ElementType[ElementType[\"COMMENT\"] = 6] = \"COMMENT\";\n})(ElementType || (ElementType = {}));\n/**\n * Piece of a Basic program (token, character, line number).\n */\nexport class BasicElement {\n    constructor(offset, text, elementType) {\n        // Length of section in \"bytes\" array.\n        this.length = 1;\n        this.offset = offset;\n        this.text = text;\n        this.elementType = elementType;\n    }\n}\n/**\n * Adds the header bytes necessary for writing Basic cassettes.\n */\nexport function wrapBasic(bytes) {\n    // Add Basic header.\n    const buffers = [\n        new Uint8Array([BASIC_HEADER_BYTE, BASIC_HEADER_BYTE, BASIC_HEADER_BYTE]),\n        bytes,\n    ];\n    return concatByteArrays(buffers);\n}\n/**\n * Decode a tokenized Basic program.\n * @param bytes tokenized program.\n * @return array of generated BasicElements, index by byte index.\n */\nexport function fromTokenized(bytes) {\n    const b = new ByteReader(bytes);\n    let state;\n    // Map from byte address to BasicElement for that byte.\n    const elements = [];\n    if (b.read() !== BASIC_HEADER_BYTE || b.read() !== BASIC_HEADER_BYTE || b.read() !== BASIC_HEADER_BYTE) {\n        elements.push(new BasicElement(undefined, \"Basic: missing magic -- not a BASIC file.\", ElementType.ERROR));\n        return elements;\n    }\n    // One-byte ASCII program name. This is nearly always meaningless, so we do nothing with it.\n    b.read();\n    while (true) {\n        // Read the address of the next line. We ignore this (as does Basic when\n        // loading programs), only using it to detect end of program. (In the real\n        // Basic these are regenerated after loading.)\n        const address = b.readShort(true);\n        if (address === EOF) {\n            elements.push(new BasicElement(undefined, \"[EOF in next line's address]\", ElementType.ERROR));\n            break;\n        }\n        // Zero address indicates end of program.\n        if (address === 0) {\n            break;\n        }\n        // Read current line number.\n        const lineNumber = b.readShort(false);\n        if (lineNumber === EOF) {\n            elements.push(new BasicElement(undefined, \"[EOF in line number]\", ElementType.ERROR));\n            break;\n        }\n        let lineNumberElement = new BasicElement(b.addr() - 2, lineNumber.toString(), ElementType.LINE_NUMBER);\n        lineNumberElement.length = 2;\n        elements.push(lineNumberElement);\n        elements.push(new BasicElement(undefined, \" \", ElementType.REGULAR));\n        // Read rest of line.\n        let c; // Uint8 value.\n        let ch; // String value.\n        let colonAddr = 0;\n        state = NORMAL;\n        while (true) {\n            c = b.read();\n            if (c === EOF || c === 0) {\n                break;\n            }\n            ch = String.fromCharCode(c);\n            // Detect the \":REM'\" sequence (colon, REM, single quote), because\n            // that translates to a single quote. Must be a backward-compatible\n            // way to add a single quote as a comment.\n            if (ch === \":\" && state === NORMAL) {\n                state = COLON;\n                colonAddr = b.addr() - 1;\n            }\n            else if (ch === \":\" && state === COLON) {\n                elements.push(new BasicElement(colonAddr, \":\", ElementType.PUNCTUATION));\n                colonAddr = b.addr() - 1;\n            }\n            else if (c === REM && state === COLON) {\n                state = COLON_REM;\n                colonAddr = 0;\n            }\n            else if (c === REMQUOT && state === COLON_REM) {\n                elements.push(new BasicElement(b.addr() - 1, \"'\", ElementType.COMMENT));\n                state = RAW;\n            }\n            else if (c === ELSE && state === COLON) {\n                elements.push(new BasicElement(b.addr() - 1, \"ELSE\", ElementType.KEYWORD));\n                state = NORMAL;\n                colonAddr = 0;\n            }\n            else {\n                if (state === COLON || state === COLON_REM) {\n                    elements.push(new BasicElement(colonAddr, \":\", ElementType.PUNCTUATION));\n                    if (state === COLON_REM) {\n                        elements.push(new BasicElement(b.addr() - 1, \"REM\", ElementType.COMMENT));\n                        state = RAW;\n                    }\n                    else {\n                        state = NORMAL;\n                    }\n                    colonAddr = 0;\n                }\n                switch (state) {\n                    case NORMAL:\n                        const token = getToken(c);\n                        elements.push(token !== undefined\n                            ? new BasicElement(b.addr() - 1, token, c === DATA || c === REM ? ElementType.COMMENT\n                                : token.length === 1 ? ElementType.PUNCTUATION\n                                    : ElementType.KEYWORD)\n                            : new BasicElement(b.addr() - 1, ch, ch === '\"' ? ElementType.STRING : ElementType.REGULAR));\n                        if (c === DATA || c === REM) {\n                            state = RAW;\n                        }\n                        else if (ch === '\"') {\n                            state = STRING_LITERAL;\n                        }\n                        break;\n                    case STRING_LITERAL:\n                        var e;\n                        if (ch === \"\\r\") {\n                            e = new BasicElement(b.addr() - 1, \"\\\\n\", ElementType.PUNCTUATION);\n                        }\n                        else if (ch === \"\\\\\") {\n                            e = new BasicElement(b.addr() - 1, \"\\\\\" + pad(c, 8, 3), ElementType.PUNCTUATION);\n                        }\n                        else if (c >= 32 && c < 128) {\n                            e = new BasicElement(b.addr() - 1, ch, ElementType.STRING);\n                        }\n                        else {\n                            e = new BasicElement(b.addr() - 1, \"\\\\\" + pad(c, 8, 3), ElementType.PUNCTUATION);\n                        }\n                        elements.push(e);\n                        if (ch === '\"') {\n                            // End of string.\n                            state = NORMAL;\n                        }\n                        break;\n                    case RAW:\n                        elements.push(new BasicElement(b.addr() - 1, ch, ElementType.COMMENT));\n                        break;\n                }\n            }\n        }\n        if (c === EOF) {\n            elements.push(new BasicElement(undefined, \"[EOF in line]\", ElementType.ERROR));\n            break;\n        }\n        // Deal with eaten tokens.\n        if (state === COLON || state === COLON_REM) {\n            elements.push(new BasicElement(colonAddr, \":\", ElementType.PUNCTUATION));\n            if (state === COLON_REM) {\n                elements.push(new BasicElement(b.addr() - 1, \"REM\", ElementType.COMMENT));\n            }\n            /// state = NORMAL;\n            /// colonAddr = 0;\n        }\n    }\n    return elements;\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport var isBrowser = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === 'object' && document.nodeType === 9;\n\nexport default isBrowser;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport isInBrowser from 'is-in-browser';\nimport warning from 'tiny-warning';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\nvar plainObjectConstrurctor = {}.constructor;\nfunction cloneStyle(style) {\n  if (style == null || typeof style !== 'object') return style;\n  if (Array.isArray(style)) return style.map(cloneStyle);\n  if (style.constructor !== plainObjectConstrurctor) return style;\n  var newStyle = {};\n\n  for (var name in style) {\n    newStyle[name] = cloneStyle(style[name]);\n  }\n\n  return newStyle;\n}\n\n/**\n * Create a rule instance.\n */\n\nfunction createRule(name, decl, options) {\n  if (name === void 0) {\n    name = 'unnamed';\n  }\n\n  var jss = options.jss;\n  var declCopy = cloneStyle(decl);\n  var rule = jss.plugins.onCreateRule(name, declCopy, options);\n  if (rule) return rule; // It is an at-rule and it has no instance.\n\n  if (name[0] === '@') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown rule \" + name) : void 0;\n  }\n\n  return null;\n}\n\nvar join = function join(value, by) {\n  var result = '';\n\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n\n  return result;\n};\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\n\n\nfunction toCssValue(value, ignoreImportant) {\n  if (ignoreImportant === void 0) {\n    ignoreImportant = false;\n  }\n\n  if (!Array.isArray(value)) return value;\n  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.\n\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', '); // Add !important, because it was ignored.\n\n\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n}\n\n/**\n * Indent a string.\n * http://jsperf.com/array-join-vs-for\n */\nfunction indentStr(str, indent) {\n  var result = '';\n\n  for (var index = 0; index < indent; index++) {\n    result += '  ';\n  }\n\n  return result + str;\n}\n/**\n * Converts a Rule to CSS string.\n */\n\n\nfunction toCss(selector, style, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var result = '';\n  if (!style) return result;\n  var _options = options,\n      _options$indent = _options.indent,\n      indent = _options$indent === void 0 ? 0 : _options$indent;\n  var fallbacks = style.fallbacks;\n  if (selector) indent++; // Apply fallbacks first.\n\n  if (fallbacks) {\n    // Array syntax {fallbacks: [{prop: value}]}\n    if (Array.isArray(fallbacks)) {\n      for (var index = 0; index < fallbacks.length; index++) {\n        var fallback = fallbacks[index];\n\n        for (var prop in fallback) {\n          var value = fallback[prop];\n\n          if (value != null) {\n            if (result) result += '\\n';\n            result += \"\" + indentStr(prop + \": \" + toCssValue(value) + \";\", indent);\n          }\n        }\n      }\n    } else {\n      // Object syntax {fallbacks: {prop: value}}\n      for (var _prop in fallbacks) {\n        var _value = fallbacks[_prop];\n\n        if (_value != null) {\n          if (result) result += '\\n';\n          result += \"\" + indentStr(_prop + \": \" + toCssValue(_value) + \";\", indent);\n        }\n      }\n    }\n  }\n\n  for (var _prop2 in style) {\n    var _value2 = style[_prop2];\n\n    if (_value2 != null && _prop2 !== 'fallbacks') {\n      if (result) result += '\\n';\n      result += \"\" + indentStr(_prop2 + \": \" + toCssValue(_value2) + \";\", indent);\n    }\n  } // Allow empty style in this case, because properties will be added dynamically.\n\n\n  if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.\n\n  if (!selector) return result;\n  indent--;\n  if (result) result = \"\\n\" + result + \"\\n\";\n  return indentStr(selector + \" {\" + result, indent) + indentStr('}', indent);\n}\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\nvar nativeEscape = typeof CSS !== 'undefined' && CSS.escape;\nvar escape = (function (str) {\n  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\\\$1');\n});\n\nvar BaseStyleRule =\n/*#__PURE__*/\nfunction () {\n  function BaseStyleRule(key, style, options) {\n    this.type = 'style';\n    this.key = void 0;\n    this.isProcessed = false;\n    this.style = void 0;\n    this.renderer = void 0;\n    this.renderable = void 0;\n    this.options = void 0;\n    var sheet = options.sheet,\n        Renderer = options.Renderer;\n    this.key = key;\n    this.options = options;\n    this.style = style;\n    if (sheet) this.renderer = sheet.renderer;else if (Renderer) this.renderer = new Renderer();\n  }\n  /**\n   * Get or set a style property.\n   */\n\n\n  var _proto = BaseStyleRule.prototype;\n\n  _proto.prop = function prop(name, value, options) {\n    // It's a getter.\n    if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.\n\n    var force = options ? options.force : false;\n    if (!force && this.style[name] === value) return this;\n    var newValue = value;\n\n    if (!options || options.process !== false) {\n      newValue = this.options.jss.plugins.onChangeValue(value, name, this);\n    }\n\n    var isEmpty = newValue == null || newValue === false;\n    var isDefined = name in this.style; // Value is empty and wasn't defined before.\n\n    if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.\n\n    var remove = isEmpty && isDefined;\n    if (remove) delete this.style[name];else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.\n\n    if (this.renderable && this.renderer) {\n      if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, newValue);\n      return this;\n    }\n\n    var sheet = this.options.sheet;\n\n    if (sheet && sheet.attached) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Rule is not linked. Missing sheet option \"link: true\".') : void 0;\n    }\n\n    return this;\n  };\n\n  return BaseStyleRule;\n}();\nvar StyleRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(StyleRule, _BaseStyleRule);\n\n  function StyleRule(key, style, options) {\n    var _this;\n\n    _this = _BaseStyleRule.call(this, key, style, options) || this;\n    _this.selectorText = void 0;\n    _this.id = void 0;\n    _this.renderable = void 0;\n    var selector = options.selector,\n        scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n\n    if (selector) {\n      _this.selectorText = selector;\n    } else if (scoped !== false) {\n      _this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet);\n      _this.selectorText = \".\" + escape(_this.id);\n    }\n\n    return _this;\n  }\n  /**\n   * Set selector string.\n   * Attention: use this with caution. Most browsers didn't implement\n   * selectorText setter, so this may result in rerendering of entire Style Sheet.\n   */\n\n\n  var _proto2 = StyleRule.prototype;\n\n  /**\n   * Apply rule to an element inline.\n   */\n  _proto2.applyTo = function applyTo(renderable) {\n    var renderer = this.renderer;\n\n    if (renderer) {\n      var json = this.toJSON();\n\n      for (var prop in json) {\n        renderer.setProperty(renderable, prop, json[prop]);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Returns JSON representation of the rule.\n   * Fallbacks are not supported.\n   * Useful for inline styles.\n   */\n  ;\n\n  _proto2.toJSON = function toJSON() {\n    var json = {};\n\n    for (var prop in this.style) {\n      var value = this.style[prop];\n      if (typeof value !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = toCssValue(value);\n    }\n\n    return json;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto2.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.selectorText, this.style, opts);\n  };\n\n  _createClass(StyleRule, [{\n    key: \"selector\",\n    set: function set(selector) {\n      if (selector === this.selectorText) return;\n      this.selectorText = selector;\n      var renderer = this.renderer,\n          renderable = this.renderable;\n      if (!renderable || !renderer) return;\n      var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.\n\n      if (!hasChanged) {\n        renderer.replaceRule(renderable, this);\n      }\n    }\n    /**\n     * Get selector string.\n     */\n    ,\n    get: function get() {\n      return this.selectorText;\n    }\n  }]);\n\n  return StyleRule;\n}(BaseStyleRule);\nvar pluginStyleRule = {\n  onCreateRule: function onCreateRule(name, style, options) {\n    if (name[0] === '@' || options.parent && options.parent.type === 'keyframes') {\n      return null;\n    }\n\n    return new StyleRule(name, style, options);\n  }\n};\n\nvar defaultToStringOptions = {\n  indent: 1,\n  children: true\n};\nvar atRegExp = /@([\\w-]+)/;\n/**\n * Conditional rule for @media, @supports\n */\n\nvar ConditionalRule =\n/*#__PURE__*/\nfunction () {\n  function ConditionalRule(key, styles, options) {\n    this.type = 'conditional';\n    this.at = void 0;\n    this.key = void 0;\n    this.query = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key; // Key might contain a unique suffix in case the `name` passed by user was duplicate.\n\n    this.query = options.name;\n    var atMatch = key.match(atRegExp);\n    this.at = atMatch ? atMatch[1] : 'unknown';\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = ConditionalRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions.indent;\n    if (options.children == null) options.children = defaultToStringOptions.children;\n\n    if (options.children === false) {\n      return this.query + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    return children ? this.query + \" {\\n\" + children + \"\\n}\" : '';\n  };\n\n  return ConditionalRule;\n}();\nvar keyRegExp = /@media|@supports\\s+/;\nvar pluginConditionalRule = {\n  onCreateRule: function onCreateRule(key, styles, options) {\n    return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;\n  }\n};\n\nvar defaultToStringOptions$1 = {\n  indent: 1,\n  children: true\n};\nvar nameRegExp = /@keyframes\\s+([\\w-]+)/;\n/**\n * Rule for @keyframes\n */\n\nvar KeyframesRule =\n/*#__PURE__*/\nfunction () {\n  function KeyframesRule(key, frames, options) {\n    this.type = 'keyframes';\n    this.at = '@keyframes';\n    this.key = void 0;\n    this.name = void 0;\n    this.id = void 0;\n    this.rules = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    var nameMatch = key.match(nameRegExp);\n\n    if (nameMatch && nameMatch[1]) {\n      this.name = nameMatch[1];\n    } else {\n      this.name = 'noname';\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Bad keyframes name \" + key) : void 0;\n    }\n\n    this.key = this.type + \"-\" + this.name;\n    this.options = options;\n    var scoped = options.scoped,\n        sheet = options.sheet,\n        generateId = options.generateId;\n    this.id = scoped === false ? this.name : escape(generateId(this, sheet));\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var name in frames) {\n      this.rules.add(name, frames[name], _extends({}, options, {\n        parent: this\n      }));\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = KeyframesRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (options === void 0) {\n      options = defaultToStringOptions$1;\n    }\n\n    if (options.indent == null) options.indent = defaultToStringOptions$1.indent;\n    if (options.children == null) options.children = defaultToStringOptions$1.children;\n\n    if (options.children === false) {\n      return this.at + \" \" + this.id + \" {}\";\n    }\n\n    var children = this.rules.toString(options);\n    if (children) children = \"\\n\" + children + \"\\n\";\n    return this.at + \" \" + this.id + \" {\" + children + \"}\";\n  };\n\n  return KeyframesRule;\n}();\nvar keyRegExp$1 = /@keyframes\\s+/;\nvar refRegExp = /\\$([\\w-]+)/g;\n\nvar findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {\n  if (typeof val === 'string') {\n    return val.replace(refRegExp, function (match, name) {\n      if (name in keyframes) {\n        return keyframes[name];\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced keyframes rule \\\"\" + name + \"\\\" is not defined.\") : void 0;\n      return match;\n    });\n  }\n\n  return val;\n};\n/**\n * Replace the reference for a animation name.\n */\n\n\nvar replaceRef = function replaceRef(style, prop, keyframes) {\n  var value = style[prop];\n  var refKeyframe = findReferencedKeyframe(value, keyframes);\n\n  if (refKeyframe !== value) {\n    style[prop] = refKeyframe;\n  }\n};\n\nvar plugin = {\n  onCreateRule: function onCreateRule(key, frames, options) {\n    return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;\n  },\n  // Animation name ref replacer.\n  onProcessStyle: function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return style;\n    if ('animation-name' in style) replaceRef(style, 'animation-name', sheet.keyframes);\n    if ('animation' in style) replaceRef(style, 'animation', sheet.keyframes);\n    return style;\n  },\n  onChangeValue: function onChangeValue(val, prop, rule) {\n    var sheet = rule.options.sheet;\n\n    if (!sheet) {\n      return val;\n    }\n\n    switch (prop) {\n      case 'animation':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      case 'animation-name':\n        return findReferencedKeyframe(val, sheet.keyframes);\n\n      default:\n        return val;\n    }\n  }\n};\n\nvar KeyframeRule =\n/*#__PURE__*/\nfunction (_BaseStyleRule) {\n  _inheritsLoose(KeyframeRule, _BaseStyleRule);\n\n  function KeyframeRule() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _BaseStyleRule.call.apply(_BaseStyleRule, [this].concat(args)) || this;\n    _this.renderable = void 0;\n    return _this;\n  }\n\n  var _proto = KeyframeRule.prototype;\n\n  /**\n   * Generates a CSS string.\n   */\n  _proto.toString = function toString(options) {\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n    var opts = link ? _extends({}, options, {\n      allowEmpty: true\n    }) : options;\n    return toCss(this.key, this.style, opts);\n  };\n\n  return KeyframeRule;\n}(BaseStyleRule);\nvar pluginKeyframeRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    if (options.parent && options.parent.type === 'keyframes') {\n      return new KeyframeRule(key, style, options);\n    }\n\n    return null;\n  }\n};\n\nvar FontFaceRule =\n/*#__PURE__*/\nfunction () {\n  function FontFaceRule(key, style, options) {\n    this.type = 'font-face';\n    this.at = '@font-face';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = FontFaceRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.style)) {\n      var str = '';\n\n      for (var index = 0; index < this.style.length; index++) {\n        str += toCss(this.key, this.style[index]);\n        if (this.style[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return toCss(this.key, this.style, options);\n  };\n\n  return FontFaceRule;\n}();\nvar pluginFontFaceRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return key === '@font-face' ? new FontFaceRule(key, style, options) : null;\n  }\n};\n\nvar ViewportRule =\n/*#__PURE__*/\nfunction () {\n  function ViewportRule(key, style, options) {\n    this.type = 'viewport';\n    this.at = '@viewport';\n    this.key = void 0;\n    this.style = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.style = style;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n\n\n  var _proto = ViewportRule.prototype;\n\n  _proto.toString = function toString(options) {\n    return toCss(this.key, this.style, options);\n  };\n\n  return ViewportRule;\n}();\nvar pluginViewportRule = {\n  onCreateRule: function onCreateRule(key, style, options) {\n    return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null;\n  }\n};\n\nvar SimpleRule =\n/*#__PURE__*/\nfunction () {\n  function SimpleRule(key, value, options) {\n    this.type = 'simple';\n    this.key = void 0;\n    this.value = void 0;\n    this.options = void 0;\n    this.isProcessed = false;\n    this.renderable = void 0;\n    this.key = key;\n    this.value = value;\n    this.options = options;\n  }\n  /**\n   * Generates a CSS string.\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  var _proto = SimpleRule.prototype;\n\n  _proto.toString = function toString(options) {\n    if (Array.isArray(this.value)) {\n      var str = '';\n\n      for (var index = 0; index < this.value.length; index++) {\n        str += this.key + \" \" + this.value[index] + \";\";\n        if (this.value[index + 1]) str += '\\n';\n      }\n\n      return str;\n    }\n\n    return this.key + \" \" + this.value + \";\";\n  };\n\n  return SimpleRule;\n}();\nvar keysMap = {\n  '@charset': true,\n  '@import': true,\n  '@namespace': true\n};\nvar pluginSimpleRule = {\n  onCreateRule: function onCreateRule(key, value, options) {\n    return key in keysMap ? new SimpleRule(key, value, options) : null;\n  }\n};\n\nvar plugins = [pluginStyleRule, pluginConditionalRule, plugin, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];\n\nvar defaultUpdateOptions = {\n  process: true\n};\nvar forceUpdateOptions = {\n  force: true,\n  process: true\n  /**\n   * Contains rules objects and allows adding/removing etc.\n   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.\n   */\n\n};\n\nvar RuleList =\n/*#__PURE__*/\nfunction () {\n  // Rules registry for access by .get() method.\n  // It contains the same rule registered by name and by selector.\n  // Original styles object.\n  // Used to ensure correct rules order.\n  function RuleList(options) {\n    this.map = {};\n    this.raw = {};\n    this.index = [];\n    this.counter = 0;\n    this.options = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.options = options;\n    this.classes = options.classes;\n    this.keyframes = options.keyframes;\n  }\n  /**\n   * Create and register rule.\n   *\n   * Will not render after Style Sheet was rendered the first time.\n   */\n\n\n  var _proto = RuleList.prototype;\n\n  _proto.add = function add(name, decl, ruleOptions) {\n    var _this$options = this.options,\n        parent = _this$options.parent,\n        sheet = _this$options.sheet,\n        jss = _this$options.jss,\n        Renderer = _this$options.Renderer,\n        generateId = _this$options.generateId,\n        scoped = _this$options.scoped;\n\n    var options = _extends({\n      classes: this.classes,\n      parent: parent,\n      sheet: sheet,\n      jss: jss,\n      Renderer: Renderer,\n      generateId: generateId,\n      scoped: scoped,\n      name: name\n    }, ruleOptions); // When user uses .createStyleSheet(), duplicate names are not possible, but\n    // `sheet.addRule()` opens the door for any duplicate rule name. When this happens\n    // we need to make the key unique within this RuleList instance scope.\n\n\n    var key = name;\n\n    if (name in this.raw) {\n      key = name + \"-d\" + this.counter++;\n    } // We need to save the original decl before creating the rule\n    // because cache plugin needs to use it as a key to return a cached rule.\n\n\n    this.raw[key] = decl;\n\n    if (key in this.classes) {\n      // E.g. rules inside of @media container\n      options.selector = \".\" + escape(this.classes[key]);\n    }\n\n    var rule = createRule(key, decl, options);\n    if (!rule) return null;\n    this.register(rule);\n    var index = options.index === undefined ? this.index.length : options.index;\n    this.index.splice(index, 0, rule);\n    return rule;\n  }\n  /**\n   * Get a rule.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    return this.map[name];\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.remove = function remove(rule) {\n    this.unregister(rule);\n    delete this.raw[rule.key];\n    this.index.splice(this.index.indexOf(rule), 1);\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.index.indexOf(rule);\n  }\n  /**\n   * Run `onProcessRule()` plugins on every rule.\n   */\n  ;\n\n  _proto.process = function process() {\n    var plugins$$1 = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop\n    // we end up with very hard-to-track-down side effects.\n\n    this.index.slice(0).forEach(plugins$$1.onProcessRule, plugins$$1);\n  }\n  /**\n   * Register a rule in `.map`, `.classes` and `.keyframes` maps.\n   */\n  ;\n\n  _proto.register = function register(rule) {\n    this.map[rule.key] = rule;\n\n    if (rule instanceof StyleRule) {\n      this.map[rule.selector] = rule;\n      if (rule.id) this.classes[rule.key] = rule.id;\n    } else if (rule instanceof KeyframesRule && this.keyframes) {\n      this.keyframes[rule.name] = rule.id;\n    }\n  }\n  /**\n   * Unregister a rule.\n   */\n  ;\n\n  _proto.unregister = function unregister(rule) {\n    delete this.map[rule.key];\n\n    if (rule instanceof StyleRule) {\n      delete this.map[rule.selector];\n      delete this.classes[rule.key];\n    } else if (rule instanceof KeyframesRule) {\n      delete this.keyframes[rule.name];\n    }\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var name;\n    var data;\n    var options;\n\n    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n      name = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe\n\n      data = arguments.length <= 1 ? undefined : arguments[1]; // $FlowFixMe\n\n      options = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      data = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe\n\n      options = arguments.length <= 1 ? undefined : arguments[1];\n      name = null;\n    }\n\n    if (name) {\n      this.updateOne(this.map[name], data, options);\n    } else {\n      for (var index = 0; index < this.index.length; index++) {\n        this.updateOne(this.index[index], data, options);\n      }\n    }\n  }\n  /**\n   * Execute plugins, update rule props.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    if (options === void 0) {\n      options = defaultUpdateOptions;\n    }\n\n    var _this$options2 = this.options,\n        plugins$$1 = _this$options2.jss.plugins,\n        sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.\n\n    if (rule.rules instanceof RuleList) {\n      rule.rules.update(data, options);\n      return;\n    }\n\n    var styleRule = rule;\n    var style = styleRule.style;\n    plugins$$1.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.\n\n    if (options.process && style && style !== styleRule.style) {\n      // We need to run the plugins in case new `style` relies on syntax plugins.\n      plugins$$1.onProcessStyle(styleRule.style, styleRule, sheet); // Update and add props.\n\n      for (var prop in styleRule.style) {\n        var nextValue = styleRule.style[prop];\n        var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (nextValue !== prevValue) {\n          styleRule.prop(prop, nextValue, forceUpdateOptions);\n        }\n      } // Remove props.\n\n\n      for (var _prop in style) {\n        var _nextValue = styleRule.style[_prop];\n        var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.\n        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.\n\n        if (_nextValue == null && _nextValue !== _prevValue) {\n          styleRule.prop(_prop, null, forceUpdateOptions);\n        }\n      }\n    }\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    var str = '';\n    var sheet = this.options.sheet;\n    var link = sheet ? sheet.options.link : false;\n\n    for (var index = 0; index < this.index.length; index++) {\n      var rule = this.index[index];\n      var css = rule.toString(options); // No need to render an empty rule.\n\n      if (!css && !link) continue;\n      if (str) str += '\\n';\n      str += css;\n    }\n\n    return str;\n  };\n\n  return RuleList;\n}();\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(styles, options) {\n    this.options = void 0;\n    this.deployed = void 0;\n    this.attached = void 0;\n    this.rules = void 0;\n    this.renderer = void 0;\n    this.classes = void 0;\n    this.keyframes = void 0;\n    this.queue = void 0;\n    this.attached = false;\n    this.deployed = false;\n    this.classes = {};\n    this.keyframes = {};\n    this.options = _extends({}, options, {\n      sheet: this,\n      parent: this,\n      classes: this.classes,\n      keyframes: this.keyframes\n    });\n\n    if (options.Renderer) {\n      this.renderer = new options.Renderer(this);\n    }\n\n    this.rules = new RuleList(this.options);\n\n    for (var name in styles) {\n      this.rules.add(name, styles[name]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Attach renderable to the render tree.\n   */\n\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.attach = function attach() {\n    if (this.attached) return this;\n    if (this.renderer) this.renderer.attach();\n    this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.\n\n    if (!this.deployed) this.deploy();\n    return this;\n  }\n  /**\n   * Remove renderable from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    if (!this.attached) return this;\n    if (this.renderer) this.renderer.detach();\n    this.attached = false;\n    return this;\n  }\n  /**\n   * Add a rule to the current stylesheet.\n   * Will insert a rule also after the stylesheet has been rendered first time.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, decl, options) {\n    var queue = this.queue; // Plugins can create rules.\n    // In order to preserve the right order, we need to queue all `.addRule` calls,\n    // which happen after the first `rules.add()` call.\n\n    if (this.attached && !queue) this.queue = [];\n    var rule = this.rules.add(name, decl, options);\n    if (!rule) return null;\n    this.options.jss.plugins.onProcessRule(rule);\n\n    if (this.attached) {\n      if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.\n      // It will be inserted all together when .attach is called.\n\n      if (queue) queue.push(rule);else {\n        this.insertRule(rule);\n\n        if (this.queue) {\n          this.queue.forEach(this.insertRule, this);\n          this.queue = undefined;\n        }\n      }\n      return rule;\n    } // We can't add rules to a detached style node.\n    // We will redeploy the sheet once user will attach it.\n\n\n    this.deployed = false;\n    return rule;\n  }\n  /**\n   * Insert rule into the StyleSheet\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule) {\n    if (this.renderer) {\n      this.renderer.insertRule(rule);\n    }\n  }\n  /**\n   * Create and add rules.\n   * Will render also after Style Sheet was rendered the first time.\n   */\n  ;\n\n  _proto.addRules = function addRules(styles, options) {\n    var added = [];\n\n    for (var name in styles) {\n      var rule = this.addRule(name, styles[name], options);\n      if (rule) added.push(rule);\n    }\n\n    return added;\n  }\n  /**\n   * Get a rule by name.\n   */\n  ;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Delete a rule by name.\n   * Returns `true`: if rule has been deleted from the DOM.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(name) {\n    var rule = typeof name === 'object' ? name : this.rules.get(name);\n    if (!rule) return false;\n    this.rules.remove(rule);\n\n    if (this.attached && rule.renderable && this.renderer) {\n      return this.renderer.deleteRule(rule.renderable);\n    }\n\n    return true;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Deploy pure CSS string to a renderable.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    if (this.renderer) this.renderer.deploy();\n    this.deployed = true;\n    return this;\n  }\n  /**\n   * Update the function values with a new data.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this$rules;\n\n    (_this$rules = this.rules).update.apply(_this$rules, arguments);\n\n    return this;\n  }\n  /**\n   * Updates a single rule.\n   */\n  ;\n\n  _proto.updateOne = function updateOne(rule, data, options) {\n    this.rules.updateOne(rule, data, options);\n    return this;\n  }\n  /**\n   * Convert rules to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    return this.rules.toString(options);\n  };\n\n  return StyleSheet;\n}();\n\nvar PluginsRegistry =\n/*#__PURE__*/\nfunction () {\n  function PluginsRegistry() {\n    this.plugins = {\n      internal: [],\n      external: []\n    };\n    this.registry = void 0;\n  }\n\n  var _proto = PluginsRegistry.prototype;\n\n  /**\n   * Call `onCreateRule` hooks and return an object if returned by a hook.\n   */\n  _proto.onCreateRule = function onCreateRule(name, decl, options) {\n    for (var i = 0; i < this.registry.onCreateRule.length; i++) {\n      var rule = this.registry.onCreateRule[i](name, decl, options);\n      if (rule) return rule;\n    }\n\n    return null;\n  }\n  /**\n   * Call `onProcessRule` hooks.\n   */\n  ;\n\n  _proto.onProcessRule = function onProcessRule(rule) {\n    if (rule.isProcessed) return;\n    var sheet = rule.options.sheet;\n\n    for (var i = 0; i < this.registry.onProcessRule.length; i++) {\n      this.registry.onProcessRule[i](rule, sheet);\n    }\n\n    if (rule.style) this.onProcessStyle(rule.style, rule, sheet);\n    rule.isProcessed = true;\n  }\n  /**\n   * Call `onProcessStyle` hooks.\n   */\n  ;\n\n  _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {\n    for (var i = 0; i < this.registry.onProcessStyle.length; i++) {\n      // $FlowFixMe\n      rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);\n    }\n  }\n  /**\n   * Call `onProcessSheet` hooks.\n   */\n  ;\n\n  _proto.onProcessSheet = function onProcessSheet(sheet) {\n    for (var i = 0; i < this.registry.onProcessSheet.length; i++) {\n      this.registry.onProcessSheet[i](sheet);\n    }\n  }\n  /**\n   * Call `onUpdate` hooks.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(data, rule, sheet, options) {\n    for (var i = 0; i < this.registry.onUpdate.length; i++) {\n      this.registry.onUpdate[i](data, rule, sheet, options);\n    }\n  }\n  /**\n   * Call `onChangeValue` hooks.\n   */\n  ;\n\n  _proto.onChangeValue = function onChangeValue(value, prop, rule) {\n    var processedValue = value;\n\n    for (var i = 0; i < this.registry.onChangeValue.length; i++) {\n      processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);\n    }\n\n    return processedValue;\n  }\n  /**\n   * Register a plugin.\n   */\n  ;\n\n  _proto.use = function use(newPlugin, options) {\n    if (options === void 0) {\n      options = {\n        queue: 'external'\n      };\n    }\n\n    var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.\n\n    if (plugins.indexOf(newPlugin) !== -1) {\n      return;\n    }\n\n    plugins.push(newPlugin);\n    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) {\n      for (var name in plugin) {\n        if (name in registry) {\n          registry[name].push(plugin[name]);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Unknown hook \\\"\" + name + \"\\\".\") : void 0;\n        }\n      }\n\n      return registry;\n    }, {\n      onCreateRule: [],\n      onProcessRule: [],\n      onProcessStyle: [],\n      onProcessSheet: [],\n      onChangeValue: [],\n      onUpdate: []\n    });\n  };\n\n  return PluginsRegistry;\n}();\n\n/**\n * Sheets registry to access them all at one place.\n */\nvar SheetsRegistry =\n/*#__PURE__*/\nfunction () {\n  function SheetsRegistry() {\n    this.registry = [];\n  }\n\n  var _proto = SheetsRegistry.prototype;\n\n  /**\n   * Register a Style Sheet.\n   */\n  _proto.add = function add(sheet) {\n    var registry = this.registry;\n    var index = sheet.options.index;\n    if (registry.indexOf(sheet) !== -1) return;\n\n    if (registry.length === 0 || index >= this.index) {\n      registry.push(sheet);\n      return;\n    } // Find a position.\n\n\n    for (var i = 0; i < registry.length; i++) {\n      if (registry[i].options.index > index) {\n        registry.splice(i, 0, sheet);\n        return;\n      }\n    }\n  }\n  /**\n   * Reset the registry.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.registry = [];\n  }\n  /**\n   * Remove a Style Sheet.\n   */\n  ;\n\n  _proto.remove = function remove(sheet) {\n    var index = this.registry.indexOf(sheet);\n    this.registry.splice(index, 1);\n  }\n  /**\n   * Convert all attached sheets to a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        attached = _ref.attached,\n        options = _objectWithoutPropertiesLoose(_ref, [\"attached\"]);\n\n    var css = '';\n\n    for (var i = 0; i < this.registry.length; i++) {\n      var sheet = this.registry[i];\n\n      if (attached != null && sheet.attached !== attached) {\n        continue;\n      }\n\n      if (css) css += '\\n';\n      css += sheet.toString(options);\n    }\n\n    return css;\n  };\n\n  _createClass(SheetsRegistry, [{\n    key: \"index\",\n\n    /**\n     * Current highest index number.\n     */\n    get: function get() {\n      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;\n    }\n  }]);\n\n  return SheetsRegistry;\n}();\n\n/**\n * This is a global sheets registry. Only DomRenderer will add sheets to it.\n * On the server one should use an own SheetsRegistry instance and add the\n * sheets to it, because you need to make sure to create a new registry for\n * each request in order to not leak sheets across requests.\n */\n\nvar sheets = new SheetsRegistry();\n\n/* eslint-disable */\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar globalThis = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\nvar ns = '2f1acc6c3a606b082e5eef5e54414ffb';\nif (globalThis[ns] == null) globalThis[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify\n// the current version with just one short number and use it for classes generation\n// we use a counter. Also it is more accurate, because user can manually reevaluate\n// the module.\n\nvar moduleId = globalThis[ns]++;\n\nvar maxRules = 1e10;\n\n/**\n * Returns a function which generates unique class names based on counters.\n * When new generator function is created, rule counter is reseted.\n * We need to reset the rule counter for SSR for each request.\n */\nvar createGenerateId = function createGenerateId(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ruleCounter = 0;\n  return function (rule, sheet) {\n    ruleCounter += 1;\n\n    if (ruleCounter > maxRules) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] You might have a memory leak. Rule counter is at \" + ruleCounter + \".\") : void 0;\n    }\n\n    var jssId = '';\n    var prefix = '';\n\n    if (sheet) {\n      if (sheet.options.classNamePrefix) {\n        prefix = sheet.options.classNamePrefix;\n      }\n\n      if (sheet.options.jss.id != null) {\n        jssId = String(sheet.options.jss.id);\n      }\n    }\n\n    if (options.minify) {\n      // Using \"c\" because a number can't be the first char in a class name.\n      return \"\" + (prefix || 'c') + moduleId + jssId + ruleCounter;\n    }\n\n    return prefix + rule.key + \"-\" + moduleId + (jssId ? \"-\" + jssId : '') + \"-\" + ruleCounter;\n  };\n};\n\n/**\n * Cache the value from the first time a function is called.\n */\nvar memoize = function memoize(fn) {\n  var value;\n  return function () {\n    if (!value) value = fn();\n    return value;\n  };\n};\n/**\n * Get a style property value.\n */\n\n\nfunction getPropertyValue(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      return cssRule.attributeStyleMap.get(prop);\n    }\n\n    return cssRule.style.getPropertyValue(prop);\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return '';\n  }\n}\n/**\n * Set a style property.\n */\n\n\nfunction setProperty(cssRule, prop, value) {\n  try {\n    var cssValue = value;\n\n    if (Array.isArray(value)) {\n      cssValue = toCssValue(value, true);\n\n      if (value[value.length - 1] === '!important') {\n        cssRule.style.setProperty(prop, cssValue, 'important');\n        return true;\n      }\n    } // Support CSSTOM.\n\n\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.set(prop, cssValue);\n    } else {\n      cssRule.style.setProperty(prop, cssValue);\n    }\n  } catch (err) {\n    // IE may throw if property is unknown.\n    return false;\n  }\n\n  return true;\n}\n/**\n * Remove a style property.\n */\n\n\nfunction removeProperty(cssRule, prop) {\n  try {\n    // Support CSSTOM.\n    if (cssRule.attributeStyleMap) {\n      cssRule.attributeStyleMap.delete(prop);\n    } else {\n      cssRule.style.removeProperty(prop);\n    }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] DOMException \\\"\" + err.message + \"\\\" was thrown. Tried to remove property \\\"\" + prop + \"\\\".\") : void 0;\n  }\n}\n/**\n * Set the selector.\n */\n\n\nfunction setSelector(cssRule, selectorText) {\n  cssRule.selectorText = selectorText; // Return false if setter was not successful.\n  // Currently works in chrome only.\n\n  return cssRule.selectorText === selectorText;\n}\n/**\n * Gets the `head` element upon the first call and caches it.\n * We assume it can't be null.\n */\n\n\nvar getHead = memoize(function () {\n  return document.querySelector('head');\n});\n/**\n * Find attached sheet with an index higher than the passed one.\n */\n\nfunction findHigherSheet(registry, options) {\n  for (var i = 0; i < registry.length; i++) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find attached sheet with the highest index.\n */\n\n\nfunction findHighestSheet(registry, options) {\n  for (var i = registry.length - 1; i >= 0; i--) {\n    var sheet = registry[i];\n\n    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {\n      return sheet;\n    }\n  }\n\n  return null;\n}\n/**\n * Find a comment with \"jss\" inside.\n */\n\n\nfunction findCommentNode(text) {\n  var head = getHead();\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && node.nodeValue.trim() === text) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Find a node before which we can insert the sheet.\n */\nfunction findPrevNode(options) {\n  var registry = sheets.registry;\n\n  if (registry.length > 0) {\n    // Try to insert before the next higher sheet.\n    var sheet = findHigherSheet(registry, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element\n      };\n    } // Otherwise insert after the last attached.\n\n\n    sheet = findHighestSheet(registry, options);\n\n    if (sheet && sheet.renderer) {\n      return {\n        parent: sheet.renderer.element.parentNode,\n        node: sheet.renderer.element.nextSibling\n      };\n    }\n  } // Try to find a comment placeholder if registry is empty.\n\n\n  var insertionPoint = options.insertionPoint;\n\n  if (insertionPoint && typeof insertionPoint === 'string') {\n    var comment = findCommentNode(insertionPoint);\n\n    if (comment) {\n      return {\n        parent: comment.parentNode,\n        node: comment.nextSibling\n      };\n    } // If user specifies an insertion point and it can't be found in the document -\n    // bad specificity issues may appear.\n\n\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Insertion point \\\"\" + insertionPoint + \"\\\" not found.\") : void 0;\n  }\n\n  return false;\n}\n/**\n * Insert style element into the DOM.\n */\n\n\nfunction insertStyle(style, options) {\n  var insertionPoint = options.insertionPoint;\n  var nextNode = findPrevNode(options);\n\n  if (nextNode !== false && nextNode.parent) {\n    nextNode.parent.insertBefore(style, nextNode.node);\n    return;\n  } // Works with iframes and any node types.\n\n\n  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {\n    // https://stackoverflow.com/questions/41328728/force-casting-in-flow\n    var insertionPointElement = insertionPoint;\n    var parentNode = insertionPointElement.parentNode;\n    if (parentNode) parentNode.insertBefore(style, insertionPointElement.nextSibling);else process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Insertion point is not in the DOM.') : void 0;\n    return;\n  }\n\n  getHead().appendChild(style);\n}\n/**\n * Read jss nonce setting from the page if the user has set it.\n */\n\n\nvar getNonce = memoize(function () {\n  var node = document.querySelector('meta[property=\"csp-nonce\"]');\n  return node ? node.getAttribute('content') : null;\n});\n\nvar _insertRule = function insertRule(container, rule, index) {\n  var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong\n\n  if (index === undefined || index > maxIndex) {\n    // eslint-disable-next-line no-param-reassign\n    index = maxIndex;\n  }\n\n  try {\n    if ('insertRule' in container) {\n      var c = container;\n      c.insertRule(rule, index);\n    } // Keyframes rule.\n    else if ('appendRule' in container) {\n        var _c = container;\n\n        _c.appendRule(rule);\n      }\n  } catch (err) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] \" + err.message) : void 0;\n    return false;\n  }\n\n  return container.cssRules[index];\n};\n\nvar createStyle = function createStyle() {\n  var el = document.createElement('style'); // Without it, IE will have a broken source order specificity if we\n  // insert rules after we insert the style tag.\n  // It seems to kick-off the source order specificity algorithm.\n\n  el.textContent = '\\n';\n  return el;\n};\n\nvar DomRenderer =\n/*#__PURE__*/\nfunction () {\n  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696\n  function DomRenderer(sheet) {\n    this.getPropertyValue = getPropertyValue;\n    this.setProperty = setProperty;\n    this.removeProperty = removeProperty;\n    this.setSelector = setSelector;\n    this.element = void 0;\n    this.sheet = void 0;\n    this.hasInsertedRules = false;\n    // There is no sheet when the renderer is used from a standalone StyleRule.\n    if (sheet) sheets.add(sheet);\n    this.sheet = sheet;\n\n    var _ref = this.sheet ? this.sheet.options : {},\n        media = _ref.media,\n        meta = _ref.meta,\n        element = _ref.element;\n\n    this.element = element || createStyle();\n    this.element.setAttribute('data-jss', '');\n    if (media) this.element.setAttribute('media', media);\n    if (meta) this.element.setAttribute('data-meta', meta);\n    var nonce = getNonce();\n    if (nonce) this.element.setAttribute('nonce', nonce);\n  }\n  /**\n   * Insert style element into render tree.\n   */\n\n\n  var _proto = DomRenderer.prototype;\n\n  _proto.attach = function attach() {\n    // In the case the element node is external and it is already in the DOM.\n    if (this.element.parentNode || !this.sheet) return;\n    insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`\n    // most browsers create a new CSSStyleSheet, except of all IEs.\n\n    var deployed = Boolean(this.sheet && this.sheet.deployed);\n\n    if (this.hasInsertedRules && deployed) {\n      this.hasInsertedRules = false;\n      this.deploy();\n    }\n  }\n  /**\n   * Remove style element from render tree.\n   */\n  ;\n\n  _proto.detach = function detach() {\n    var parentNode = this.element.parentNode;\n    if (parentNode) parentNode.removeChild(this.element);\n  }\n  /**\n   * Inject CSS string into element.\n   */\n  ;\n\n  _proto.deploy = function deploy() {\n    var sheet = this.sheet;\n    if (!sheet) return;\n\n    if (sheet.options.link) {\n      this.insertRules(sheet.rules);\n      return;\n    }\n\n    this.element.textContent = \"\\n\" + sheet.toString() + \"\\n\";\n  }\n  /**\n   * Insert RuleList into an element.\n   */\n  ;\n\n  _proto.insertRules = function insertRules(rules, nativeParent) {\n    for (var i = 0; i < rules.index.length; i++) {\n      this.insertRule(rules.index[i], i, nativeParent);\n    }\n  }\n  /**\n   * Insert a rule into element.\n   */\n  ;\n\n  _proto.insertRule = function insertRule(rule, index, nativeParent) {\n    if (nativeParent === void 0) {\n      nativeParent = this.element.sheet;\n    }\n\n    if (rule.rules) {\n      var parent = rule;\n      var latestNativeParent = nativeParent;\n\n      if (rule.type === 'conditional' || rule.type === 'keyframes') {\n        // We need to render the container without children first.\n        latestNativeParent = _insertRule(nativeParent, parent.toString({\n          children: false\n        }), index);\n\n        if (latestNativeParent === false) {\n          return false;\n        }\n      }\n\n      this.insertRules(parent.rules, latestNativeParent);\n      return latestNativeParent;\n    } // IE keeps the CSSStyleSheet after style node has been reattached,\n    // so we need to check if the `renderable` reference the right style sheet and not\n    // rerender those rules.\n\n\n    if (rule.renderable && rule.renderable.parentStyleSheet === this.element.sheet) {\n      return rule.renderable;\n    }\n\n    var ruleStr = rule.toString();\n    if (!ruleStr) return false;\n\n    var nativeRule = _insertRule(nativeParent, ruleStr, index);\n\n    if (nativeRule === false) {\n      return false;\n    }\n\n    this.hasInsertedRules = true;\n    rule.renderable = nativeRule;\n    return nativeRule;\n  }\n  /**\n   * Delete a rule.\n   */\n  ;\n\n  _proto.deleteRule = function deleteRule(cssRule) {\n    var sheet = this.element.sheet;\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    sheet.deleteRule(index);\n    return true;\n  }\n  /**\n   * Get index of a CSS Rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(cssRule) {\n    var cssRules = this.element.sheet.cssRules;\n\n    for (var index = 0; index < cssRules.length; index++) {\n      if (cssRule === cssRules[index]) return index;\n    }\n\n    return -1;\n  }\n  /**\n   * Generate a new CSS rule and replace the existing one.\n   *\n   * Only used for some old browsers because they can't set a selector.\n   */\n  ;\n\n  _proto.replaceRule = function replaceRule(cssRule, rule) {\n    var index = this.indexOf(cssRule);\n    if (index === -1) return false;\n    this.element.sheet.deleteRule(index);\n    return this.insertRule(rule, index);\n  }\n  /**\n   * Get all rules elements.\n   */\n  ;\n\n  _proto.getRules = function getRules() {\n    return this.element.sheet.cssRules;\n  };\n\n  return DomRenderer;\n}();\n\nvar instanceCounter = 0;\n\nvar Jss =\n/*#__PURE__*/\nfunction () {\n  function Jss(options) {\n    this.id = instanceCounter++;\n    this.version = \"10.0.3\";\n    this.plugins = new PluginsRegistry();\n    this.options = {\n      id: {\n        minify: false\n      },\n      createGenerateId: createGenerateId,\n      Renderer: isInBrowser ? DomRenderer : null,\n      plugins: []\n    };\n    this.generateId = createGenerateId({\n      minify: false\n    });\n\n    for (var i = 0; i < plugins.length; i++) {\n      this.plugins.use(plugins[i], {\n        queue: 'internal'\n      });\n    }\n\n    this.setup(options);\n  }\n  /**\n   * Prepares various options, applies plugins.\n   * Should not be used twice on the same instance, because there is no plugins\n   * deduplication logic.\n   */\n\n\n  var _proto = Jss.prototype;\n\n  _proto.setup = function setup(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.createGenerateId) {\n      this.options.createGenerateId = options.createGenerateId;\n    }\n\n    if (options.id) {\n      this.options.id = _extends({}, this.options.id, options.id);\n    }\n\n    if (options.createGenerateId || options.id) {\n      this.generateId = this.options.createGenerateId(this.options.id);\n    }\n\n    if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;\n\n    if ('Renderer' in options) {\n      this.options.Renderer = options.Renderer;\n    } // eslint-disable-next-line prefer-spread\n\n\n    if (options.plugins) this.use.apply(this, options.plugins);\n    return this;\n  }\n  /**\n   * Create a Style Sheet.\n   */\n  ;\n\n  _proto.createStyleSheet = function createStyleSheet(styles, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        index = _options.index;\n\n    if (typeof index !== 'number') {\n      index = sheets.index === 0 ? 0 : sheets.index + 1;\n    }\n\n    var sheet = new StyleSheet(styles, _extends({}, options, {\n      jss: this,\n      generateId: options.generateId || this.generateId,\n      insertionPoint: this.options.insertionPoint,\n      Renderer: this.options.Renderer,\n      index: index\n    }));\n    this.plugins.onProcessSheet(sheet);\n    return sheet;\n  }\n  /**\n   * Detach the Style Sheet and remove it from the registry.\n   */\n  ;\n\n  _proto.removeStyleSheet = function removeStyleSheet(sheet) {\n    sheet.detach();\n    sheets.remove(sheet);\n    return this;\n  }\n  /**\n   * Create a rule without a Style Sheet.\n   * [Deprecated] will be removed in the next major version.\n   */\n  ;\n\n  _proto.createRule = function createRule$$1(name, style, options) {\n    if (style === void 0) {\n      style = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // Enable rule without name for inline styles.\n    if (typeof name === 'object') {\n      return this.createRule(undefined, name, style);\n    }\n\n    var ruleOptions = _extends({}, options, {\n      name: name,\n      jss: this,\n      Renderer: this.options.Renderer\n    });\n\n    if (!ruleOptions.generateId) ruleOptions.generateId = this.generateId;\n    if (!ruleOptions.classes) ruleOptions.classes = {};\n    if (!ruleOptions.keyframes) ruleOptions.keyframes = {};\n\n    var rule = createRule(name, style, ruleOptions);\n\n    if (rule) this.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Register plugin. Passed function will be invoked with a rule instance.\n   */\n  ;\n\n  _proto.use = function use() {\n    var _this = this;\n\n    for (var _len = arguments.length, plugins$$1 = new Array(_len), _key = 0; _key < _len; _key++) {\n      plugins$$1[_key] = arguments[_key];\n    }\n\n    plugins$$1.forEach(function (plugin) {\n      _this.plugins.use(plugin);\n    });\n    return this;\n  };\n\n  return Jss;\n}();\n\n/**\n * Extracts a styles object with only props that contain function values.\n */\nfunction getDynamicStyles(styles) {\n  var to = null;\n\n  for (var key in styles) {\n    var value = styles[key];\n    var type = typeof value;\n\n    if (type === 'function') {\n      if (!to) to = {};\n      to[key] = value;\n    } else if (type === 'object' && value !== null && !Array.isArray(value)) {\n      var extracted = getDynamicStyles(value);\n\n      if (extracted) {\n        if (!to) to = {};\n        to[key] = extracted;\n      }\n    }\n  }\n\n  return to;\n}\n\n/**\n * SheetsManager is like a WeakMap which is designed to count StyleSheet\n * instances and attach/detach automatically.\n */\nvar SheetsManager =\n/*#__PURE__*/\nfunction () {\n  function SheetsManager() {\n    this.length = 0;\n    this.sheets = new WeakMap();\n  }\n\n  var _proto = SheetsManager.prototype;\n\n  _proto.get = function get(key) {\n    var entry = this.sheets.get(key);\n    return entry && entry.sheet;\n  };\n\n  _proto.add = function add(key, sheet) {\n    if (this.sheets.has(key)) return;\n    this.length++;\n    this.sheets.set(key, {\n      sheet: sheet,\n      refs: 0\n    });\n  };\n\n  _proto.manage = function manage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs === 0) {\n        entry.sheet.attach();\n      }\n\n      entry.refs++;\n      return entry.sheet;\n    }\n\n    warning(false, \"[JSS] SheetsManager: can't find sheet to manage\");\n    return undefined;\n  };\n\n  _proto.unmanage = function unmanage(key) {\n    var entry = this.sheets.get(key);\n\n    if (entry) {\n      if (entry.refs > 0) {\n        entry.refs--;\n        if (entry.refs === 0) entry.sheet.detach();\n      }\n    } else {\n      warning(false, \"SheetsManager: can't find sheet to unmanage\");\n    }\n  };\n\n  _createClass(SheetsManager, [{\n    key: \"size\",\n    get: function get() {\n      return this.length;\n    }\n  }]);\n\n  return SheetsManager;\n}();\n\n/**\n * A better abstraction over CSS.\n *\n * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present\n * @website https://github.com/cssinjs/jss\n * @license MIT\n */\n\n/**\n * Export a constant indicating if this browser has CSSTOM support.\n * https://developers.google.com/web/updates/2018/03/cssom\n */\nvar hasCSSTOMSupport = typeof CSS !== 'undefined' && CSS && 'number' in CSS;\n/**\n * Creates a new instance of Jss.\n */\n\nvar create = function create(options) {\n  return new Jss(options);\n};\n/**\n * A global Jss instance.\n */\n\nvar index = create();\n\nexport default index;\nexport { hasCSSTOMSupport, create, getDynamicStyles, toCssValue, createRule, SheetsRegistry, SheetsManager, RuleList, sheets, createGenerateId };\n","import { createRule } from 'jss';\n\nvar now = Date.now();\nvar fnValuesNs = \"fnValues\" + now;\nvar fnRuleNs = \"fnStyle\" + ++now;\nfunction functionPlugin() {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (typeof decl !== 'function') return null;\n      var rule = createRule(name, {}, options);\n      rule[fnRuleNs] = decl;\n      return rule;\n    },\n    onProcessStyle: function onProcessStyle(style, rule) {\n      // We need to extract function values from the declaration, so that we can keep core unaware of them.\n      // We need to do that only once.\n      // We don't need to extract functions on each style update, since this can happen only once.\n      // We don't support function values inside of function rules.\n      if (fnValuesNs in rule || fnRuleNs in rule) return style;\n      var fnValues = {};\n\n      for (var prop in style) {\n        var value = style[prop];\n        if (typeof value !== 'function') continue;\n        delete style[prop];\n        fnValues[prop] = value;\n      } // $FlowFixMe\n\n\n      rule[fnValuesNs] = fnValues;\n      return style;\n    },\n    onUpdate: function onUpdate(data, rule, sheet, options) {\n      var styleRule = rule;\n      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object\n      // will be returned from that function.\n\n      if (fnRule) {\n        // Empty object will remove all currently defined props\n        // in case function rule returns a falsy value.\n        styleRule.style = fnRule(data) || {};\n      }\n\n      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.\n\n      if (fnValues) {\n        for (var prop in fnValues) {\n          styleRule.prop(prop, fnValues[prop](data), options);\n        }\n      }\n    }\n  };\n}\n\nexport default functionPlugin;\n","import $$observable from 'symbol-observable';\nimport { createRule } from 'jss';\n\nvar isObservable = function isObservable(value) {\n  return value && value[$$observable] && value === value[$$observable]();\n};\n\nfunction observablePlugin(updateOptions) {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (!isObservable(decl)) return null; // Cast `decl` to `Observable`, since it passed the type guard.\n\n      var style$ = decl;\n      var rule = createRule(name, {}, options); // TODO\n      // Call `stream.subscribe()` returns a subscription, which should be explicitly\n      // unsubscribed from when we know this sheet is no longer needed.\n\n      style$.subscribe(function (style) {\n        for (var prop in style) {\n          rule.prop(prop, style[prop], updateOptions);\n        }\n      });\n      return rule;\n    },\n    onProcessRule: function onProcessRule(rule) {\n      if (rule && rule.type !== 'style') return;\n      var styleRule = rule;\n      var style = styleRule.style;\n\n      var _loop = function _loop(prop) {\n        var value = style[prop];\n        if (!isObservable(value)) return \"continue\";\n        delete style[prop];\n        value.subscribe({\n          next: function next(nextValue) {\n            styleRule.prop(prop, nextValue, updateOptions);\n          }\n        });\n      };\n\n      for (var prop in style) {\n        var _ret = _loop(prop);\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n  };\n}\n\nexport default observablePlugin;\n","import warning from 'tiny-warning';\n\nvar semiWithNl = /;\\n/;\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\n\nvar parse = (function (cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n\n    if (colonIndex === -1) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Malformed CSS string \\\"\" + decl + \"\\\"\") : void 0;\n      continue;\n    }\n\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n\n  return style;\n});\n\nvar onProcessRule = function onProcessRule(rule) {\n  if (typeof rule.style === 'string') {\n    // $FlowFixMe: We can safely assume that rule has the style property\n    rule.style = parse(rule.style);\n  }\n};\n\nfunction templatePlugin() {\n  return {\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default templatePlugin;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.rules = void 0;\n    this.options = void 0;\n    this.key = void 0;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.rules.toString();\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.options = void 0;\n    this.rule = void 0;\n    this.isProcessed = false;\n    this.key = void 0;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    options.sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    options.sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule) {\n    if (rule.type !== 'style') return;\n    handleNestedGlobalContainerRule(rule);\n    handlePrefixedGlobalRule(rule);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n","import warning from 'tiny-warning';\n\n/* eslint-disable no-use-before-define */\n\nvar isObject = function isObject(obj) {\n  return obj && typeof obj === 'object' && !Array.isArray(obj);\n};\n\nvar valueNs = \"extendCurrValue\" + Date.now();\n\nfunction mergeExtend(style, rule, sheet, newStyle) {\n  var extendType = typeof style.extend; // Extend using a rule name.\n\n  if (extendType === 'string') {\n    if (!sheet) return;\n    var refRule = sheet.getRule(style.extend);\n    if (!refRule) return;\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] A rule tries to extend itself \\n\" + rule.toString()) : void 0;\n      return;\n    }\n\n    var parent = refRule.options.parent;\n\n    if (parent) {\n      var originalStyle = parent.rules.raw[style.extend];\n      extend(originalStyle, rule, sheet, newStyle);\n    }\n\n    return;\n  } // Extend using an array of objects.\n\n\n  if (Array.isArray(style.extend)) {\n    for (var index = 0; index < style.extend.length; index++) {\n      extend(style.extend[index], rule, sheet, newStyle);\n    }\n\n    return;\n  } // Extend is a style object.\n\n\n  for (var prop in style.extend) {\n    if (prop === 'extend') {\n      extend(style.extend.extend, rule, sheet, newStyle);\n      continue;\n    }\n\n    if (isObject(style.extend[prop])) {\n      if (!(prop in newStyle)) newStyle[prop] = {};\n      extend(style.extend[prop], rule, sheet, newStyle[prop]);\n      continue;\n    }\n\n    newStyle[prop] = style.extend[prop];\n  }\n}\n\nfunction mergeRest(style, rule, sheet, newStyle) {\n  // Copy base style.\n  for (var prop in style) {\n    if (prop === 'extend') continue;\n\n    if (isObject(newStyle[prop]) && isObject(style[prop])) {\n      extend(style[prop], rule, sheet, newStyle[prop]);\n      continue;\n    }\n\n    if (isObject(style[prop])) {\n      newStyle[prop] = extend(style[prop], rule, sheet);\n      continue;\n    }\n\n    newStyle[prop] = style[prop];\n  }\n}\n/**\n * Recursively extend styles.\n */\n\n\nfunction extend(style, rule, sheet, newStyle) {\n  if (newStyle === void 0) {\n    newStyle = {};\n  }\n\n  mergeExtend(style, rule, sheet, newStyle);\n  mergeRest(style, rule, sheet, newStyle);\n  return newStyle;\n}\n/**\n * Handle `extend` property.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssExtend() {\n  function onProcessStyle(style, rule, sheet) {\n    if ('extend' in style) return extend(style, rule, sheet);\n    return style;\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop !== 'extend') return value; // Value is empty, remove properties set previously.\n\n    if (value == null || value === false) {\n      // $FlowFixMe: Flow complains because there is no indexer property in StyleRule\n      for (var key in rule[valueNs]) {\n        rule.prop(key, null);\n      } // $FlowFixMe: Flow complains because there is no indexer property in StyleRule\n\n\n      rule[valueNs] = null;\n      return null;\n    }\n\n    if (typeof value === 'object') {\n      // $FlowFixMe: This will be an object\n      for (var _key in value) {\n        rule.prop(_key, value[_key]);\n      } // $FlowFixMe: Flow complains because there is no indexer property in StyleRule\n\n\n      rule[valueNs] = value;\n    } // Make sure we don't set the value in the core.\n\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssExtend;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\n\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\nfunction jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container, sheet) {\n    return function (match, key) {\n      var rule = container.getRule(key) || sheet && sheet.getRule(key);\n\n      if (rule) {\n        rule = rule;\n        return rule.selector;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Could not find the referenced rule \\\"\" + key + \"\\\" in \\\"\" + (container.options.meta || container.toString()) + \"\\\".\") : void 0;\n      return key;\n    };\n  }\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    var parentSelectors = parentProp.split(separatorRegExp);\n    var nestedSelectors = nestedProp.split(separatorRegExp);\n    var result = '';\n\n    for (var i = 0; i < parentSelectors.length; i++) {\n      var parent = parentSelectors[i];\n\n      for (var j = 0; j < nestedSelectors.length; j++) {\n        var nested = nestedSelectors[j];\n        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.\n\n        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n      }\n    }\n\n    return result;\n  }\n\n  function getOptions(rule, container, prevOptions) {\n    // Options has been already created, now we only increase index.\n    if (prevOptions) return _extends({}, prevOptions, {\n      index: prevOptions.index + 1\n    });\n    var nestingLevel = rule.options.nestingLevel;\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\n    var options = _extends({}, rule.options, {\n      nestingLevel: nestingLevel,\n      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n\n    });\n\n    delete options.name;\n    return options;\n  }\n\n  function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style') return style;\n    var styleRule = rule;\n    var container = styleRule.options.parent;\n    var options;\n    var replaceRef;\n\n    for (var prop in style) {\n      var isNested = prop.indexOf('&') !== -1;\n      var isNestedConditional = prop[0] === '@';\n      if (!isNested && !isNestedConditional) continue;\n      options = getOptions(styleRule, container, options);\n\n      if (isNested) {\n        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n\n        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n\n        selector = selector.replace(refRegExp, replaceRef);\n        container.addRule(selector, style[prop], _extends({}, options, {\n          selector: selector\n        }));\n      } else if (isNestedConditional) {\n        // Place conditional right after the parent rule to ensure right ordering.\n        container.addRule(prop, {}, options) // Flow expects more options but they aren't required\n        // And flow doesn't know this will always be a StyleRule which has the addRule method\n        // $FlowFixMe\n        .addRule(styleRule.key, style[prop], {\n          selector: styleRule.selector\n        });\n      }\n\n      delete style[prop];\n    }\n\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssNested;\n","import warning from 'tiny-warning';\n\n/**\n * Set selector.\n *\n * @param {Object} original rule\n * @param {String} className class string\n * @return {Boolean} flag, indicating function was successfull or not\n */\nfunction registerClass(rule, className) {\n  // Skip falsy values\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\n\n  if (Array.isArray(className)) {\n    for (var index = 0; index < className.length; index++) {\n      var isSetted = registerClass(rule, className[index]);\n      if (!isSetted) return false;\n    }\n\n    return true;\n  } // Support space separated class names `{composes: 'foo bar'}`\n\n\n  if (className.indexOf(' ') > -1) {\n    return registerClass(rule, className.split(' '));\n  }\n\n  var _ref = rule.options,\n      parent = _ref.parent; // It is a ref to a local rule.\n\n  if (className[0] === '$') {\n    var refRule = parent.getRule(className.substr(1));\n\n    if (!refRule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\n    return true;\n  }\n\n  parent.classes[rule.key] += \" \" + className;\n  return true;\n}\n/**\n * Convert compose property to additional class, remove property from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssCompose() {\n  function onProcessStyle(style, rule) {\n    if (!('composes' in style)) return style;\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\n\n    delete style.composes;\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssCompose;\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","import hyphenate from 'hyphenate-style-name';\n\n/**\n * Convert camel cased property names to dash separated.\n *\n * @param {Object} style\n * @return {Object}\n */\n\nfunction convertCase(style) {\n  var converted = {};\n\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n *\n * @param {Rule} rule\n */\n\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n\n      return style;\n    }\n\n    return convertCase(style);\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default camelCase;\n","import { hasCSSTOMSupport } from 'jss';\n\nvar px = hasCSSTOMSupport && CSS ? CSS.px : 'px';\nvar ms = hasCSSTOMSupport && CSS ? CSS.ms : 'ms';\nvar percent = hasCSSTOMSupport && CSS ? CSS.percent : '%';\n/**\n * Generated jss-plugin-default-unit CSS property units\n *\n * @type object\n */\n\nvar defaultUnits = {\n  // Animation properties\n  'animation-delay': ms,\n  'animation-duration': ms,\n  // Background properties\n  'background-position': px,\n  'background-position-x': px,\n  'background-position-y': px,\n  'background-size': px,\n  // Border Properties\n  border: px,\n  'border-bottom': px,\n  'border-bottom-left-radius': px,\n  'border-bottom-right-radius': px,\n  'border-bottom-width': px,\n  'border-left': px,\n  'border-left-width': px,\n  'border-radius': px,\n  'border-right': px,\n  'border-right-width': px,\n  'border-top': px,\n  'border-top-left-radius': px,\n  'border-top-right-radius': px,\n  'border-top-width': px,\n  'border-width': px,\n  // Margin properties\n  margin: px,\n  'margin-bottom': px,\n  'margin-left': px,\n  'margin-right': px,\n  'margin-top': px,\n  // Padding properties\n  padding: px,\n  'padding-bottom': px,\n  'padding-left': px,\n  'padding-right': px,\n  'padding-top': px,\n  // Mask properties\n  'mask-position-x': px,\n  'mask-position-y': px,\n  'mask-size': px,\n  // Width and height properties\n  height: px,\n  width: px,\n  'min-height': px,\n  'max-height': px,\n  'min-width': px,\n  'max-width': px,\n  // Position properties\n  bottom: px,\n  left: px,\n  top: px,\n  right: px,\n  // Shadow properties\n  'box-shadow': px,\n  'text-shadow': px,\n  // Column properties\n  'column-gap': px,\n  'column-rule': px,\n  'column-rule-width': px,\n  'column-width': px,\n  // Font and text properties\n  'font-size': px,\n  'font-size-delta': px,\n  'letter-spacing': px,\n  'text-indent': px,\n  'text-stroke': px,\n  'text-stroke-width': px,\n  'word-spacing': px,\n  // Motion properties\n  motion: px,\n  'motion-offset': px,\n  // Outline properties\n  outline: px,\n  'outline-offset': px,\n  'outline-width': px,\n  // Perspective properties\n  perspective: px,\n  'perspective-origin-x': percent,\n  'perspective-origin-y': percent,\n  // Transform properties\n  'transform-origin': percent,\n  'transform-origin-x': percent,\n  'transform-origin-y': percent,\n  'transform-origin-z': percent,\n  // Transition properties\n  'transition-delay': ms,\n  'transition-duration': ms,\n  // Alignment properties\n  'vertical-align': px,\n  'flex-basis': px,\n  // Some random properties\n  'shape-margin': px,\n  size: px,\n  // Grid properties\n  grid: px,\n  'grid-gap': px,\n  'grid-row-gap': px,\n  'grid-column-gap': px,\n  'grid-template-rows': px,\n  'grid-template-columns': px,\n  'grid-auto-rows': px,\n  'grid-auto-columns': px,\n  // Not existing properties.\n  // Used to avoid issues with jss-plugin-expand integration.\n  'box-shadow-x': px,\n  'box-shadow-y': px,\n  'box-shadow-blur': px,\n  'box-shadow-spread': px,\n  'font-line-height': px,\n  'text-shadow-x': px,\n  'text-shadow-y': px,\n  'text-shadow-blur': px\n};\n\n/**\n * Clones the object and adds a camel cased property version.\n */\nfunction addCamelCasedVersion(obj) {\n  var regExp = /(-[a-z])/g;\n\n  var replace = function replace(str) {\n    return str[1].toUpperCase();\n  };\n\n  var newObj = {};\n\n  for (var _key in obj) {\n    newObj[_key] = obj[_key];\n    newObj[_key.replace(regExp, replace)] = obj[_key];\n  }\n\n  return newObj;\n}\n\nvar units = addCamelCasedVersion(defaultUnits);\n/**\n * Recursive deep style passing function\n */\n\nfunction iterate(prop, value, options) {\n  if (!value) return value;\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      value[i] = iterate(prop, value[i], options);\n    }\n  } else if (typeof value === 'object') {\n    if (prop === 'fallbacks') {\n      for (var innerProp in value) {\n        value[innerProp] = iterate(innerProp, value[innerProp], options);\n      }\n    } else {\n      for (var _innerProp in value) {\n        value[_innerProp] = iterate(prop + \"-\" + _innerProp, value[_innerProp], options);\n      }\n    }\n  } else if (typeof value === 'number') {\n    if (options[prop]) {\n      return \"\" + value + options[prop];\n    }\n\n    if (units[prop]) {\n      return typeof units[prop] === 'function' ? units[prop](value).toString() : \"\" + value + units[prop];\n    }\n\n    return value.toString();\n  }\n\n  return value;\n}\n/**\n * Add unit to numeric values.\n */\n\n\nfunction defaultUnit(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var camelCasedOptions = addCamelCasedVersion(options);\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n\n    for (var prop in style) {\n      style[prop] = iterate(prop, style[prop], camelCasedOptions);\n    }\n\n    return style;\n  }\n\n  function onChangeValue(value, prop) {\n    return iterate(prop, value, camelCasedOptions);\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default defaultUnit;\n","/**\n * A scheme for converting properties from array to regular style.\n * All properties listed below will be transformed to a string separated by space.\n */\nvar propArray = {\n  'background-size': true,\n  'background-position': true,\n  border: true,\n  'border-bottom': true,\n  'border-left': true,\n  'border-top': true,\n  'border-right': true,\n  'border-radius': true,\n  'border-image': true,\n  'border-width': true,\n  'border-style': true,\n  'border-color': true,\n  'box-shadow': true,\n  flex: true,\n  margin: true,\n  padding: true,\n  outline: true,\n  'transform-origin': true,\n  transform: true,\n  transition: true\n  /**\n   * A scheme for converting arrays to regular styles inside of objects.\n   * For e.g.: \"{position: [0, 0]}\" => \"background-position: 0 0;\".\n   */\n\n};\nvar propArrayInObj = {\n  position: true,\n  // background-position\n  size: true // background-size\n\n  /**\n   * A scheme for parsing and building correct styles from passed objects.\n   */\n\n};\nvar propObj = {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  background: {\n    attachment: null,\n    color: null,\n    image: null,\n    position: null,\n    repeat: null\n  },\n  border: {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-top': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-right': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-bottom': {\n    width: null,\n    style: null,\n    color: null\n  },\n  'border-left': {\n    width: null,\n    style: null,\n    color: null\n  },\n  outline: {\n    width: null,\n    style: null,\n    color: null\n  },\n  'list-style': {\n    type: null,\n    position: null,\n    image: null\n  },\n  transition: {\n    property: null,\n    duration: null,\n    'timing-function': null,\n    timingFunction: null,\n    // Needed for avoiding comilation issues with jss-plugin-camel-case\n    delay: null\n  },\n  animation: {\n    name: null,\n    duration: null,\n    'timing-function': null,\n    timingFunction: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    delay: null,\n    'iteration-count': null,\n    iterationCount: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    direction: null,\n    'fill-mode': null,\n    fillMode: null,\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    'play-state': null,\n    playState: null // Needed to avoid compilation issues with jss-plugin-camel-case\n\n  },\n  'box-shadow': {\n    x: 0,\n    y: 0,\n    blur: 0,\n    spread: 0,\n    color: null,\n    inset: null\n  },\n  'text-shadow': {\n    x: 0,\n    y: 0,\n    blur: null,\n    color: null\n  }\n  /**\n   * A scheme for converting non-standart properties inside object.\n   * For e.g.: include 'border-radius' property inside 'border' object.\n   */\n\n};\nvar customPropObj = {\n  border: {\n    radius: 'border-radius',\n    image: 'border-image',\n    width: 'border-width',\n    style: 'border-style',\n    color: 'border-color'\n  },\n  'border-bottom': {\n    width: 'border-bottom-width',\n    style: 'border-bottom-style',\n    color: 'border-bottom-color'\n  },\n  'border-top': {\n    width: 'border-top-width',\n    style: 'border-top-style',\n    color: 'border-top-color'\n  },\n  'border-left': {\n    width: 'border-left-width',\n    style: 'border-left-style',\n    color: 'border-left-color'\n  },\n  'border-right': {\n    width: 'border-right-width',\n    style: 'border-right-style',\n    color: 'border-right-color'\n  },\n  background: {\n    size: 'background-size',\n    image: 'background-image'\n  },\n  font: {\n    style: 'font-style',\n    variant: 'font-variant',\n    weight: 'font-weight',\n    stretch: 'font-stretch',\n    size: 'font-size',\n    family: 'font-family',\n    lineHeight: 'line-height',\n    // Needed to avoid compilation issues with jss-plugin-camel-case\n    'line-height': 'line-height'\n  },\n  flex: {\n    grow: 'flex-grow',\n    basis: 'flex-basis',\n    direction: 'flex-direction',\n    wrap: 'flex-wrap',\n    flow: 'flex-flow',\n    shrink: 'flex-shrink'\n  },\n  align: {\n    self: 'align-self',\n    items: 'align-items',\n    content: 'align-content'\n  },\n  grid: {\n    'template-columns': 'grid-template-columns',\n    templateColumns: 'grid-template-columns',\n    'template-rows': 'grid-template-rows',\n    templateRows: 'grid-template-rows',\n    'template-areas': 'grid-template-areas',\n    templateAreas: 'grid-template-areas',\n    template: 'grid-template',\n    'auto-columns': 'grid-auto-columns',\n    autoColumns: 'grid-auto-columns',\n    'auto-rows': 'grid-auto-rows',\n    autoRows: 'grid-auto-rows',\n    'auto-flow': 'grid-auto-flow',\n    autoFlow: 'grid-auto-flow',\n    row: 'grid-row',\n    column: 'grid-column',\n    'row-start': 'grid-row-start',\n    rowStart: 'grid-row-start',\n    'row-end': 'grid-row-end',\n    rowEnd: 'grid-row-end',\n    'column-start': 'grid-column-start',\n    columnStart: 'grid-column-start',\n    'column-end': 'grid-column-end',\n    columnEnd: 'grid-column-end',\n    area: 'grid-area',\n    gap: 'grid-gap',\n    'row-gap': 'grid-row-gap',\n    rowGap: 'grid-row-gap',\n    'column-gap': 'grid-column-gap',\n    columnGap: 'grid-column-gap'\n  }\n};\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Map values by given prop.\n *\n * @param {Array} array of values\n * @param {String} original property\n * @param {String} original rule\n * @return {String} mapped values\n */\nfunction mapValuesByProp(value, prop, rule) {\n  return value.map(function (item) {\n    return objectToArray(item, prop, rule, false, true);\n  });\n}\n/**\n * Convert array to nested array, if needed\n */\n\n\nfunction processArray(value, prop, scheme, rule) {\n  if (scheme[prop] == null) return value;\n  if (value.length === 0) return [];\n  if (Array.isArray(value[0])) return processArray(value[0], prop, scheme, rule);\n\n  if (typeof value[0] === 'object') {\n    return mapValuesByProp(value, prop, rule);\n  }\n\n  return [value];\n}\n/**\n * Convert object to array.\n */\n\n\nfunction objectToArray(value, prop, rule, isFallback, isInArray) {\n  if (!(propObj[prop] || customPropObj[prop])) return [];\n  var result = []; // Check if exists any non-standard property\n\n  if (customPropObj[prop]) {\n    // eslint-disable-next-line no-param-reassign\n    value = customPropsToStyle(value, rule, customPropObj[prop], isFallback);\n  } // Pass throught all standart props\n\n\n  if (Object.keys(value).length) {\n    for (var baseProp in propObj[prop]) {\n      if (value[baseProp]) {\n        if (Array.isArray(value[baseProp])) {\n          result.push(propArrayInObj[baseProp] === null ? value[baseProp] : value[baseProp].join(' '));\n        } else result.push(value[baseProp]);\n\n        continue;\n      } // Add default value from props config.\n\n\n      if (propObj[prop][baseProp] != null) {\n        result.push(propObj[prop][baseProp]);\n      }\n    }\n  }\n\n  if (!result.length || isInArray) return result;\n  return [result];\n}\n/**\n * Convert custom properties values to styles adding them to rule directly\n */\n\n\nfunction customPropsToStyle(value, rule, customProps, isFallback) {\n  for (var prop in customProps) {\n    var propName = customProps[prop]; // If current property doesn't exist already in rule - add new one\n\n    if (typeof value[prop] !== 'undefined' && (isFallback || !rule.prop(propName))) {\n      var _styleDetector;\n\n      var appendedValue = styleDetector((_styleDetector = {}, _styleDetector[propName] = value[prop], _styleDetector), rule)[propName]; // Add style directly in rule\n\n      if (isFallback) rule.style.fallbacks[propName] = appendedValue;else rule.style[propName] = appendedValue;\n    } // Delete converted property to avoid double converting\n\n\n    delete value[prop];\n  }\n\n  return value;\n}\n/**\n * Detect if a style needs to be converted.\n */\n\n\nfunction styleDetector(style, rule, isFallback) {\n  for (var prop in style) {\n    var value = style[prop];\n\n    if (Array.isArray(value)) {\n      // Check double arrays to avoid recursion.\n      if (!Array.isArray(value[0])) {\n        if (prop === 'fallbacks') {\n          for (var index = 0; index < style.fallbacks.length; index++) {\n            style.fallbacks[index] = styleDetector(style.fallbacks[index], rule, true);\n          }\n\n          continue;\n        }\n\n        style[prop] = processArray(value, prop, propArray, rule); // Avoid creating properties with empty values\n\n        if (!style[prop].length) delete style[prop];\n      }\n    } else if (typeof value === 'object') {\n      if (prop === 'fallbacks') {\n        style.fallbacks = styleDetector(style.fallbacks, rule, true);\n        continue;\n      }\n\n      style[prop] = objectToArray(value, prop, rule, isFallback); // Avoid creating properties with empty values\n\n      if (!style[prop].length) delete style[prop];\n    } // Maybe a computed value resulting in an empty string\n    else if (style[prop] === '') delete style[prop];\n  }\n\n  return style;\n}\n/**\n * Adds possibility to write expanded styles.\n */\n\n\nfunction jssExpand() {\n  function onProcessStyle(style, rule) {\n    if (!style || rule.type !== 'style') return style;\n\n    if (Array.isArray(style)) {\n      // Pass rules one by one and reformat them\n      for (var index = 0; index < style.length; index++) {\n        style[index] = styleDetector(style[index], rule);\n      }\n\n      return style;\n    }\n\n    return styleDetector(style, rule);\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssExpand;\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","import isInBrowser from 'is-in-browser';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\n\n// Export javascript style and css style vendor prefixes.\nvar js = '';\nvar css = '';\nvar vendor = '';\nvar browser = '';\nvar isTouch = isInBrowser && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.\n\nif (isInBrowser) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n\n  var _document$createEleme = document.createElement('p'),\n      style = _document$createEleme.style;\n\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  } // Correctly detect the Edge browser.\n\n\n  if (js === 'Webkit' && 'msHyphens' in style) {\n    js = 'ms';\n    css = jsCssMap.ms;\n    browser = 'edge';\n  } // Correctly detect the Safari browser.\n\n\n  if (js === 'Webkit' && '-apple-trailing-word' in style) {\n    vendor = 'apple';\n  }\n}\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String, vendor: String, browser: String}}\n * @api public\n */\n\n\nvar prefix = {\n  js: js,\n  css: css,\n  vendor: vendor,\n  browser: browser,\n  isTouch: isTouch\n};\n\n/**\n * Test if a keyframe at-rule should be prefixed or not\n *\n * @param {String} vendor prefix string for the current browser.\n * @return {String}\n * @api public\n */\n\nfunction supportedKeyframes(key) {\n  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'\n  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.\n  // https://caniuse.com/#search=keyframes\n\n  if (prefix.js === 'ms') return key;\n  return \"@\" + prefix.css + \"keyframes\" + key.substr(10);\n}\n\n// https://caniuse.com/#search=appearance\n\nvar appearence = {\n  noPrefill: ['appearance'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'appearance') return false;\n    if (prefix.js === 'ms') return \"-webkit-\" + prop;\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=color-adjust\n\nvar colorAdjust = {\n  noPrefill: ['color-adjust'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'color-adjust') return false;\n    if (prefix.js === 'Webkit') return prefix.css + \"print-\" + prop;\n    return prop;\n  }\n};\n\nvar regExp = /[-\\s]+(.)?/g;\n/**\n * Replaces the letter with the capital letter\n *\n * @param {String} match\n * @param {String} c\n * @return {String}\n * @api private\n */\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n/**\n * Convert dash separated strings to camel-cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\n/**\n * Convert dash separated strings to pascal cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction pascalize(str) {\n  return camelize(\"-\" + str);\n}\n\n// but we can use a longhand property instead.\n// https://caniuse.com/#search=mask\n\nvar mask = {\n  noPrefill: ['mask'],\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^mask/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var longhand = 'mask-image';\n\n      if (camelize(longhand) in style) {\n        return prop;\n      }\n\n      if (prefix.js + pascalize(longhand) in style) {\n        return prefix.css + prop;\n      }\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=text-orientation\n\nvar textOrientation = {\n  noPrefill: ['text-orientation'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'text-orientation') return false;\n\n    if (prefix.vendor === 'apple' && !prefix.isTouch) {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=transform\n\nvar transform = {\n  noPrefill: ['transform'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transform') return false;\n\n    if (options.transform) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=transition\n\nvar transition = {\n  noPrefill: ['transition'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transition') return false;\n\n    if (options.transition) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=writing-mode\n\nvar writingMode = {\n  noPrefill: ['writing-mode'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'writing-mode') return false;\n\n    if (prefix.js === 'Webkit' || prefix.js === 'ms') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=user-select\n\nvar userSelect = {\n  noPrefill: ['user-select'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'user-select') return false;\n\n    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=multicolumn\n// https://github.com/postcss/autoprefixer/issues/491\n// https://github.com/postcss/autoprefixer/issues/177\n\nvar breakPropsOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^break-/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var jsProp = \"WebkitColumn\" + pascalize(prop);\n      return jsProp in style ? prefix.css + \"column-\" + prop : false;\n    }\n\n    if (prefix.js === 'Moz') {\n      var _jsProp = \"page\" + pascalize(prop);\n\n      return _jsProp in style ? \"page-\" + prop : false;\n    }\n\n    return false;\n  }\n};\n\n// See https://github.com/postcss/autoprefixer/issues/324.\n\nvar inlineLogicalOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (prefix.js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\n// Camelization is required because we can't test using.\n// CSS syntax for e.g. in FF.\n\nvar unprefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    return camelize(prop) in style ? prop : false;\n  }\n};\n\nvar prefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.\n\n    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.\n\n    if (prop[0] === '-' && prop[1] === '-') return prop;\n    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.\n\n    if (prefix.js !== 'Webkit' && \"Webkit\" + pascalized in style) return \"-webkit-\" + prop;\n    return false;\n  }\n};\n\n// https://caniuse.com/#search=scroll-snap\n\nvar scrollSnap = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop.substring(0, 11) !== 'scroll-snap') return false;\n\n    if (prefix.js === 'ms') {\n      return \"\" + prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=overscroll-behavior\n\nvar overscrollBehavior = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'overscroll-behavior') return false;\n\n    if (prefix.js === 'ms') {\n      return prefix.css + \"scroll-chaining\";\n    }\n\n    return prop;\n  }\n};\n\nvar propMap = {\n  'flex-grow': 'flex-positive',\n  'flex-shrink': 'flex-negative',\n  'flex-basis': 'flex-preferred-size',\n  'justify-content': 'flex-pack',\n  order: 'flex-order',\n  'align-items': 'flex-align',\n  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.\n\n}; // Support old flex spec from 2012.\n\nvar flex2012 = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var newProp = propMap[prop];\n    if (!newProp) return false;\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\nvar propMap$1 = {\n  flex: 'box-flex',\n  'flex-grow': 'box-flex',\n  'flex-direction': ['box-orient', 'box-direction'],\n  order: 'box-ordinal-group',\n  'align-items': 'box-align',\n  'flex-flow': ['box-orient', 'box-direction'],\n  'justify-content': 'box-pack'\n};\nvar propKeys = Object.keys(propMap$1);\n\nvar prefixCss = function prefixCss(p) {\n  return prefix.css + p;\n}; // Support old flex spec from 2009.\n\n\nvar flex2009 = {\n  supportedProperty: function supportedProperty(prop, style, _ref) {\n    var multiple = _ref.multiple;\n\n    if (propKeys.indexOf(prop) > -1) {\n      var newProp = propMap$1[prop];\n\n      if (!Array.isArray(newProp)) {\n        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n      }\n\n      if (!multiple) return false;\n\n      for (var i = 0; i < newProp.length; i++) {\n        if (!(prefix.js + pascalize(newProp[0]) in style)) {\n          return false;\n        }\n      }\n\n      return newProp.map(prefixCss);\n    }\n\n    return false;\n  }\n};\n\n// plugins = [\n//   ...plugins,\n//    breakPropsOld,\n//    inlineLogicalOld,\n//    unprefixed,\n//    prefixed,\n//    scrollSnap,\n//    flex2012,\n//    flex2009\n// ]\n// Plugins without 'noPrefill' value, going last.\n// 'flex-*' plugins should be at the bottom.\n// 'flex2009' going after 'flex2012'.\n// 'prefixed' going after 'unprefixed'\n\nvar plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];\nvar propertyDetectors = plugins.filter(function (p) {\n  return p.supportedProperty;\n}).map(function (p) {\n  return p.supportedProperty;\n});\nvar noPrefill = plugins.filter(function (p) {\n  return p.noPrefill;\n}).reduce(function (a, p) {\n  a.push.apply(a, _toConsumableArray(p.noPrefill));\n  return a;\n}, []);\n\nvar el;\nvar cache = {};\n\nif (isInBrowser) {\n  el = document.createElement('p'); // We test every property on vendor prefix requirement.\n  // Once tested, result is cached. It gives us up to 70% perf boost.\n  // http://jsperf.com/element-style-object-access-vs-plain-object\n  //\n  // Prefill cache with known css properties to reduce amount of\n  // properties we need to feature test at runtime.\n  // http://davidwalsh.name/vendor-prefix\n\n  var computed = window.getComputedStyle(document.documentElement, '');\n\n  for (var key$1 in computed) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];\n  } // Properties that cannot be correctly detected using the\n  // cache prefill method.\n\n\n  noPrefill.forEach(function (x) {\n    return delete cache[x];\n  });\n}\n/**\n * Test if a property is supported, returns supported property with vendor\n * prefix if required. Returns `false` if not supported.\n *\n * @param {String} prop dash separated\n * @param {Object} [options]\n * @return {String|Boolean}\n * @api public\n */\n\n\nfunction supportedProperty(prop, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // For server-side rendering.\n  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache[prop] != null) {\n    return cache[prop];\n  } // Check if 'transition' or 'transform' natively supported in browser.\n\n\n  if (prop === 'transition' || prop === 'transform') {\n    options[prop] = prop in el.style;\n  } // Find a plugin for current prefix property.\n\n\n  for (var i = 0; i < propertyDetectors.length; i++) {\n    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.\n\n    if (cache[prop]) break;\n  } // Reset styles for current property.\n  // Firefox can even throw an error for invalid properties, e.g., \"0\".\n\n\n  try {\n    el.style[prop] = '';\n  } catch (err) {\n    return false;\n  }\n\n  return cache[prop];\n}\n\nvar cache$1 = {};\nvar transitionProperties = {\n  transition: 1,\n  'transition-property': 1,\n  '-webkit-transition': 1,\n  '-webkit-transition-property': 1\n};\nvar transPropsRegExp = /(^\\s*[\\w-]+)|, (\\s*[\\w-]+)(?![^()]*\\))/g;\nvar el$1;\n/**\n * Returns prefixed value transition/transform if needed.\n *\n * @param {String} match\n * @param {String} p1\n * @param {String} p2\n * @return {String}\n * @api private\n */\n\nfunction prefixTransitionCallback(match, p1, p2) {\n  if (p1 === 'var') return 'var';\n  if (p1 === 'all') return 'all';\n  if (p2 === 'all') return ', all';\n  var prefixedValue = p1 ? supportedProperty(p1) : \", \" + supportedProperty(p2);\n  if (!prefixedValue) return p1 || p2;\n  return prefixedValue;\n}\n\nif (isInBrowser) el$1 = document.createElement('p');\n/**\n * Returns prefixed value if needed. Returns `false` if value is not supported.\n *\n * @param {String} property\n * @param {String} value\n * @return {String|Boolean}\n * @api public\n */\n\nfunction supportedValue(property, value) {\n  // For server-side rendering.\n  var prefixedValue = value;\n  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.\n  // We want only prefixable values here.\n  // eslint-disable-next-line no-restricted-globals\n\n  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {\n    return prefixedValue;\n  } // Create cache key for current value.\n\n\n  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache$1[cacheKey] != null) {\n    return cache$1[cacheKey];\n  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.\n\n\n  try {\n    // Test value as it is.\n    el$1.style[property] = prefixedValue;\n  } catch (err) {\n    // Return false if value not supported.\n    cache$1[cacheKey] = false;\n    return false;\n  } // If 'transition' or 'transition-property' property.\n\n\n  if (transitionProperties[property]) {\n    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);\n  } else if (el$1.style[property] === '') {\n    // Value with a vendor prefix.\n    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\n\n    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.\n\n    el$1.style[property] = prefixedValue; // Return false if value not supported.\n\n    if (el$1.style[property] === '') {\n      cache$1[cacheKey] = false;\n      return false;\n    }\n  } // Reset styles for current property.\n\n\n  el$1.style[property] = ''; // Write current value to cache.\n\n  cache$1[cacheKey] = prefixedValue;\n  return cache$1[cacheKey];\n}\n\nexport { prefix, supportedKeyframes, supportedProperty, supportedValue };\n","import { supportedKeyframes, supportedValue, supportedProperty } from 'css-vendor';\nimport { toCssValue } from 'jss';\n\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function prefixStyle(style) {\n    for (var prop in style) {\n      var value = style[prop];\n\n      if (prop === 'fallbacks' && Array.isArray(value)) {\n        style[prop] = value.map(prefixStyle);\n        continue;\n      }\n\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$$1 && supportedValue$$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n    return prefixStyle(style);\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;\n","/**\n * Sort props by length.\n */\nfunction jssPropsSort() {\n  var sort = function sort(prop0, prop1) {\n    if (prop0.length === prop1.length) {\n      return prop0 > prop1 ? 1 : -1;\n    }\n\n    return prop0.length - prop1.length;\n  };\n\n  return {\n    onProcessStyle: function onProcessStyle(style, rule) {\n      if (rule.type !== 'style') return style;\n      var newStyle = {};\n      var props = Object.keys(style).sort(sort);\n\n      for (var i = 0; i < props.length; i++) {\n        newStyle[props[i]] = style[props[i]];\n      }\n\n      return newStyle;\n    }\n  };\n}\n\nexport default jssPropsSort;\n","import functions from 'jss-plugin-rule-value-function';\nimport observable from 'jss-plugin-rule-value-observable';\nimport template from 'jss-plugin-template';\nimport global from 'jss-plugin-global';\nimport extend from 'jss-plugin-extend';\nimport nested from 'jss-plugin-nested';\nimport compose from 'jss-plugin-compose';\nimport camelCase from 'jss-plugin-camel-case';\nimport defaultUnit from 'jss-plugin-default-unit';\nimport expand from 'jss-plugin-expand';\nimport vendorPrefixer from 'jss-plugin-vendor-prefixer';\nimport propsSort from 'jss-plugin-props-sort';\n\nvar index = (function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    plugins: [functions(), observable(options.observable), template(), global(), extend(), nested(), compose(), camelCase(), defaultUnit(options.defaultUnit), expand(), vendorPrefixer(), propsSort()]\n  };\n});\n\nexport default index;\n","import jss from 'jss';\nimport preset from 'jss-preset-default';\n// Be sure to set up JSS before anyone tries to use it.\njss.setup(preset());\nexport default jss;\n","/**\n * Current selection or highlight.\n */\nexport class Highlight {\n    constructor(program, firstIndex, lastIndex) {\n        this.program = program;\n        // Default to one byte.\n        lastIndex = (lastIndex !== null && lastIndex !== void 0 ? lastIndex : firstIndex);\n        // Re-order so that begin <= end.\n        this.firstIndex = Math.min(firstIndex, lastIndex);\n        this.lastIndex = Math.max(firstIndex, lastIndex);\n    }\n}\n","import { Highlight } from \"./Highlight\";\n/**\n * Represents an item that's highlightable and maps to a part of the program's binary.\n */\nexport class Highlightable {\n    constructor(firstIndex, lastIndex, element) {\n        this.firstIndex = firstIndex;\n        this.lastIndex = lastIndex;\n        this.element = element;\n    }\n}\n/**\n * Helper class to highlight or select elements.\n */\nexport class Highlighter {\n    constructor(tapeBrowser, program, container) {\n        /**\n         * All elements, index by the byte index.\n         */\n        this.elements = [];\n        /**\n         * Currently-highlighted elements.\n         */\n        this.highlightedElements = [];\n        /**\n         * Currently-selected elements.\n         */\n        this.selectedElements = [];\n        this.tapeBrowser = tapeBrowser;\n        this.program = program;\n        this.container = container;\n        container.addEventListener(\"mousedown\", event => event.preventDefault());\n        window.addEventListener(\"mouseup\", event => {\n            if (this.selectionBeginIndex !== undefined) {\n                this.selectionBeginIndex = undefined;\n                this.tapeBrowser.doneSelecting(this);\n                event.preventDefault();\n            }\n        });\n    }\n    /**\n     * Add the highlightable element to the highlighter.\n     */\n    addHighlightable(h) {\n        // Allow undefined element for convenience of caller. Just ignore it.\n        const element = h.element;\n        if (element === undefined) {\n            return;\n        }\n        for (let byteIndex = h.firstIndex; byteIndex <= h.lastIndex; byteIndex++) {\n            this.elements[byteIndex] = element;\n        }\n        // Set up event listeners for highlighting.\n        element.addEventListener(\"mouseenter\", () => {\n            this.tapeBrowser.setHighlight(new Highlight(this.program, h.firstIndex, h.lastIndex));\n            if (this.selectionBeginIndex !== undefined) {\n                const highlight = h.firstIndex <= this.selectionBeginIndex && this.selectionBeginIndex <= h.lastIndex\n                    ? new Highlight(this.program, h.firstIndex, h.lastIndex)\n                    : this.selectionBeginIndex < h.firstIndex\n                        ? new Highlight(this.program, this.selectionBeginIndex, h.lastIndex)\n                        : new Highlight(this.program, h.firstIndex, this.selectionBeginIndex);\n                this.tapeBrowser.setSelection(highlight);\n            }\n        });\n        element.addEventListener(\"mouseleave\", () => {\n            if (this.selectionBeginIndex === undefined) {\n                this.tapeBrowser.setHighlight(undefined);\n            }\n        });\n        // Set up event listeners for selecting.\n        element.addEventListener(\"mousedown\", event => {\n            this.tapeBrowser.setSelection(new Highlight(this.program, h.firstIndex, h.lastIndex));\n            // This isn't right, it depends on which way they'll select. Might have to fix later.\n            this.selectionBeginIndex = h.firstIndex;\n            event.preventDefault();\n        });\n    }\n    /**\n     * Add all highlightables to the highlighter.\n     */\n    addHighlightables(highlightables) {\n        for (const highlightable of highlightables) {\n            this.addHighlightable(highlightable);\n        }\n    }\n    /**\n     * Highlight the specified elements.\n     */\n    highlight(highlight, program, highlightClassName) {\n        for (const e of this.highlightedElements) {\n            e.classList.remove(highlightClassName);\n        }\n        this.highlightedElements.splice(0);\n        if (highlight !== undefined && highlight.program === program) {\n            const e = this.elements[highlight.firstIndex];\n            if (e !== undefined) {\n                e.classList.add(highlightClassName);\n                this.highlightedElements.push(e);\n            }\n        }\n    }\n    /**\n     * Select the specified elements.\n     */\n    select(highlight, program, selectClassName) {\n        for (const e of this.selectedElements) {\n            e.classList.remove(selectClassName);\n        }\n        this.selectedElements.splice(0);\n        if (highlight !== undefined && highlight.program === program) {\n            for (let byteIndex = highlight.firstIndex; byteIndex <= highlight.lastIndex; byteIndex++) {\n                const e = this.elements[byteIndex];\n                if (e !== undefined) {\n                    e.classList.add(selectClassName);\n                    this.selectedElements.push(e);\n                }\n            }\n        }\n    }\n    /**\n     * Called when the user is done selecting and we should scroll to the selection.\n     */\n    doneSelecting() {\n        // Bring the middle element into view.\n        if (this.selectedElements.length > 0) {\n            const midElement = this.selectedElements[Math.floor(this.selectedElements.length / 2)];\n            if (midElement.offsetHeight === 0) {\n                // Not visible, do this later.\n                this.scrollToElement = midElement;\n            }\n            else {\n                midElement.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                });\n            }\n        }\n    }\n    /**\n     * This set of elements was just shown.\n     */\n    didShow() {\n        if (this.scrollToElement !== undefined) {\n            this.scrollToElement.scrollIntoView({\n                behavior: \"auto\",\n                block: \"center\",\n            });\n            this.scrollToElement = undefined;\n        }\n    }\n}\n","import jss from './Jss';\nimport { ElementType } from \"./Basic\";\nimport { Highlightable } from \"./Highlighter\";\n/**\n * Add text to the line with the specified class.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    error: {\n        color: \"var(--red)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--red)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    lineNumber: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    punctuation: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    keyword: {\n        color: \"var(--blue)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    regular: {\n        color: \"var(--foreground)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    string: {\n        color: \"var(--orange)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--orange)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    comment: {\n        color: \"var(--cyan)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * Render an array of Basic elements to a DIV.\n */\nexport function toDiv(basicElements, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    // Map from byte address to HTML element for that byte.\n    const elements = [];\n    let line = undefined;\n    for (const basicElement of basicElements) {\n        let className;\n        if (line === undefined || basicElement.elementType === ElementType.LINE_NUMBER) {\n            line = document.createElement(\"div\");\n            out.appendChild(line);\n        }\n        switch (basicElement.elementType) {\n            case ElementType.ERROR:\n                className = classes.error;\n                break;\n            case ElementType.LINE_NUMBER:\n                className = classes.lineNumber;\n                break;\n            case ElementType.PUNCTUATION:\n                className = classes.punctuation;\n                break;\n            case ElementType.KEYWORD:\n                className = classes.keyword;\n                break;\n            case ElementType.REGULAR:\n            default:\n                className = classes.regular;\n                break;\n            case ElementType.STRING:\n                className = classes.string;\n                break;\n            case ElementType.COMMENT:\n                className = classes.comment;\n                break;\n        }\n        const e = add(line, basicElement.text, className);\n        if (basicElement.offset !== undefined) {\n            elements.push(new Highlightable(basicElement.offset, basicElement.offset + basicElement.length - 1, e));\n        }\n    }\n    return elements;\n}\n","\n/**\n * Type for all byte registers.\n */\nexport type ByteReg = \"a\" | \"f\" | \"b\" | \"c\" | \"d\" | \"e\" | \"h\" | \"l\" | \"ixh\" | \"ixl\" | \"iyh\" | \"iyl\" | \"i\" | \"r\";\n\n/**\n * Type for all word registers. Uses the \"Prime\" suffix instead of an apostrophe so that\n * this can be used as a field name for the RegisterSet class.\n */\nexport type WordReg = \"af\" | \"bc\" | \"de\" | \"hl\" | \"afPrime\" | \"bcPrime\" | \"dePrime\" | \"hlPrime\" | \"ix\" | \"iy\" | \"sp\" | \"pc\";\n\n/**\n * Internal state.\n */\nexport type InternalReg = \"memptr\" | \"i\" | \"r\" | \"iff1\" | \"iff2\" | \"im\" | \"halted\";\n\n/**\n * All registers.\n */\nexport type Register = ByteReg | WordReg | InternalReg;\n\n/**\n * List of all word registers.\n */\nconst WORD_REG = new Set([\"af\", \"bc\", \"de\", \"hl\", \"af'\", \"bc'\", \"de'\", \"hl'\", \"ix\", \"iy\", \"sp\", \"pc\"]);\n\n/**\n * List of all byte registers.\n */\nconst BYTE_REG = new Set([\"a\", \"f\", \"b\", \"c\", \"d\", \"e\", \"h\", \"l\", \"ixh\", \"ixl\", \"iyh\", \"iyl\", \"i\", \"r\"]);\n\n/**\n * Determine whether a register stores a word.\n */\nexport function isWordReg(s: string): boolean {\n    return WORD_REG.has(s.toLowerCase());\n}\n\n/**\n * Determine whether a register stores a byte.\n */\nexport function isByteReg(s: string): boolean {\n    return BYTE_REG.has(s.toLowerCase());\n}\n","\n// Various utility functions.\n\n/**\n * Convert a number to hex and zero-pad to the specified number of hex digits.\n */\nexport function toHex(value: number, digits: number): string {\n    return value.toString(16).toUpperCase().padStart(digits, \"0\");\n}\n\n/**\n * Convert a byte to hex.\n */\nexport function toHexByte(value: number): string {\n    return toHex(value, 2);\n}\n\n/**\n * Convert a word to hex.\n */\nexport function toHexWord(value: number): string {\n    return toHex(value, 4);\n}\n\n/**\n * Return the high byte of a word.\n */\nexport function hi(value: number): number {\n    return (value >> 8) & 0xFF;\n}\n\n/**\n * Return the low byte of a word.\n */\nexport function lo(value: number): number {\n    return value & 0xFF;\n}\n\n/**\n * Create a word from a high and low byte.\n */\nexport function word(highByte: number, lowByte: number): number {\n    return ((highByte & 0xFF) << 8) | (lowByte & 0xFF);\n}\n\n/**\n * Increment a byte.\n */\nexport function inc8(value: number): number {\n    return add8(value, 1);\n}\n\n/**\n * Increment a word.\n */\nexport function inc16(value: number): number {\n    return add16(value, 1);\n}\n\n/**\n * Decrement a byte.\n */\nexport function dec8(value: number): number {\n    return sub8(value, 1);\n}\n\n/**\n * Decrement a word.\n */\nexport function dec16(value: number): number {\n    return sub16(value, 1);\n}\n\n/**\n * Add two bytes together.\n */\nexport function add8(a: number, b: number): number {\n    return (a + b) & 0xFF;\n}\n\n/**\n * Add two words together.\n */\nexport function add16(a: number, b: number): number {\n    return (a + b) & 0xFFFF;\n}\n\n/**\n * Subtract two bytes.\n */\nexport function sub8(a: number, b: number): number {\n    return (a - b) & 0xFF;\n}\n\n/**\n * Subtract two words.\n */\nexport function sub16(a: number, b: number): number {\n    return (a - b) & 0xFFFF;\n}\n\n/**\n * Convert a byte to a signed number (e.g., 0xff to -1).\n */\nexport function signedByte(value: number): number {\n    return value >= 128 ? value - 256 : value;\n}\n","import {Register} from \"./Register\";\nimport {hi, lo, word} from \"./Utils\";\n\n/**\n * All registers in a Z80.\n */\nexport class RegisterSet {\n    // External state:\n    public af: number = 0;\n    public bc: number = 0;\n    public de: number = 0;\n    public hl: number = 0;\n    public afPrime: number = 0;\n    public bcPrime: number = 0;\n    public dePrime: number = 0;\n    public hlPrime: number = 0;\n    public ix: number = 0;\n    public iy: number = 0;\n    public sp: number = 0;\n    public pc: number = 0;\n\n    // Internal state:\n    public memptr: number = 0;\n    public i: number = 0;\n    public r: number = 0;  // Low 7 bits of R.\n    public r7: number = 0; // Bit 7 of R.\n    public iff1: number = 0;\n    public iff2: number = 0;\n    public im: number = 0;\n    public halted: number = 0;\n\n    get a(): number {\n        return hi(this.af);\n    }\n\n    set a(value: number) {\n        this.af = word(value, this.f);\n    }\n\n    get f(): number {\n        return lo(this.af);\n    }\n\n    set f(value: number) {\n        this.af = word(this.a, value);\n    }\n\n    get b(): number {\n        return hi(this.bc);\n    }\n\n    set b(value: number) {\n        this.bc = word(value, this.c);\n    }\n\n    get c(): number {\n        return lo(this.bc);\n    }\n\n    set c(value: number) {\n        this.bc = word(this.b, value);\n    }\n\n    get d(): number {\n        return hi(this.de);\n    }\n\n    set d(value: number) {\n        this.de = word(value, this.e);\n    }\n\n    get e(): number {\n        return lo(this.de);\n    }\n\n    set e(value: number) {\n        this.de = word(this.d, value);\n    }\n\n    get h(): number {\n        return hi(this.hl);\n    }\n\n    set h(value: number) {\n        this.hl = word(value, this.l);\n    }\n\n    get l(): number {\n        return lo(this.hl);\n    }\n\n    set l(value: number) {\n        this.hl = word(this.h, value);\n    }\n\n    get ixh(): number {\n        return hi(this.ix);\n    }\n\n    set ixh(value: number) {\n        this.ix = word(value, this.ixl);\n    }\n\n    get ixl(): number {\n        return lo(this.ix);\n    }\n\n    set ixl(value: number) {\n        this.ix = word(this.ixh, value);\n    }\n\n    get iyh(): number {\n        return hi(this.iy);\n    }\n\n    set iyh(value: number) {\n        this.iy = word(value, this.iyl);\n    }\n\n    get iyl(): number {\n        return lo(this.iy);\n    }\n\n    set iyl(value: number) {\n        this.iy = word(this.iyh, value);\n    }\n\n    /**\n     * Combine the two R parts together.\n     */\n    get rCombined(): number {\n        return (this.r7 & 0x80) | (this.r & 0xF7);\n    }\n}\n\n/**\n * All real fields of RegisterSet, for enumeration.\n */\nexport const registerSetFields: Register[] = [\n    \"af\", \"bc\", \"de\", \"hl\",\n    \"afPrime\", \"bcPrime\", \"dePrime\", \"hlPrime\",\n    \"ix\", \"iy\", \"sp\", \"pc\",\n    \"memptr\", \"i\", \"r\", \"iff1\", \"iff2\", \"im\", \"halted\"];\n","/**\n * The flag bits in the F register.\n */\nexport enum Flag {\n    /**\n     * Carry and borrow. Indicates that the addition or subtraction did not\n     * fit in the register.\n     */\n    C = 0x01,\n    /**\n     * Set if the last operation was a subtraction.\n     */\n    N = 0x02,\n    /**\n     * Parity: Indicates that the result has an even number of bits set.\n     */\n    P = 0x04,\n    /**\n     * Overflow: Indicates that two's complement does not fit in register.\n     */\n    V = P,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X3 = 0x08,\n    /**\n     * Half carry: Carry from bit 3 to bit 4 during BCD operations.\n     */\n    H = 0x10,\n    /**\n     * Undocumented bit, but internal state can leak into it.\n     */\n    X5 = 0x20,\n    /**\n     * Set if value is zero.\n     */\n    Z = 0x40,\n    /**\n     * Set of value is negative.\n     */\n    S = 0x80,\n}\n","\nexport * from \"./Register\";\nexport * from \"./RegisterSet\";\nexport * from \"./Utils\";\nexport * from \"./Flag\";\n","\nimport {toHexByte} from \"z80-base\";\n\nexport class Instruction {\n    /**\n     * Address of instruction.\n     */\n    public address: number;\n    /**\n     * Raw binary as found in the original.\n     */\n    public bin: number[];\n    /**\n     * Mnemonic of the instruction (e.g., \"ld\").\n     */\n    public mnemonic: string;\n    /**\n     * Parameters to the instruction (e.g., [\"hl\",\"nnnn\"]).\n     */\n    public params: string[];\n    /**\n     * Arguments to the instruction (e.g., [\"hl\",\"0x1234\"]).\n     */\n    public args: string[];\n    /**\n     * Label at this address.\n     */\n    public label: string | undefined;\n    /**\n     * Target of a jump from this instruction.\n     */\n    public jumpTarget: number | undefined;\n\n    constructor(address: number, bin: number[], mnemonic: string, params: string[], args: string[]) {\n        this.address = address;\n        this.bin = bin;\n        this.mnemonic = mnemonic;\n        this.params = params ?? [];\n        this.args = args ?? [];\n    }\n\n    /**\n     * Text version of the binary: two-digit hex numbers separated by a space.\n     */\n    public binText(): string {\n        return this.bin.map(toHexByte).join(\" \");\n    }\n\n    /**\n     * Text of the instruction (e.g., \"ld hl,0x1234\").\n     */\n    public toText(): string {\n        return (this.mnemonic + \" \" + this.args.join(\",\")).trim();\n    }\n\n    /**\n     * Replace all instances of \"varName\" in the args field with a replacement.\n     */\n    public replaceArgVariable(varName: string, replacement: string): void {\n        const args = this.args;\n        for (let i = 0; i < args.length; i++) {\n            let arg = args[i];\n\n            let changed: boolean;\n            do {\n                changed = false;\n                const pos = arg.indexOf(varName);\n                if (pos >= 0) {\n                    arg = arg.substr(0, pos) + replacement + arg.substr(pos + varName.length);\n                    changed = true;\n                }\n            } while (changed);\n\n            args[i] = arg;\n        }\n    }\n\n    /**\n     * Whether this instruction, when executed, potentially continues on to the next instructions. For example,\n     * \"nop\" and \"jr z,foo\" return true, but \"ret\" and \"jr foo\" return false.\n     */\n    public continues(): boolean {\n        // Return without a flag test.\n        if (this.mnemonic === \"ret\" && this.args.length === 0) {\n            return false;\n        }\n\n        // Return from interrupt.\n        if (this.mnemonic === \"reti\" || this.mnemonic === \"retn\") {\n            return false;\n        }\n\n        // Jump without a flag test.\n        if ((this.mnemonic === \"jp\" || this.mnemonic === \"jr\") && this.args.length === 1) {\n            return false;\n        }\n\n        // All else might continue.\n        return true;\n    }\n}\n","import opcodeMap from \"./Opcodes.json\";\nimport {Instruction} from \"./Instruction\";\nimport {inc16, signedByte, toHex, toHexByte, toHexWord, word} from \"z80-base\";\n\n// Temporary string used for address substitution.\nconst TARGET = \"TARGET\";\n\n// Number of bytes in memory.\nconst MEM_SIZE = 64*1024;\n\nexport class Disasm {\n    private readonly memory = new Uint8Array(MEM_SIZE);\n    private readonly hasContent = new Uint8Array(MEM_SIZE);\n    private readonly isDecoded = new Uint8Array(MEM_SIZE);\n    private readonly instructions: (Instruction | undefined)[] = new Array(MEM_SIZE);\n    private readonly knownLabels = new Map<number, string>();\n    /**\n     * Addresses that might be jumped to when running the code.\n     */\n    private entryPoints: number[] = [];\n\n    /**\n     * Add a chunk of binary somewhere in memory.\n     */\n    public addChunk(bin: ArrayLike<number>, address: number): void {\n        this.memory.set(bin, address);\n        this.hasContent.fill(1, address, address + bin.length);\n    }\n\n    /**\n     * Add a memory location that might be jumped to when running this program. If no entry\n     * points are specified, then the lower address for which we have binary will be used.\n     */\n    public addEntryPoint(entryPoint: number): void {\n        this.entryPoints.push(entryPoint);\n    }\n\n    /**\n     * Disassemble one instruction.\n     *\n     * @param address the address to disassemble.\n     */\n    private disassembleOne(address: number): Instruction {\n        // Bytes decoded so far in the instruction being disassembled.\n        let bytes: number[] = [];\n\n        // Get the next byte.\n        const next = (): number => {\n            const byte = this.memory[address];\n            bytes.push(byte);\n            address = inc16(address);\n            return byte;\n        };\n\n        const startAddress = address;\n        let jumpTarget: number | undefined = undefined;\n\n        // Fetch base instruction.\n        let byte = next();\n        let map: any = opcodeMap;\n\n        let instruction: Instruction | undefined;\n\n        while (instruction === undefined) {\n            let value: any = map[byte.toString(16)];\n            if (value === undefined) {\n                // TODO\n                // asm.push(\".byte 0x\" + byte.toString(16));\n                const stringParams = bytes.map((n) => \"0x\" + toHex(n, 2));\n                instruction = new Instruction(startAddress, bytes, \".byte\", stringParams, stringParams);\n            } else if (value.shift !== undefined) {\n                // Descend to sub-map.\n                map = value.shift;\n                byte = next();\n            } else {\n                // Found instruction. Parse arguments.\n                const args: string[] = (value.params ?? []).slice();\n\n                for (let i = 0; i < args.length; i++) {\n                    let arg = args[i];\n\n                    let changed: boolean;\n                    do {\n                        changed = false;\n\n                        // Fetch word argument.\n                        let pos = arg.indexOf(\"nnnn\");\n                        if (pos >= 0) {\n                            const lowByte = next();\n                            const highByte = next();\n                            const nnnn = word(highByte, lowByte);\n                            let target: string;\n                            if (value.mnemonic === \"call\" || value.mnemonic === \"jp\") {\n                                jumpTarget = nnnn;\n                                target = TARGET;\n                            } else {\n                                target = \"0x\" + toHex(nnnn, 4);\n                            }\n                            arg = arg.substr(0, pos) + target + arg.substr(pos + 4);\n                            changed = true;\n                        }\n\n                        // Fetch byte argument.\n                        pos = arg.indexOf(\"nn\");\n                        if (pos === -1) {\n                            pos = arg.indexOf(\"dd\");\n                        }\n                        if (pos >= 0) {\n                            const nn = next();\n                            arg = arg.substr(0, pos) + \"0x\" + toHex(nn, 2) + arg.substr(pos + 2);\n                            changed = true;\n                        }\n\n                        // Fetch offset argument.\n                        pos = arg.indexOf(\"offset\");\n                        if (pos >= 0) {\n                            const offset = signedByte(next());\n                            jumpTarget = address + offset;\n                            arg = arg.substr(0, pos) + TARGET + arg.substr(pos + 6);\n                            changed = true;\n                        }\n                    } while (changed);\n\n                    args[i] = arg;\n                }\n\n                instruction = new Instruction(startAddress, bytes, value.mnemonic, value.params, args);\n                if (jumpTarget !== undefined) {\n                    instruction.jumpTarget = jumpTarget;\n                }\n            }\n        }\n\n        return instruction;\n    }\n\n    /**\n     * Makes a data (.byte, .text) instruction starting at the specified address.\n     */\n    private makeDataInstruction(address: number): Instruction {\n        const startAddress = address;\n\n        // Whether the byte is appropriate for a .text instruction.\n        const isPrintable = (b: number) => b >= 32 && b < 127;\n        const isText = (b: number) => isPrintable(b) || b === 10 || b === 13;\n\n        const parts: string[] = [];\n        let mnemonic: string | undefined = undefined;\n\n        // Look for contiguous sequence of either text or not text.\n        if (isText(this.memory[address])) {\n            mnemonic = \".text\";\n            while (address < MEM_SIZE && this.hasContent[address] && !this.isDecoded[address] && isText(this.memory[address]) && address - startAddress < 50) {\n                const byte = this.memory[address];\n                if (isPrintable(byte)) {\n                    let char = String.fromCharCode(byte);\n                    if (char === \"\\\"\") {\n                        // zasm doesn't support this backslash syntax. We'd have to enclose the whole string\n                        // with single quotes.\n                        // http://k1.spdns.de/Develop/Projects/zasm/Documentation/z79.htm#R\n                        char = \"\\\\\\\"\";\n                    }\n                    if (parts.length > 0 && parts[parts.length - 1].startsWith(\"\\\"\")) {\n                        const s = parts[parts.length - 1];\n                        parts[parts.length - 1] = s.substring(0, s.length - 1) + char + \"\\\"\";\n                    } else {\n                        parts.push(\"\\\"\" + char + \"\\\"\");\n                    }\n                } else {\n                    parts.push(\"0x\" + toHexByte(byte));\n                }\n                address += 1;\n            }\n\n            if (address - startAddress < 2) {\n                // Probably not actual text.\n                mnemonic = undefined;\n                parts.splice(0, parts.length);\n                address = startAddress;\n            } else {\n                // Allow terminating NUL.\n                if (address < MEM_SIZE && this.hasContent[address] && !this.isDecoded[address] && this.memory[address] === 0) {\n                    parts.push(\"0x\" + toHexByte(0));\n                    address += 1;\n                }\n            }\n        }\n\n        if (mnemonic === undefined) {\n            mnemonic = \".byte\";\n            while (address < MEM_SIZE && this.hasContent[address] && !this.isDecoded[address] && address - startAddress < 8) {\n                parts.push(\"0x\" + toHexByte(this.memory[address]));\n                address += 1;\n            }\n        }\n\n        const bytes = Array.from(this.memory.slice(startAddress, address));\n        return new Instruction(startAddress, bytes, mnemonic, parts, parts);\n    }\n\n    /**\n     * Add an array of known label ([address, label] pairs).\n     */\n    public addLabels(labels: [number, string][]): void {\n        for (const [address, label] of labels) {\n            this.knownLabels.set(address, label);\n        }\n    }\n\n    /**\n     * Disassemble all instructions and assign labels.\n     */\n    public disassemble(): Instruction[] {\n        // Create set of addresses we want to decode, starting with our entry points.\n        const addressesToDecode = new Set<number>();\n\n        const addAddressToDecode = (number: number | undefined): void => {\n            if (number !== undefined &&\n                this.hasContent[number] &&\n                this.instructions[number] === undefined) {\n\n                addressesToDecode.add(number);\n            }\n        };\n\n        if (this.entryPoints.length === 0) {\n            // No explicit entry points. Default to lowest address we have data for.\n            for (let address = 0; address < MEM_SIZE; address++) {\n                if (this.hasContent[address]) {\n                    addressesToDecode.add(address);\n                    break;\n                }\n            }\n            if (this.entryPoints.length === 0) {\n                throw new Error(\"not binary content was specified\");\n            }\n        } else {\n            for (const address of this.entryPoints) {\n                addressesToDecode.add(address);\n            }\n        }\n\n        // Keep decoding as long as we have addresses to decode.\n        while (addressesToDecode.size !== 0) {\n            // Pick any to do next.\n            const address = addressesToDecode.values().next().value;\n            addressesToDecode.delete(address);\n            const instruction = this.disassembleOne(address);\n            this.instructions[address] = instruction;\n            this.isDecoded.fill(1, address, address + instruction.bin.length);\n            addAddressToDecode(instruction.jumpTarget);\n\n            if (instruction.continues()) {\n                addAddressToDecode(address + instruction.bin.length);\n            }\n        }\n\n        // Map from jump target to list of instructions that jump there.\n        const jumpTargetMap = new Map<number, Instruction[]>();\n\n        const instructions: Instruction[] = [];\n        for (let address = 0; address < MEM_SIZE; address++) {\n            if (this.hasContent[address]) {\n                let instruction = this.instructions[address];\n                if (instruction === undefined) {\n                    instruction = this.makeDataInstruction(address);\n                }\n                instructions.push(instruction);\n\n                if (instruction.jumpTarget !== undefined) {\n                    // Add this instruction to the list of instructions that call this target.\n                    let sources = jumpTargetMap.get(instruction.jumpTarget);\n                    if (sources === undefined) {\n                        sources = [];\n                        jumpTargetMap.set(instruction.jumpTarget, sources);\n                    }\n                    sources.push(instruction);\n                }\n\n                address += instruction.bin.length - 1;\n            }\n        }\n\n        // Assign labels.\n        let labelCounter = 1;\n        for (const instruction of instructions) {\n            let label = this.knownLabels.get(instruction.address);\n            const sources = jumpTargetMap.get(instruction.address) ?? [];\n            if (sources.length !== 0) {\n                if (label === undefined) {\n                    // Make anonymous label.\n                    label = \"L\" + labelCounter++;\n                }\n            }\n            if (label !== undefined) {\n                instruction.label = label;\n\n                // Replace pseudo-target in instruction.\n                for (const source of sources) {\n                    source.replaceArgVariable(TARGET, label);\n                }\n            }\n        }\n\n        // Replace the target variable with the actual address for those\n        // jumps that go outside our disassembled code.\n        for (const instruction of instructions) {\n            if (instruction.jumpTarget !== undefined) {\n                instruction.replaceArgVariable(TARGET, \"0x\" + toHexWord(instruction.jumpTarget));\n            }\n        }\n\n        return instructions;\n    }\n}\n","\nexport const Z80_KNOWN_LABELS: [number, string][] = [\n    [0x0000, \"rst00\"],\n    [0x0008, \"rst08\"],\n    [0x0010, \"rst10\"],\n    [0x0018, \"rst18\"],\n    [0x0020, \"rst20\"],\n    [0x0028, \"rst28\"],\n    [0x0030, \"rst30\"],\n    [0x0038, \"rst38\"],\n];\n\nexport const TRS80_MODEL_III_KNOWN_LABELS: [number, string][] = [\n    [0x0298, \"clkon\"], // Turn clock on.\n    [0x02a1, \"clkoff\"], // Turn clock off.\n    [0x0296, \"cshin\"], // Search for cassette header and sync byte.\n    [0x0235, \"csin\"],  // Read cassette byte.\n    [0x0287, \"cshwr\"], // Write cassette leader and sync byte.\n    [0x01f8, \"csoff\"], // Turn off cassette.\n    [0x0264, \"csout\"], // Write byte to cassette.\n    [0x3033, \"date\"], // Get today's date.\n    [0x0060, \"delay\"], // Delay for a specified interval (2.46 + 14.8*BC microseconds).\n    [0x0069, \"initio\"], // Initialize all I/O drivers.\n    [0x002b, \"kbchar\"], // Get a keyboard character if available.\n    [0x0040, \"kbline\"], // Wait for a line from the keyboard.\n    [0x0049, \"kbwait\"], // Wait for a keyboard character.\n    [0x028d, \"kbbrk\"], // Check for a Break key only.\n    [0x003b, \"prchar\"], // Output a character to the printer.\n    [0x01d9, \"prscn\"], // Print entire screen contents.\n    [0x1a19, \"ready\"], // Jump to Model III Basic \"Ready\".\n    [0x0000, \"reset\"], // Jump to reset.\n    [0x006c, \"route\"], // Change I/O device routing.\n    [0x005a, \"rsinit\"], // Initialize the RS-232-C interface.\n    [0x0050, \"rsrcv\"], // Receive a character from the RS-232-C interface.\n    [0x0055, \"rstx\"], // Transmit a character to the RS-232-C interface.\n    [0x3042, \"setcas\"], // Prompt user to set cassette baud rate.\n    [0x3036, \"time\"], // Get the time.\n    [0x0033, \"vdchar\"], // Display a character.\n    [0x01c9, \"vdcls\"], // Clear the video display screen.\n    [0x021b, \"vdline\"], // Display a line.\n];\n","export {Disasm} from \"./Disasm\";\nexport {Instruction} from \"./Instruction\";\nexport * from \"./KnownLabels\";\n","/**\n * Interface for fetching cassette audio data. We make this a concrete\n * class because rollup.js can't handle exported interfaces.\n */\nexport class Cassette {\n    /**\n     * The number of samples per second that this audio represents.\n     */\n    public samplesPerSecond: number = 44100;\n\n    /**\n     * Called when the motor starts.\n     */\n    public onMotorStart(): void {\n        // Optional function.\n    }\n\n    /**\n     * Read the next sample. Must be in the range -1 to 1. If we try to read off\n     * the end of the cassette, just return zero.\n     */\n    public readSample(): number {\n        return 0;\n    }\n\n    /**\n     * Called when the motor stops.\n     */\n    public onMotorStop(): void {\n        // Optional function.\n    }\n}\n","// Do not modify. This file is generated by GenerateOpcodes.ts.\n\nimport {Z80} from \"./Z80\";\nimport {toHex, inc8, inc16, dec8, dec16, add8, add16, sub8, sub16, word, hi, lo, Flag, signedByte} from \"z80-base\";\n\n// Tables for computing flags after an operation.\nconst halfCarryAddTable = [0, Flag.H, Flag.H, Flag.H, 0, 0, 0, Flag.H];\nconst halfCarrySubTable = [0, 0, Flag.H, 0, Flag.H, 0, Flag.H, Flag.H];\nconst overflowAddTable = [0, 0, 0, Flag.V, Flag.V, 0, 0, 0];\nconst overflowSubTable = [0, Flag.V, 0, 0, 0, 0, Flag.V, 0];\n\nlet fillMap: Map<number, (z80: Z80) => void>;\nconst decodeMap = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMap;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x00, (z80: Z80) => { // nop\n});\nfillMap.set(0x01, (z80: Z80) => { // ld bc,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.bc = value;\n});\nfillMap.set(0x02, (z80: Z80) => { // ld (bc),a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = word(z80.regs.a, inc16(z80.regs.bc));\n    z80.writeByte(z80.regs.bc, value);\n});\nfillMap.set(0x03, (z80: Z80) => { // inc bc\n    let value: number;\n    value = z80.regs.bc;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.bc = value;\n});\nfillMap.set(0x04, (z80: Z80) => { // inc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x05, (z80: Z80) => { // dec b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x06, (z80: Z80) => { // ld b,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.b = value;\n});\nfillMap.set(0x07, (z80: Z80) => { // rlca\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a >> 7) | (z80.regs.a << 1)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x80) !== 0 ? Flag.C : 0);\n});\nfillMap.set(0x08, (z80: Z80) => { // ex af,af'\n    const rightValue = z80.regs.afPrime;\n    z80.regs.afPrime = z80.regs.af;\n    z80.regs.af = rightValue;\n});\nfillMap.set(0x09, (z80: Z80) => { // add hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x0A, (z80: Z80) => { // ld a,(bc)\n    let value: number;\n    z80.regs.memptr = inc16(z80.regs.bc);\n    value = z80.readByte(z80.regs.bc);\n    z80.regs.a = value;\n});\nfillMap.set(0x0B, (z80: Z80) => { // dec bc\n    let value: number;\n    value = z80.regs.bc;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.bc = value;\n});\nfillMap.set(0x0C, (z80: Z80) => { // inc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x0D, (z80: Z80) => { // dec c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x0E, (z80: Z80) => { // ld c,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.c = value;\n});\nfillMap.set(0x0F, (z80: Z80) => { // rrca\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a >> 1) | (z80.regs.a << 7)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x01) !== 0 ? Flag.C : 0);\n});\nfillMap.set(0x10, (z80: Z80) => { // djnz offset\n    z80.incTStateCount(1);\n    z80.regs.b = dec8(z80.regs.b);\n    if (z80.regs.b !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\nfillMap.set(0x11, (z80: Z80) => { // ld de,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.de = value;\n});\nfillMap.set(0x12, (z80: Z80) => { // ld (de),a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = word(z80.regs.a, inc16(z80.regs.de));\n    z80.writeByte(z80.regs.de, value);\n});\nfillMap.set(0x13, (z80: Z80) => { // inc de\n    let value: number;\n    value = z80.regs.de;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.de = value;\n});\nfillMap.set(0x14, (z80: Z80) => { // inc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x15, (z80: Z80) => { // dec d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x16, (z80: Z80) => { // ld d,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.d = value;\n});\nfillMap.set(0x17, (z80: Z80) => { // rla\n    const oldA = z80.regs.a;\n    z80.regs.a = ((z80.regs.a << 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x01 : 0)) & 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x80) !== 0 ? Flag.C : 0);\n});\nfillMap.set(0x18, (z80: Z80) => { // jr offset\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0x19, (z80: Z80) => { // add hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x1A, (z80: Z80) => { // ld a,(de)\n    let value: number;\n    z80.regs.memptr = inc16(z80.regs.de);\n    value = z80.readByte(z80.regs.de);\n    z80.regs.a = value;\n});\nfillMap.set(0x1B, (z80: Z80) => { // dec de\n    let value: number;\n    value = z80.regs.de;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.de = value;\n});\nfillMap.set(0x1C, (z80: Z80) => { // inc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x1D, (z80: Z80) => { // dec e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x1E, (z80: Z80) => { // ld e,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.e = value;\n});\nfillMap.set(0x1F, (z80: Z80) => { // rra\n    const oldA = z80.regs.a;\n    z80.regs.a = (z80.regs.a >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | ((oldA & 0x01) !== 0 ? Flag.C : 0);\n});\nfillMap.set(0x20, (z80: Z80) => { // jr nz,offset\n    if ((z80.regs.f & Flag.Z) === 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\nfillMap.set(0x21, (z80: Z80) => { // ld hl,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.hl = value;\n});\nfillMap.set(0x22, (z80: Z80) => { // ld (nnnn),hl\n    let value: number;\n    value = z80.regs.hl;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x23, (z80: Z80) => { // inc hl\n    let value: number;\n    value = z80.regs.hl;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.hl = value;\n});\nfillMap.set(0x24, (z80: Z80) => { // inc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x25, (z80: Z80) => { // dec h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x26, (z80: Z80) => { // ld h,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.h = value;\n});\nfillMap.set(0x27, (z80: Z80) => { // daa\n    let value = 0;\n    let carry = z80.regs.f & Flag.C;\n    if ((z80.regs.f & Flag.H) !== 0 || ((z80.regs.a & 0x0F) > 9)) {\n        value = 6; // Skip over hex digits in lower nybble.\n    }\n    if (carry !== 0 || z80.regs.a > 0x99) {\n        value |= 0x60; // Skip over hex digits in upper nybble.\n    }\n    if (z80.regs.a > 0x99) {\n        carry = Flag.C;\n    }\n    if ((z80.regs.f & Flag.N) !== 0) {\n        let result = sub16(z80.regs.a, value);\n        const lookup = (((z80.regs.a & 0x88) >> 3) |\n                       ((value & 0x88) >> 2) |\n                       ((result & 0x88) >> 1)) & 0xFF;\n        z80.regs.a = result & 0xFF;\n        z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n    } else {\n        let result = add16(z80.regs.a, value);\n        const lookup = (((z80.regs.a & 0x88) >> 3) |\n                       ((value & 0x88) >> 2) |\n                       ((result & 0x88) >> 1)) & 0xFF;\n        z80.regs.a = result & 0xFF;\n        z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n    }\n    z80.regs.f = (z80.regs.f & ~(Flag.C | Flag.P)) | carry | z80.parityTable[z80.regs.a];\n});\nfillMap.set(0x28, (z80: Z80) => { // jr z,offset\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\nfillMap.set(0x29, (z80: Z80) => { // add hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x2A, (z80: Z80) => { // ld hl,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.hl = value;\n});\nfillMap.set(0x2B, (z80: Z80) => { // dec hl\n    let value: number;\n    value = z80.regs.hl;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.hl = value;\n});\nfillMap.set(0x2C, (z80: Z80) => { // inc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x2D, (z80: Z80) => { // dec l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x2E, (z80: Z80) => { // ld l,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.l = value;\n});\nfillMap.set(0x2F, (z80: Z80) => { // cpl\n    z80.regs.a ^= 0xFF;\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.P | Flag.Z | Flag.S)) | (z80.regs.a & (Flag.X3 | Flag.X5)) | Flag.N | Flag.H;\n});\nfillMap.set(0x30, (z80: Z80) => { // jr nc,offset\n    if ((z80.regs.f & Flag.C) === 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\nfillMap.set(0x31, (z80: Z80) => { // ld sp,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.sp = value;\n});\nfillMap.set(0x32, (z80: Z80) => { // ld (nnnn),a\n    let value: number;\n    value = z80.regs.a;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.regs.a, inc16(value));\n    z80.writeByte(value, z80.regs.a);\n});\nfillMap.set(0x33, (z80: Z80) => { // inc sp\n    let value: number;\n    value = z80.regs.sp;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.sp = value;\n});\nfillMap.set(0x34, (z80: Z80) => { // inc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x35, (z80: Z80) => { // dec (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x36, (z80: Z80) => { // ld (hl),nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x37, (z80: Z80) => { // scf\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | Flag.C | (z80.regs.a & (Flag.X3 | Flag.X5));\n});\nfillMap.set(0x38, (z80: Z80) => { // jr c,offset\n    if ((z80.regs.f & Flag.C) !== 0) {\n        const offset = z80.readByte(z80.regs.pc);\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, signedByte(offset));\n        z80.regs.pc = inc16(z80.regs.pc);\n        z80.regs.memptr = z80.regs.pc;\n    } else {\n        z80.incTStateCount(3);\n        z80.regs.pc = inc16(z80.regs.pc);\n    }\n});\nfillMap.set(0x39, (z80: Z80) => { // add hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl + value;\n    const lookup = (((z80.regs.hl & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x3A, (z80: Z80) => { // ld a,(nnnn)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = inc16(value);\n    value = z80.readByte(value);\n    z80.regs.a = value;\n});\nfillMap.set(0x3B, (z80: Z80) => { // dec sp\n    let value: number;\n    value = z80.regs.sp;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.sp = value;\n});\nfillMap.set(0x3C, (z80: Z80) => { // inc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x3D, (z80: Z80) => { // dec a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x3E, (z80: Z80) => { // ld a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a = value;\n});\nfillMap.set(0x3F, (z80: Z80) => { // ccf\n    z80.regs.f = (z80.regs.f & (Flag.P | Flag.Z | Flag.S)) | ((z80.regs.f & Flag.C) !== 0 ? Flag.H : Flag.C) | (z80.regs.a & (Flag.X3 | Flag.X5));\n});\nfillMap.set(0x40, (z80: Z80) => { // ld b,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.b = value;\n});\nfillMap.set(0x41, (z80: Z80) => { // ld b,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.b = value;\n});\nfillMap.set(0x42, (z80: Z80) => { // ld b,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.b = value;\n});\nfillMap.set(0x43, (z80: Z80) => { // ld b,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.b = value;\n});\nfillMap.set(0x44, (z80: Z80) => { // ld b,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.b = value;\n});\nfillMap.set(0x45, (z80: Z80) => { // ld b,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.b = value;\n});\nfillMap.set(0x46, (z80: Z80) => { // ld b,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.b = value;\n});\nfillMap.set(0x47, (z80: Z80) => { // ld b,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.b = value;\n});\nfillMap.set(0x48, (z80: Z80) => { // ld c,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.c = value;\n});\nfillMap.set(0x49, (z80: Z80) => { // ld c,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.c = value;\n});\nfillMap.set(0x4A, (z80: Z80) => { // ld c,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.c = value;\n});\nfillMap.set(0x4B, (z80: Z80) => { // ld c,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.c = value;\n});\nfillMap.set(0x4C, (z80: Z80) => { // ld c,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.c = value;\n});\nfillMap.set(0x4D, (z80: Z80) => { // ld c,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.c = value;\n});\nfillMap.set(0x4E, (z80: Z80) => { // ld c,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.c = value;\n});\nfillMap.set(0x4F, (z80: Z80) => { // ld c,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.c = value;\n});\nfillMap.set(0x50, (z80: Z80) => { // ld d,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.d = value;\n});\nfillMap.set(0x51, (z80: Z80) => { // ld d,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.d = value;\n});\nfillMap.set(0x52, (z80: Z80) => { // ld d,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.d = value;\n});\nfillMap.set(0x53, (z80: Z80) => { // ld d,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.d = value;\n});\nfillMap.set(0x54, (z80: Z80) => { // ld d,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.d = value;\n});\nfillMap.set(0x55, (z80: Z80) => { // ld d,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.d = value;\n});\nfillMap.set(0x56, (z80: Z80) => { // ld d,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.d = value;\n});\nfillMap.set(0x57, (z80: Z80) => { // ld d,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.d = value;\n});\nfillMap.set(0x58, (z80: Z80) => { // ld e,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.e = value;\n});\nfillMap.set(0x59, (z80: Z80) => { // ld e,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.e = value;\n});\nfillMap.set(0x5A, (z80: Z80) => { // ld e,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.e = value;\n});\nfillMap.set(0x5B, (z80: Z80) => { // ld e,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.e = value;\n});\nfillMap.set(0x5C, (z80: Z80) => { // ld e,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.e = value;\n});\nfillMap.set(0x5D, (z80: Z80) => { // ld e,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.e = value;\n});\nfillMap.set(0x5E, (z80: Z80) => { // ld e,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.e = value;\n});\nfillMap.set(0x5F, (z80: Z80) => { // ld e,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.e = value;\n});\nfillMap.set(0x60, (z80: Z80) => { // ld h,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.h = value;\n});\nfillMap.set(0x61, (z80: Z80) => { // ld h,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.h = value;\n});\nfillMap.set(0x62, (z80: Z80) => { // ld h,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.h = value;\n});\nfillMap.set(0x63, (z80: Z80) => { // ld h,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.h = value;\n});\nfillMap.set(0x64, (z80: Z80) => { // ld h,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.h = value;\n});\nfillMap.set(0x65, (z80: Z80) => { // ld h,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.h = value;\n});\nfillMap.set(0x66, (z80: Z80) => { // ld h,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.h = value;\n});\nfillMap.set(0x67, (z80: Z80) => { // ld h,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.h = value;\n});\nfillMap.set(0x68, (z80: Z80) => { // ld l,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.l = value;\n});\nfillMap.set(0x69, (z80: Z80) => { // ld l,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.l = value;\n});\nfillMap.set(0x6A, (z80: Z80) => { // ld l,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.l = value;\n});\nfillMap.set(0x6B, (z80: Z80) => { // ld l,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.l = value;\n});\nfillMap.set(0x6C, (z80: Z80) => { // ld l,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.l = value;\n});\nfillMap.set(0x6D, (z80: Z80) => { // ld l,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.l = value;\n});\nfillMap.set(0x6E, (z80: Z80) => { // ld l,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.l = value;\n});\nfillMap.set(0x6F, (z80: Z80) => { // ld l,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.l = value;\n});\nfillMap.set(0x70, (z80: Z80) => { // ld (hl),b\n    let value: number;\n    value = z80.regs.b;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x71, (z80: Z80) => { // ld (hl),c\n    let value: number;\n    value = z80.regs.c;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x72, (z80: Z80) => { // ld (hl),d\n    let value: number;\n    value = z80.regs.d;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x73, (z80: Z80) => { // ld (hl),e\n    let value: number;\n    value = z80.regs.e;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x74, (z80: Z80) => { // ld (hl),h\n    let value: number;\n    value = z80.regs.h;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x75, (z80: Z80) => { // ld (hl),l\n    let value: number;\n    value = z80.regs.l;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x76, (z80: Z80) => { // halt\n    z80.regs.halted = 1;\n    z80.regs.pc = dec16(z80.regs.pc);\n});\nfillMap.set(0x77, (z80: Z80) => { // ld (hl),a\n    let value: number;\n    value = z80.regs.a;\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x78, (z80: Z80) => { // ld a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a = value;\n});\nfillMap.set(0x79, (z80: Z80) => { // ld a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a = value;\n});\nfillMap.set(0x7A, (z80: Z80) => { // ld a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a = value;\n});\nfillMap.set(0x7B, (z80: Z80) => { // ld a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a = value;\n});\nfillMap.set(0x7C, (z80: Z80) => { // ld a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a = value;\n});\nfillMap.set(0x7D, (z80: Z80) => { // ld a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a = value;\n});\nfillMap.set(0x7E, (z80: Z80) => { // ld a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a = value;\n});\nfillMap.set(0x7F, (z80: Z80) => { // ld a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a = value;\n});\nfillMap.set(0x80, (z80: Z80) => { // add a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x81, (z80: Z80) => { // add a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x82, (z80: Z80) => { // add a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x83, (z80: Z80) => { // add a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x84, (z80: Z80) => { // add a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x85, (z80: Z80) => { // add a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x86, (z80: Z80) => { // add a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x87, (z80: Z80) => { // add a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x88, (z80: Z80) => { // adc a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x89, (z80: Z80) => { // adc a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8A, (z80: Z80) => { // adc a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8B, (z80: Z80) => { // adc a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8C, (z80: Z80) => { // adc a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8D, (z80: Z80) => { // adc a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8E, (z80: Z80) => { // adc a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8F, (z80: Z80) => { // adc a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x90, (z80: Z80) => { // sub a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x91, (z80: Z80) => { // sub a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x92, (z80: Z80) => { // sub a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x93, (z80: Z80) => { // sub a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x94, (z80: Z80) => { // sub a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x95, (z80: Z80) => { // sub a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x96, (z80: Z80) => { // sub a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x97, (z80: Z80) => { // sub a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x98, (z80: Z80) => { // sbc a,b\n    let value: number;\n    value = z80.regs.b;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x99, (z80: Z80) => { // sbc a,c\n    let value: number;\n    value = z80.regs.c;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9A, (z80: Z80) => { // sbc a,d\n    let value: number;\n    value = z80.regs.d;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9B, (z80: Z80) => { // sbc a,e\n    let value: number;\n    value = z80.regs.e;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9C, (z80: Z80) => { // sbc a,h\n    let value: number;\n    value = z80.regs.h;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9D, (z80: Z80) => { // sbc a,l\n    let value: number;\n    value = z80.regs.l;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9E, (z80: Z80) => { // sbc a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9F, (z80: Z80) => { // sbc a,a\n    let value: number;\n    value = z80.regs.a;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xA0, (z80: Z80) => { // and a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA1, (z80: Z80) => { // and a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA2, (z80: Z80) => { // and a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA3, (z80: Z80) => { // and a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA4, (z80: Z80) => { // and a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA5, (z80: Z80) => { // and a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA6, (z80: Z80) => { // and a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA7, (z80: Z80) => { // and a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA8, (z80: Z80) => { // xor a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xA9, (z80: Z80) => { // xor a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAA, (z80: Z80) => { // xor a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAB, (z80: Z80) => { // xor a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAC, (z80: Z80) => { // xor a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAD, (z80: Z80) => { // xor a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAE, (z80: Z80) => { // xor a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAF, (z80: Z80) => { // xor a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB0, (z80: Z80) => { // or a,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB1, (z80: Z80) => { // or a,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB2, (z80: Z80) => { // or a,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB3, (z80: Z80) => { // or a,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB4, (z80: Z80) => { // or a,h\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB5, (z80: Z80) => { // or a,l\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB6, (z80: Z80) => { // or a,(hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB7, (z80: Z80) => { // or a,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB8, (z80: Z80) => { // cp b\n    let value: number;\n    value = z80.regs.b;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xB9, (z80: Z80) => { // cp c\n    let value: number;\n    value = z80.regs.c;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBA, (z80: Z80) => { // cp d\n    let value: number;\n    value = z80.regs.d;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBB, (z80: Z80) => { // cp e\n    let value: number;\n    value = z80.regs.e;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBC, (z80: Z80) => { // cp h\n    let value: number;\n    value = z80.regs.h;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBD, (z80: Z80) => { // cp l\n    let value: number;\n    value = z80.regs.l;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBE, (z80: Z80) => { // cp (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBF, (z80: Z80) => { // cp a\n    let value: number;\n    value = z80.regs.a;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xC0, (z80: Z80) => { // ret nz\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xC1, (z80: Z80) => { // pop bc\n    z80.regs.bc = z80.popWord();\n});\nfillMap.set(0xC2, (z80: Z80) => { // jp nz,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xC3, (z80: Z80) => { // jp nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.pc = z80.regs.memptr;\n});\nfillMap.set(0xC4, (z80: Z80) => { // call nz,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xC5, (z80: Z80) => { // push bc\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.bc);\n});\nfillMap.set(0xC6, (z80: Z80) => { // add a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xC7, (z80: Z80) => { // rst 00\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0000;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xC8, (z80: Z80) => { // ret z\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xC9, (z80: Z80) => { // ret\n    z80.regs.pc = z80.popWord();\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xCA, (z80: Z80) => { // jp z,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xCB, (z80: Z80) => { // shift cb\n    decodeCB(z80);\n});\nfillMap.set(0xCC, (z80: Z80) => { // call z,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.Z) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xCD, (z80: Z80) => { // call nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = z80.regs.memptr;\n});\nfillMap.set(0xCE, (z80: Z80) => { // adc a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xCF, (z80: Z80) => { // rst 8\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0008;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xD0, (z80: Z80) => { // ret nc\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xD1, (z80: Z80) => { // pop de\n    z80.regs.de = z80.popWord();\n});\nfillMap.set(0xD2, (z80: Z80) => { // jp nc,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xD3, (z80: Z80) => { // out (nn),a\n    const port = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.regs.a, inc8(port));\n    z80.writePort(word(z80.regs.a, port), z80.regs.a);\n});\nfillMap.set(0xD4, (z80: Z80) => { // call nc,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xD5, (z80: Z80) => { // push de\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.de);\n});\nfillMap.set(0xD6, (z80: Z80) => { // sub a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xD7, (z80: Z80) => { // rst 10\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0010;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xD8, (z80: Z80) => { // ret c\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xD9, (z80: Z80) => { // exx\n    let tmp: number;\n    tmp = z80.regs.bc; z80.regs.bc = z80.regs.bcPrime; z80.regs.bcPrime = tmp;\n    tmp = z80.regs.de; z80.regs.de = z80.regs.dePrime; z80.regs.dePrime = tmp;\n    tmp = z80.regs.hl; z80.regs.hl = z80.regs.hlPrime; z80.regs.hlPrime = tmp;\n});\nfillMap.set(0xDA, (z80: Z80) => { // jp c,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xDB, (z80: Z80) => { // in a,(nn)\n    const port = word(z80.regs.a, z80.readByte(z80.regs.pc));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a = z80.readPort(port);\n    z80.regs.memptr = inc16(port);\n});\nfillMap.set(0xDC, (z80: Z80) => { // call c,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xDD, (z80: Z80) => { // shift dd\n    decodeDD(z80);\n});\nfillMap.set(0xDE, (z80: Z80) => { // sbc a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xDF, (z80: Z80) => { // rst 18\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0018;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xE0, (z80: Z80) => { // ret po\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xE1, (z80: Z80) => { // pop hl\n    z80.regs.hl = z80.popWord();\n});\nfillMap.set(0xE2, (z80: Z80) => { // jp po,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xE3, (z80: Z80) => { // ex (sp),hl\n    const rightValue = z80.regs.hl;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.hl = word(leftValueH, leftValueL);\n});\nfillMap.set(0xE4, (z80: Z80) => { // call po,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xE5, (z80: Z80) => { // push hl\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.hl);\n});\nfillMap.set(0xE6, (z80: Z80) => { // and nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xE7, (z80: Z80) => { // rst 20\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0020;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xE8, (z80: Z80) => { // ret pe\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xE9, (z80: Z80) => { // jp hl\n    z80.regs.pc = z80.regs.hl;\n});\nfillMap.set(0xEA, (z80: Z80) => { // jp pe,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xEB, (z80: Z80) => { // ex de,hl\n    const rightValue = z80.regs.hl;\n    z80.regs.hl = z80.regs.de;\n    z80.regs.de = rightValue;\n});\nfillMap.set(0xEC, (z80: Z80) => { // call pe,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.P) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xED, (z80: Z80) => { // shift ed\n    decodeED(z80);\n});\nfillMap.set(0xEE, (z80: Z80) => { // xor a,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xEF, (z80: Z80) => { // rst 28\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0028;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xF0, (z80: Z80) => { // ret p\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xF1, (z80: Z80) => { // pop af\n    z80.regs.af = z80.popWord();\n});\nfillMap.set(0xF2, (z80: Z80) => { // jp p,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xF3, (z80: Z80) => { // di\n    z80.regs.iff1 = 0;\n    z80.regs.iff2 = 0;\n});\nfillMap.set(0xF4, (z80: Z80) => { // call p,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) === 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xF5, (z80: Z80) => { // push af\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.af);\n});\nfillMap.set(0xF6, (z80: Z80) => { // or nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xF7, (z80: Z80) => { // rst 30\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0030;\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0xF8, (z80: Z80) => { // ret m\n    z80.incTStateCount(1);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.regs.pc = z80.popWord();\n        z80.regs.memptr = z80.regs.pc;\n    }\n});\nfillMap.set(0xF9, (z80: Z80) => { // ld sp,hl\n    let value: number;\n    value = z80.regs.hl;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\nfillMap.set(0xFA, (z80: Z80) => { // jp m,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xFB, (z80: Z80) => { // ei\n    z80.regs.iff1 = 1;\n    z80.regs.iff2 = 1;\n});\nfillMap.set(0xFC, (z80: Z80) => { // call m,nnnn\n    z80.regs.memptr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = word(z80.readByte(z80.regs.pc), z80.regs.memptr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    if ((z80.regs.f & Flag.S) !== 0) {\n        z80.incTStateCount(1);\n        z80.pushWord(z80.regs.pc);\n        z80.regs.pc = z80.regs.memptr;\n    }\n});\nfillMap.set(0xFD, (z80: Z80) => { // shift fd\n    decodeFD(z80);\n});\nfillMap.set(0xFE, (z80: Z80) => { // cp nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xFF, (z80: Z80) => { // rst 38\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.pc);\n    z80.regs.pc = 0x0038;\n    z80.regs.memptr = z80.regs.pc;\n});\n\nconst decodeMapCB = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapCB;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x00, (z80: Z80) => { // rlc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x01, (z80: Z80) => { // rlc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x02, (z80: Z80) => { // rlc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x03, (z80: Z80) => { // rlc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x04, (z80: Z80) => { // rlc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x05, (z80: Z80) => { // rlc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x06, (z80: Z80) => { // rlc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x07, (z80: Z80) => { // rlc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x08, (z80: Z80) => { // rrc b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x09, (z80: Z80) => { // rrc c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x0A, (z80: Z80) => { // rrc d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x0B, (z80: Z80) => { // rrc e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x0C, (z80: Z80) => { // rrc h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x0D, (z80: Z80) => { // rrc l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x0E, (z80: Z80) => { // rrc (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x0F, (z80: Z80) => { // rrc a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x10, (z80: Z80) => { // rl b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x11, (z80: Z80) => { // rl c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x12, (z80: Z80) => { // rl d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x13, (z80: Z80) => { // rl e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x14, (z80: Z80) => { // rl h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x15, (z80: Z80) => { // rl l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x16, (z80: Z80) => { // rl (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x17, (z80: Z80) => { // rl a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x18, (z80: Z80) => { // rr b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x19, (z80: Z80) => { // rr c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x1A, (z80: Z80) => { // rr d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x1B, (z80: Z80) => { // rr e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x1C, (z80: Z80) => { // rr h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x1D, (z80: Z80) => { // rr l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x1E, (z80: Z80) => { // rr (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x1F, (z80: Z80) => { // rr a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x20, (z80: Z80) => { // sla b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x21, (z80: Z80) => { // sla c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x22, (z80: Z80) => { // sla d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x23, (z80: Z80) => { // sla e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x24, (z80: Z80) => { // sla h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x25, (z80: Z80) => { // sla l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x26, (z80: Z80) => { // sla (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x27, (z80: Z80) => { // sla a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x28, (z80: Z80) => { // sra b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x29, (z80: Z80) => { // sra c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x2A, (z80: Z80) => { // sra d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x2B, (z80: Z80) => { // sra e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x2C, (z80: Z80) => { // sra h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x2D, (z80: Z80) => { // sra l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x2E, (z80: Z80) => { // sra (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x2F, (z80: Z80) => { // sra a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x30, (z80: Z80) => { // sll b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x31, (z80: Z80) => { // sll c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x32, (z80: Z80) => { // sll d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x33, (z80: Z80) => { // sll e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x34, (z80: Z80) => { // sll h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x35, (z80: Z80) => { // sll l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x36, (z80: Z80) => { // sll (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x37, (z80: Z80) => { // sll a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x38, (z80: Z80) => { // srl b\n    let value: number;\n    value = z80.regs.b;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.b = value;\n});\nfillMap.set(0x39, (z80: Z80) => { // srl c\n    let value: number;\n    value = z80.regs.c;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.c = value;\n});\nfillMap.set(0x3A, (z80: Z80) => { // srl d\n    let value: number;\n    value = z80.regs.d;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.d = value;\n});\nfillMap.set(0x3B, (z80: Z80) => { // srl e\n    let value: number;\n    value = z80.regs.e;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.e = value;\n});\nfillMap.set(0x3C, (z80: Z80) => { // srl h\n    let value: number;\n    value = z80.regs.h;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.h = value;\n});\nfillMap.set(0x3D, (z80: Z80) => { // srl l\n    let value: number;\n    value = z80.regs.l;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.l = value;\n});\nfillMap.set(0x3E, (z80: Z80) => { // srl (hl)\n    let value: number;\n    value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.hl, value);\n});\nfillMap.set(0x3F, (z80: Z80) => { // srl a\n    let value: number;\n    value = z80.regs.a;\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.regs.a = value;\n});\nfillMap.set(0x40, (z80: Z80) => { // bit 0,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x41, (z80: Z80) => { // bit 0,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x42, (z80: Z80) => { // bit 0,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x43, (z80: Z80) => { // bit 0,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x44, (z80: Z80) => { // bit 0,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x45, (z80: Z80) => { // bit 0,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x46, (z80: Z80) => { // bit 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x47, (z80: Z80) => { // bit 0,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x48, (z80: Z80) => { // bit 1,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x49, (z80: Z80) => { // bit 1,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4A, (z80: Z80) => { // bit 1,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4B, (z80: Z80) => { // bit 1,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4C, (z80: Z80) => { // bit 1,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4D, (z80: Z80) => { // bit 1,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4E, (z80: Z80) => { // bit 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x4F, (z80: Z80) => { // bit 1,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x50, (z80: Z80) => { // bit 2,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x51, (z80: Z80) => { // bit 2,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x52, (z80: Z80) => { // bit 2,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x53, (z80: Z80) => { // bit 2,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x54, (z80: Z80) => { // bit 2,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x55, (z80: Z80) => { // bit 2,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x56, (z80: Z80) => { // bit 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x57, (z80: Z80) => { // bit 2,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x58, (z80: Z80) => { // bit 3,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x59, (z80: Z80) => { // bit 3,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5A, (z80: Z80) => { // bit 3,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5B, (z80: Z80) => { // bit 3,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5C, (z80: Z80) => { // bit 3,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5D, (z80: Z80) => { // bit 3,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5E, (z80: Z80) => { // bit 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x5F, (z80: Z80) => { // bit 3,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x60, (z80: Z80) => { // bit 4,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x61, (z80: Z80) => { // bit 4,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x62, (z80: Z80) => { // bit 4,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x63, (z80: Z80) => { // bit 4,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x64, (z80: Z80) => { // bit 4,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x65, (z80: Z80) => { // bit 4,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x66, (z80: Z80) => { // bit 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x67, (z80: Z80) => { // bit 4,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x68, (z80: Z80) => { // bit 5,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x69, (z80: Z80) => { // bit 5,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6A, (z80: Z80) => { // bit 5,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6B, (z80: Z80) => { // bit 5,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6C, (z80: Z80) => { // bit 5,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6D, (z80: Z80) => { // bit 5,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6E, (z80: Z80) => { // bit 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x6F, (z80: Z80) => { // bit 5,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x70, (z80: Z80) => { // bit 6,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x71, (z80: Z80) => { // bit 6,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x72, (z80: Z80) => { // bit 6,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x73, (z80: Z80) => { // bit 6,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x74, (z80: Z80) => { // bit 6,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x75, (z80: Z80) => { // bit 6,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x76, (z80: Z80) => { // bit 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x77, (z80: Z80) => { // bit 6,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x78, (z80: Z80) => { // bit 7,b\n    const value = z80.regs.b;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x79, (z80: Z80) => { // bit 7,c\n    const value = z80.regs.c;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7A, (z80: Z80) => { // bit 7,d\n    const value = z80.regs.d;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7B, (z80: Z80) => { // bit 7,e\n    const value = z80.regs.e;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7C, (z80: Z80) => { // bit 7,h\n    const value = z80.regs.h;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7D, (z80: Z80) => { // bit 7,l\n    const value = z80.regs.l;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7E, (z80: Z80) => { // bit 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x7F, (z80: Z80) => { // bit 7,a\n    const value = z80.regs.a;\n    const hiddenValue = value;\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x80, (z80: Z80) => { // res 0,b\n    z80.regs.b &= 0xFE;\n});\nfillMap.set(0x81, (z80: Z80) => { // res 0,c\n    z80.regs.c &= 0xFE;\n});\nfillMap.set(0x82, (z80: Z80) => { // res 0,d\n    z80.regs.d &= 0xFE;\n});\nfillMap.set(0x83, (z80: Z80) => { // res 0,e\n    z80.regs.e &= 0xFE;\n});\nfillMap.set(0x84, (z80: Z80) => { // res 0,h\n    z80.regs.h &= 0xFE;\n});\nfillMap.set(0x85, (z80: Z80) => { // res 0,l\n    z80.regs.l &= 0xFE;\n});\nfillMap.set(0x86, (z80: Z80) => { // res 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFE);\n});\nfillMap.set(0x87, (z80: Z80) => { // res 0,a\n    z80.regs.a &= 0xFE;\n});\nfillMap.set(0x88, (z80: Z80) => { // res 1,b\n    z80.regs.b &= 0xFD;\n});\nfillMap.set(0x89, (z80: Z80) => { // res 1,c\n    z80.regs.c &= 0xFD;\n});\nfillMap.set(0x8A, (z80: Z80) => { // res 1,d\n    z80.regs.d &= 0xFD;\n});\nfillMap.set(0x8B, (z80: Z80) => { // res 1,e\n    z80.regs.e &= 0xFD;\n});\nfillMap.set(0x8C, (z80: Z80) => { // res 1,h\n    z80.regs.h &= 0xFD;\n});\nfillMap.set(0x8D, (z80: Z80) => { // res 1,l\n    z80.regs.l &= 0xFD;\n});\nfillMap.set(0x8E, (z80: Z80) => { // res 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFD);\n});\nfillMap.set(0x8F, (z80: Z80) => { // res 1,a\n    z80.regs.a &= 0xFD;\n});\nfillMap.set(0x90, (z80: Z80) => { // res 2,b\n    z80.regs.b &= 0xFB;\n});\nfillMap.set(0x91, (z80: Z80) => { // res 2,c\n    z80.regs.c &= 0xFB;\n});\nfillMap.set(0x92, (z80: Z80) => { // res 2,d\n    z80.regs.d &= 0xFB;\n});\nfillMap.set(0x93, (z80: Z80) => { // res 2,e\n    z80.regs.e &= 0xFB;\n});\nfillMap.set(0x94, (z80: Z80) => { // res 2,h\n    z80.regs.h &= 0xFB;\n});\nfillMap.set(0x95, (z80: Z80) => { // res 2,l\n    z80.regs.l &= 0xFB;\n});\nfillMap.set(0x96, (z80: Z80) => { // res 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xFB);\n});\nfillMap.set(0x97, (z80: Z80) => { // res 2,a\n    z80.regs.a &= 0xFB;\n});\nfillMap.set(0x98, (z80: Z80) => { // res 3,b\n    z80.regs.b &= 0xF7;\n});\nfillMap.set(0x99, (z80: Z80) => { // res 3,c\n    z80.regs.c &= 0xF7;\n});\nfillMap.set(0x9A, (z80: Z80) => { // res 3,d\n    z80.regs.d &= 0xF7;\n});\nfillMap.set(0x9B, (z80: Z80) => { // res 3,e\n    z80.regs.e &= 0xF7;\n});\nfillMap.set(0x9C, (z80: Z80) => { // res 3,h\n    z80.regs.h &= 0xF7;\n});\nfillMap.set(0x9D, (z80: Z80) => { // res 3,l\n    z80.regs.l &= 0xF7;\n});\nfillMap.set(0x9E, (z80: Z80) => { // res 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xF7);\n});\nfillMap.set(0x9F, (z80: Z80) => { // res 3,a\n    z80.regs.a &= 0xF7;\n});\nfillMap.set(0xA0, (z80: Z80) => { // res 4,b\n    z80.regs.b &= 0xEF;\n});\nfillMap.set(0xA1, (z80: Z80) => { // res 4,c\n    z80.regs.c &= 0xEF;\n});\nfillMap.set(0xA2, (z80: Z80) => { // res 4,d\n    z80.regs.d &= 0xEF;\n});\nfillMap.set(0xA3, (z80: Z80) => { // res 4,e\n    z80.regs.e &= 0xEF;\n});\nfillMap.set(0xA4, (z80: Z80) => { // res 4,h\n    z80.regs.h &= 0xEF;\n});\nfillMap.set(0xA5, (z80: Z80) => { // res 4,l\n    z80.regs.l &= 0xEF;\n});\nfillMap.set(0xA6, (z80: Z80) => { // res 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xEF);\n});\nfillMap.set(0xA7, (z80: Z80) => { // res 4,a\n    z80.regs.a &= 0xEF;\n});\nfillMap.set(0xA8, (z80: Z80) => { // res 5,b\n    z80.regs.b &= 0xDF;\n});\nfillMap.set(0xA9, (z80: Z80) => { // res 5,c\n    z80.regs.c &= 0xDF;\n});\nfillMap.set(0xAA, (z80: Z80) => { // res 5,d\n    z80.regs.d &= 0xDF;\n});\nfillMap.set(0xAB, (z80: Z80) => { // res 5,e\n    z80.regs.e &= 0xDF;\n});\nfillMap.set(0xAC, (z80: Z80) => { // res 5,h\n    z80.regs.h &= 0xDF;\n});\nfillMap.set(0xAD, (z80: Z80) => { // res 5,l\n    z80.regs.l &= 0xDF;\n});\nfillMap.set(0xAE, (z80: Z80) => { // res 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xDF);\n});\nfillMap.set(0xAF, (z80: Z80) => { // res 5,a\n    z80.regs.a &= 0xDF;\n});\nfillMap.set(0xB0, (z80: Z80) => { // res 6,b\n    z80.regs.b &= 0xBF;\n});\nfillMap.set(0xB1, (z80: Z80) => { // res 6,c\n    z80.regs.c &= 0xBF;\n});\nfillMap.set(0xB2, (z80: Z80) => { // res 6,d\n    z80.regs.d &= 0xBF;\n});\nfillMap.set(0xB3, (z80: Z80) => { // res 6,e\n    z80.regs.e &= 0xBF;\n});\nfillMap.set(0xB4, (z80: Z80) => { // res 6,h\n    z80.regs.h &= 0xBF;\n});\nfillMap.set(0xB5, (z80: Z80) => { // res 6,l\n    z80.regs.l &= 0xBF;\n});\nfillMap.set(0xB6, (z80: Z80) => { // res 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0xBF);\n});\nfillMap.set(0xB7, (z80: Z80) => { // res 6,a\n    z80.regs.a &= 0xBF;\n});\nfillMap.set(0xB8, (z80: Z80) => { // res 7,b\n    z80.regs.b &= 0x7F;\n});\nfillMap.set(0xB9, (z80: Z80) => { // res 7,c\n    z80.regs.c &= 0x7F;\n});\nfillMap.set(0xBA, (z80: Z80) => { // res 7,d\n    z80.regs.d &= 0x7F;\n});\nfillMap.set(0xBB, (z80: Z80) => { // res 7,e\n    z80.regs.e &= 0x7F;\n});\nfillMap.set(0xBC, (z80: Z80) => { // res 7,h\n    z80.regs.h &= 0x7F;\n});\nfillMap.set(0xBD, (z80: Z80) => { // res 7,l\n    z80.regs.l &= 0x7F;\n});\nfillMap.set(0xBE, (z80: Z80) => { // res 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value & 0x7F);\n});\nfillMap.set(0xBF, (z80: Z80) => { // res 7,a\n    z80.regs.a &= 0x7F;\n});\nfillMap.set(0xC0, (z80: Z80) => { // set 0,b\n    z80.regs.b |= 0x01;\n});\nfillMap.set(0xC1, (z80: Z80) => { // set 0,c\n    z80.regs.c |= 0x01;\n});\nfillMap.set(0xC2, (z80: Z80) => { // set 0,d\n    z80.regs.d |= 0x01;\n});\nfillMap.set(0xC3, (z80: Z80) => { // set 0,e\n    z80.regs.e |= 0x01;\n});\nfillMap.set(0xC4, (z80: Z80) => { // set 0,h\n    z80.regs.h |= 0x01;\n});\nfillMap.set(0xC5, (z80: Z80) => { // set 0,l\n    z80.regs.l |= 0x01;\n});\nfillMap.set(0xC6, (z80: Z80) => { // set 0,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x01);\n});\nfillMap.set(0xC7, (z80: Z80) => { // set 0,a\n    z80.regs.a |= 0x01;\n});\nfillMap.set(0xC8, (z80: Z80) => { // set 1,b\n    z80.regs.b |= 0x02;\n});\nfillMap.set(0xC9, (z80: Z80) => { // set 1,c\n    z80.regs.c |= 0x02;\n});\nfillMap.set(0xCA, (z80: Z80) => { // set 1,d\n    z80.regs.d |= 0x02;\n});\nfillMap.set(0xCB, (z80: Z80) => { // set 1,e\n    z80.regs.e |= 0x02;\n});\nfillMap.set(0xCC, (z80: Z80) => { // set 1,h\n    z80.regs.h |= 0x02;\n});\nfillMap.set(0xCD, (z80: Z80) => { // set 1,l\n    z80.regs.l |= 0x02;\n});\nfillMap.set(0xCE, (z80: Z80) => { // set 1,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x02);\n});\nfillMap.set(0xCF, (z80: Z80) => { // set 1,a\n    z80.regs.a |= 0x02;\n});\nfillMap.set(0xD0, (z80: Z80) => { // set 2,b\n    z80.regs.b |= 0x04;\n});\nfillMap.set(0xD1, (z80: Z80) => { // set 2,c\n    z80.regs.c |= 0x04;\n});\nfillMap.set(0xD2, (z80: Z80) => { // set 2,d\n    z80.regs.d |= 0x04;\n});\nfillMap.set(0xD3, (z80: Z80) => { // set 2,e\n    z80.regs.e |= 0x04;\n});\nfillMap.set(0xD4, (z80: Z80) => { // set 2,h\n    z80.regs.h |= 0x04;\n});\nfillMap.set(0xD5, (z80: Z80) => { // set 2,l\n    z80.regs.l |= 0x04;\n});\nfillMap.set(0xD6, (z80: Z80) => { // set 2,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x04);\n});\nfillMap.set(0xD7, (z80: Z80) => { // set 2,a\n    z80.regs.a |= 0x04;\n});\nfillMap.set(0xD8, (z80: Z80) => { // set 3,b\n    z80.regs.b |= 0x08;\n});\nfillMap.set(0xD9, (z80: Z80) => { // set 3,c\n    z80.regs.c |= 0x08;\n});\nfillMap.set(0xDA, (z80: Z80) => { // set 3,d\n    z80.regs.d |= 0x08;\n});\nfillMap.set(0xDB, (z80: Z80) => { // set 3,e\n    z80.regs.e |= 0x08;\n});\nfillMap.set(0xDC, (z80: Z80) => { // set 3,h\n    z80.regs.h |= 0x08;\n});\nfillMap.set(0xDD, (z80: Z80) => { // set 3,l\n    z80.regs.l |= 0x08;\n});\nfillMap.set(0xDE, (z80: Z80) => { // set 3,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x08);\n});\nfillMap.set(0xDF, (z80: Z80) => { // set 3,a\n    z80.regs.a |= 0x08;\n});\nfillMap.set(0xE0, (z80: Z80) => { // set 4,b\n    z80.regs.b |= 0x10;\n});\nfillMap.set(0xE1, (z80: Z80) => { // set 4,c\n    z80.regs.c |= 0x10;\n});\nfillMap.set(0xE2, (z80: Z80) => { // set 4,d\n    z80.regs.d |= 0x10;\n});\nfillMap.set(0xE3, (z80: Z80) => { // set 4,e\n    z80.regs.e |= 0x10;\n});\nfillMap.set(0xE4, (z80: Z80) => { // set 4,h\n    z80.regs.h |= 0x10;\n});\nfillMap.set(0xE5, (z80: Z80) => { // set 4,l\n    z80.regs.l |= 0x10;\n});\nfillMap.set(0xE6, (z80: Z80) => { // set 4,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x10);\n});\nfillMap.set(0xE7, (z80: Z80) => { // set 4,a\n    z80.regs.a |= 0x10;\n});\nfillMap.set(0xE8, (z80: Z80) => { // set 5,b\n    z80.regs.b |= 0x20;\n});\nfillMap.set(0xE9, (z80: Z80) => { // set 5,c\n    z80.regs.c |= 0x20;\n});\nfillMap.set(0xEA, (z80: Z80) => { // set 5,d\n    z80.regs.d |= 0x20;\n});\nfillMap.set(0xEB, (z80: Z80) => { // set 5,e\n    z80.regs.e |= 0x20;\n});\nfillMap.set(0xEC, (z80: Z80) => { // set 5,h\n    z80.regs.h |= 0x20;\n});\nfillMap.set(0xED, (z80: Z80) => { // set 5,l\n    z80.regs.l |= 0x20;\n});\nfillMap.set(0xEE, (z80: Z80) => { // set 5,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x20);\n});\nfillMap.set(0xEF, (z80: Z80) => { // set 5,a\n    z80.regs.a |= 0x20;\n});\nfillMap.set(0xF0, (z80: Z80) => { // set 6,b\n    z80.regs.b |= 0x40;\n});\nfillMap.set(0xF1, (z80: Z80) => { // set 6,c\n    z80.regs.c |= 0x40;\n});\nfillMap.set(0xF2, (z80: Z80) => { // set 6,d\n    z80.regs.d |= 0x40;\n});\nfillMap.set(0xF3, (z80: Z80) => { // set 6,e\n    z80.regs.e |= 0x40;\n});\nfillMap.set(0xF4, (z80: Z80) => { // set 6,h\n    z80.regs.h |= 0x40;\n});\nfillMap.set(0xF5, (z80: Z80) => { // set 6,l\n    z80.regs.l |= 0x40;\n});\nfillMap.set(0xF6, (z80: Z80) => { // set 6,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x40);\n});\nfillMap.set(0xF7, (z80: Z80) => { // set 6,a\n    z80.regs.a |= 0x40;\n});\nfillMap.set(0xF8, (z80: Z80) => { // set 7,b\n    z80.regs.b |= 0x80;\n});\nfillMap.set(0xF9, (z80: Z80) => { // set 7,c\n    z80.regs.c |= 0x80;\n});\nfillMap.set(0xFA, (z80: Z80) => { // set 7,d\n    z80.regs.d |= 0x80;\n});\nfillMap.set(0xFB, (z80: Z80) => { // set 7,e\n    z80.regs.e |= 0x80;\n});\nfillMap.set(0xFC, (z80: Z80) => { // set 7,h\n    z80.regs.h |= 0x80;\n});\nfillMap.set(0xFD, (z80: Z80) => { // set 7,l\n    z80.regs.l |= 0x80;\n});\nfillMap.set(0xFE, (z80: Z80) => { // set 7,(hl)\n    const value = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.hl, value | 0x80);\n});\nfillMap.set(0xFF, (z80: Z80) => { // set 7,a\n    z80.regs.a |= 0x80;\n});\n\nconst decodeMapDD = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapDD;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x09, (z80: Z80) => { // add ix,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x19, (z80: Z80) => { // add ix,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x21, (z80: Z80) => { // ld ix,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ix = value;\n});\nfillMap.set(0x22, (z80: Z80) => { // ld (nnnn),ix\n    let value: number;\n    value = z80.regs.ix;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x23, (z80: Z80) => { // inc ix\n    let value: number;\n    value = z80.regs.ix;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.ix = value;\n});\nfillMap.set(0x24, (z80: Z80) => { // inc ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.ixh = value;\n});\nfillMap.set(0x25, (z80: Z80) => { // dec ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.ixh = value;\n});\nfillMap.set(0x26, (z80: Z80) => { // ld ixh,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ixh = value;\n});\nfillMap.set(0x29, (z80: Z80) => { // add ix,ix\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.ix;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x2A, (z80: Z80) => { // ld ix,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.ix = value;\n});\nfillMap.set(0x2B, (z80: Z80) => { // dec ix\n    let value: number;\n    value = z80.regs.ix;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.ix = value;\n});\nfillMap.set(0x2C, (z80: Z80) => { // inc ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.ixl = value;\n});\nfillMap.set(0x2D, (z80: Z80) => { // dec ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.ixl = value;\n});\nfillMap.set(0x2E, (z80: Z80) => { // ld ixl,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.ixl = value;\n});\nfillMap.set(0x34, (z80: Z80) => { // inc (ix+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x35, (z80: Z80) => { // dec (ix+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x36, (z80: Z80) => { // ld (ix+dd),nn\n    const dd = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x39, (z80: Z80) => { // add ix,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.ix + value;\n    const lookup = (((z80.regs.ix & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.ix);\n    z80.regs.ix = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x44, (z80: Z80) => { // ld b,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.b = value;\n});\nfillMap.set(0x45, (z80: Z80) => { // ld b,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.b = value;\n});\nfillMap.set(0x46, (z80: Z80) => { // ld b,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.b = value;\n});\nfillMap.set(0x4C, (z80: Z80) => { // ld c,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.c = value;\n});\nfillMap.set(0x4D, (z80: Z80) => { // ld c,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.c = value;\n});\nfillMap.set(0x4E, (z80: Z80) => { // ld c,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.c = value;\n});\nfillMap.set(0x54, (z80: Z80) => { // ld d,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.d = value;\n});\nfillMap.set(0x55, (z80: Z80) => { // ld d,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.d = value;\n});\nfillMap.set(0x56, (z80: Z80) => { // ld d,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.d = value;\n});\nfillMap.set(0x5C, (z80: Z80) => { // ld e,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.e = value;\n});\nfillMap.set(0x5D, (z80: Z80) => { // ld e,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.e = value;\n});\nfillMap.set(0x5E, (z80: Z80) => { // ld e,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.e = value;\n});\nfillMap.set(0x60, (z80: Z80) => { // ld ixh,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x61, (z80: Z80) => { // ld ixh,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x62, (z80: Z80) => { // ld ixh,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x63, (z80: Z80) => { // ld ixh,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x64, (z80: Z80) => { // ld ixh,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x65, (z80: Z80) => { // ld ixh,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x66, (z80: Z80) => { // ld h,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.h = value;\n});\nfillMap.set(0x67, (z80: Z80) => { // ld ixh,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.ixh = value;\n});\nfillMap.set(0x68, (z80: Z80) => { // ld ixl,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x69, (z80: Z80) => { // ld ixl,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x6A, (z80: Z80) => { // ld ixl,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x6B, (z80: Z80) => { // ld ixl,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x6C, (z80: Z80) => { // ld ixl,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x6D, (z80: Z80) => { // ld ixl,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x6E, (z80: Z80) => { // ld l,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.l = value;\n});\nfillMap.set(0x6F, (z80: Z80) => { // ld ixl,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.ixl = value;\n});\nfillMap.set(0x70, (z80: Z80) => { // ld (ix+dd),b\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x71, (z80: Z80) => { // ld (ix+dd),c\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x72, (z80: Z80) => { // ld (ix+dd),d\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x73, (z80: Z80) => { // ld (ix+dd),e\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x74, (z80: Z80) => { // ld (ix+dd),h\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x75, (z80: Z80) => { // ld (ix+dd),l\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x77, (z80: Z80) => { // ld (ix+dd),a\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = (z80.regs.ix + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x7C, (z80: Z80) => { // ld a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a = value;\n});\nfillMap.set(0x7D, (z80: Z80) => { // ld a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a = value;\n});\nfillMap.set(0x7E, (z80: Z80) => { // ld a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a = value;\n});\nfillMap.set(0x84, (z80: Z80) => { // add a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x85, (z80: Z80) => { // add a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x86, (z80: Z80) => { // add a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8C, (z80: Z80) => { // adc a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8D, (z80: Z80) => { // adc a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8E, (z80: Z80) => { // adc a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x94, (z80: Z80) => { // sub a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x95, (z80: Z80) => { // sub a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x96, (z80: Z80) => { // sub a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9C, (z80: Z80) => { // sbc a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9D, (z80: Z80) => { // sbc a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9E, (z80: Z80) => { // sbc a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xA4, (z80: Z80) => { // and a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA5, (z80: Z80) => { // and a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA6, (z80: Z80) => { // and a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xAC, (z80: Z80) => { // xor a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAD, (z80: Z80) => { // xor a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAE, (z80: Z80) => { // xor a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB4, (z80: Z80) => { // or a,ixh\n    let value: number;\n    value = z80.regs.ixh;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB5, (z80: Z80) => { // or a,ixl\n    let value: number;\n    value = z80.regs.ixl;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB6, (z80: Z80) => { // or a,(ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xBC, (z80: Z80) => { // cp ixh\n    let value: number;\n    value = z80.regs.ixh;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBD, (z80: Z80) => { // cp ixl\n    let value: number;\n    value = z80.regs.ixl;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBE, (z80: Z80) => { // cp (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.ix + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xCB, (z80: Z80) => { // shift ddcb\n    decodeDDCB(z80);\n});\nfillMap.set(0xE1, (z80: Z80) => { // pop ix\n    z80.regs.ix = z80.popWord();\n});\nfillMap.set(0xE3, (z80: Z80) => { // ex (sp),ix\n    const rightValue = z80.regs.ix;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.ix = word(leftValueH, leftValueL);\n});\nfillMap.set(0xE5, (z80: Z80) => { // push ix\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.ix);\n});\nfillMap.set(0xE9, (z80: Z80) => { // jp ix\n    z80.regs.pc = z80.regs.ix;\n});\nfillMap.set(0xF9, (z80: Z80) => { // ld sp,ix\n    let value: number;\n    value = z80.regs.ix;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\n\nconst decodeMapDDCB = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapDDCB;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x00, (z80: Z80) => { // ld b,rlc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x01, (z80: Z80) => { // ld c,rlc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x02, (z80: Z80) => { // ld d,rlc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x03, (z80: Z80) => { // ld e,rlc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x04, (z80: Z80) => { // ld h,rlc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x05, (z80: Z80) => { // ld l,rlc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x06, (z80: Z80) => { // rlc (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x07, (z80: Z80) => { // ld a,rlc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x08, (z80: Z80) => { // ld b,rrc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x09, (z80: Z80) => { // ld c,rrc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x0A, (z80: Z80) => { // ld d,rrc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x0B, (z80: Z80) => { // ld e,rrc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x0C, (z80: Z80) => { // ld h,rrc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x0D, (z80: Z80) => { // ld l,rrc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x0E, (z80: Z80) => { // rrc (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x0F, (z80: Z80) => { // ld a,rrc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x10, (z80: Z80) => { // ld b,rl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x11, (z80: Z80) => { // ld c,rl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x12, (z80: Z80) => { // ld d,rl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x13, (z80: Z80) => { // ld e,rl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x14, (z80: Z80) => { // ld h,rl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x15, (z80: Z80) => { // ld l,rl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x16, (z80: Z80) => { // rl (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x17, (z80: Z80) => { // ld a,rl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x18, (z80: Z80) => { // ld b,rr\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x19, (z80: Z80) => { // ld c,rr\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x1A, (z80: Z80) => { // ld d,rr\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x1B, (z80: Z80) => { // ld e,rr\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x1C, (z80: Z80) => { // ld h,rr\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x1D, (z80: Z80) => { // ld l,rr\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x1E, (z80: Z80) => { // rr (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x1F, (z80: Z80) => { // ld a,rr\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x20, (z80: Z80) => { // ld b,sla\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x21, (z80: Z80) => { // ld c,sla\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x22, (z80: Z80) => { // ld d,sla\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x23, (z80: Z80) => { // ld e,sla\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x24, (z80: Z80) => { // ld h,sla\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x25, (z80: Z80) => { // ld l,sla\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x26, (z80: Z80) => { // sla (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x27, (z80: Z80) => { // ld a,sla\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x28, (z80: Z80) => { // ld b,sra\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x29, (z80: Z80) => { // ld c,sra\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x2A, (z80: Z80) => { // ld d,sra\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x2B, (z80: Z80) => { // ld e,sra\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x2C, (z80: Z80) => { // ld h,sra\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x2D, (z80: Z80) => { // ld l,sra\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x2E, (z80: Z80) => { // sra (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x2F, (z80: Z80) => { // ld a,sra\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x30, (z80: Z80) => { // ld b,sll\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x31, (z80: Z80) => { // ld c,sll\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x32, (z80: Z80) => { // ld d,sll\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x33, (z80: Z80) => { // ld e,sll\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x34, (z80: Z80) => { // ld h,sll\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x35, (z80: Z80) => { // ld l,sll\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x36, (z80: Z80) => { // sll (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x37, (z80: Z80) => { // ld a,sll\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x38, (z80: Z80) => { // ld b,srl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x39, (z80: Z80) => { // ld c,srl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x3A, (z80: Z80) => { // ld d,srl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x3B, (z80: Z80) => { // ld e,srl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x3C, (z80: Z80) => { // ld h,srl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x3D, (z80: Z80) => { // ld l,srl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x3E, (z80: Z80) => { // srl (ix+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x3F, (z80: Z80) => { // ld a,srl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x47, (z80: Z80) => { // bit 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x40, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x41, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x42, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x43, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x44, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x45, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x46, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x4F, (z80: Z80) => { // bit 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x48, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x49, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4A, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4B, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4C, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4D, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4E, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x57, (z80: Z80) => { // bit 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x50, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x51, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x52, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x53, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x54, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x55, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x56, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x5F, (z80: Z80) => { // bit 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x58, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x59, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5A, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5B, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5C, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5D, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5E, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x67, (z80: Z80) => { // bit 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x60, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x61, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x62, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x63, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x64, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x65, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x66, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x6F, (z80: Z80) => { // bit 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x68, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x69, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6A, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6B, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6C, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6D, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6E, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x77, (z80: Z80) => { // bit 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x70, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x71, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x72, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x73, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x74, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x75, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x76, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x7F, (z80: Z80) => { // bit 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x78, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x79, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7A, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7B, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7C, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7D, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7E, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x80, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x81, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x82, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x83, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x84, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x85, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x86, (z80: Z80) => { // res 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFE);\n});\nfillMap.set(0x87, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x88, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x89, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x8A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x8B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x8C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x8D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x8E, (z80: Z80) => { // res 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFD);\n});\nfillMap.set(0x8F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x90, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x91, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x92, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x93, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x94, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x95, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x96, (z80: Z80) => { // res 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFB);\n});\nfillMap.set(0x97, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x98, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x99, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x9A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x9B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x9C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x9D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x9E, (z80: Z80) => { // res 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xF7);\n});\nfillMap.set(0x9F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xA0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xA1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xA2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xA3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xA4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xA5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xA6, (z80: Z80) => { // res 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xEF);\n});\nfillMap.set(0xA7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xA8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xA9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xAA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xAB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xAC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xAD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xAE, (z80: Z80) => { // res 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xDF);\n});\nfillMap.set(0xAF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xB0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xB1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xB2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xB3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xB4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xB5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xB6, (z80: Z80) => { // res 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xBF);\n});\nfillMap.set(0xB7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xB8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xB9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xBA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xBB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xBC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xBD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xBE, (z80: Z80) => { // res 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0x7F);\n});\nfillMap.set(0xBF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xC0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xC1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xC2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xC3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xC4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xC5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xC6, (z80: Z80) => { // set 0,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x01);\n});\nfillMap.set(0xC7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xC8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xC9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xCA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xCB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xCC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xCD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xCE, (z80: Z80) => { // set 1,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x02);\n});\nfillMap.set(0xCF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xD0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xD1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xD2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xD3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xD4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xD5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xD6, (z80: Z80) => { // set 2,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x04);\n});\nfillMap.set(0xD7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xD8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xD9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xDA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xDB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xDC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xDD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xDE, (z80: Z80) => { // set 3,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x08);\n});\nfillMap.set(0xDF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xE0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xE1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xE2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xE3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xE4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xE5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xE6, (z80: Z80) => { // set 4,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x10);\n});\nfillMap.set(0xE7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xE8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xE9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xEA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xEB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xEC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xED, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xEE, (z80: Z80) => { // set 5,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x20);\n});\nfillMap.set(0xEF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xF0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xF1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xF2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xF3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xF4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xF5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xF6, (z80: Z80) => { // set 6,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x40);\n});\nfillMap.set(0xF7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xF8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xF9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xFA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xFB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xFC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xFD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xFE, (z80: Z80) => { // set 7,(ix+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x80);\n});\nfillMap.set(0xFF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\n\nconst decodeMapED = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapED;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x40, (z80: Z80) => { // in b,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.b];\n});\nfillMap.set(0x41, (z80: Z80) => { // out (c),b\n    z80.writePort(z80.regs.bc, z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x42, (z80: Z80) => { // sbc hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x43, (z80: Z80) => { // ld (nnnn),bc\n    let value: number;\n    value = z80.regs.bc;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x7C, (z80: Z80) => { // neg\n    const value = z80.regs.a;\n    z80.regs.a = 0;\n    const diff = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = diff;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= z80.sz53Table[z80.regs.a];\n    z80.regs.f = f;\n});\nfillMap.set(0x44, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x4C, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x54, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x5C, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x64, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x6C, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x74, fillMap.get(0x7C) as (z80: Z80) => void);\nfillMap.set(0x7D, (z80: Z80) => { // retn\n    z80.regs.iff1 = z80.regs.iff2;\n    z80.regs.pc = z80.popWord();\n    z80.regs.memptr = z80.regs.pc;\n});\nfillMap.set(0x45, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x4D, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x55, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x5D, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x65, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x6D, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x75, fillMap.get(0x7D) as (z80: Z80) => void);\nfillMap.set(0x6E, (z80: Z80) => { // im 0\n    z80.regs.im = 0;\n});\nfillMap.set(0x46, fillMap.get(0x6E) as (z80: Z80) => void);\nfillMap.set(0x4E, fillMap.get(0x6E) as (z80: Z80) => void);\nfillMap.set(0x66, fillMap.get(0x6E) as (z80: Z80) => void);\nfillMap.set(0x47, (z80: Z80) => { // ld i,a\n    let value: number;\n    value = z80.regs.a;\n    z80.incTStateCount(1);\n    z80.regs.i = value;\n});\nfillMap.set(0x48, (z80: Z80) => { // in c,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.c = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.c];\n});\nfillMap.set(0x49, (z80: Z80) => { // out (c),c\n    z80.writePort(z80.regs.bc, z80.regs.c);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x4A, (z80: Z80) => { // adc hl,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x4B, (z80: Z80) => { // ld bc,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.bc = value;\n});\nfillMap.set(0x4F, (z80: Z80) => { // ld r,a\n    let value: number;\n    value = z80.regs.a;\n    z80.incTStateCount(1);\n    z80.regs.r = value;\n});\nfillMap.set(0x50, (z80: Z80) => { // in d,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.d = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.d];\n});\nfillMap.set(0x51, (z80: Z80) => { // out (c),d\n    z80.writePort(z80.regs.bc, z80.regs.d);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x52, (z80: Z80) => { // sbc hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x53, (z80: Z80) => { // ld (nnnn),de\n    let value: number;\n    value = z80.regs.de;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x76, (z80: Z80) => { // im 1\n    z80.regs.im = 1;\n});\nfillMap.set(0x56, fillMap.get(0x76) as (z80: Z80) => void);\nfillMap.set(0x57, (z80: Z80) => { // ld a,i\n    let value: number;\n    value = z80.regs.i;\n    z80.incTStateCount(1);\n    z80.regs.a = value;\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53Table[z80.regs.a] | (z80.regs.iff2 ? Flag.V : 0);\n});\nfillMap.set(0x58, (z80: Z80) => { // in e,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.e = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.e];\n});\nfillMap.set(0x59, (z80: Z80) => { // out (c),e\n    z80.writePort(z80.regs.bc, z80.regs.e);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x5A, (z80: Z80) => { // adc hl,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x5B, (z80: Z80) => { // ld de,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.de = value;\n});\nfillMap.set(0x7E, (z80: Z80) => { // im 2\n    z80.regs.im = 2;\n});\nfillMap.set(0x5E, fillMap.get(0x7E) as (z80: Z80) => void);\nfillMap.set(0x5F, (z80: Z80) => { // ld a,r\n    let value: number;\n    value = z80.regs.rCombined;\n    z80.incTStateCount(1);\n    z80.regs.a = value;\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53Table[z80.regs.a] | (z80.regs.iff2 ? Flag.V : 0);\n});\nfillMap.set(0x60, (z80: Z80) => { // in h,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.h = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.h];\n});\nfillMap.set(0x61, (z80: Z80) => { // out (c),h\n    z80.writePort(z80.regs.bc, z80.regs.h);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x62, (z80: Z80) => { // sbc hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x63, (z80: Z80) => { // ld (nnnn),hl\n    let value: number;\n    value = z80.regs.hl;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x67, (z80: Z80) => { // rrd\n    const tmp = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(4);\n    z80.writeByte(z80.regs.hl, ((z80.regs.a << 4) | (tmp >> 4)) & 0xFF);\n    z80.regs.a = (z80.regs.a & 0xF0) | (tmp & 0x0F);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n    z80.regs.memptr = inc16(z80.regs.hl);\n});\nfillMap.set(0x68, (z80: Z80) => { // in l,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.l = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.l];\n});\nfillMap.set(0x69, (z80: Z80) => { // out (c),l\n    z80.writePort(z80.regs.bc, z80.regs.l);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x6A, (z80: Z80) => { // adc hl,hl\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.hl;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x6B, (z80: Z80) => { // ld hl,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.hl = value;\n});\nfillMap.set(0x6F, (z80: Z80) => { // rld\n    const tmp = z80.readByte(z80.regs.hl);\n    z80.incTStateCount(4);\n    z80.writeByte(z80.regs.hl, ((tmp << 4) | (z80.regs.a & 0x0F)) & 0xFF);\n    z80.regs.a = (z80.regs.a & 0xF0) | (tmp >> 4);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n    z80.regs.memptr = inc16(z80.regs.hl);\n});\nfillMap.set(0x70, (z80: Z80) => { // in f,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.f = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.f];\n});\nfillMap.set(0x71, (z80: Z80) => { // out (c),0\n    z80.writePort(z80.regs.bc, 0x00);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x72, (z80: Z80) => { // sbc hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl - value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result -= 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | Flag.N | overflowSubTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarrySubTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x73, (z80: Z80) => { // ld (nnnn),sp\n    let value: number;\n    value = z80.regs.sp;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x78, (z80: Z80) => { // in a,(c)\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.a = z80.readPort(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0x79, (z80: Z80) => { // out (c),a\n    z80.writePort(z80.regs.bc, z80.regs.a);\n    z80.regs.memptr = inc16(z80.regs.bc);\n});\nfillMap.set(0x7A, (z80: Z80) => { // adc hl,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.hl + value;\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result += 1;\n    }\n    const lookup = (((z80.regs.hl & 0x8800) >> 11) |\n                   ((value & 0x8800) >> 10) |\n                   ((result & 0x8800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.hl);\n    z80.regs.hl = result & 0xFFFF;\n    z80.regs.f = ((result & 0x10000) !== 0 ? Flag.C : 0) | overflowAddTable[lookup >> 4] | ((result >> 8) & (Flag.X3 | Flag.X5 | Flag.S)) | halfCarryAddTable[lookup & 0x07] | (result !== 0 ? 0 : Flag.Z);\n});\nfillMap.set(0x7B, (z80: Z80) => { // ld sp,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.sp = value;\n});\nfillMap.set(0xA0, (z80: Z80) => { // ldi\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    z80.regs.hl = inc16(z80.regs.hl);\n    z80.regs.de = inc16(z80.regs.de);\n});\nfillMap.set(0xA1, (z80: Z80) => { // cpi\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    z80.regs.memptr = inc16(z80.regs.memptr);\n    z80.regs.hl = inc16(z80.regs.hl);\n});\nfillMap.set(0xA2, (z80: Z80) => { // ini\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = inc8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    z80.regs.hl = inc16(z80.regs.hl);\n});\nfillMap.set(0xA3, (z80: Z80) => { // outi\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = inc16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n});\nfillMap.set(0xA8, (z80: Z80) => { // ldd\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    z80.regs.hl = dec16(z80.regs.hl);\n    z80.regs.de = dec16(z80.regs.de);\n});\nfillMap.set(0xA9, (z80: Z80) => { // cpd\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    z80.regs.memptr = dec16(z80.regs.memptr);\n    z80.regs.hl = dec16(z80.regs.hl);\n});\nfillMap.set(0xAA, (z80: Z80) => { // ind\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = dec8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    z80.regs.hl = dec16(z80.regs.hl);\n});\nfillMap.set(0xAB, (z80: Z80) => { // outd\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = dec16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n});\nfillMap.set(0xB0, (z80: Z80) => { // ldir\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    if (z80.regs.bc !== 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n    z80.regs.de = inc16(z80.regs.de);\n});\nfillMap.set(0xB1, (z80: Z80) => { // cpir\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    if ((z80.regs.f & (Flag.V | Flag.Z)) === Flag.V) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    } else {\n        z80.regs.memptr = inc16(z80.regs.memptr);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n});\nfillMap.set(0xB2, (z80: Z80) => { // inir\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = inc8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n    z80.regs.hl = inc16(z80.regs.hl);\n});\nfillMap.set(0xB3, (z80: Z80) => { // otir\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = inc16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = inc16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n});\nfillMap.set(0xB8, (z80: Z80) => { // lddr\n    let value = z80.readByte(z80.regs.hl);\n    z80.writeByte(z80.regs.de, value);\n    z80.incTStateCount(2);\n    z80.regs.bc = dec16(z80.regs.bc);\n    value = add16(value, z80.regs.a);\n    z80.regs.f = (z80.regs.f & (Flag.C | Flag.Z | Flag.S)) | (z80.regs.bc !== 0 ? Flag.V : 0) | (value & Flag.X3) | ((value & 0x02) !== 0 ? Flag.X5 : 0)\n    if (z80.regs.bc !== 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n    z80.regs.de = dec16(z80.regs.de);\n});\nfillMap.set(0xB9, (z80: Z80) => { // cpdr\n    const value = z80.readByte(z80.regs.hl);\n    let diff = (z80.regs.a - value) & 0xFF;\n    const lookup = ((z80.regs.a & 0x08) >> 3) | ((value & 0x08) >> 2) | ((diff & 0x08) >> 1);\n    z80.incTStateCount(5);\n    z80.regs.bc = dec16(z80.regs.bc);\n    z80.regs.f = (z80.regs.f & Flag.C) | (z80.regs.bc !== 0 ? Flag.V : 0) | Flag.N | halfCarrySubTable[lookup] | (diff !== 0 ? 0 : Flag.Z) | (diff & Flag.S);\n    if ((z80.regs.f & Flag.H) !== 0) diff = dec8(diff);\n    z80.regs.f |= (diff & Flag.X3) | (((diff & 0x02) !== 0) ? Flag.X5 : 0);\n    if ((z80.regs.f & (Flag.V | Flag.Z)) === Flag.V) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n        z80.regs.memptr = add16(z80.regs.pc, 1);\n    } else {\n        z80.regs.memptr = dec16(z80.regs.memptr);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n});\nfillMap.set(0xBA, (z80: Z80) => { // indr\n    z80.incTStateCount(1);\n    const value = z80.readPort(z80.regs.bc);\n    z80.writeByte(z80.regs.hl, value);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.regs.b = dec8(z80.regs.b);\n    const other = dec8(add8(value, z80.regs.c));\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n    z80.regs.hl = dec16(z80.regs.hl);\n});\nfillMap.set(0xBB, (z80: Z80) => { // otdr\n    z80.incTStateCount(1);\n    const value = z80.readByte(z80.regs.hl);\n    z80.regs.b = dec8(z80.regs.b);\n    z80.regs.memptr = dec16(z80.regs.bc);\n    z80.writePort(z80.regs.bc, value);\n    z80.regs.hl = dec16(z80.regs.hl);\n    const other = add8(value, z80.regs.l);\n    z80.regs.f = (value & 0x80 ? Flag.N : 0 ) | (other < value ? Flag.H | Flag.C : 0) | (z80.parityTable[(other & 0x07) ^ z80.regs.b] ? Flag.P : 0) | z80.sz53Table[z80.regs.b];\n    if (z80.regs.b > 0) {\n        z80.incTStateCount(5);\n        z80.regs.pc = add16(z80.regs.pc, -2);\n    }\n});\n\nconst decodeMapFD = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapFD;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x09, (z80: Z80) => { // add iy,bc\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.bc;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x19, (z80: Z80) => { // add iy,de\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.de;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x21, (z80: Z80) => { // ld iy,nnnn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = word(z80.readByte(z80.regs.pc), value);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iy = value;\n});\nfillMap.set(0x22, (z80: Z80) => { // ld (nnnn),iy\n    let value: number;\n    value = z80.regs.iy;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.writeByte(addr, lo(value));\n    addr = inc16(addr);\n    z80.regs.memptr = addr;\n    z80.writeByte(addr, hi(value));\n});\nfillMap.set(0x23, (z80: Z80) => { // inc iy\n    let value: number;\n    value = z80.regs.iy;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = inc16(value);\n    z80.regs.iy = value;\n});\nfillMap.set(0x24, (z80: Z80) => { // inc iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.iyh = value;\n});\nfillMap.set(0x25, (z80: Z80) => { // dec iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.iyh = value;\n});\nfillMap.set(0x26, (z80: Z80) => { // ld iyh,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iyh = value;\n});\nfillMap.set(0x29, (z80: Z80) => { // add iy,iy\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.iy;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x2A, (z80: Z80) => { // ld iy,(nnnn)\n    let value: number;\n    let addr = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    addr = word(z80.readByte(z80.regs.pc), addr);\n    z80.regs.pc = inc16(z80.regs.pc);\n    value = z80.readByte(addr);\n    z80.regs.memptr = inc16(addr);\n    value = word(z80.readByte(z80.regs.memptr), value);\n    z80.regs.iy = value;\n});\nfillMap.set(0x2B, (z80: Z80) => { // dec iy\n    let value: number;\n    value = z80.regs.iy;\n    const oldValue = value;\n    z80.incTStateCount(2);\n    value = dec16(value);\n    z80.regs.iy = value;\n});\nfillMap.set(0x2C, (z80: Z80) => { // inc iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.regs.iyl = value;\n});\nfillMap.set(0x2D, (z80: Z80) => { // dec iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.regs.iyl = value;\n});\nfillMap.set(0x2E, (z80: Z80) => { // ld iyl,nn\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.iyl = value;\n});\nfillMap.set(0x34, (z80: Z80) => { // inc (iy+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = inc8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x80 ? Flag.V : 0) | ((value & 0x0F) !== 0 ? 0 : Flag.H) | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x35, (z80: Z80) => { // dec (iy+dd)\n    let value: number;\n    const offset = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = dec8(value);\n    z80.regs.f = (z80.regs.f & Flag.C) | (value === 0x7F ? Flag.V : 0) | ((oldValue & 0x0F) !== 0 ? 0 : Flag.H) | Flag.N | z80.sz53Table[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x36, (z80: Z80) => { // ld (iy+dd),nn\n    const dd = z80.readByte(z80.regs.pc);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x39, (z80: Z80) => { // add iy,sp\n    let value: number;\n    z80.incTStateCount(7);\n    value = z80.regs.sp;\n    let result = z80.regs.iy + value;\n    const lookup = (((z80.regs.iy & 0x0800) >> 11) |\n                   ((value & 0x0800) >> 10) |\n                   ((result & 0x0800) >> 9)) & 0xFF;\n    z80.regs.memptr = inc16(z80.regs.iy);\n    z80.regs.iy = result & 0xFFFF;\n    z80.regs.f = (z80.regs.f & (Flag.V | Flag.Z | Flag.S)) | ((result & 0x10000) !== 0 ? Flag.C : 0) | ((result >> 8) & (Flag.X3 | Flag.X5)) | halfCarryAddTable[lookup];\n});\nfillMap.set(0x44, (z80: Z80) => { // ld b,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.b = value;\n});\nfillMap.set(0x45, (z80: Z80) => { // ld b,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.b = value;\n});\nfillMap.set(0x46, (z80: Z80) => { // ld b,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.b = value;\n});\nfillMap.set(0x4C, (z80: Z80) => { // ld c,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.c = value;\n});\nfillMap.set(0x4D, (z80: Z80) => { // ld c,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.c = value;\n});\nfillMap.set(0x4E, (z80: Z80) => { // ld c,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.c = value;\n});\nfillMap.set(0x54, (z80: Z80) => { // ld d,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.d = value;\n});\nfillMap.set(0x55, (z80: Z80) => { // ld d,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.d = value;\n});\nfillMap.set(0x56, (z80: Z80) => { // ld d,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.d = value;\n});\nfillMap.set(0x5C, (z80: Z80) => { // ld e,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.e = value;\n});\nfillMap.set(0x5D, (z80: Z80) => { // ld e,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.e = value;\n});\nfillMap.set(0x5E, (z80: Z80) => { // ld e,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.e = value;\n});\nfillMap.set(0x60, (z80: Z80) => { // ld iyh,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x61, (z80: Z80) => { // ld iyh,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x62, (z80: Z80) => { // ld iyh,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x63, (z80: Z80) => { // ld iyh,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x64, (z80: Z80) => { // ld iyh,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x65, (z80: Z80) => { // ld iyh,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x66, (z80: Z80) => { // ld h,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.h = value;\n});\nfillMap.set(0x67, (z80: Z80) => { // ld iyh,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.iyh = value;\n});\nfillMap.set(0x68, (z80: Z80) => { // ld iyl,b\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x69, (z80: Z80) => { // ld iyl,c\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x6A, (z80: Z80) => { // ld iyl,d\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x6B, (z80: Z80) => { // ld iyl,e\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x6C, (z80: Z80) => { // ld iyl,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x6D, (z80: Z80) => { // ld iyl,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x6E, (z80: Z80) => { // ld l,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.l = value;\n});\nfillMap.set(0x6F, (z80: Z80) => { // ld iyl,a\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.iyl = value;\n});\nfillMap.set(0x70, (z80: Z80) => { // ld (iy+dd),b\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.b;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x71, (z80: Z80) => { // ld (iy+dd),c\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.c;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x72, (z80: Z80) => { // ld (iy+dd),d\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.d;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x73, (z80: Z80) => { // ld (iy+dd),e\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.e;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x74, (z80: Z80) => { // ld (iy+dd),h\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.h;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x75, (z80: Z80) => { // ld (iy+dd),l\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.l;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x77, (z80: Z80) => { // ld (iy+dd),a\n    const dd = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    let value: number;\n    value = z80.regs.a;\n    z80.regs.memptr = (z80.regs.iy + signedByte(dd)) & 0xFFFF;\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x7C, (z80: Z80) => { // ld a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a = value;\n});\nfillMap.set(0x7D, (z80: Z80) => { // ld a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a = value;\n});\nfillMap.set(0x7E, (z80: Z80) => { // ld a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a = value;\n});\nfillMap.set(0x84, (z80: Z80) => { // add a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x85, (z80: Z80) => { // add a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x86, (z80: Z80) => { // add a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8C, (z80: Z80) => { // adc a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8D, (z80: Z80) => { // adc a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x8E, (z80: Z80) => { // adc a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = add16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = inc16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | halfCarryAddTable[lookup & 0x07] | overflowAddTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x94, (z80: Z80) => { // sub a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x95, (z80: Z80) => { // sub a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x96, (z80: Z80) => { // sub a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9C, (z80: Z80) => { // sbc a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9D, (z80: Z80) => { // sbc a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0x9E, (z80: Z80) => { // sbc a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    let result = sub16(z80.regs.a, value);\n    if ((z80.regs.f & Flag.C) !== 0) {\n        result = dec16(result);\n    }\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((result & 0x88) >> 1)) & 0xFF;\n    z80.regs.a = result & 0xFF;\n    z80.regs.f = (((result & 0x100) !== 0) ? Flag.C : 0) | Flag.N | halfCarrySubTable[lookup & 0x07] | overflowSubTable[lookup >> 4] | z80.sz53Table[z80.regs.a];\n});\nfillMap.set(0xA4, (z80: Z80) => { // and a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA5, (z80: Z80) => { // and a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xA6, (z80: Z80) => { // and a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a &= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n    z80.regs.f |= Flag.H;\n});\nfillMap.set(0xAC, (z80: Z80) => { // xor a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAD, (z80: Z80) => { // xor a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xAE, (z80: Z80) => { // xor a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a ^= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB4, (z80: Z80) => { // or a,iyh\n    let value: number;\n    value = z80.regs.iyh;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB5, (z80: Z80) => { // or a,iyl\n    let value: number;\n    value = z80.regs.iyl;\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xB6, (z80: Z80) => { // or a,(iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    z80.regs.a |= value;\n    z80.regs.f = z80.sz53pTable[z80.regs.a];\n});\nfillMap.set(0xBC, (z80: Z80) => { // cp iyh\n    let value: number;\n    value = z80.regs.iyh;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBD, (z80: Z80) => { // cp iyl\n    let value: number;\n    value = z80.regs.iyl;\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xBE, (z80: Z80) => { // cp (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.pc);\n    z80.incTStateCount(5);\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.regs.memptr = (z80.regs.iy + signedByte(value)) & 0xFFFF;\n    value = z80.readByte(z80.regs.memptr);\n    const diff = (z80.regs.a - value) & 0xFFFF;\n    const lookup = (((z80.regs.a & 0x88) >> 3) |\n                   ((value & 0x88) >> 2) |\n                   ((diff & 0x88) >> 1)) & 0xFF;\n    let f = Flag.N;\n    if ((diff & 0x100) != 0) f |= Flag.C;\n    if (diff == 0) f |= Flag.Z;\n    f |= halfCarrySubTable[lookup & 0x07];\n    f |= overflowSubTable[lookup >> 4];\n    f |= value & (Flag.X3 | Flag.X5);\n    f |= diff & Flag.S;\n    z80.regs.af = word(z80.regs.a, f);\n});\nfillMap.set(0xCB, (z80: Z80) => { // shift fdcb\n    decodeFDCB(z80);\n});\nfillMap.set(0xE1, (z80: Z80) => { // pop iy\n    z80.regs.iy = z80.popWord();\n});\nfillMap.set(0xE3, (z80: Z80) => { // ex (sp),iy\n    const rightValue = z80.regs.iy;\n    const leftValueL = z80.readByte(z80.regs.sp);\n    const leftValueH = z80.readByte(inc16(z80.regs.sp));\n    z80.incTStateCount(1);\n    z80.writeByte(inc16(z80.regs.sp), hi(rightValue));\n    z80.writeByte(z80.regs.sp, lo(rightValue));\n    z80.incTStateCount(2);\n    z80.regs.memptr = word(leftValueH, leftValueL);\n    z80.regs.iy = word(leftValueH, leftValueL);\n});\nfillMap.set(0xE5, (z80: Z80) => { // push iy\n    z80.incTStateCount(1);\n    z80.pushWord(z80.regs.iy);\n});\nfillMap.set(0xE9, (z80: Z80) => { // jp iy\n    z80.regs.pc = z80.regs.iy;\n});\nfillMap.set(0xF9, (z80: Z80) => { // ld sp,iy\n    let value: number;\n    value = z80.regs.iy;\n    z80.incTStateCount(2);\n    z80.regs.sp = value;\n});\n\nconst decodeMapFDCB = new Map<number, (z80: Z80) => void>();\nfillMap = decodeMapFDCB;\n\n// The contents of this map are auto-generated by GenerateOpcodes.ts.\n\nfillMap.set(0x00, (z80: Z80) => { // ld b,rlc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x01, (z80: Z80) => { // ld c,rlc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x02, (z80: Z80) => { // ld d,rlc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x03, (z80: Z80) => { // ld e,rlc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x04, (z80: Z80) => { // ld h,rlc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x05, (z80: Z80) => { // ld l,rlc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x06, (z80: Z80) => { // rlc (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | (value >> 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x07, (z80: Z80) => { // ld a,rlc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | (value >> 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x08, (z80: Z80) => { // ld b,rrc\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x09, (z80: Z80) => { // ld c,rrc\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x0A, (z80: Z80) => { // ld d,rrc\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x0B, (z80: Z80) => { // ld e,rrc\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x0C, (z80: Z80) => { // ld h,rrc\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x0D, (z80: Z80) => { // ld l,rrc\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x0E, (z80: Z80) => { // rrc (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value >> 1) | (value << 7)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x0F, (z80: Z80) => { // ld a,rrc\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value >> 1) | (value << 7)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x10, (z80: Z80) => { // ld b,rl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x11, (z80: Z80) => { // ld c,rl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x12, (z80: Z80) => { // ld d,rl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x13, (z80: Z80) => { // ld e,rl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x14, (z80: Z80) => { // ld h,rl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x15, (z80: Z80) => { // ld l,rl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x16, (z80: Z80) => { // rl (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x17, (z80: Z80) => { // ld a,rl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | ((z80.regs.f & Flag.C) !== 0 ? 1 : 0)) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x18, (z80: Z80) => { // ld b,rr\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x19, (z80: Z80) => { // ld c,rr\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x1A, (z80: Z80) => { // ld d,rr\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x1B, (z80: Z80) => { // ld e,rr\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x1C, (z80: Z80) => { // ld h,rr\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x1D, (z80: Z80) => { // ld l,rr\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x1E, (z80: Z80) => { // rr (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x1F, (z80: Z80) => { // ld a,rr\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value >> 1) | ((z80.regs.f & Flag.C) !== 0 ? 0x80 : 0);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x20, (z80: Z80) => { // ld b,sla\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x21, (z80: Z80) => { // ld c,sla\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x22, (z80: Z80) => { // ld d,sla\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x23, (z80: Z80) => { // ld e,sla\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x24, (z80: Z80) => { // ld h,sla\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x25, (z80: Z80) => { // ld l,sla\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x26, (z80: Z80) => { // sla (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value << 1) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x27, (z80: Z80) => { // ld a,sla\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value << 1) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x28, (z80: Z80) => { // ld b,sra\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x29, (z80: Z80) => { // ld c,sra\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x2A, (z80: Z80) => { // ld d,sra\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x2B, (z80: Z80) => { // ld e,sra\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x2C, (z80: Z80) => { // ld h,sra\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x2D, (z80: Z80) => { // ld l,sra\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x2E, (z80: Z80) => { // sra (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = (value & 0x80) | (value >> 1);\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x2F, (z80: Z80) => { // ld a,sra\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = (value & 0x80) | (value >> 1);\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x30, (z80: Z80) => { // ld b,sll\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x31, (z80: Z80) => { // ld c,sll\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x32, (z80: Z80) => { // ld d,sll\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x33, (z80: Z80) => { // ld e,sll\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x34, (z80: Z80) => { // ld h,sll\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x35, (z80: Z80) => { // ld l,sll\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x36, (z80: Z80) => { // sll (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = ((value << 1) | 0x01) & 0xFF;\n    z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x37, (z80: Z80) => { // ld a,sll\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = ((value << 1) | 0x01) & 0xFF;\n        z80.regs.f = ((oldValue & 0x80) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x38, (z80: Z80) => { // ld b,srl\n    z80.regs.b = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.b;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.b = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x39, (z80: Z80) => { // ld c,srl\n    z80.regs.c = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.c;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.c = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x3A, (z80: Z80) => { // ld d,srl\n    z80.regs.d = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.d;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.d = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x3B, (z80: Z80) => { // ld e,srl\n    z80.regs.e = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.e;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.e = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x3C, (z80: Z80) => { // ld h,srl\n    z80.regs.h = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.h;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.h = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x3D, (z80: Z80) => { // ld l,srl\n    z80.regs.l = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.l;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.l = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x3E, (z80: Z80) => { // srl (iy+dd)\n    let value: number;\n    value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    const oldValue = value;\n    value = value >> 1;\n    z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n    z80.writeByte(z80.regs.memptr, value);\n});\nfillMap.set(0x3F, (z80: Z80) => { // ld a,srl\n    z80.regs.a = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    {\n        let value: number;\n        value = z80.regs.a;\n        const oldValue = value;\n        value = value >> 1;\n        z80.regs.f = ((oldValue & 0x01) !== 0 ? Flag.C : 0) | z80.sz53pTable[value];\n        z80.regs.a = value;\n    }\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x47, (z80: Z80) => { // bit 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x01) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x40, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x41, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x42, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x43, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x44, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x45, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x46, fillMap.get(0x47) as (z80: Z80) => void);\nfillMap.set(0x4F, (z80: Z80) => { // bit 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x02) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x48, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x49, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4A, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4B, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4C, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4D, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x4E, fillMap.get(0x4F) as (z80: Z80) => void);\nfillMap.set(0x57, (z80: Z80) => { // bit 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x04) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x50, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x51, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x52, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x53, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x54, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x55, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x56, fillMap.get(0x57) as (z80: Z80) => void);\nfillMap.set(0x5F, (z80: Z80) => { // bit 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x08) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x58, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x59, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5A, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5B, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5C, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5D, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x5E, fillMap.get(0x5F) as (z80: Z80) => void);\nfillMap.set(0x67, (z80: Z80) => { // bit 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x10) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x60, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x61, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x62, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x63, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x64, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x65, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x66, fillMap.get(0x67) as (z80: Z80) => void);\nfillMap.set(0x6F, (z80: Z80) => { // bit 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x20) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x68, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x69, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6A, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6B, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6C, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6D, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x6E, fillMap.get(0x6F) as (z80: Z80) => void);\nfillMap.set(0x77, (z80: Z80) => { // bit 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x40) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x70, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x71, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x72, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x73, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x74, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x75, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x76, fillMap.get(0x77) as (z80: Z80) => void);\nfillMap.set(0x7F, (z80: Z80) => { // bit 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    const hiddenValue = hi(z80.regs.memptr);\n    z80.incTStateCount(1);\n    let f = (z80.regs.f & Flag.C) | Flag.H | (hiddenValue & (Flag.X3 | Flag.X5));\n    if ((value & 0x80) === 0) {\n        f |= Flag.P | Flag.Z;\n    }\n    if ((value & 0x80) !== 0) {\n        f |= Flag.S;\n    }\n    z80.regs.f = f;\n});\nfillMap.set(0x78, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x79, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7A, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7B, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7C, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7D, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x7E, fillMap.get(0x7F) as (z80: Z80) => void);\nfillMap.set(0x80, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x81, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x82, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x83, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x84, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x85, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x86, (z80: Z80) => { // res 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFE);\n});\nfillMap.set(0x87, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFE;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x88, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x89, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x8A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x8B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x8C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x8D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x8E, (z80: Z80) => { // res 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFD);\n});\nfillMap.set(0x8F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFD;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x90, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x91, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x92, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x93, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x94, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x95, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x96, (z80: Z80) => { // res 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xFB);\n});\nfillMap.set(0x97, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xFB;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0x98, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0x99, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0x9A, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0x9B, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0x9C, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0x9D, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0x9E, (z80: Z80) => { // res 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xF7);\n});\nfillMap.set(0x9F, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xF7;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xA0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xA1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xA2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xA3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xA4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xA5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xA6, (z80: Z80) => { // res 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xEF);\n});\nfillMap.set(0xA7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xEF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xA8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xA9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xAA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xAB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xAC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xAD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xAE, (z80: Z80) => { // res 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xDF);\n});\nfillMap.set(0xAF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xDF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xB0, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xB1, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xB2, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xB3, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xB4, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xB5, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xB6, (z80: Z80) => { // res 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0xBF);\n});\nfillMap.set(0xB7, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0xBF;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xB8, (z80: Z80) => { // ld b,res\n    z80.regs.b = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xB9, (z80: Z80) => { // ld c,res\n    z80.regs.c = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xBA, (z80: Z80) => { // ld d,res\n    z80.regs.d = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xBB, (z80: Z80) => { // ld e,res\n    z80.regs.e = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xBC, (z80: Z80) => { // ld h,res\n    z80.regs.h = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xBD, (z80: Z80) => { // ld l,res\n    z80.regs.l = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xBE, (z80: Z80) => { // res 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value & 0x7F);\n});\nfillMap.set(0xBF, (z80: Z80) => { // ld a,res\n    z80.regs.a = z80.readByte(z80.regs.memptr) & 0x7F;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xC0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xC1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xC2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xC3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xC4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xC5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xC6, (z80: Z80) => { // set 0,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x01);\n});\nfillMap.set(0xC7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x01;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xC8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xC9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xCA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xCB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xCC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xCD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xCE, (z80: Z80) => { // set 1,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x02);\n});\nfillMap.set(0xCF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x02;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xD0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xD1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xD2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xD3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xD4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xD5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xD6, (z80: Z80) => { // set 2,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x04);\n});\nfillMap.set(0xD7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x04;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xD8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xD9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xDA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xDB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xDC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xDD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xDE, (z80: Z80) => { // set 3,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x08);\n});\nfillMap.set(0xDF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x08;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xE0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xE1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xE2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xE3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xE4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xE5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xE6, (z80: Z80) => { // set 4,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x10);\n});\nfillMap.set(0xE7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x10;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xE8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xE9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xEA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xEB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xEC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xED, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xEE, (z80: Z80) => { // set 5,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x20);\n});\nfillMap.set(0xEF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x20;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xF0, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xF1, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xF2, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xF3, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xF4, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xF5, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xF6, (z80: Z80) => { // set 6,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x40);\n});\nfillMap.set(0xF7, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x40;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\nfillMap.set(0xF8, (z80: Z80) => { // ld b,set\n    z80.regs.b = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.b);\n});\nfillMap.set(0xF9, (z80: Z80) => { // ld c,set\n    z80.regs.c = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.c);\n});\nfillMap.set(0xFA, (z80: Z80) => { // ld d,set\n    z80.regs.d = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.d);\n});\nfillMap.set(0xFB, (z80: Z80) => { // ld e,set\n    z80.regs.e = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.e);\n});\nfillMap.set(0xFC, (z80: Z80) => { // ld h,set\n    z80.regs.h = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.h);\n});\nfillMap.set(0xFD, (z80: Z80) => { // ld l,set\n    z80.regs.l = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.l);\n});\nfillMap.set(0xFE, (z80: Z80) => { // set 7,(iy+dd)\n    const value = z80.readByte(z80.regs.memptr);\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, value | 0x80);\n});\nfillMap.set(0xFF, (z80: Z80) => { // ld a,set\n    z80.regs.a = z80.readByte(z80.regs.memptr) | 0x80;\n    z80.incTStateCount(1);\n    z80.writeByte(z80.regs.memptr, z80.regs.a);\n});\n\n/**\n * Fetch an instruction for decode.\n */\nfunction fetchInstruction(z80: Z80): number {\n    z80.incTStateCount(4);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.regs.pc = (z80.regs.pc + 1) & 0xFFFF;\n    z80.regs.r = (z80.regs.r + 1) & 0xFF;\n\n    return inst;\n}\n\n/**\n * Decode the \"CB\" prefix (bit instructions).\n */\nfunction decodeCB(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in CB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"DD\" prefix (IX instructions).\n */\nfunction decodeDD(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapDD.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in DD: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"DDCB\" prefix (IX bit instructions).\n */\nfunction decodeDDCB(z80: Z80): void {\n    z80.incTStateCount(3);\n    const offset = z80.readByteInternal(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.ix, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(3);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n\n    const func = decodeMapDDCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in DDCB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"ED\" prefix (extended instructions).\n */\nfunction decodeED(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapED.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in ED: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"FD\" prefix (IY instructions).\n */\nfunction decodeFD(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMapFD.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in FD: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the \"FDCB\" prefix (IY bit instructions).\n */\nfunction decodeFDCB(z80: Z80): void {\n    z80.incTStateCount(3);\n    const offset = z80.readByteInternal(z80.regs.pc);\n    z80.regs.memptr = add16(z80.regs.iy, signedByte(offset));\n    z80.regs.pc = inc16(z80.regs.pc);\n    z80.incTStateCount(3);\n    const inst = z80.readByteInternal(z80.regs.pc);\n    z80.incTStateCount(2);\n    z80.regs.pc = inc16(z80.regs.pc);\n\n    const func = decodeMapFDCB.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode in FDCB: \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n\n/**\n * Decode the base (un-prefixed) instructions.\n */\nexport function decode(z80: Z80): void {\n    const inst = fetchInstruction(z80);\n    const func = decodeMap.get(inst);\n    if (func === undefined) {\n        console.log(\"Unhandled opcode \" + toHex(inst, 2));\n    } else {\n        func(z80);\n    }\n}\n","import {Flag, hi, inc16, lo, RegisterSet, word} from \"z80-base\";\nimport {decode} from \"./Decode\";\nimport {Hal} from \"./Hal\";\n\n/**\n * Emulated Z80 processor.\n */\nexport class Z80 {\n    /**\n     * Full set of registers.\n     */\n    public regs: RegisterSet = new RegisterSet();\n    /**\n     * Hardware abstraction layer this Z80 is dealing with.\n     */\n    public hal: Hal;\n    /**\n     * Tables for computing flags. Public so that the decoding function\n     * can access them.\n     */\n    public sz53Table: number[] = []; /* The S, Z, 5 and 3 bits of the index */\n    public parityTable: number[] = []; /* The parity of the lookup value */\n    public sz53pTable: number[] = []; /* OR the above two tables together */\n\n    constructor(hal: Hal) {\n        this.hal = hal;\n        this.initTables();\n    }\n\n    /**\n     * Reset the Z80 to a known state.\n     */\n    public reset(): void {\n        this.regs = new RegisterSet();\n    }\n\n    /**\n     * Execute one instruction.\n     */\n    public step(): void {\n        decode(this);\n    }\n\n    /**\n     * Increment the clock count.\n     */\n    public incTStateCount(count: number): void {\n        this.hal.tStateCount += count;\n    }\n\n    /**\n     * Interrupt the CPU with a maskable interrupt\n     */\n    public maskableInterrupt(): void {\n        if (this.regs.iff1 !== 0) {\n            this.interrupt(true);\n        }\n    }\n\n    /**\n     * Interrupt the CPU with a non-maskable interrupt\n     */\n    public nonMaskableInterrupt(): void {\n        this.interrupt(false);\n    }\n\n    /**\n     * Read a byte from memory, taking as many clock cycles as necessary.\n     */\n    public readByte(address: number): number {\n        this.incTStateCount(3);\n        return this.readByteInternal(address);\n    }\n\n    /**\n     * Reads a word at the specified address. Reads the low byte first.\n     */\n    public readWord(address: number): number {\n        const lowByte = this.readByte(address);\n        const highByte = this.readByte(address + 1);\n\n        return word(highByte, lowByte);\n    }\n\n    /**\n     * Read a byte from memory (not affecting clock).\n     */\n    public readByteInternal(address: number): number {\n        return this.hal.readMemory(address);\n    }\n\n    /**\n     * Write a byte to memory, taking as many clock cycles as necessary.\n     */\n    public writeByte(address: number, value: number): void {\n        this.incTStateCount(3);\n        this.writeByteInternal(address, value);\n    }\n\n    /**\n     * Write a byte to memory (not affecting clock).\n     */\n    public writeByteInternal(address: number, value: number): void {\n        this.hal.writeMemory(address, value);\n    }\n\n    /**\n     * Write a byte to a port, taking as many clock cycles as necessary.\n     */\n    public writePort(address: number, value: number): void {\n        this.incTStateCount(1);\n        this.hal.writePort(address, value);\n        this.incTStateCount(3);\n    }\n\n    /**\n     * Read a byte from a port, taking as many clock cycles as necessary.\n     */\n    public readPort(address: number): number {\n        this.incTStateCount(1);\n        const value = this.hal.readPort(address);\n        this.incTStateCount(3);\n        return value;\n    }\n\n    /**\n     * Push a word on the stack.\n     */\n    public pushWord(value: number): void {\n        this.pushByte(hi(value));\n        this.pushByte(lo(value));\n    }\n\n    /**\n     * Push a byte on the stack.\n     */\n    public pushByte(value: number): void {\n        this.regs.sp = (this.regs.sp - 1) & 0xFFFF;\n        this.writeByte(this.regs.sp, value);\n    }\n\n    /**\n     * Pop a word from the stack.\n     */\n    public popWord(): number {\n        const lowByte = this.popByte();\n        const highByte = this.popByte();\n        return word(highByte, lowByte);\n    }\n\n    /**\n     * Pop a byte from the stack.\n     */\n    public popByte(): number {\n        const value = this.readByte(this.regs.sp);\n        this.regs.sp = inc16(this.regs.sp);\n        return value;\n    }\n\n    /**\n     * Process either kind of interrupt. If maskable, assumes that\n     * the mask has already been checked.\n     */\n    private interrupt(maskable: boolean): void {\n        if (this.regs.halted) {\n            // Skip past HALT instruction.\n            this.regs.pc++;\n            this.regs.halted = 0;\n        }\n\n        this.incTStateCount(7);\n        this.regs.r += 1;\n        this.regs.iff1 = 0;\n        this.regs.iff2 = 0;\n\n        this.pushWord(this.regs.pc);\n\n        if (maskable) {\n            switch (this.regs.im) {\n                case 0:\n                case 1:\n                    this.regs.pc = 0x0038;\n                    break;\n\n                case 2: {\n                    // The LSB here is taken from the data bus, so it's\n                    // unpredictable. We use 0xFF but any value would do.\n                    const address = word(this.regs.i, 0xFF);\n                    this.regs.pc = this.readWord(address);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"Unknown im mode \" + this.regs.im);\n            }\n        } else {\n            this.regs.pc = 0x0066;\n        }\n    }\n\n    private initTables(): void {\n        for (let i = 0; i< 0x100; i++) {\n            this.sz53Table.push(i & (Flag.X3 | Flag.X5 | Flag.S));\n            let bits = i;\n            let parity = 0;\n            for (let bit = 0; bit < 8; bit++) {\n                parity ^= bits & 1;\n                bits >>= 1;\n            }\n            this.parityTable.push(parity ? 0 : Flag.P);\n            this.sz53pTable.push(this.sz53Table[i] | this.parityTable[i]);\n        }\n\n        this.sz53Table[0] |= Flag.Z;\n        this.sz53pTable[0] |= Flag.Z;\n\n    }\n}\n","\nexport * from \"./Z80\";\nexport * from \"./Hal\";\n","\n// Handle keyboard mapping. The TRS-80 Model III keyboard has keys in different\n// places, so we must occasionally fake a Shift key being up or down when it's\n// really not.\n\nconst BEGIN_ADDR = 0x3800;\nconst END_ADDR = BEGIN_ADDR + 256;\nconst KEY_DELAY_CLOCK_CYCLES = 50000;\n\n// Whether to force a Shift key, and how.\nenum ShiftState {\n    NEUTRAL, FORCE_DOWN, FORCE_UP,\n}\n\n// For each ASCII character or key we keep track of how to trigger it.\nclass KeyInfo {\n    public byteIndex: number;\n    public bitNumber: number;\n    public shiftForce: ShiftState;\n\n    constructor(byteIndex: number, bitNumber: number, shiftForce: ShiftState) {\n        this.byteIndex = byteIndex;\n        this.bitNumber = bitNumber;\n        this.shiftForce = shiftForce;\n    }\n}\n\n// A queued-up key.\nclass KeyActivity {\n    public keyInfo: KeyInfo;\n    public isPressed: boolean;\n\n    constructor(keyInfo: KeyInfo, isPressed: boolean) {\n        this.keyInfo = keyInfo;\n        this.isPressed = isPressed;\n    }\n}\n\n// Map from ASCII or special key to the info of which byte and bit it's mapped\n// to, and whether to force Shift.\nconst keyMap = new Map<string, KeyInfo>();\n\n// http://www.trs-80.com/trs80-zaps-internals.htm#keyboard13\nkeyMap.set(\"@\", new KeyInfo(0, 0, ShiftState.FORCE_UP));\n\nkeyMap.set(\"A\", new KeyInfo(0, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"B\", new KeyInfo(0, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"C\", new KeyInfo(0, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"D\", new KeyInfo(0, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"E\", new KeyInfo(0, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"F\", new KeyInfo(0, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"G\", new KeyInfo(0, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"H\", new KeyInfo(1, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"I\", new KeyInfo(1, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"J\", new KeyInfo(1, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"K\", new KeyInfo(1, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"L\", new KeyInfo(1, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"M\", new KeyInfo(1, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"N\", new KeyInfo(1, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"O\", new KeyInfo(1, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"P\", new KeyInfo(2, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Q\", new KeyInfo(2, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"R\", new KeyInfo(2, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"S\", new KeyInfo(2, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"T\", new KeyInfo(2, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"U\", new KeyInfo(2, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"V\", new KeyInfo(2, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"W\", new KeyInfo(2, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"X\", new KeyInfo(3, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Y\", new KeyInfo(3, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"Z\", new KeyInfo(3, 2, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\"a\", new KeyInfo(0, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"b\", new KeyInfo(0, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"c\", new KeyInfo(0, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"d\", new KeyInfo(0, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"e\", new KeyInfo(0, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"f\", new KeyInfo(0, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"g\", new KeyInfo(0, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"h\", new KeyInfo(1, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"i\", new KeyInfo(1, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"j\", new KeyInfo(1, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"k\", new KeyInfo(1, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"l\", new KeyInfo(1, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"m\", new KeyInfo(1, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"n\", new KeyInfo(1, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"o\", new KeyInfo(1, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"p\", new KeyInfo(2, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"q\", new KeyInfo(2, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"r\", new KeyInfo(2, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"s\", new KeyInfo(2, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"t\", new KeyInfo(2, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"u\", new KeyInfo(2, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"v\", new KeyInfo(2, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"w\", new KeyInfo(2, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"x\", new KeyInfo(3, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"y\", new KeyInfo(3, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"z\", new KeyInfo(3, 2, ShiftState.FORCE_UP));\n\nkeyMap.set(\"0\", new KeyInfo(4, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"1\", new KeyInfo(4, 1, ShiftState.FORCE_UP));\nkeyMap.set(\"2\", new KeyInfo(4, 2, ShiftState.FORCE_UP));\nkeyMap.set(\"3\", new KeyInfo(4, 3, ShiftState.FORCE_UP));\nkeyMap.set(\"4\", new KeyInfo(4, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"5\", new KeyInfo(4, 5, ShiftState.FORCE_UP));\nkeyMap.set(\"6\", new KeyInfo(4, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"7\", new KeyInfo(4, 7, ShiftState.FORCE_UP));\nkeyMap.set(\"8\", new KeyInfo(5, 0, ShiftState.FORCE_UP));\nkeyMap.set(\"9\", new KeyInfo(5, 1, ShiftState.FORCE_UP));\n\nkeyMap.set(\"`\", new KeyInfo(4, 0, ShiftState.FORCE_DOWN)); // Simulate Shift-0.\nkeyMap.set(\"!\", new KeyInfo(4, 1, ShiftState.FORCE_DOWN));\nkeyMap.set(\"\\\"\", new KeyInfo(4, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"#\", new KeyInfo(4, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"$\", new KeyInfo(4, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"%\", new KeyInfo(4, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\"&\", new KeyInfo(4, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"'\", new KeyInfo(4, 7, ShiftState.FORCE_DOWN));\nkeyMap.set(\"(\", new KeyInfo(5, 0, ShiftState.FORCE_DOWN));\nkeyMap.set(\")\", new KeyInfo(5, 1, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\":\", new KeyInfo(5, 2, ShiftState.FORCE_UP));\nkeyMap.set(\";\", new KeyInfo(5, 3, ShiftState.FORCE_UP));\nkeyMap.set(\",\", new KeyInfo(5, 4, ShiftState.FORCE_UP));\nkeyMap.set(\"-\", new KeyInfo(5, 5, ShiftState.FORCE_UP));\nkeyMap.set(\".\", new KeyInfo(5, 6, ShiftState.FORCE_UP));\nkeyMap.set(\"/\", new KeyInfo(5, 7, ShiftState.FORCE_UP));\n\nkeyMap.set(\"*\", new KeyInfo(5, 2, ShiftState.FORCE_DOWN));\nkeyMap.set(\"+\", new KeyInfo(5, 3, ShiftState.FORCE_DOWN));\nkeyMap.set(\"<\", new KeyInfo(5, 4, ShiftState.FORCE_DOWN));\nkeyMap.set(\"=\", new KeyInfo(5, 5, ShiftState.FORCE_DOWN));\nkeyMap.set(\">\", new KeyInfo(5, 6, ShiftState.FORCE_DOWN));\nkeyMap.set(\"?\", new KeyInfo(5, 7, ShiftState.FORCE_DOWN));\n\nkeyMap.set(\"Enter\", new KeyInfo(6, 0, ShiftState.NEUTRAL));\nkeyMap.set(\"Tab\", new KeyInfo(6, 1, ShiftState.NEUTRAL)); // Clear\nkeyMap.set(\"Escape\", new KeyInfo(6, 2, ShiftState.NEUTRAL)); // Break\nkeyMap.set(\"ArrowUp\", new KeyInfo(6, 3, ShiftState.NEUTRAL));\nkeyMap.set(\"ArrowDown\", new KeyInfo(6, 4, ShiftState.NEUTRAL));\nkeyMap.set(\"ArrowLeft\", new KeyInfo(6, 5, ShiftState.NEUTRAL));\nkeyMap.set(\"Backspace\", new KeyInfo(6, 5, ShiftState.NEUTRAL)); // Left arrow\nkeyMap.set(\"ArrowRight\", new KeyInfo(6, 6, ShiftState.NEUTRAL));\nkeyMap.set(\" \", new KeyInfo(6, 7, ShiftState.NEUTRAL));\nkeyMap.set(\"Shift\", new KeyInfo(7, 0, ShiftState.NEUTRAL));\n\nexport class Keyboard {\n    public static isInRange(address: number): boolean {\n        return address >= BEGIN_ADDR && address < END_ADDR;\n    }\n\n    // We queue up keystrokes so that we don't overwhelm the ROM polling routines.\n    public keyQueue: KeyActivity[]  = [];\n    // Whether browser keys should be intercepted.\n    public interceptKeys = false;\n    public keyProcessMinClock: number = 0;\n    // 8 bytes, each a bitfield of keys currently pressed.\n    private keys = new Uint8Array(8);\n    private shiftForce = ShiftState.NEUTRAL;\n\n    // Release all keys.\n    public clearKeyboard(): void {\n        this.keys.fill(0);\n        this.shiftForce = ShiftState.NEUTRAL;\n    }\n\n    // Read a byte from the keyboard memory bank. This is an odd system where\n    // bits in the address map to the various bytes, and you can read the OR'ed\n    // addresses to read more than one byte at a time. This isn't used by the\n    // ROM, I don't think. For the last byte we fake the Shift key if necessary.\n    public readKeyboard(addr: number, clock: number): number {\n        addr -= BEGIN_ADDR;\n        let b = 0;\n\n        // Dequeue if necessary.\n        if (clock > this.keyProcessMinClock) {\n            const keyWasPressed = this.processKeyQueue();\n            if (keyWasPressed) {\n                this.keyProcessMinClock = clock + KEY_DELAY_CLOCK_CYCLES;\n            }\n        }\n\n        // OR together the various bytes.\n        for (let i = 0; i < this.keys.length; i++) {\n            let keys = this.keys[i];\n            if ((addr & (1 << i)) !== 0) {\n                if (i === 7) {\n                    // Modify keys based on the shift force.\n                    switch (this.shiftForce) {\n                        case ShiftState.NEUTRAL:\n                            // Nothing.\n                            break;\n\n                        case ShiftState.FORCE_UP:\n                            // On the Model III the first two bits are left and right shift,\n                            // though we don't handle the right shift anywhere.\n                            keys &= ~0x03;\n                            break;\n\n                        case ShiftState.FORCE_DOWN:\n                            keys |= 0x01;\n                            break;\n                    }\n                }\n\n                b |= keys;\n            }\n        }\n\n        return b;\n    }\n\n    // Enqueue a key press or release.\n    public keyEvent(key: string, isPressed: boolean) {\n        // Look up the key info.\n        const keyInfo = keyMap.get(key);\n        if (keyInfo === undefined) {\n            // Meta is noisy.\n            if (key !== \"Meta\") {\n                console.log(\"Unknown key \\\"\" + key + \"\\\"\");\n            }\n        } else {\n            // Append key to queue.\n            this.keyQueue.push(new KeyActivity(keyInfo, isPressed));\n        }\n    }\n\n    // Convert keys on the keyboard to ASCII letters or special strings like \"Enter\".\n    public configureKeyboard(): void {\n        // Handle a key event by mapping it and sending it to the emulator.\n        const keyEvent = (event: KeyboardEvent, isPressed: boolean) => {\n            // Don't do anything if we're not active.\n            if (!this.interceptKeys) {\n                return;\n            }\n\n            // Don't send to virtual computer if a text input field is selected.\n            // if ($(document.activeElement).attr(\"type\") === \"text\") {\n            //     return;\n            // }\n\n            // Don't interfere with browser keys.\n            if (event.metaKey || event.ctrlKey) {\n                return;\n            }\n\n            const key = event.key;\n            if (key !== \"\") {\n                this.keyEvent(key, isPressed);\n                event.preventDefault();\n            }\n        };\n\n        const body = document.getElementsByTagName(\"body\")[0];\n        body.addEventListener(\"keydown\", (event) => keyEvent(event, true));\n        body.addEventListener(\"keyup\", (event) => keyEvent(event, false));\n        body.addEventListener(\"paste\", (event) => {\n            if (event.clipboardData) {\n                const pastedText = event.clipboardData.getData(\"text/plain\");\n                if (pastedText) {\n                    for (let ch of pastedText) {\n                        if (ch === \"\\n\" || ch === \"\\r\") {\n                            ch = \"Enter\";\n                        }\n                        this.keyEvent(ch, true);\n                        this.keyEvent(ch, false);\n                    }\n                }\n            }\n            event.preventDefault();\n        });\n    }\n\n    // Dequeue the next key and set its bit. Return whether a key was processed.\n    private  processKeyQueue(): boolean {\n        const keyActivity = this.keyQueue.shift();\n        if (keyActivity === undefined) {\n            return false;\n        }\n\n        this.shiftForce = keyActivity.keyInfo.shiftForce;\n        const bit = 1 << keyActivity.keyInfo.bitNumber;\n        if (keyActivity.isPressed) {\n            this.keys[keyActivity.keyInfo.byteIndex] |= bit;\n        } else {\n            this.keys[keyActivity.keyInfo.byteIndex] &= ~bit;\n        }\n\n        return true;\n    }\n}\n","export const model1Level1Rom = `\n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\n`;\n","export const model1Level2Rom = `\\n`;\n","export const model3Rom = `\\n`;\n","\nexport const CSS_PREFIX = \"trs80-emulator\";\n\n// RAM address range of screen.\nexport const SCREEN_BEGIN = 15 * 1024;\nexport const SCREEN_END = 16 * 1024;\n\n/**\n * Remove all children from element.\n */\nexport function clearElement(e: HTMLElement): void {\n    while (e.firstChild) {\n        e.removeChild(e.firstChild);\n    }\n}\n","\n/**\n * The TRS-80 models we support.\n */\nexport enum ModelType {\n    MODEL1,\n    MODEL3,\n}\n\n/**\n * The levels of Basic.\n */\nexport enum BasicLevel {\n    LEVEL1,\n    LEVEL2,\n}\n\n/**\n * The character generator chip we support.\n */\nexport enum CGChip {\n    ORIGINAL,\n    LOWER_CASE,\n}\n\n/**\n * The amounts of RAM we support.\n */\nexport enum RamSize {\n    RAM_4_KB,\n    RAM_16_KB,\n    RAM_32_KB,\n    RAM_48_KB,\n}\n\n/**\n * Phosphor color.\n */\nexport enum Phosphor {\n    WHITE,\n    GREEN,\n    AMBER,\n}\n\n/**\n * Background color.\n */\nexport enum Background {\n    BLACK,\n    AUTHENTIC,\n}\n\n/**\n * Whether to display scan lines.\n */\nexport enum ScanLines {\n    OFF,\n    ON,\n}\n\n/**\n * A specific configuration of model and RAM.\n */\nexport class Config {\n    public readonly modelType: ModelType;\n    public readonly basicLevel: BasicLevel;\n    public readonly cgChip: CGChip;\n    public readonly ramSize: RamSize;\n    public readonly phosphor: Phosphor;\n    public readonly background: Background;\n    public readonly scanLines: ScanLines;\n\n    constructor(modelType: ModelType, basicLevel: BasicLevel, cgChip: CGChip, ramSize: RamSize,\n                phosphor: Phosphor, background: Background, scanLines: ScanLines) {\n\n        this.modelType = modelType;\n        this.basicLevel = basicLevel;\n        this.cgChip = cgChip;\n        this.ramSize = ramSize;\n        this.phosphor = phosphor;\n        this.background = background;\n        this.scanLines = scanLines;\n    }\n\n    public withModelType(modelType: ModelType): Config {\n        return new Config(modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withBasicLevel(basicLevel: BasicLevel): Config {\n        return new Config(this.modelType, basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withCGChip(cgChip: CGChip): Config {\n        return new Config(this.modelType, this.basicLevel, cgChip, this.ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withRamSize(ramSize: RamSize): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, ramSize, this.phosphor, this.background, this.scanLines);\n    }\n\n    public withPhosphor(phosphor: Phosphor): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, phosphor, this.background, this.scanLines);\n    }\n\n    public withBackground(background: Background): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, background, this.scanLines);\n    }\n\n    public withScanLines(scanLines: ScanLines): Config {\n        return new Config(this.modelType, this.basicLevel, this.cgChip, this.ramSize, this.phosphor, this.background, scanLines);\n    }\n\n    /**\n     * Make a default configuration.\n     */\n    public static makeDefault(): Config {\n        return new Config(ModelType.MODEL3, BasicLevel.LEVEL2, CGChip.LOWER_CASE, RamSize.RAM_48_KB,\n            Phosphor.WHITE, Background.AUTHENTIC, ScanLines.OFF);\n    }\n\n    /**\n     * Whether this particular config is valid.\n     */\n    public isValid(): boolean {\n        // Model III only had Level 2. (I've read that it actually shipped with Level 1, but\n        // we don't have that ROM.)\n        if (this.modelType === ModelType.MODEL3 && this.basicLevel === BasicLevel.LEVEL1) {\n            return false;\n        }\n\n        // Model III only had lower case.\n        if (this.modelType === ModelType.MODEL3 && this.cgChip === CGChip.ORIGINAL) {\n            return false;\n        }\n\n        // Rest are okay.\n        return true;\n    }\n\n    /**\n     * Whether this new config needs to be rebooted, if the emulator currently is running the old config.\n     */\n    public needsReboot(oldConfig: Config): boolean {\n        // Maybe here we could not reboot if only the CG chip changed. The software is able to detect the\n        // difference (since bit 6 is synthetic in one case).\n        return this.modelType !== oldConfig.modelType ||\n            this.basicLevel !== oldConfig.basicLevel ||\n            this.cgChip !== oldConfig.cgChip ||\n            this.ramSize !== oldConfig.ramSize;\n    }\n\n    /**\n     * Return the RAM size in bytes.\n     */\n    public getRamSize(): number {\n        let kb: number;\n\n        switch (this.ramSize) {\n            case RamSize.RAM_4_KB:\n                kb = 4;\n                break;\n            case RamSize.RAM_16_KB:\n                kb = 16;\n                break;\n            case RamSize.RAM_32_KB:\n                kb = 32;\n                break;\n            case RamSize.RAM_48_KB:\n            default:\n                kb = 48;\n                break;\n        }\n\n        return kb*1024;\n    }\n}\n","import {lo, toHex} from \"z80-base\";\nimport {Hal, Z80} from \"z80-emulator\";\nimport {Cassette} from \"./Cassette\";\nimport {Keyboard} from \"./Keyboard\";\nimport {model1Level1Rom} from \"./Model1Level1Rom\";\nimport {model1Level2Rom} from \"./Model1Level2Rom\";\nimport {model3Rom} from \"./Model3Rom\";\nimport {Trs80Screen} from \"./Trs80Screen\";\nimport {SCREEN_BEGIN, SCREEN_END} from \"./Utils\";\nimport {BasicLevel, CGChip, Config, ModelType} from \"./Config\";\n\n// IRQs\nconst M1_TIMER_IRQ_MASK = 0x80;\nconst M3_CASSETTE_RISE_IRQ_MASK = 0x01;\nconst M3_CASSETTE_FALL_IRQ_MASK = 0x02;\nconst M3_TIMER_IRQ_MASK = 0x04;\nconst M3_IO_BUS_IRQ_MASK = 0x08;\nconst M3_UART_SED_IRQ_MASK = 0x10;\nconst M3_UART_RECEIVE_IRQ_MASK = 0x20;\nconst M3_UART_ERROR_IRQ_MASK = 0x40;\nconst CASSETTE_IRQ_MASKS = M3_CASSETTE_RISE_IRQ_MASK | M3_CASSETTE_FALL_IRQ_MASK;\n\n// NMIs\nconst RESET_NMI_MASK = 0x20;\nconst DISK_MOTOR_OFF_NMI_MASK = 0x40;\nconst DISK_INTRQ_NMI_MASK = 0x80;\n\n// Timer.\nconst M1_TIMER_HZ = 40;\nconst M3_TIMER_HZ = 30;\nconst M4_TIMER_HZ = 60;\n\nconst ROM_SIZE = 14*1024;\nconst RAM_START = 16*1024;\n\n// CPU clock speeds.\nconst M1_CLOCK_HZ = 1_774_080;\nconst M3_CLOCK_HZ = 2_027_520;\nconst M4_CLOCK_HZ = 4_055_040;\n\nconst INITIAL_CLICKS_PER_TICK = 2000;\n\nconst CASSETTE_THRESHOLD = 5000/32768.0;\n\n// State of the cassette hardware. We don't support writing.\nenum CassetteState {\n    CLOSE, READ, FAIL,\n}\n\n// Value of wave in audio: negative, neutral (around zero), or positive.\nenum CassetteValue {\n    NEGATIVE, NEUTRAL, POSITIVE,\n}\n\n/**\n * Whether the memory address maps to a screen location.\n */\nfunction isScreenAddress(address: number): boolean {\n    return address >= SCREEN_BEGIN && address < SCREEN_END;\n}\n\n/**\n * See the FONT.md file for an explanation of this, but basically bit 6 is the NOR of bits 5 and 7.\n */\nfunction computeVideoBit6(value: number): number {\n    const bit5 = (value >> 5) & 1;\n    const bit7 = (value >> 7) & 1;\n    const bit6 = (bit5 | bit7) ^ 1;\n\n    return (value & 0xBF) | (bit6 << 6);\n}\n\n/**\n * HAL for the TRS-80 Model III.\n */\nexport class Trs80 implements Hal {\n    private config: Config;\n    private timerHz = M3_TIMER_HZ;\n    private clockHz = M3_CLOCK_HZ;\n    public tStateCount = 0;\n    private readonly screen: Trs80Screen;\n    private cassette: Cassette;\n    private memory = new Uint8Array(0);\n    private keyboard = new Keyboard();\n    private modeImage = 0x80;\n    // Which IRQs should be handled.\n    private irqMask = 0;\n    // Which IRQs have been requested by the hardware.\n    private irqLatch = 0;\n    // Which NMIs should be handled.\n    private nmiMask = 0;\n    // Which NMIs have been requested by the hardware.\n    private nmiLatch = 0;\n    // Whether we've seen this NMI and handled it.\n    private nmiSeen = false;\n    private previousTimerClock = 0;\n    private z80 = new Z80(this);\n    private clocksPerTick = INITIAL_CLICKS_PER_TICK;\n    private startTime = Date.now();\n    private tickHandle: number | undefined;\n    private started = false;\n\n    // Internal state of the cassette controller.\n    // Whether the motor is running.\n    private cassetteMotorOn = false;\n    // State machine.\n    private cassetteState = CassetteState.CLOSE;\n    // Internal register state.\n    private cassetteValue = CassetteValue.NEUTRAL;\n    private cassetteLastNonZeroValue = CassetteValue.NEUTRAL;\n    private cassetteFlipFlop = false;\n    // When we turned on the motor (started reading the file) and how many samples\n    // we've read since then.\n    private cassetteMotorOnClock = 0;\n    private cassetteSamplesRead = 0;\n    private cassetteRiseInterruptCount = 0;\n    private cassetteFallInterruptCount = 0;\n\n    constructor(screen: Trs80Screen, cassette: Cassette) {\n        this.screen = screen;\n        this.cassette = cassette;\n        this.config = Config.makeDefault();\n        this.updateFromConfig();\n        this.loadRom();\n        this.tStateCount = 0;\n        this.keyboard.configureKeyboard();\n    }\n\n    /**\n     * Get the current emulator's configuration.\n     */\n    public getConfig(): Config {\n        return this.config;\n    }\n\n    /**\n     * Sets a new configuration and reboots into it if necessary.\n     */\n    public setConfig(config: Config): void {\n        const needsReboot = config.needsReboot(this.config);\n        this.config = config;\n\n        this.screen.setConfig(this.config);\n\n        if (needsReboot) {\n            this.updateFromConfig();\n            this.reset();\n        }\n    }\n\n    /**\n     * Update our settings based on the config. Wipes memory.\n     */\n    private updateFromConfig(): void {\n        this.memory = new Uint8Array(RAM_START + this.config.getRamSize());\n        this.memory.fill(0);\n        this.loadRom();\n\n        switch (this.config.modelType) {\n            case ModelType.MODEL1:\n                this.timerHz = M1_TIMER_HZ;\n                this.clockHz = M1_CLOCK_HZ;\n                break;\n            case ModelType.MODEL3:\n            default:\n                this.timerHz = M3_TIMER_HZ;\n                this.clockHz = M3_CLOCK_HZ;\n                break;\n        }\n    }\n\n    /**\n     * Load the config-specific ROM into memory.\n     */\n    private loadRom(): void {\n        let rom: string;\n        switch (this.config.modelType) {\n            case ModelType.MODEL1:\n                switch (this.config.basicLevel) {\n                    case BasicLevel.LEVEL1:\n                        rom = model1Level1Rom;\n                        break;\n\n                    case BasicLevel.LEVEL2:\n                    default:\n                        rom = model1Level2Rom;\n                        break;\n                }\n                break;\n\n            case ModelType.MODEL3:\n            default:\n                rom = model3Rom;\n                break;\n        }\n\n        const raw = window.atob(rom);\n        for (let i = 0; i < raw.length; i++) {\n            this.memory[i] = raw.charCodeAt(i);\n        }\n    }\n\n    public reset(): void {\n        this.setIrqMask(0);\n        this.setNmiMask(0);\n        this.resetCassette();\n        this.keyboard.clearKeyboard();\n        this.setTimerInterrupt(false);\n        this.z80.reset();\n    }\n\n    /**\n     * Start the CPU and intercept browser keys.\n     */\n    public start(): void {\n        if (!this.started) {\n            this.keyboard.interceptKeys = true;\n            this.scheduleNextTick();\n            this.started = true;\n        }\n    }\n\n    /**\n     * Stop the CPU and no longer intercept browser keys.\n     */\n    public stop(): void {\n        if (this.started) {\n            this.keyboard.interceptKeys = false;\n            this.cancelTickTimeout();\n            this.started = false;\n        }\n    }\n\n    // Set the mask for IRQ (regular) interrupts.\n    public setIrqMask(irqMask: number): void {\n        this.irqMask = irqMask;\n    }\n\n    // Set the mask for non-maskable interrupts. (Yes.)\n    public setNmiMask(nmiMask: number): void {\n        // Reset is always allowed:\n        this.nmiMask = nmiMask | RESET_NMI_MASK;\n        this.updateNmiSeen();\n    }\n\n    private interruptLatchRead(): number {\n        if (this.config.modelType === ModelType.MODEL1) {\n            const irqLatch = this.irqLatch;\n            this.setTimerInterrupt(false);\n            // TODO irq = this.irqLatch !== 0;\n            return irqLatch;\n        } else {\n            return ~this.irqLatch & 0xFF;\n        }\n    }\n\n    public step(): void {\n        this.z80.step();\n\n        // Handle non-maskable interrupts.\n        if ((this.nmiLatch & this.nmiMask) !== 0 && !this.nmiSeen) {\n            this.z80.nonMaskableInterrupt();\n            this.nmiSeen = true;\n\n            // Simulate the reset button being released. TODO\n            // this.resetButtonInterrupt(false);\n        }\n\n        // Handle interrupts.\n        if ((this.irqLatch & this.irqMask) !== 0) {\n            this.z80.maskableInterrupt();\n        }\n\n        // Set off a timer interrupt.\n        if (this.tStateCount > this.previousTimerClock + this.clockHz / this.timerHz) {\n            this.handleTimer();\n            this.previousTimerClock = this.tStateCount;\n        }\n\n        // Update cassette state.\n        this.updateCassette();\n    }\n\n    public contendMemory(address: number): void {\n        // Ignore.\n    }\n\n    public contendPort(address: number): void {\n        // Ignore.\n    }\n\n    public readMemory(address: number): number {\n        if (address < ROM_SIZE || address >= RAM_START || isScreenAddress(address)) {\n            return address < this.memory.length ? this.memory[address] : 0xFF;\n        } else if (address === 0x37E8) {\n            // Printer. 0x30 = Printer selected, ready, with paper, not busy.\n            return 0x30;\n        } else if (Keyboard.isInRange(address)) {\n            // Keyboard.\n            return this.keyboard.readKeyboard(address, this.tStateCount);\n        } else {\n            // Unmapped memory.\n            console.log(\"Reading from unmapped memory at 0x\" + toHex(address, 4));\n            return 0;\n        }\n    }\n\n    public readPort(address: number): number {\n        const port = address & 0xFF;\n        let value = 0xFF; // Default value for missing ports.\n\n        switch (port) {\n            case 0x00:\n                // Joystick.\n                value = 0xFF;\n                break;\n\n            case 0xE0:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // IRQ latch read.\n                    value = this.interruptLatchRead();\n                }\n                break;\n\n            case 0xE4:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // NMI latch read.\n                    value = ~this.nmiLatch & 0xFF;\n                }\n                break;\n\n            case 0xEC:\n            case 0xED:\n            case 0xEE:\n            case 0xEF:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Acknowledge timer.\n                    this.setTimerInterrupt(false);\n                    value = 0xFF;\n                }\n                break;\n\n            case 0xF0:\n                // No diskette.\n                value = 0xFF;\n                break;\n\n            case 0xFF:\n                // Cassette and various flags.\n                if (this.config.modelType === ModelType.MODEL1) {\n                    value = 0x3F;\n                    if (!this.screen.isExpandedCharacters()) {\n                        value |= 0x40;\n                    }\n                } else {\n                    value = this.modeImage & 0x7E;\n                }\n                value |= this.getCassetteByte();\n                break;\n\n            default:\n                console.log(\"Reading from unknown port 0x\" + toHex(lo(address), 2));\n                return 0;\n        }\n        // console.log(\"Reading 0x\" + toHex(value, 2) + \" from port 0x\" + toHex(lo(address), 2));\n        return value;\n    }\n\n    public writePort(address: number, value: number): void {\n        const port = address & 0xFF;\n        switch (port) {\n            case 0xE0:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Set interrupt mask.\n                    this.setIrqMask(value);\n                }\n                break;\n\n            case 0xE4:\n            case 0xE5:\n            case 0xE6:\n            case 0xE7:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Set NMI state.\n                    this.setNmiMask(value);\n                }\n                break;\n\n            case 0xEC:\n            case 0xED:\n            case 0xEE:\n            case 0xEF:\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    // Various controls.\n                    this.modeImage = value;\n                    this.setCassetteMotor((value & 0x02) !== 0);\n                    this.screen.setExpandedCharacters((value & 0x04) !== 0);\n                    this.screen.setAlternateCharacters((value & 0x08) === 0);\n                }\n                break;\n\n            case 0xF0:\n                // Disk command.\n                // TODO\n                // this.writeDiskCommand(value)\n                break;\n\n            case 0xF4:\n            case 0xF5:\n            case 0xF6:\n            case 0xF7:\n                // Disk select.\n                // TODO\n                // this.writeDiskSelect(value)\n                break;\n\n            case 0xFC:\n            case 0xFD:\n            case 0xFE:\n            case 0xFF:\n                if (this.config.modelType === ModelType.MODEL1) {\n                    this.setCassetteMotor((value & 0x04) !== 0);\n                    this.screen.setExpandedCharacters((value & 0x08) !== 0);\n                }\n                if ((value & 0x20) !== 0) {\n                    // Model III Micro Labs graphics card.\n                    console.log(\"Sending 0x\" + toHex(value, 2) + \" to Micro Labs graphics card\");\n                } else {\n                    // Do cassette emulation.\n                    this.putCassetteByte(value & 0x03);\n                }\n                break;\n\n            default:\n                console.log(\"Writing 0x\" + toHex(value, 2) + \" to unknown port 0x\" + toHex(port, 2));\n                return;\n        }\n        // console.log(\"Wrote 0x\" + toHex(value, 2) + \" to port 0x\" + toHex(port, 2));\n    }\n\n    public writeMemory(address: number, value: number): void {\n        if (address < ROM_SIZE) {\n            console.log(\"Warning: Writing to ROM location 0x\" + toHex(address, 4));\n        } else {\n            if (address >= SCREEN_BEGIN && address < SCREEN_END) {\n                if (this.config.cgChip === CGChip.ORIGINAL) {\n                    // No bit 6 in video memory, need to compute it.\n                    value = computeVideoBit6(value);\n                }\n\n                this.screen.writeChar(address, value);\n            } else if (address < RAM_START) {\n                console.log(\"Writing to unmapped memory at 0x\" + toHex(address, 4));\n            }\n            this.memory[address] = value;\n        }\n    }\n\n    // Reset cassette edge interrupts.\n    public cassetteClearInterrupt(): void {\n        this.irqLatch &= ~CASSETTE_IRQ_MASKS;\n    }\n\n    // Check whether the software has enabled these interrupts.\n    public cassetteInterruptsEnabled(): boolean {\n        return (this.irqMask & CASSETTE_IRQ_MASKS) !== 0;\n    }\n\n    /**\n     * Get an opaque string that represents the state of the screen. Flashes the screen.\n     */\n    public getScreenshot(): string {\n        const buf: number[] = [];\n\n        // First byte is screen mode, where 0 means normal (64 columns) and 1 means wide (32 columns).\n        buf.push(this.screen.isExpandedCharacters() ? 1 : 0);\n\n        // Run-length encode bytes with (value,count) pairs, with a max count of 255. Bytes\n        // in the range 33 to 127 inclusive have an implicit count of 1.\n        for (let address = SCREEN_BEGIN; address < SCREEN_END; address++) {\n            const value = this.memory[address];\n            if (value > 32 && value < 128) {\n                // Bytes in this range don't store a count.\n                buf.push(value);\n            } else if (buf.length < 2 || buf[buf.length - 1] === 255 || buf[buf.length - 2] !== value) {\n                // New entry.\n                buf.push(value);\n                buf.push(1);\n            } else {\n                // Increment existing count.\n                buf[buf.length - 1] += 1;\n            }\n        }\n\n        // Convert to a binary string.\n        let s = buf.map(n => String.fromCharCode(n)).join(\"\");\n\n        // Start visual flash effect.\n        Trs80.flashNode(this.screen.getNode());\n\n        // Base-64 encode and prefix with version number.\n        return \"0:\" + btoa(s);\n    }\n\n    /**\n     * Flash the node as if a photo were taken.\n     */\n    private static flashNode(node: HTMLElement): void {\n        // Position a semi-transparent white div over the screen, and reduce its transparency over time.\n        const oldNodePosition = node.style.position;\n        node.style.position = \"relative\";\n\n        const overlay = document.createElement(\"div\");\n        overlay.style.position = \"absolute\";\n        overlay.style.left = \"0\";\n        overlay.style.top = \"0\";\n        overlay.style.right = \"0\";\n        overlay.style.bottom = \"0\";\n        overlay.style.backgroundColor = \"#ffffff\";\n\n        // Fade out.\n        let opacity = 1;\n        const updateOpacity = () => {\n            overlay.style.opacity = opacity.toString();\n            opacity -= 0.1;\n            if (opacity >= 0) {\n                window.requestAnimationFrame(updateOpacity);\n            } else {\n                node.removeChild(overlay);\n                node.style.position = oldNodePosition;\n            }\n        };\n        updateOpacity();\n        node.appendChild(overlay);\n    }\n\n    // Reset whether we've seen this NMI interrupt if the mask and latch no longer overlap.\n    private updateNmiSeen(): void {\n        if ((this.nmiLatch & this.nmiMask) === 0) {\n            this.nmiSeen = false;\n        }\n    }\n\n    /**\n     * Run a certain number of CPU instructions and schedule another tick.\n     */\n    private tick(): void {\n        for (let i = 0; i < this.clocksPerTick; i++) {\n            this.step();\n        }\n        this.scheduleNextTick();\n    }\n\n    /**\n     * Figure out how many CPU cycles we should optimally run and how long\n     * to wait until scheduling it, then schedule it to be run later.\n     */\n    private scheduleNextTick(): void {\n        let delay: number;\n        if (this.cassetteMotorOn || this.keyboard.keyQueue.length > 4) {\n            // Go fast if we're accessing the cassette or pasting.\n            this.clocksPerTick = 100_000;\n            delay = 0;\n        } else {\n            // Delay to match original clock speed.\n            const now = Date.now();\n            const actualElapsed = now - this.startTime;\n            const expectedElapsed = this.tStateCount * 1000 / this.clockHz;\n            let behind = expectedElapsed - actualElapsed;\n            if (behind < -100 || behind > 100) {\n                // We're too far behind or ahead. Catch up artificially.\n                this.startTime = now - expectedElapsed;\n                behind = 0;\n            }\n            delay = Math.round(Math.max(0, behind));\n            if (delay === 0) {\n                // Delay too short, do more each tick.\n                this.clocksPerTick = Math.min(this.clocksPerTick + 100, 10000);\n            } else if (delay > 1) {\n                // Delay too long, do less each tick.\n                this.clocksPerTick = Math.max(this.clocksPerTick - 100, 100);\n            }\n        }\n        // console.log(this.clocksPerTick, delay);\n\n        this.cancelTickTimeout();\n        this.tickHandle = window.setTimeout(() => {\n            this.tickHandle = undefined;\n            this.tick();\n        }, delay);\n    }\n\n    /**\n     * Stop the tick timeout, if it's running.\n     */\n    private cancelTickTimeout(): void {\n        if (this.tickHandle !== undefined) {\n            window.clearTimeout(this.tickHandle);\n            this.tickHandle = undefined;\n        }\n    }\n\n    // Set or reset the timer interrupt.\n    private setTimerInterrupt(state: boolean): void {\n        if (this.config.modelType === ModelType.MODEL1) {\n            if (state) {\n                this.irqLatch |= M1_TIMER_IRQ_MASK;\n            } else {\n                this.irqLatch &= ~M1_TIMER_IRQ_MASK;\n            }\n        } else {\n            if (state) {\n                this.irqLatch |= M3_TIMER_IRQ_MASK;\n            } else {\n                this.irqLatch &= ~M3_TIMER_IRQ_MASK;\n            }\n        }\n    }\n\n    // What to do when the hardware timer goes off.\n    private handleTimer(): void {\n        this.setTimerInterrupt(true);\n    }\n\n    // Reset the controller to a known state.\n    private resetCassette() {\n        this.setCassetteState(CassetteState.CLOSE);\n    }\n\n    // Get a byte from the I/O port.\n    private getCassetteByte(): number {\n        // If the motor's running, and we're reading a byte, then get into read mode.\n        if (this.cassetteMotorOn) {\n            this.setCassetteState(CassetteState.READ);\n        }\n\n        // Clear any interrupt that may have triggered this read.\n        this.cassetteClearInterrupt();\n\n        // Cassette owns bits 0 and 7.\n        let b = 0;\n        if (this.cassetteFlipFlop) {\n            b |= 0x80;\n        }\n        if (this.config.modelType !== ModelType.MODEL1 && this.cassetteLastNonZeroValue === CassetteValue.POSITIVE) {\n            b |= 0x01;\n        }\n        return b;\n    }\n\n    // Write to the cassette port. We don't support writing tapes, but this is used\n    // for 500-baud reading to trigger the next analysis of the tape.\n    private putCassetteByte(b: number) {\n        if (this.cassetteMotorOn) {\n            if (this.cassetteState === CassetteState.READ) {\n                this.updateCassette();\n                this.cassetteFlipFlop = false;\n            }\n        }\n    }\n\n    // Kick off the reading process when doing 1500-baud reads.\n    private kickOffCassette() {\n        if (this.cassetteMotorOn &&\n                    this.cassetteState === CassetteState.CLOSE &&\n                    this.cassetteInterruptsEnabled()) {\n\n            // Kick off the process.\n            this.cassetteRiseInterrupt();\n            this.cassetteFallInterrupt();\n        }\n    }\n\n    // Turn the motor on or off.\n    private setCassetteMotor(cassetteMotorOn: boolean) {\n        if (cassetteMotorOn !== this.cassetteMotorOn) {\n            if (cassetteMotorOn) {\n                this.cassetteFlipFlop = false;\n                this.cassetteLastNonZeroValue = CassetteValue.NEUTRAL;\n\n                // Waits a second before kicking off the cassette.\n                // TODO this should be in CPU cycles, not browser cycles.\n                if (this.config.modelType !== ModelType.MODEL1) {\n                    setTimeout(() => this.kickOffCassette(), 1000);\n                }\n            } else {\n                this.setCassetteState(CassetteState.CLOSE);\n            }\n            this.cassetteMotorOn = cassetteMotorOn;\n\n            if (cassetteMotorOn) {\n                this.cassette.onMotorStart();\n            } else {\n                this.cassette.onMotorStop();\n            }\n        }\n    }\n\n    // Read some of the cassette to see if we should be triggering a rise/fall interrupt.\n    private updateCassette() {\n        if (this.cassetteMotorOn && this.setCassetteState(CassetteState.READ) >= 0) {\n            // See how many samples we should have read by now.\n            const samplesToRead = Math.round((this.tStateCount - this.cassetteMotorOnClock) *\n                this.cassette.samplesPerSecond / this.clockHz);\n\n            // Catch up.\n            while (this.cassetteSamplesRead < samplesToRead) {\n                const sample = this.cassette.readSample();\n                this.cassetteSamplesRead++;\n\n                // Convert to state, where neutral is some noisy in-between state.\n                let cassetteValue = CassetteValue.NEUTRAL;\n                if (sample > CASSETTE_THRESHOLD) {\n                    cassetteValue = CassetteValue.POSITIVE;\n                } else if (sample < -CASSETTE_THRESHOLD) {\n                    cassetteValue = CassetteValue.NEGATIVE;\n                }\n\n                // See if we've changed value.\n                if (cassetteValue !== this.cassetteValue) {\n                    if (cassetteValue === CassetteValue.POSITIVE) {\n                        // Positive edge.\n                        this.cassetteFlipFlop = true;\n                        this.cassetteRiseInterrupt();\n                    } else if (cassetteValue === CassetteValue.NEGATIVE) {\n                        // Negative edge.\n                        this.cassetteFlipFlop = true;\n                        this.cassetteFallInterrupt();\n                    }\n\n                    this.cassetteValue = cassetteValue;\n                    if (cassetteValue !== CassetteValue.NEUTRAL) {\n                        this.cassetteLastNonZeroValue = cassetteValue;\n                    }\n                }\n            }\n        }\n    }\n\n    // Returns 0 if the state was changed, 1 if it wasn't, and -1 on error.\n    private setCassetteState(newState: CassetteState): number {\n        const oldCassetteState = this.cassetteState;\n\n        // See if we're changing anything.\n        if (oldCassetteState === newState) {\n            return 1;\n        }\n\n        // Once in error, everything will fail until we close.\n        if (oldCassetteState === CassetteState.FAIL && newState !== CassetteState.CLOSE) {\n            return -1;\n        }\n\n        // Change things based on new state.\n        switch (newState) {\n            case CassetteState.READ:\n                this.openCassetteFile();\n                break;\n        }\n\n        // Update state.\n        this.cassetteState = newState;\n\n        return 0;\n    }\n\n    // Open file, get metadata, and get read to read the tape.\n    private openCassetteFile(): void {\n        // TODO open/rewind cassette?\n\n        // Reset the clock.\n        this.cassetteMotorOnClock = this.tStateCount;\n        this.cassetteSamplesRead = 0;\n    }\n\n    // Saw a positive edge on cassette.\n    private cassetteRiseInterrupt(): void {\n        this.cassetteRiseInterruptCount++;\n        this.irqLatch = (this.irqLatch & ~M3_CASSETTE_RISE_IRQ_MASK) |\n            (this.irqMask & M3_CASSETTE_RISE_IRQ_MASK);\n    }\n\n    // Saw a negative edge on cassette.\n    private cassetteFallInterrupt(): void {\n        this.cassetteFallInterruptCount++;\n        this.irqLatch = (this.irqLatch & ~M3_CASSETTE_FALL_IRQ_MASK) |\n            (this.irqMask & M3_CASSETTE_FALL_IRQ_MASK);\n    }\n}\n","import {SCREEN_BEGIN, SCREEN_END} from \"./Utils\";\nimport {Config} from \"./Config\";\n\n/**\n * Abstract base class for displaying a screen.\n */\nexport class Trs80Screen {\n    private expanded = false;\n    private alternate = false;\n\n    /**\n     * Set the config for this screen. Before this is called, the screen is permitted to use any config\n     * it wants.\n     */\n    public setConfig(config: Config): void {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Write a character to the screen.\n     * @param address address of the character, where 15360 is the upper-left of the screen.\n     * @param value the 0-255 value to write.\n     */\n    public writeChar(address: number, value: number): void {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Get the HTML node for this screen.\n     */\n    public getNode(): HTMLElement {\n        throw new Error(\"Must be implemented\");\n    }\n\n    /**\n     * Enable or disable expanded (wide) character mode.\n     */\n    public setExpandedCharacters(expanded: boolean): void {\n        this.expanded = expanded;\n    }\n\n    /**\n     * Return whether we're in expanded (wide) character mode.\n     */\n    public isExpandedCharacters(): boolean {\n        return this.expanded;\n    }\n\n    /**\n     * Enable or disable alternate (Katakana) character mode.\n     */\n    public setAlternateCharacters(alternate: boolean): void {\n        this.alternate = alternate;\n    }\n\n    /**\n     * Return whether we're in alternate (Katakana) character mode.\n     */\n    public isAlternateCharacters(): boolean {\n        return this.alternate;\n    }\n\n    /**\n     * Fill the screen with the screenshot.\n     */\n    public displayScreenshot(screenshot: string): void {\n        // Leave it blank if screenshot string is blank.\n        if (screenshot === \"\") {\n            return;\n        }\n\n        if (!screenshot.startsWith(\"0:\")) {\n            throw new Error(\"Invalid screenshot version number\");\n        }\n\n        // Decode screenshot.\n        const s = atob(screenshot.substring(2));\n        if (s.length === 0) {\n            throw new Error(\"Screenshot string is empty\");\n        }\n\n        // Set expanded mode.\n        this.setExpandedCharacters(s.charCodeAt(0) === 1);\n\n        let address = SCREEN_BEGIN;\n        for (let i = 1; i < s.length; i++) {\n            const value = s.charCodeAt(i);\n            let count = 1;\n            if (value > 32 && value < 128) {\n                // Implicit count of 1.\n            } else {\n                i++;\n                if (i === s.length) {\n                    throw new Error(\"Missing count in RLE\");\n                }\n                count = s.charCodeAt(i);\n            }\n\n            // Emit \"count\" values.\n            while (count--) {\n                this.writeChar(address++, value);\n            }\n        }\n\n        if (address !== SCREEN_END) {\n            throw new Error(\"Screenshot was of the wrong length\");\n        }\n    }\n}\n","\n/**\n * These fonts are from the xtrs emulator, and the CG# references match those.\n * They're identical to the fonts in the sdltrs emulator. They don't include\n * the 2x3 graphical characters; we generate those procedurally.\n *\n * See the original trs_chars.c file for Tim Mann's explanations and historical\n * notes.\n */\n\n// Here is the LICENSE file from the xtrs emulator:\n/*\n\nCopyright (C) 1992 Clarendon Hill Software.\n\nPermission is granted to any individual or institution to use, copy,\nor redistribute this software, provided this copyright notice is retained. \n\nThis software is provided \"as is\" without any expressed or implied\nwarranty.  If this software brings on any sort of damage -- physical,\nmonetary, emotional, or brain -- too bad.  You've got no one to blame\nbut yourself. \n\nThe software may be modified for your own purposes, but modified versions\nmust retain this notice.\n\n***\n\nCopyright (c) 1996-2020, Timothy P. Mann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\n/**\n * Original Model I character set.\n */\nconst GLYPH_CG1 = [\n    0x00,0x1f,0x11,0x11,0x11,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x1e,0x04,0x08,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x1b,0x15,0x1b,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x08,0x05,0x03,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1f,0x0a,0x0a,0x1b,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x0f,0x12,0x14,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x00,0x00,0x1f,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x15,0x0e,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x1b,0x15,0x1b,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x15,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x1f,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x15,0x15,0x1d,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1d,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x17,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x15,0x15,0x17,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x14,0x08,0x15,0x03,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x0a,0x0a,0x0a,0x0a,0x0a,0x1b,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x1f,0x10,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x0a,0x04,0x0a,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x0e,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x02,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x15,0x15,0x17,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x17,0x15,0x15,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x11,0x11,0x1d,0x15,0x15,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x15,0x15,0x1d,0x11,0x11,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x0a,0x1f,0x0a,0x1f,0x0a,0x0a,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x1e,0x05,0x0e,0x14,0x0f,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x03,0x13,0x08,0x04,0x02,0x19,0x18,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x05,0x05,0x02,0x15,0x09,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x08,0x08,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x15,0x0e,0x1f,0x0e,0x15,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x04,0x1f,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x08,0x04,0x02,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x19,0x15,0x13,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x06,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x0e,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x0c,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x0c,0x0a,0x09,0x1f,0x08,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x0f,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0c,0x02,0x01,0x0f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x10,0x08,0x04,0x02,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x0e,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x1e,0x10,0x08,0x06,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x06,0x06,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x02,0x01,0x02,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x08,0x04,0x00,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x0c,0x0c,0x04,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0e,0x10,0x1e,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x0d,0x13,0x11,0x13,0x0d,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x16,0x19,0x11,0x19,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x1f,0x01,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x14,0x04,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x16,0x19,0x19,0x16,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x00,0x06,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x00,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x01,0x01,0x09,0x05,0x03,0x05,0x09,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0b,0x15,0x15,0x15,0x15,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0e,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x0d,0x13,0x11,0x13,0x0d,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x16,0x19,0x11,0x19,0x16,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x0d,0x13,0x01,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1e,0x01,0x0e,0x10,0x0f,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x1f,0x04,0x04,0x14,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x11,0x19,0x16,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x11,0x0a,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x11,0x15,0x15,0x0a,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x11,0x0a,0x04,0x0a,0x11,0x00,0x00,0x00,0x00,\n    0x00,0x11,0x11,0x11,0x1e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x08,0x04,0x02,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x08,0x04,0x04,0x02,0x04,0x04,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x00,0x04,0x04,0x04,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x04,0x08,0x04,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x15,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x0a,0x15,0x0a,0x15,0x0a,0x15,0x0a,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Model I character set with official Radio Shack upgrade.\n */\nconst GLYPH_CG2 = [\n    0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x1f,0x0a,0x1f,0x0a,0x0a,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x1e,0x05,0x0e,0x14,0x0f,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x03,0x13,0x08,0x04,0x02,0x19,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x05,0x05,0x02,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x08,0x08,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x15,0x0e,0x1f,0x0e,0x15,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x1f,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x08,0x04,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x19,0x15,0x13,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x06,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x0e,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x0c,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x0c,0x0a,0x09,0x1f,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x0f,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x02,0x01,0x0f,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x0e,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x1e,0x10,0x08,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x06,0x06,0x00,0x06,0x06,0x02,0x01,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x02,0x01,0x02,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1f,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x08,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x08,0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x10,0x16,0x15,0x15,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x11,0x11,0x1f,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x0e,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x01,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x12,0x12,0x12,0x12,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x01,0x01,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x01,0x01,0x19,0x11,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x09,0x05,0x03,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x01,0x01,0x01,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x1b,0x15,0x15,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x13,0x15,0x19,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x11,0x11,0x15,0x09,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x0f,0x11,0x11,0x0f,0x05,0x09,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x0e,0x11,0x01,0x0e,0x10,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x0a,0x0a,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x11,0x11,0x15,0x1b,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x0a,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x11,0x0a,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x1f,0x10,0x08,0x04,0x02,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0e,0x15,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x04,0x15,0x0e,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x02,0x1f,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x08,0x1f,0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x02,0x07,0x02,0x12,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x10,0x1e,0x11,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x0d,0x13,0x11,0x13,0x0d,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x01,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x16,0x19,0x11,0x19,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x1f,0x01,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x14,0x04,0x0e,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x11,0x1e,0x10,0x0e,0x00,0x00,0x00,0x00,\n    0x01,0x01,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x00,0x06,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x00,0x18,0x10,0x10,0x10,0x12,0x0c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x12,0x0a,0x06,0x0a,0x12,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x04,0x04,0x04,0x04,0x04,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0b,0x15,0x15,0x15,0x15,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0e,0x11,0x11,0x11,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x13,0x0d,0x01,0x01,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x16,0x19,0x19,0x16,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x0d,0x13,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1e,0x01,0x0e,0x10,0x0f,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x0e,0x04,0x04,0x14,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x19,0x16,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x15,0x15,0x0a,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x0a,0x04,0x0a,0x11,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x11,0x11,0x11,0x1e,0x10,0x0e,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1f,0x08,0x04,0x02,0x1f,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x04,0x04,0x02,0x04,0x04,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x00,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x04,0x04,0x08,0x04,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x11,0x0a,0x04,0x1f,0x04,0x1f,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x15,0x0a,0x15,0x0a,0x15,0x0a,0x15,0x0a,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Original Model III character set.\n */\nconst GLYPH_CG4 = [\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x3e,0x08,0x48,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x3c,0x42,0x7e,0x02,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x00,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x28,0x00,0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0xb8,0x44,0x64,0x54,0x4c,0x44,0x3a,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x34,0x4c,0x44,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x1c,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x5e,0x22,0x22,0x1e,0x12,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x28,0x00,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x10,0x28,0x44,0x7c,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x44,0x4c,0x54,0x64,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x28,0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x90,0x68,0x64,0x54,0x4c,0x2c,0x12,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x3c,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x44,0x44,0x3c,0x44,0x44,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x00,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x4c,0x32,0x00,0x18,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x54,0x50,0x38,0x14,0x54,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x14,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x02,0x3e,0x42,0x7c,0x40,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x7c,0x04,0x7c,0x04,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x78,0x24,0x64,0x3c,0x24,0x64,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x04,0x04,0x44,0x38,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x4c,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x10,0x10,0x00,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x7e,0x24,0x7e,0x24,0x24,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x78,0x14,0x38,0x50,0x3c,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x46,0x26,0x10,0x08,0x64,0x62,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x12,0x12,0x0c,0x52,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x08,0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x10,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x54,0x38,0x7c,0x38,0x54,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x10,0x7c,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x62,0x5a,0x46,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x18,0x14,0x10,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x30,0x0c,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x38,0x40,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x30,0x28,0x24,0x7e,0x20,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x1e,0x20,0x40,0x22,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x04,0x02,0x3e,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x20,0x10,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x3c,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x7c,0x40,0x20,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x00,0x00,0x10,0x10,0x08,0x00,0x00,0x00,0x00,\n    0x60,0x30,0x18,0x0c,0x18,0x30,0x60,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7e,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x06,0x0c,0x18,0x30,0x18,0x0c,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x40,0x30,0x08,0x00,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x52,0x6a,0x32,0x04,0x78,0x00,0x00,0x00,0x00,0x00,\n    0x18,0x24,0x42,0x7e,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x44,0x44,0x3c,0x44,0x44,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x02,0x02,0x02,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x24,0x44,0x44,0x44,0x24,0x1e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x02,0x1e,0x02,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x02,0x02,0x1e,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x02,0x72,0x42,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x70,0x20,0x20,0x20,0x20,0x22,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x22,0x12,0x0e,0x12,0x22,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x02,0x02,0x02,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x66,0x5a,0x5a,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x46,0x4a,0x52,0x62,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x42,0x42,0x3e,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x42,0x42,0x52,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x3e,0x42,0x42,0x3e,0x12,0x22,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0x02,0x3c,0x40,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x5a,0x5a,0x66,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x44,0x44,0x44,0x38,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x20,0x18,0x04,0x02,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x04,0x04,0x04,0x04,0x04,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x02,0x04,0x08,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x20,0x20,0x20,0x20,0x20,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x1c,0x20,0x3c,0x22,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x3a,0x46,0x42,0x46,0x3a,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x02,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x40,0x5c,0x62,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x7e,0x02,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x3e,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x5c,0x62,0x62,0x5c,0x40,0x3c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x3a,0x46,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x00,0x18,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x00,0x30,0x20,0x20,0x20,0x22,0x1c,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x22,0x12,0x0a,0x16,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x18,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x6e,0x92,0x92,0x92,0x92,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x42,0x42,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x46,0x3a,0x02,0x02,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x5c,0x62,0x62,0x5c,0x40,0x40,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3a,0x46,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x02,0x3c,0x40,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x08,0x3e,0x08,0x08,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x42,0x62,0x5c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x42,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x82,0x92,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x24,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x42,0x42,0x62,0x5c,0x40,0x3c,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7e,0x20,0x18,0x04,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x08,0x08,0x04,0x08,0x08,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x10,0x00,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x10,0x10,0x20,0x10,0x10,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x0c,0x92,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x10,0x7c,0x10,0x10,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x7c,0xfe,0xfe,0x7c,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x6c,0xfe,0xfe,0x7c,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x7c,0xfe,0x7c,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x38,0x10,0xd6,0xfe,0xd6,0x10,0x38,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xa5,0x81,0xa5,0x99,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xa5,0x81,0x99,0xa5,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x04,0x08,0x10,0x20,0x3c,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x3c,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x9c,0x62,0x62,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x44,0x3c,0x44,0x44,0x3c,0x04,0x02,0x00,0x00,0x00,0x00,\n    0x86,0x48,0x28,0x18,0x08,0x0c,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x30,0x48,0x08,0x30,0x50,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x60,0x10,0x08,0x7c,0x08,0x10,0x60,0x00,0x00,0x00,0x00,0x00,\n    0x68,0x60,0x10,0x08,0x38,0x40,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x34,0x4a,0x48,0x48,0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x7c,0x44,0x28,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x04,0x04,0x04,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x12,0x0a,0x06,0x0a,0x52,0x22,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x08,0x08,0x08,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x24,0x24,0x24,0x5c,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x4c,0x48,0x28,0x18,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x04,0x18,0x04,0x38,0x40,0x30,0x00,0x00,0x00,0x00,\n    0x00,0x18,0x24,0x42,0x42,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x2a,0x28,0x28,0x28,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x18,0x24,0x24,0x1c,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x12,0x12,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x12,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x26,0x24,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x54,0x54,0x54,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x46,0x28,0x10,0x28,0xc4,0x00,0x00,0x00,0x00,0x00,\n    0x92,0x54,0x54,0x38,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x44,0x82,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x82,0x82,0xc6,0x44,0xc6,0x00,0x00,0x00,0x00,0x00,\n    0x78,0x08,0x08,0x08,0x0a,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x10,0x00,0x7c,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x04,0x08,0x30,0x08,0x04,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x4c,0x32,0x00,0x4c,0x32,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x28,0x44,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x08,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,\n    0x80,0x40,0xfe,0x10,0xfe,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x10,0x20,0x7c,0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,\n    0xfc,0x4a,0x24,0x10,0x48,0xa4,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x82,0x82,0xfe,0x44,0x44,0xc6,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x6c,0x92,0x92,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x40,0x20,0x12,0x0a,0x06,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x78,0x04,0x38,0x44,0x38,0x40,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x44,0xaa,0x54,0x28,0x54,0xaa,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x42,0xb9,0x85,0x85,0xb9,0x42,0x3c,0x00,0x00,0x00,0x00,\n    0x42,0x24,0x18,0x24,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x52,0x52,0x5c,0x50,0x50,0x50,0x50,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x54,0x14,0x54,0x38,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x5e,0xa5,0xa5,0x9d,0x95,0x66,0x3c,0x00,0x00,0x00,0x00,\n    0xfa,0x06,0xc6,0x46,0x26,0xde,0x06,0xfa,0x00,0x00,0x00,0x00,\n    0xff,0x20,0xc0,0x3f,0x40,0x3f,0x20,0x1f,0x00,0x00,0x00,0x00,\n    0x3f,0x40,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x1e,0x22,0x22,0x1e,0x52,0x22,0xd2,0x00,0x00,0x00,0x00,0x00,\n    0x86,0x41,0x21,0x16,0x68,0x94,0x92,0x61,0x00,0x00,0x00,0x00,\n    0x70,0x60,0x50,0x0e,0x09,0x09,0x06,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x44,0x44,0x44,0x38,0x10,0x38,0x10,0x00,0x00,0x00,0x00,\n    0x70,0x10,0x10,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0xff,0xc7,0xbb,0xcf,0xef,0xff,0xef,0xff,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x38,0x54,0x10,0x28,0x44,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x10,0x38,0x54,0x28,0x7c,0x28,0x00,0x00,0x00,0x00,\n    0x10,0x28,0x44,0x44,0x44,0x54,0x6c,0x44,0x00,0x00,0x00,0x00,\n    0x44,0x28,0x10,0x7c,0x10,0x7c,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x00,0x04,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x20,0x20,0x20,0x20,0x3e,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x02,0x04,0x08,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x3c,0x20,0x3c,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x40,0x30,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x20,0x10,0x18,0x14,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x7c,0x44,0x40,0x20,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x38,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x10,0x3c,0x18,0x14,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x08,0x7c,0x48,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x38,0x20,0x20,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x7c,0x40,0x78,0x40,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x54,0x54,0x44,0x20,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x28,0x18,0x08,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x20,0x10,0x18,0x14,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x44,0x44,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x10,0x10,0x10,0x10,0x10,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7e,0x10,0x18,0x14,0x12,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x48,0x48,0x44,0x72,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x38,0x10,0x7c,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7c,0x44,0x44,0x42,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x7c,0x14,0x12,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x40,0x40,0x40,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x24,0x7e,0x24,0x24,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x1c,0x40,0x4e,0x40,0x40,0x24,0x18,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x20,0x10,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x28,0x08,0x48,0x38,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x44,0x48,0x20,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x50,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x50,0x3e,0x10,0x7c,0x10,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x00,0x7e,0x40,0x20,0x10,0x0c,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x00,0x7c,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x1c,0x24,0x44,0x04,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x10,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x38,0x00,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x28,0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7e,0x40,0x20,0x30,0x58,0x14,0x00,0x00,0x00,0x00,0x00,\n    0x60,0x40,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x20,0x50,0x50,0x50,0x48,0x44,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x02,0x7e,0x02,0x02,0x42,0x3c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x20,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x00,\n    0x00,0x00,0x08,0x14,0x22,0x40,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x10,0x7c,0x10,0x54,0x54,0x54,0x10,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x28,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x02,0x3c,0x42,0x3c,0x42,0x3c,0x40,0x00,0x00,0x00,0x00,0x00,\n    0x20,0x10,0x08,0x04,0x12,0x22,0x5e,0x00,0x00,0x00,0x00,0x00,\n    0x40,0x44,0x28,0x10,0x28,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x08,0x3c,0x08,0x08,0x48,0x30,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x7e,0x48,0x28,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x3c,0x20,0x20,0x20,0x10,0x08,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x40,0x40,0x7c,0x40,0x40,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x54,0x54,0x44,0x40,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x42,0x42,0x42,0x42,0x22,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x0a,0x0a,0x0a,0x4a,0x4a,0x2a,0x1a,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x04,0x04,0x44,0x44,0x24,0x1c,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x42,0x42,0x42,0x7e,0x00,0x00,0x00,0x00,0x00,\n    0x7e,0x42,0x42,0x40,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,\n    0x4e,0x40,0x40,0x40,0x20,0x12,0x0e,0x00,0x00,0x00,0x00,0x00,\n    0x08,0x12,0x24,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n    0x04,0x0a,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n];\n\n/**\n * Options when rasterizing each glyph.\n */\nexport interface GlyphOptions {\n    /**\n     * RGB (0-255) of \"on\" pixels.\n     */\n    color: number[];\n\n    /**\n     * Whether to draw fake scanlines.\n     */\n    scanLines: boolean;\n}\n\n/**\n * Class representing a font and able to generate its glyphs.\n */\nexport class Font {\n    // Bit array. Each character is 12 bytes, top to bottom.\n    public readonly bits: number[];\n    // Number of horizontal pixels in each character, left-aligned in the bits.\n    public readonly width: number;\n    // Number of vertical pixels in each character, top-aligned in the bits.\n    public readonly height: number;\n    // Index of each 64-character bank, or -1 for graphics characters.\n    private readonly banks: number[];\n\n    constructor(bits: number[], width: number, height: number, banks: number[]) {\n        this.bits = bits;\n        this.width = width;\n        this.height = height;\n        this.banks = banks;\n    }\n\n    /**\n     * Make a bitmap for the specified character (0-255). \"on\" pixels are the\n     * specified color, \"off\" pixels are fully transparent.\n     */\n    public makeImage(char: number, expanded: boolean, options: GlyphOptions): HTMLCanvasElement {\n        const canvas = document.createElement(\"canvas\");\n        let expandedMultiplier = expanded ? 2 : 1;\n        canvas.width = this.width*expandedMultiplier;\n        canvas.height = this.height*2;\n\n        const ctx = canvas.getContext(\"2d\");\n        if (ctx === null) {\n            throw new Error(\"2d context not supported\");\n        }\n        const imageData = ctx.createImageData(canvas.width, canvas.height);\n\n        // Light pixel at (x,y) in imageData if bit \"bit\" of \"byte\" is on.\n        const lightPixel = (x: number, y: number, byte: number, bit: number): void => {\n            const pixel = (byte & (1 << bit)) !== 0;\n            if (pixel) {\n                const pixelOffset = (y * canvas.width + x) * 4;\n                const alpha = options.scanLines ? (y % 2 == 0 ? 0xFF : 0xAA) : 0xFF;\n\n                imageData.data[pixelOffset + 0] = options.color[0];\n                imageData.data[pixelOffset + 1] = options.color[1];\n                imageData.data[pixelOffset + 2] = options.color[2];\n                imageData.data[pixelOffset + 3] = alpha;\n            }\n        };\n\n        const bankOffset = this.banks[Math.floor(char/64)];\n        if (bankOffset === -1) {\n            // Graphical character.\n            const byte = char%64;\n            for (let y = 0; y < canvas.height; y++) {\n                const py = Math.floor(y/(canvas.height/3));\n                for (let x = 0; x < canvas.width; x++) {\n                    const px = Math.floor(x/(canvas.width/2));\n                    const bit = py*2 + px;\n                    lightPixel(x, y, byte, bit);\n                }\n            }\n        } else {\n            // Bitmap character.\n            const charOffset = bankOffset + char % 64;\n            const byteOffset = charOffset * 12;\n\n            for (let y = 0; y < canvas.height; y++) {\n                const byte = this.bits[byteOffset + Math.floor(y / 2)];\n                for (let x = 0; x < canvas.width; x++) {\n                    lightPixel(x, y, byte, Math.floor(x/expandedMultiplier));\n                }\n            }\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n\n        return canvas;\n    }\n}\n\n// Original Model I.\nexport const MODEL1A_FONT = new Font(GLYPH_CG1, 6, 12, [0, 64, -1, -1]);\n// Model I with lower case mod.\nexport const MODEL1B_FONT = new Font(GLYPH_CG2, 6, 12, [0, 64, -1, -1]);\n// Original Model III, with special symbols.\nexport const MODEL3_FONT = new Font(GLYPH_CG4, 8, 12, [0, 64, -1, 128]);\n// Original Model III, with Katakana.\nexport const MODEL3_ALT_FONT = new Font(GLYPH_CG4, 8, 12, [0, 64, -1, 192]);\n","import {Trs80Screen} from \"./Trs80Screen\";\nimport {clearElement, CSS_PREFIX, SCREEN_BEGIN, SCREEN_END} from \"./Utils\";\nimport {GlyphOptions, MODEL1A_FONT, MODEL1B_FONT, MODEL3_ALT_FONT, MODEL3_FONT} from \"./Fonts\";\nimport {Background, CGChip, Config, ModelType, Phosphor, ScanLines} from \"./Config\";\n\nconst gCssPrefix = CSS_PREFIX + \"-canvas-screen\";\nconst gBlackBackgroundClass = gCssPrefix + \"-black-background\";\n\nexport const AUTHENTIC_BACKGROUND = \"#334843\";\nexport const BLACK_BACKGROUND = \"#000000\";\n\nconst BASE_CSS = `\n\n.${gCssPrefix} {\n    display: inline-block;\n    padding: 10px;\n    background-color: ${AUTHENTIC_BACKGROUND};\n    border-radius: 8px;\n    transition: background-color .5s ease-in-out;\n}\n\n.${gCssPrefix}.${gBlackBackgroundClass} {\n    background-color: ${BLACK_BACKGROUND};\n}\n\n`;\n\n/**\n * Make a global stylesheet for all TRS-80 emulators on this page. Idempotent.\n */\nexport function configureStylesheet(): void {\n    const styleId = gCssPrefix;\n    if (document.getElementById(styleId) !== null) {\n        // Already created.\n        return;\n    }\n\n    const node = document.createElement(\"style\");\n    node.id = styleId;\n    node.innerHTML = BASE_CSS;\n    document.head.appendChild(node);\n}\n\n// Run it on the next event cycle.\nconst UPDATE_THUMBNAIL_TIMEOUT_MS = 0;\n\nconst WHITE_PHOSPHOR = [230, 231, 252];\nconst AMBER_PHOSPHOR = [247, 190, 64];\nconst GREEN_PHOSPHOR = [122, 244, 96];\n\n// Gets an RGB array (0-255) for a phosphor.\nexport function phosphorToRgb(phosphor: Phosphor): number[] {\n    switch (phosphor) {\n        case Phosphor.WHITE:\n        default:\n            return WHITE_PHOSPHOR;\n\n        case Phosphor.GREEN:\n            return GREEN_PHOSPHOR;\n\n        case Phosphor.AMBER:\n            return AMBER_PHOSPHOR;\n    }\n}\n\n/**\n * TRS-80 screen based on an HTML canvas element.\n */\nexport class CanvasScreen extends Trs80Screen {\n    private readonly node: HTMLElement;\n    private readonly canvas: HTMLCanvasElement;\n    private readonly context: CanvasRenderingContext2D;\n    private readonly thumbnailImage: HTMLImageElement | undefined;\n    private readonly memory: Uint8Array = new Uint8Array(SCREEN_END - SCREEN_BEGIN);\n    private readonly glyphs: HTMLCanvasElement[] = [];\n    private config: Config = Config.makeDefault();\n    private glyphWidth = 0;\n    private updateThumbnailTimeout: number | undefined;\n\n    constructor(parentNode: HTMLElement, isThumbnail: boolean) {\n        super();\n\n        clearElement(parentNode);\n\n        // Make our own sub-node that we have control over.\n        this.node = document.createElement(\"div\");\n        this.node.classList.add(gCssPrefix);\n        parentNode.appendChild(this.node);\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = 64*8;\n        this.canvas.height = 16*24;\n        this.canvas.style.display = \"block\";\n        this.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        if (!isThumbnail) {\n            this.node.appendChild(this.canvas);\n        }\n\n        if (isThumbnail) {\n            this.thumbnailImage = document.createElement(\"img\");\n            this.thumbnailImage.width = 64*8/3;\n            this.thumbnailImage.height = 16*24/3;\n            this.node.appendChild(this.thumbnailImage);\n        }\n\n        this.updateFromConfig();\n\n        // Make global CSS if necessary.\n        configureStylesheet();\n    }\n\n    setConfig(config: Config): void {\n        this.config = config;\n        this.updateFromConfig();\n    }\n\n    /**\n     * Update the font and screen from the config and other state.\n     */\n    private updateFromConfig(): void {\n        let font;\n        switch (this.config.cgChip) {\n            case CGChip.ORIGINAL:\n                font = MODEL1A_FONT;\n                break;\n            case CGChip.LOWER_CASE:\n            default:\n                switch (this.config.modelType) {\n                    case ModelType.MODEL1:\n                        font = MODEL1B_FONT;\n                        break;\n                    case ModelType.MODEL3:\n                    default:\n                        font = this.isAlternateCharacters() ? MODEL3_ALT_FONT : MODEL3_FONT;\n                        break;\n                }\n                break;\n        }\n\n        switch (this.config.background) {\n            case Background.BLACK:\n                this.node.classList.add(gBlackBackgroundClass);\n                break;\n\n            case Background.AUTHENTIC:\n            default:\n                this.node.classList.remove(gBlackBackgroundClass);\n                break;\n        }\n\n        const glyphOptions: GlyphOptions = {\n            color: phosphorToRgb(this.config.phosphor),\n            scanLines: this.config.scanLines === ScanLines.ON,\n        };\n        for (let i = 0; i < 256; i++) {\n            this.glyphs[i] = font.makeImage(i, this.isExpandedCharacters(), glyphOptions);\n        }\n        this.glyphWidth = font.width;\n\n        this.refresh();\n    }\n\n    writeChar(address: number, value: number): void {\n        const offset = address - SCREEN_BEGIN;\n        this.memory[offset] = value;\n        this.drawChar(offset, value);\n        this.scheduleUpdateThumbnail();\n    }\n\n    /**\n     * Draw a single character to the canvas.\n     */\n    private drawChar(offset: number, value: number): void {\n        const screenX = (offset % 64)*8;\n        const screenY = Math.floor(offset / 64)*24;\n\n        if (this.isExpandedCharacters()) {\n            if (offset % 2 === 0) {\n                this.context.clearRect(screenX, screenY, 16, 24);\n                this.context.drawImage(this.glyphs[value], 0, 0, this.glyphWidth * 2, 24, screenX, screenY, 16, 24);\n            }\n        } else {\n            this.context.clearRect(screenX, screenY, 8, 24);\n            this.context.drawImage(this.glyphs[value], 0, 0, this.glyphWidth, 24, screenX, screenY, 8, 24);\n        }\n    }\n\n    getNode(): HTMLElement {\n        return this.node;\n    }\n\n    setExpandedCharacters(expanded: boolean): void {\n        if (expanded !== this.isExpandedCharacters()) {\n            super.setExpandedCharacters(expanded);\n            this.updateFromConfig();\n        }\n    }\n\n    setAlternateCharacters(alternate: boolean): void {\n        if (alternate !== this.isAlternateCharacters()) {\n            super.setAlternateCharacters(alternate);\n            this.updateFromConfig();\n        }\n    }\n\n    /**\n     * Refresh the display based on what we've kept track of.\n     */\n    private refresh(): void {\n        for (let offset = 0; offset < this.memory.length; offset++) {\n            this.drawChar(offset, this.memory[offset]);\n        }\n        this.scheduleUpdateThumbnail();\n    }\n\n    /**\n     * Schedule a future update of our thumbnail.\n     */\n    private scheduleUpdateThumbnail(): void {\n        this.cancelUpdateThumbnail();\n        this.updateThumbnailTimeout = window.setTimeout(() => {\n            this.updateThumbnailTimeout = undefined;\n            this.updateThumbnail();\n        }, UPDATE_THUMBNAIL_TIMEOUT_MS);\n    }\n\n    /**\n     * Cancel any previously-cancelled scheduled thumbnail update.\n     */\n    private cancelUpdateThumbnail(): void {\n        if (this.updateThumbnailTimeout !== undefined) {\n            window.clearTimeout(this.updateThumbnailTimeout);\n            this.updateThumbnailTimeout = undefined;\n        }\n    }\n\n    /**\n     * Synchronously update the thumbnail.\n     */\n    private updateThumbnail(): void {\n        if (this.thumbnailImage !== undefined) {\n            this.thumbnailImage.src = this.canvas.toDataURL();\n        }\n    }\n}\n","import {CSS_PREFIX} from \"./Utils\";\nimport {Background, BasicLevel, CGChip, Config, ModelType, Phosphor, RamSize, ScanLines} from \"./Config\";\nimport {Trs80} from \"./Trs80\";\nimport {AUTHENTIC_BACKGROUND, BLACK_BACKGROUND, phosphorToRgb} from \"./CanvasScreen\";\n\nconst gCssPrefix = CSS_PREFIX + \"-settings-panel\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gPanelCssClass = gCssPrefix + \"-panel\";\nconst gShownCssClass = gCssPrefix + \"-shown\";\nconst gAcceptButtonCssClass = gCssPrefix + \"-accept\";\nconst gRebootButtonCssClass = gCssPrefix + \"-reboot\";\nconst gOptionsClass = gCssPrefix + \"-options\";\nconst gButtonsClass = gCssPrefix + \"-buttons\";\nconst gColorButtonClass = gCssPrefix + \"-color-button\";\nconst gDarkColorButtonClass = gCssPrefix + \"-dark-color-button\";\nconst gAcceptButtonColor = \"#449944\";\n\nconst GLOBAL_CSS = `\n.${gPanelCssClass} {\n    display: flex;\n    align-items: stretch;\n    justify-content: center;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity .20s ease-in-out;\n}\n\n.${gPanelCssClass}.${gShownCssClass} {\n    opacity: 1;\n    visibility: visible;\n}\n\n.${gPanelCssClass} > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    background-color: rgba(40, 40, 40, 0.8);\n    border-radius: 15px;\n    color: #ccc;\n    font-family: sans-serif;\n    font-size: 10pt;\n    line-height: normal;\n    margin: 20px 0;\n    padding: 10px 30px;\n    min-width: 200px;\n}\n\n.${gPanelCssClass} h1 {\n    text-transform: uppercase;\n    text-align: center;\n    letter-spacing: .5px;\n    font-size: 10pt;\n    margin: 0 0 10px 0;\n}\n\n.${gPanelCssClass} .${gOptionsClass} {\n    display: flex;\n    justify-content: center;\n}\n\n.${gPanelCssClass} input[type=radio] {\n    display: none;\n}\n\n.${gPanelCssClass} input[type=radio] + label {\n    display: block;\n    flex-grow: 1;\n    flex-basis: 0;\n    text-align: center;\n    padding: 4px 16px;\n    margin-left: 10px;\n    border-radius: 3px;\n    background-color: #44443A;\n    white-space: nowrap;\n}\n\n.${gPanelCssClass} input[type=radio] + label.${gColorButtonClass} {\n    flex-grow: 0;\n    flex-basis: auto;\n    width: 24px;\n    height: 24px;\n    padding: 0;\n    border-radius: 999px;\n    border: 2px solid transparent;\n    color: transparent;\n    transition: color .20s ease-in-out;\n}\n\n.${gPanelCssClass} input[type=radio] + label.${gColorButtonClass}.${gDarkColorButtonClass} {\n    border: solid 2px #ccc;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass}::after {\n    content: \"✓\";\n    font-size: 20px;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass} {\n    color: black;\n}\n\n.${gPanelCssClass} input[type=radio]:checked + label.${gColorButtonClass}.${gDarkColorButtonClass} {\n    color: #ccc;\n}\n\n.${gPanelCssClass} input[type=radio] + label:first-of-type {\n    margin-left: 0;\n}\n\n.${gPanelCssClass} input[type=radio]:enabled + label:hover {\n    background-color: #66665A;\n}\n\n.${gPanelCssClass} input[type=radio]:disabled + label {\n    color: #666;\n}\n\n.${gPanelCssClass} input[type=radio]:enabled:checked + label {\n    color: #444;\n    background-color: #ccc;\n}\n\n.${gPanelCssClass} .${gButtonsClass} {\n    display: flex;\n}\n\n.${gPanelCssClass} a {\n    display: block;\n    flex-grow: 1;\n    flex-basis: 0;\n    text-align: center;\n    padding: 4px 16px;\n    border-radius: 3px;\n    margin-left: 10px;\n    color: #ccc;\n    background-color: #44443A;\n    cursor: default;\n}\n\n.${gPanelCssClass} a:first-of-type {\n    margin-left: 0;\n}\n\n.${gPanelCssClass} a.${gAcceptButtonCssClass} {\n    font-weight: bold;\n    color: #eee;\n    background-color: ${gAcceptButtonColor};\n}\n\n.${gPanelCssClass} a.${gAcceptButtonCssClass}:hover {\n    background-color: #338833;\n}\n\n.${gPanelCssClass} a.${gRebootButtonCssClass} {\n    background-color: #D25F43;\n}\n\n.${gPanelCssClass} a:hover {\n    background-color: #66665A;\n}\n\n.${gPanelCssClass} a.${gRebootButtonCssClass}:hover {\n    background-color: #BD563C;\n}\n\n.${gScreenNodeCssClass} {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n`;\n\n/**\n * An option in the settings screen, like a specific model or RAM amount.\n */\ninterface Option {\n    label: string;\n    value: any;\n}\n\n/**\n * A block of options that are mutually exclusive, like all the models.\n */\ninterface OptionBlock {\n    title: string;\n    /**\n     * Whether the option should be checked, based on this config.\n     */\n    isChecked: (value: any, config: Config) => boolean;\n    /**\n     * Return a modified config, given that this option was selected by the user.\n     */\n    updateConfig: (value: any, config: Config) => Config;\n    options: Option[];\n}\n\n/**\n * An option that's currently displayed to the user.\n */\nclass DisplayedOption {\n    public readonly input: HTMLInputElement;\n    public readonly block: OptionBlock;\n    public readonly option: Option;\n\n    constructor(input: HTMLInputElement, block: OptionBlock, option: Option) {\n        this.input = input;\n        this.block = block;\n        this.option = option;\n    }\n}\n\n// Convert RGB array (0-255) to a CSS string.\nfunction rgbToCss(color: number[]): string {\n    return \"#\" + color.map(c => c.toString(16).padStart(2, \"0\").toUpperCase()).join(\"\");\n}\n\n// Multiplies an RGB (0-255) color by a factor.\nfunction adjustColor(color: number[], factor: number): number[] {\n    return color.map(c => Math.max(0, Math.min(255, Math.round(c*factor))));\n}\n\n/**\n * Our full configuration options.\n */\nconst HARDWARE_OPTION_BLOCKS: OptionBlock[] = [\n    {\n        title: \"Model\",\n        isChecked: (modelType: ModelType, config: Config) => modelType === config.modelType,\n        updateConfig: (modelType: ModelType, config: Config) => config.withModelType(modelType),\n        options: [\n            {\n                label: \"Model I\",\n                value: ModelType.MODEL1,\n            },\n            {\n                label: \"Model III\",\n                value: ModelType.MODEL3,\n            },\n        ]\n    },\n    {\n        title: \"Basic\",\n        isChecked: (basicLevel: BasicLevel, config: Config) => basicLevel === config.basicLevel,\n        updateConfig: (basicLevel: BasicLevel, config: Config) => config.withBasicLevel(basicLevel),\n        options: [\n            {\n                label: \"Level 1\",\n                value: BasicLevel.LEVEL1,\n            },\n            {\n                label: \"Level 2\",\n                value: BasicLevel.LEVEL2,\n            },\n        ]\n    },\n    {\n        title: \"Characters\",\n        isChecked: (cgChip: CGChip, config: Config) => cgChip === config.cgChip,\n        updateConfig: (cgChip: CGChip, config: Config) => config.withCGChip(cgChip),\n        options: [\n            {\n                label: \"Original\",\n                value: CGChip.ORIGINAL,\n            },\n            {\n                label: \"Lower case\",\n                value: CGChip.LOWER_CASE,\n            },\n        ]\n    },\n    {\n        title: \"RAM\",\n        isChecked: (ramSize: RamSize, config: Config) => ramSize === config.ramSize,\n        updateConfig: (ramSize: RamSize, config: Config) => config.withRamSize(ramSize),\n        options: [\n            {\n                label: \"4 kB\",\n                value: RamSize.RAM_4_KB,\n            },\n            {\n                label: \"16 kB\",\n                value: RamSize.RAM_16_KB,\n            },\n            {\n                label: \"32 kB\",\n                value: RamSize.RAM_32_KB,\n            },\n            {\n                label: \"48 kB\",\n                value: RamSize.RAM_48_KB,\n            },\n        ]\n    },\n];\nconst VIEW_OPTION_BLOCKS: OptionBlock[] = [\n    {\n        title: \"Phosphor\",\n        isChecked: (phosphor: Phosphor, config: Config) => phosphor === config.phosphor,\n        updateConfig: (phosphor: Phosphor, config: Config) => config.withPhosphor(phosphor),\n        options: [\n            {\n                label: rgbToCss(adjustColor(phosphorToRgb(Phosphor.WHITE), 0.8)),\n                value: Phosphor.WHITE,\n            },\n            {\n                // Cheat and use the green from the OK button so that the two greens don't clash.\n                label: gAcceptButtonColor,\n                value: Phosphor.GREEN,\n            },\n            {\n                label: rgbToCss(adjustColor(phosphorToRgb(Phosphor.AMBER), 0.8)),\n                value: Phosphor.AMBER,\n            },\n        ]\n    },\n    {\n        title: \"Background\",\n        isChecked: (background: Background, config: Config) => background === config.background,\n        updateConfig: (background: Background, config: Config) => config.withBackground(background),\n        options: [\n            {\n                label: BLACK_BACKGROUND,\n                value: Background.BLACK,\n            },\n            {\n                label: AUTHENTIC_BACKGROUND,\n                value: Background.AUTHENTIC,\n            },\n        ]\n    },\n    {\n        title: \"Scan Lines\",\n        isChecked: (scanLines: ScanLines, config: Config) => scanLines === config.scanLines,\n        updateConfig: (scanLines: ScanLines, config: Config) => config.withScanLines(scanLines),\n        options: [\n            {\n                label: \"Off\",\n                value: ScanLines.OFF,\n            },\n            {\n                label: \"On\",\n                value: ScanLines.ON,\n            },\n        ]\n    },\n];\n\n// Type of panel to show.\nexport enum PanelType {\n    // Model, RAM, etc.\n    HARDWARE,\n    // Phosphor color, background, etc.\n    VIEW,\n}\n\n// Get the right options blocks for the panel type.\nfunction optionBlocksForPanelType(panelType: PanelType): OptionBlock[] {\n    switch (panelType) {\n        case PanelType.HARDWARE:\n        default:\n            return HARDWARE_OPTION_BLOCKS;\n\n        case PanelType.VIEW:\n            return VIEW_OPTION_BLOCKS;\n    }\n}\n\n/**\n * Whether the given CSS color is dark.\n *\n * @param color an CSS color in the form \"#rrggbb\".\n */\nfunction isDarkColor(color: string): boolean {\n    if (!color.startsWith(\"#\") || color.length !== 7) {\n        throw new Error(\"isDarkColor: not a color (\" + color + \")\");\n    }\n\n    const red = parseInt(color.substr(1, 2), 16);\n    const grn = parseInt(color.substr(3, 2), 16);\n    const blu = parseInt(color.substr(5, 2), 16);\n    const gray = red*0.3 + grn*0.6 + blu*0.1;\n\n    return gray < 110;\n}\n\nlet gRadioButtonCounter = 1;\n\n/**\n * A full-screen control panel for configuring the emulator.\n */\nexport class SettingsPanel {\n    public onOpen: (() => void) | undefined;\n    public onClose: (() => void) | undefined;\n    public readonly panelType: PanelType;\n    private readonly trs80: Trs80;\n    private readonly panelNode: HTMLElement;\n    private readonly displayedOptions: DisplayedOption[] = [];\n    private readonly acceptButton: HTMLElement;\n\n    constructor(screenNode: HTMLElement, trs80: Trs80, panelType: PanelType) {\n        this.panelType = panelType;\n        this.trs80 = trs80;\n\n        // Make global CSS if necessary.\n        SettingsPanel.configureStyle();\n\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.panelNode = document.createElement(\"div\");\n        this.panelNode.classList.add(gPanelCssClass);\n        screenNode.appendChild(this.panelNode);\n\n        const div = document.createElement(\"div\");\n        this.panelNode.appendChild(div);\n\n        for (const block of optionBlocksForPanelType(panelType)) {\n            const name = gCssPrefix + \"-\" + gRadioButtonCounter++;\n\n            const blockDiv = document.createElement(\"div\");\n            div.appendChild(blockDiv);\n\n            const h1 = document.createElement(\"h1\");\n            h1.innerText = block.title;\n            blockDiv.appendChild(h1);\n\n            const optionsDiv = document.createElement(\"div\");\n            optionsDiv.classList.add(gOptionsClass);\n            blockDiv.appendChild(optionsDiv);\n\n            for (const option of block.options) {\n                const id = gCssPrefix + \"-\" + gRadioButtonCounter++;\n\n                const input = document.createElement(\"input\");\n                input.id = id;\n                input.type = \"radio\";\n                input.name = name;\n                input.addEventListener(\"change\", () => this.updateEnabledOptions());\n                optionsDiv.appendChild(input);\n\n                const label = document.createElement(\"label\");\n                label.htmlFor = id;\n                if (option.label.startsWith(\"#\")) {\n                    // It's a color, show a swatch.\n                    label.classList.add(gColorButtonClass);\n                    label.style.backgroundColor = option.label;\n                    if (isDarkColor(option.label)) {\n                        label.classList.add(gDarkColorButtonClass);\n                    }\n                } else {\n                    label.innerText = option.label;\n                }\n                optionsDiv.appendChild(label);\n\n                this.displayedOptions.push(new DisplayedOption(input, block, option));\n            }\n        }\n\n        const buttonsDiv = document.createElement(\"div\");\n        buttonsDiv.classList.add(gButtonsClass);\n        div.appendChild(buttonsDiv);\n\n        this.acceptButton = document.createElement(\"a\");\n        this.acceptButton.classList.add(gAcceptButtonCssClass);\n        this.acceptButton.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            this.accept();\n        });\n        buttonsDiv.appendChild(this.acceptButton);\n        this.configureAcceptButton(this.trs80.getConfig());\n\n        const cancelButton = document.createElement(\"a\");\n        cancelButton.innerText = \"Cancel\";\n        cancelButton.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            this.close();\n        });\n        buttonsDiv.appendChild(cancelButton);\n    }\n\n    /**\n     * Open the settings panel.\n     */\n    public open(): void {\n        if (this.onOpen !== undefined) {\n            this.onOpen();\n        }\n\n        // Configure options.\n        for (const displayedOption of this.displayedOptions) {\n            displayedOption.input.checked = displayedOption.block.isChecked(displayedOption.option.value, this.trs80.getConfig());\n        }\n        this.updateEnabledOptions();\n\n        this.panelNode.classList.add(gShownCssClass);\n    }\n\n    /**\n     * Accept the changes, configure the machine, and close the dialog box.\n     */\n    private accept(): void {\n        this.trs80.setConfig(this.getConfig());\n        this.close();\n    }\n\n    /**\n     * Close the settings panel.\n     */\n    private close(): void {\n        this.panelNode.classList.remove(gShownCssClass);\n\n        if (this.onClose !== undefined) {\n            this.onClose();\n        }\n    }\n\n    /**\n     * Update which options are enabled based on the current selection.\n     */\n    private updateEnabledOptions(): void {\n        const config = this.getConfig();\n        for (const displayedOption of this.displayedOptions) {\n            const enabled = displayedOption.block.updateConfig(displayedOption.option.value, config).isValid();\n            displayedOption.input.disabled = !enabled;\n        }\n\n        this.configureAcceptButton(config);\n    }\n\n    /**\n     * Set the accept button to be OK or Reboot.\n     */\n    private configureAcceptButton(config: Config) {\n        if (config.needsReboot(this.trs80.getConfig())) {\n            this.acceptButton.classList.add(gRebootButtonCssClass);\n            this.acceptButton.innerText = \"Reboot\";\n        } else {\n            this.acceptButton.classList.remove(gRebootButtonCssClass);\n            this.acceptButton.innerText = \"OK\";\n        }\n    }\n\n    /**\n     * Make a new config from the user's currently selected options.\n     */\n    private getConfig(): Config {\n        let config = this.trs80.getConfig();\n\n        for (const displayedOption of this.displayedOptions) {\n            if (displayedOption.input.checked) {\n                config = displayedOption.block.updateConfig(displayedOption.option.value, config);\n            }\n        }\n\n        return config;\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","\nimport {CSS_PREFIX} from \"./Utils\";\nimport {PanelType, SettingsPanel} from \"./SettingsPanel\";\n\nconst gCssPrefix = CSS_PREFIX + \"-control-panel\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gPanelCssClass = gCssPrefix + \"-panel\";\nconst gButtonCssClass = gCssPrefix + \"-button\";\nconst gShowingOtherPanelCssClass = gCssPrefix + \"-showing-other-panel\";\n\n// https://thenounproject.com/search/?q=reset&i=3012384\nconst RESET_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"30\" height=\"30\" viewBox=\"0 0 100 100\" xml:space=\"preserve\">\n    <switch>\n        <g fill=\"white\">\n            <path d=\"M5273.1,2400.1v-2c0-2.8-5-4-9.7-4s-9.7,1.3-9.7,4v2c0,1.8,0.7,3.6,2,4.9l5,4.9c0.3,0.3,0.4,0.6,0.4,1v6.4     c0,0.4,0.2,0.7,0.6,0.8l2.9,0.9c0.5,0.1,1-0.2,1-0.8v-7.2c0-0.4,0.2-0.7,0.4-1l5.1-5C5272.4,2403.7,5273.1,2401.9,5273.1,2400.1z      M5263.4,2400c-4.8,0-7.4-1.3-7.5-1.8v0c0.1-0.5,2.7-1.8,7.5-1.8c4.8,0,7.3,1.3,7.5,1.8C5270.7,2398.7,5268.2,2400,5263.4,2400z\"/>\n            <path d=\"M5268.4,2410.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1c0-0.6-0.4-1-1-1H5268.4z\"/>\n            <path d=\"M5272.7,2413.7h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2414.1,5273.3,2413.7,5272.7,2413.7z\"/>\n            <path d=\"M5272.7,2417h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2417.5,5273.3,2417,5272.7,2417z\"/>\n            <path d=\"M84.3,18C67.1,0.8,39.5,0.4,21.8,16.5l-4.1-4.1c-1.6-1.6-4-2.2-6.2-1.6c-2.2,0.7-3.9,2.5-4.3,4.7L2.6,36.9    c-0.4,2.1,0.2,4.2,1.7,5.7c1.5,1.5,3.6,2.1,5.7,1.7l21.4-4.5c1.2-0.3,2.3-0.9,3.1-1.7c0.7-0.7,1.3-1.6,1.6-2.6    c0.6-2.2,0-4.6-1.6-6.2l-3.9-3.9C43.5,14,63.1,14.5,75.4,26.8c12.8,12.8,12.8,33.6,0,46.4C62.6,86,41.8,86,29,73.2    c-4.1-4.1-7-9.2-8.5-14.8c-0.9-3.3-4.3-5.3-7.6-4.4c-3.3,0.9-5.3,4.3-4.4,7.6c2,7.7,6.1,14.8,11.8,20.4    c17.7,17.7,46.4,17.7,64.1,0C101.9,64.4,101.9,35.6,84.3,18z\"/>\n        </g>\n    </switch>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=camera&i=1841396\nconst CAMERA_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\"  version=\"1.1\" x=\"0px\" y=\"0px\" width=\"30\" height=\"30\" viewBox=\"0 0 100 100\" xml:space=\"preserve\">\n    <g fill=\"white\">\n        <circle cx=\"50\" cy=\"55.4\" r=\"13.8\"/>\n        <path d=\"M80.6,25.4H67.1l-1.8-7.2c-0.5-2.1-2.5-3.6-4.7-3.6H39.3c-2.2,0-4.1,1.5-4.7,3.6l-1.8,7.2H19.4C11.5,25.4,5,31.9,5,39.8V71   c0,7.9,6.5,14.4,14.4,14.4h61.2C88.5,85.4,95,78.9,95,71V39.8C95,31.9,88.5,25.4,80.6,25.4z M50,76.4c-11.6,0-21-9.4-21-21   s9.4-21,21-21s21,9.4,21,21S61.6,76.4,50,76.4z M81.4,40.3c-2,0-3.6-1.6-3.6-3.6c0-2,1.6-3.6,3.6-3.6s3.6,1.6,3.6,3.6   C85,38.7,83.4,40.3,81.4,40.3z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=previous%20track&i=658409\nconst PREVIOUS_TRACK_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"30\" height=\"30\" viewBox=\"-1 -2 16 21\" version=\"1.1\" x=\"0px\" y=\"0px\">\n    <g fill=\"white\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-320.000000, -618.000000)\">\n            <path d=\"M330,628.032958 L330,634.00004 C330,634.545291 330.45191,635 331.009369,635 L332.990631,635 C333.556647,635 334,634.552303 334,634.00004 L334,618.99996 C334,618.454709 333.54809,618 332.990631,618 L331.009369,618 C330.443353,618 330,618.447697 330,618.99996 L330,624.967057 C329.894605,624.850473 329.775773,624.739153 329.643504,624.634441 L322.356496,618.865559 C321.054403,617.834736 320,618.3432 320,620.000122 L320,632.999878 C320,634.663957 321.055039,635.164761 322.356496,634.134441 L329.643504,628.365559 C329.775779,628.260841 329.894611,628.149527 330,628.032958 Z\" transform=\"translate(327.000000, 626.500000) scale(-1, 1) translate(-327.000000, -626.500000) \"/>\n        </g>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=settings&i=3593545\nconst HARDWARE_SETTINGS_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"7 7 121 121\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"30\" height=\"30\">\n    <g fill=\"white\" transform=\"translate(0,-161.53332)\">\n        <path d=\"m 61.57997,173.33818 c -1.653804,0 -3.159177,0.77847 -4.132553,1.85984 -0.973402,1.08136 -1.513575,2.40442 -1.771491,3.76721 a 2.1609049,2.1609049 0 0 0 0,0.002 l -1.654678,8.74831 c -2.047981,0.67947 -4.038494,1.50768 -5.964476,2.48047 l -7.367508,-5.02347 c -1.145302,-0.78076 -2.462953,-1.33572 -3.916045,-1.41232 -1.4546,-0.0764 -3.068029,0.44118 -4.235926,1.60921 l -8.699209,8.69921 c -1.169405,1.16909 -1.685211,2.78351 -1.609725,4.23643 0.07501,1.45291 0.629259,2.7738 1.410256,3.92018 l 5.001762,7.336 c -0.9702,1.93582 -1.794192,3.93628 -2.468589,5.99392 l -8.740034,1.65417 c -1.362789,0.25787 -2.688378,0.79815 -3.769783,1.77147 -1.081405,0.97346 -1.859333,2.4815 -1.859333,4.13526 v 12.30262 c 0,1.65378 0.777928,3.1592 1.859333,4.13255 1.081405,0.97338 2.406994,1.51567 3.769783,1.77353 l 8.754004,1.6583 c 0.679477,2.04603 1.506088,4.03461 2.478379,5.95882 l -5.025522,7.3675 c -0.781606,1.14644 -1.334744,2.4664 -1.410256,3.91967 -0.07498,1.45325 0.439817,3.06745 1.609725,4.23643 l 8.699209,8.69921 c 1.1693,1.16941 2.782914,1.68325 4.235926,1.60713 1.452986,-0.0761 2.771908,-0.63037 3.918109,-1.41179 l 7.33597,-5.00022 c 1.9363,0.97001 3.937926,1.79294 5.996014,2.46702 l 1.654175,8.74004 c 0.257889,1.36284 0.798486,2.68843 1.771994,3.76981 0.973402,1.08138 2.478749,1.8593 4.132553,1.8593 H 73.88672 c 1.653805,0 3.159152,-0.77792 4.132554,-1.8593 0.973005,-1.0809 1.513999,-2.40554 1.771994,-3.76772 v -0.003 l 1.656212,-8.74778 c 2.048113,-0.67943 4.038415,-1.50768 5.964502,-2.48047 l 7.365445,5.02142 c 1.146095,0.78144 2.465096,1.33567 3.918108,1.41179 1.452905,0.0761 3.068585,-0.43786 4.237995,-1.60713 l 8.6992,-8.69921 c 1.16931,-1.16946 1.68395,-2.78551 1.60767,-4.23852 -0.076,-1.45301 -0.63074,-2.77196 -1.41232,-3.91811 l -5.00177,-7.33547 c 0.9705,-1.93617 1.79398,-3.93639 2.46857,-5.99445 l 8.74003,-1.65418 c 1.36271,-0.25794 2.68841,-0.80018 3.76981,-1.77352 1.0813,-0.97335 1.85931,-2.47881 1.85931,-4.13256 v -12.30312 c 0,-1.65378 -0.77801,-3.16127 -1.85931,-4.13465 -1.0809,-0.97292 -2.40562,-1.51344 -3.76772,-1.77146 l -8.74988,-1.65624 c -0.67918,-2.04684 -1.50825,-4.03585 -2.48046,-5.96088 l 5.02348,-7.36698 c 0.78118,-1.14583 1.33572,-2.46501 1.41232,-3.91811 0.077,-1.45309 -0.43952,-3.06905 -1.60973,-4.2385 l -8.69714,-8.69921 c -1.16962,-1.16891 -2.78461,-1.68557 -4.238494,-1.6092 -1.4528,0.0768 -2.770425,0.63186 -3.915542,1.41232 l -7.33597,5.00176 c -1.9363,-0.96998 -3.937926,-1.79297 -5.996014,-2.46703 l -1.656768,-8.74211 c -0.257783,-1.36269 -0.798062,-2.68582 -1.771464,-3.76721 -0.973297,-1.0814 -2.478749,-1.85984 -4.132554,-1.85984 z m 6.152595,34.74051 c 11.726704,0 21.185664,9.46065 21.185267,21.18735 0,11.7262 -9.459066,21.18696 -21.185267,21.18733 -11.726704,0 -21.187463,-9.4606 -21.18786,-21.18733 0,-11.72726 9.460653,-21.18772 21.18786,-21.18735 z\"/>\n    </g>\n</svg>\n`;\n\n// https://thenounproject.com/search/?q=view&i=485540\nconst VIEW_SETTINGS_ICON = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"20 20 60 60\">\n    <g fill=\"white\">\n        <path d=\"M80,48.6c-7.8-10.4-18.4-16.7-30-16.7c-11.6,0-22.2,6.4-30,16.7c-0.6,0.9-0.6,2,0,2.9c7.8,10.4,18.4,16.7,30,16.7  s22.2-6.4,30-16.7C80.7,50.6,80.7,49.4,80,48.6z M62.8,50.8c-0.4,6.4-5.6,11.6-12,12c-7.7,0.5-14.1-5.9-13.6-13.6  c0.4-6.4,5.6-11.6,12-12C56.9,36.7,63.3,43.1,62.8,50.8z M56.9,50.4c-0.2,3.4-3,6.2-6.4,6.4c-4.2,0.3-7.6-3.2-7.3-7.3  c0.2-3.4,3-6.2,6.4-6.4C53.7,42.8,57.2,46.3,56.9,50.4z\"/>\n    </g>\n</svg>\n`;\n\nconst GLOBAL_CSS = `\n.${gPanelCssClass} {\n    background-color: rgba(40, 40, 40, 0.8);\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    border-radius: 5px;\n    opacity: 0;\n    transition: opacity .20s ease-in-out;\n}\n\n.${gScreenNodeCssClass} {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n\n.${gScreenNodeCssClass}:hover .${gPanelCssClass} {\n    opacity: 1;\n}\n\n/* Hide the control panel if any other panel is showing (like settings). */\n.${gScreenNodeCssClass}.${gShowingOtherPanelCssClass}:hover .${gPanelCssClass} {\n    opacity: 0;\n}\n\n.${gButtonCssClass} {\n    display: block;\n    margin: 15px;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity .05s ease-in-out;\n    transition: transform 0.05s ease-in-out;\n}\n\n.${gButtonCssClass}:hover {\n    opacity: 1;\n}\n\n.${gButtonCssClass}:active {\n    transform: scale(1.15);\n}\n`;\n\n/**\n * Control panel that hovers in the screen for doing things like resetting the computer.\n */\nexport class ControlPanel {\n    private readonly screenNode: HTMLElement;\n    private readonly panelNode: HTMLElement;\n\n    /**\n     * @param screenNode the node from the Trs80Screen object's getNode() method.\n     */\n    constructor(screenNode: HTMLElement) {\n        // Make global CSS if necessary.\n        ControlPanel.configureStyle();\n\n        this.screenNode = screenNode;\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.panelNode = document.createElement(\"div\");\n        this.panelNode.classList.add(gPanelCssClass);\n        screenNode.appendChild(this.panelNode);\n    }\n\n    /**\n     * Add a reset button.\n     */\n    public addResetButton(callback: () => void) {\n        let icon = document.createElement(\"img\");\n        icon.classList.add(gButtonCssClass);\n        icon.src = \"data:image/svg+xml;base64,\" + btoa(RESET_ICON);\n        icon.title = \"Reboot the computer\";\n        icon.addEventListener(\"click\", callback);\n        this.panelNode.appendChild(icon);\n    }\n\n    /**\n     * Add a screenshot button.\n     */\n    public addScreenshotButton(callback: () => void) {\n        let icon = document.createElement(\"img\");\n        icon.classList.add(gButtonCssClass);\n        icon.src = \"data:image/svg+xml;base64,\" + btoa(CAMERA_ICON);\n        icon.title = \"Take a screenshot\";\n        icon.addEventListener(\"click\", callback);\n        this.panelNode.appendChild(icon);\n    }\n\n    /**\n     * Add a tape rewind button.\n     */\n    public addTapeRewindButton(callback: () => void) {\n        let icon = document.createElement(\"img\");\n        icon.classList.add(gButtonCssClass);\n        icon.src = \"data:image/svg+xml;base64,\" + btoa(PREVIOUS_TRACK_ICON);\n        icon.title = \"Rewind the cassette\";\n        icon.addEventListener(\"click\", callback);\n        this.panelNode.appendChild(icon);\n    }\n\n    /**\n     * Add a settings button.\n     */\n    public addSettingsButton(settingsPanel: SettingsPanel) {\n        settingsPanel.onOpen = () => this.screenNode.classList.add(gShowingOtherPanelCssClass);\n        settingsPanel.onClose = () => this.screenNode.classList.remove(gShowingOtherPanelCssClass);\n\n        let iconSvg: string;\n        switch (settingsPanel.panelType) {\n            case PanelType.HARDWARE:\n            default:\n                iconSvg = HARDWARE_SETTINGS_ICON;\n                break;\n            case PanelType.VIEW:\n                iconSvg = VIEW_SETTINGS_ICON;\n                break;\n        }\n\n\n        let icon = document.createElement(\"img\");\n        icon.classList.add(gButtonCssClass);\n        icon.src = \"data:image/svg+xml;base64,\" + btoa(iconSvg);\n        icon.title = \"Show the settings panel\";\n        icon.addEventListener(\"click\", () => settingsPanel.open());\n        this.panelNode.appendChild(icon);\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","\nimport {CSS_PREFIX} from \"./Utils\";\n\nconst gCssPrefix = CSS_PREFIX + \"-progress-bar\";\nconst gScreenNodeCssClass = gCssPrefix + \"-screen-node\";\nconst gBarCssClass = gCssPrefix + \"-bar\";\nconst gSubbarCssClass = gCssPrefix + \"-subbar\";\n\nconst GLOBAL_CSS = \".\" + gBarCssClass + ` {\n    background-color: rgba(0, 0, 0, 0.2);\n    position: absolute;\n    left: 15%;\n    width: 70%;\n    bottom: 10%;\n    height: 20px;\n    border-radius: 10px;\n    overflow: hidden;\n    opacity: 0;\n    transition: opacity .20s ease-in-out;\n}\n\n.` + gSubbarCssClass + ` {\n    background-color: rgba(255, 255, 255, 0.4);\n    width: 0;\n    height: 20px;\n}\n\n.` + gScreenNodeCssClass + ` {\n    /* Force the screen node to relative positioning. Hope that doesn't screw anything up. */\n    position: relative;\n}\n\n`;\n\n/**\n * Overlay on top of a screen to show progress, for instance the position of a cassette tape.\n */\nexport class ProgressBar {\n    private readonly barNode: HTMLElement;\n    private readonly subbarNode: HTMLElement;\n    private maxValue: number = 100;\n\n    /**\n     * @param screenNode the node from the Trs80Screen object's getNode() method.\n     */\n    constructor(screenNode: HTMLElement) {\n        // Make global CSS if necessary.\n        ProgressBar.configureStyle();\n\n        screenNode.classList.add(gScreenNodeCssClass);\n\n        this.barNode = document.createElement(\"div\");\n        this.barNode.classList.add(gBarCssClass);\n        screenNode.appendChild(this.barNode);\n\n        this.subbarNode = document.createElement(\"div\");\n        this.subbarNode.classList.add(gSubbarCssClass);\n        this.barNode.appendChild(this.subbarNode);\n    }\n\n    public setMaxValue(maxValue: number) {\n        this.maxValue = maxValue;\n    }\n\n    public setValue(value: number) {\n        this.subbarNode.style.width = \"\" + Math.round(value*100/this.maxValue) + \"%\";\n    }\n\n    public show() {\n        this.barNode.style.opacity = \"1\";\n    }\n\n    public hide() {\n        this.barNode.style.opacity = \"0\";\n    }\n\n    /**\n     * Make a global stylesheet for all TRS-80 emulators on this page.\n     */\n    private static configureStyle(): void {\n        const styleId = gCssPrefix;\n        if (document.getElementById(styleId) !== null) {\n            // Already created.\n            return;\n        }\n\n        const node = document.createElement(\"style\");\n        node.id = styleId;\n        node.innerHTML = GLOBAL_CSS;\n        document.head.appendChild(node);\n    }\n}\n","export {Cassette} from \"./Cassette\";\nexport {Trs80} from \"./Trs80\";\nexport {CanvasScreen} from \"./CanvasScreen\";\nexport {ControlPanel} from \"./ControlPanel\";\nexport {SettingsPanel, PanelType} from \"./SettingsPanel\";\nexport {ProgressBar} from \"./ProgressBar\";\n","import jss from './Jss';\nimport { Disasm, TRS80_MODEL_III_KNOWN_LABELS, Z80_KNOWN_LABELS } from \"z80-disasm\";\nimport { toHexByte, toHexWord } from \"z80-base\";\nimport { Highlightable } from \"./Highlighter\";\nimport { ProgramAnnotation } from \"./Annotations\";\nimport { CanvasScreen } from \"trs80-emulator\";\n// RAM address range of screen.\nconst SCREEN_BEGIN = 15 * 1024;\nconst SCREEN_END = 16 * 1024;\n/**\n * Add text to the line with the specified class.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    error: {\n        color: \"var(--red)\",\n    },\n    address: {\n        color: \"var(--foreground-secondary)\",\n    },\n    hex: {\n        color: \"var(--blue)\",\n    },\n    opcodes: {\n        color: \"var(--cyan)\",\n    },\n    label: {\n        color: \"var(--orange)\",\n    },\n    space: {\n        color: \"var(--foreground-secondary)\",\n    },\n    punctuation: {\n        color: \"var(--foreground-secondary)\",\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n        backgroundColor: \"var(--foreground-secondary)\",\n        \"& $hex\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $punctuation\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $space\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $label\": {\n            backgroundColor: \"var(--orange)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $opcodes\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $address\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n        \"& $error\": {\n            backgroundColor: \"var(--red)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * Render a disassembled system program.\n *\n * @return array of the elements added, with the index being the offset into the original bytes array.\n */\nexport function toDiv(systemProgram, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    // Every element we render that maps to a byte in the program.\n    const elements = [];\n    // Waveform annotations.\n    const annotations = [];\n    if (systemProgram.error !== undefined) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        add(line, systemProgram.error, classes.error);\n    }\n    function okChunk(chunk) {\n        if (chunk.loadAddress >= SCREEN_BEGIN && chunk.loadAddress + chunk.data.length <= SCREEN_END) {\n            return false;\n        }\n        if (chunk.loadAddress === 0x4210 || chunk.loadAddress === 0x401E) {\n            return false;\n        }\n        return true;\n    }\n    // Prepare screenshot, in case loading process writes to screen.\n    const screenDiv = document.createElement(\"div\");\n    const screen = new CanvasScreen(screenDiv, false);\n    let wroteToScreen = false;\n    // List chunks on tape.\n    let h1 = document.createElement(\"h1\");\n    h1.innerText = \"Chunks\";\n    out.appendChild(h1);\n    // Display a row for each chunk.\n    let programAddress = undefined;\n    for (const chunk of systemProgram.chunks) {\n        const line = document.createElement(\"div\");\n        out.appendChild(line);\n        // Address and length.\n        let length = chunk.data.length;\n        let text = toHexWord(chunk.loadAddress) + \"-\" + toHexWord(chunk.loadAddress + length - 1) +\n            \" (\" + length + \" byte\" + (length === 1 ? \"\" : \"s\") + \")\";\n        text = text.padEnd(23, \" \");\n        add(line, text, classes.address);\n        // First few bytes.\n        const bytes = chunk.data.slice(0, Math.min(3, length));\n        text = Array.from(bytes).map(toHexByte).join(\" \") + (bytes.length < length ? \" ...\" : \"\");\n        text = text.padEnd(14, \" \");\n        add(line, text, classes.hex);\n        // Write explanation.\n        if (chunk.loadAddress >= SCREEN_BEGIN && chunk.loadAddress + chunk.data.length <= SCREEN_END) {\n            add(line, \"Screen\", classes.opcodes);\n            if (!wroteToScreen) {\n                add(line, \" (see screenshot below)\", classes.error);\n            }\n            for (let i = 0; i < length; i++) {\n                screen.writeChar(chunk.loadAddress + i, chunk.data[i]);\n            }\n            wroteToScreen = true;\n        }\n        else if (chunk.loadAddress === 0x4210) {\n            add(line, \"Port 0xEC bitmask\", classes.opcodes);\n        }\n        else if (chunk.loadAddress === 0x401E) {\n            add(line, \"Video driver pointer\", classes.opcodes);\n        }\n        else {\n            add(line, \"Program code\", classes.opcodes);\n            if (programAddress !== undefined && chunk.loadAddress !== programAddress) {\n                add(line, \" (not contiguous, expected \" + toHexWord(programAddress) + \")\", classes.error);\n            }\n            programAddress = chunk.loadAddress + length;\n        }\n        if (!chunk.isChecksumValid()) {\n            add(line, \" (invalid checksum)\", classes.error);\n        }\n    }\n    const entryPointDiv = document.createElement(\"div\");\n    entryPointDiv.style.marginTop = \"10px\";\n    out.appendChild(entryPointDiv);\n    add(entryPointDiv, \"Entry point: \", classes.label);\n    add(entryPointDiv, toHexWord(systemProgram.entryPointAddress), classes.address);\n    if (wroteToScreen) {\n        h1 = document.createElement(\"h1\");\n        h1.innerText = \"Loading Screen\";\n        out.appendChild(h1);\n        out.appendChild(screenDiv);\n    }\n    h1 = document.createElement(\"h1\");\n    h1.innerText = \"Disassembly\";\n    out.appendChild(h1);\n    const disasm = new Disasm();\n    disasm.addLabels(Z80_KNOWN_LABELS);\n    disasm.addLabels(TRS80_MODEL_III_KNOWN_LABELS);\n    disasm.addLabels([[systemProgram.entryPointAddress, \"MAIN\"]]);\n    for (const chunk of systemProgram.chunks) {\n        if (okChunk(chunk)) {\n            disasm.addChunk(chunk.data, chunk.loadAddress);\n        }\n    }\n    disasm.addEntryPoint(systemProgram.entryPointAddress);\n    const instructions = disasm.disassemble();\n    for (const instruction of instructions) {\n        if (instruction.label !== undefined) {\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, \"                  \", classes.space);\n            add(line, instruction.label, classes.label);\n            add(line, \":\", classes.punctuation);\n        }\n        let address = instruction.address;\n        const bytes = instruction.bin;\n        while (bytes.length > 0) {\n            const subbytes = bytes.slice(0, Math.min(4, bytes.length));\n            const subbytesText = subbytes.map(toHexByte).join(\" \");\n            const line = document.createElement(\"div\");\n            out.appendChild(line);\n            add(line, toHexWord(instruction.address), classes.address);\n            add(line, \"  \", classes.space);\n            add(line, subbytesText, classes.hex);\n            if (address === instruction.address) {\n                add(line, \"\".padEnd(12 - subbytesText.length + 8), classes.space);\n                add(line, instruction.toText(), classes.opcodes);\n            }\n            const byteOffset = systemProgram.addressToByteOffset(address);\n            if (byteOffset !== undefined) {\n                const lastIndex = byteOffset + subbytes.length - 1;\n                elements.push(new Highlightable(byteOffset, lastIndex, line));\n                annotations.push(new ProgramAnnotation(instruction.toText() + \"\\n\" + instruction.binText(), byteOffset, lastIndex));\n            }\n            address += subbytes.length;\n            bytes.splice(0, subbytes.length);\n        }\n    }\n    return [elements, annotations];\n}\n","// Tools for generating a hex dump of a binary file.\nimport jss from './Jss';\nimport { pad } from \"./Utils\";\nimport { Highlightable } from \"./Highlighter\";\n// Stylesheet.\nconst BACKGROUND_COLOR = \"var(--background)\";\nconst STYLE = {\n    address: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    hex: {\n        color: \"var(--blue)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--blue)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    ascii: {\n        color: \"var(--cyan)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--cyan)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    asciiUnprintable: {\n        color: \"var(--foreground-secondary)\",\n        \"&$highlighted\": {\n            backgroundColor: \"var(--foreground-secondary)\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"var(--background-highlights)\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\nexport function create(binary, div) {\n    sheet.attach();\n    const classes = sheet.classes;\n    const hexElements = [];\n    const asciiElements = [];\n    for (let addr = 0; addr < binary.length; addr += 16) {\n        const line = document.createElement(\"div\");\n        let e = document.createElement(\"span\");\n        e.classList.add(classes.address);\n        e.innerText = pad(addr, 16, 4) + \"  \";\n        line.appendChild(e);\n        // Hex.\n        let subAddr;\n        for (subAddr = addr; subAddr < binary.length && subAddr < addr + 16; subAddr++) {\n            e = document.createElement(\"span\");\n            e.classList.add(classes.hex);\n            e.innerText = pad(binary[subAddr], 16, 2);\n            hexElements.push(new Highlightable(hexElements.length, hexElements.length, e));\n            line.appendChild(e);\n            line.appendChild(document.createTextNode(\" \"));\n        }\n        for (; subAddr < addr + 16; subAddr++) {\n            line.appendChild(document.createTextNode(\"   \"));\n        }\n        line.appendChild(document.createTextNode(\"  \"));\n        // ASCII.\n        for (subAddr = addr; subAddr < binary.length && subAddr < addr + 16; subAddr++) {\n            const c = binary[subAddr];\n            e = document.createElement(\"span\");\n            if (c >= 32 && c < 127) {\n                e.classList.add(classes.ascii);\n                e.innerText = String.fromCharCode(c);\n            }\n            else {\n                e.classList.add(classes.asciiUnprintable);\n                e.innerText = \".\";\n            }\n            asciiElements.push(new Highlightable(asciiElements.length, asciiElements.length, e));\n            line.appendChild(e);\n        }\n        div.appendChild(line);\n    }\n    return [hexElements, asciiElements];\n}\n","import { AudioFile } from \"./AudioUtils\";\n/**\n * Values for the \"audioFormat\" field.\n */\nconst WAVE_FORMAT_UNKNOWN = 0x0000; // Microsoft Unknown Wave Format\nconst WAVE_FORMAT_PCM = 0x0001; // Microsoft PCM Format\nconst WAVE_FORMAT_ADPCM = 0x0002; // Microsoft ADPCM Format\nconst WAVE_FORMAT_IEEE_FLOAT = 0x0003; // IEEE float\nconst WAVE_FORMAT_VSELP = 0x0004; // Compaq Computer's VSELP\nconst WAVE_FORMAT_IBM_CVSD = 0x0005; // IBM CVSD\nconst WAVE_FORMAT_ALAW = 0x0006; // 8-bit ITU-T G.711 A-law\nconst WAVE_FORMAT_MULAW = 0x0007; // 8-bit ITU-T G.711 µ-law\nconst WAVE_FORMAT_EXTENSIBLE = 0xFFFE; // Determined by SubFormat\n/**\n * Reads strings, numbers, and arrays from a buffer.\n */\nclass ArrayBufferReader {\n    constructor(arrayBuffer) {\n        this.littleEndian = false;\n        this.arrayBuffer = arrayBuffer;\n        this.dataView = new DataView(arrayBuffer);\n        this.index = 0;\n    }\n    /**\n     * Whether we've reached the end of the buffer.\n     */\n    eof() {\n        return this.index >= this.arrayBuffer.byteLength;\n    }\n    /**\n     * Read an ASCII string of length \"length\" from the input file.\n     */\n    readString(length) {\n        let s = \"\";\n        for (let i = 0; i < length; i++) {\n            s += String.fromCharCode(this.dataView.getInt8(this.index++));\n        }\n        return s;\n    }\n    /**\n     * Read an unsigned 16-bit value.\n     */\n    readUint16() {\n        const value = this.dataView.getUint16(this.index, this.littleEndian);\n        this.index += 2;\n        return value;\n    }\n    /**\n     * Read an unsigned 32-bit value.\n     */\n    readUint32() {\n        const value = this.dataView.getUint32(this.index, this.littleEndian);\n        this.index += 4;\n        return value;\n    }\n    /**\n     * Read a buffer of Int16 numbers.\n     */\n    readInt16Array(byteLength) {\n        const array = new Int16Array(this.arrayBuffer, this.index, byteLength / 2);\n        this.index += byteLength;\n        return array;\n    }\n}\n/**\n * Reads a WAV file from a buffer, returning an AudioFile object.\n*/\nexport function readWavFile(arrayBuffer) {\n    const reader = new ArrayBufferReader(arrayBuffer);\n    let rate = undefined;\n    let samples = undefined;\n    // Read ID.\n    const riffId = reader.readString(4);\n    if (riffId === \"RIFF\") {\n        reader.littleEndian = true;\n    }\n    else if (riffId === \"RIFX\") {\n        reader.littleEndian = false;\n    }\n    else {\n        throw new Error('bad \"chunk id\": expected \"RIFF\" or \"RIFX\", got ' + riffId);\n    }\n    // Read chunk size. This is really how much is left in the entire file.\n    const chunkSize = reader.readUint32();\n    // Read format.\n    const waveId = reader.readString(4);\n    if (waveId !== \"WAVE\") {\n        throw new Error('bad \"format\": expected \"WAVE\", got ' + waveId);\n    }\n    // Keep reading chunks.\n    while (!reader.eof()) {\n        // Chunk ID.\n        const chunkId = reader.readString(4);\n        const chunkSize = reader.readUint32();\n        switch (chunkId) {\n            case \"fmt \": {\n                if (chunkSize !== 16) {\n                    throw new Error(\"Expected fmt size of 16, got \" + chunkSize);\n                }\n                const audioFormat = reader.readUint16();\n                const channels = reader.readUint16();\n                rate = reader.readUint32();\n                const byteRate = reader.readUint32(); // useless...\n                const blockAlign = reader.readUint16(); // useless...\n                const bitDepth = reader.readUint16();\n                const signed = bitDepth !== 8;\n                if (audioFormat !== WAVE_FORMAT_PCM) {\n                    throw new Error(\"Can only handle PCM, not \" + audioFormat);\n                }\n                break;\n            }\n            case \"fact\": {\n                if (chunkSize !== 4) {\n                    throw new Error(\"Expected fact size of 4, got \" + chunkSize);\n                }\n                // There is currently only one field defined for the format dependant data.\n                // It is a single 4-byte value that specifies the number of samples in the\n                // waveform data chunk.\n                //\n                // The number of samples field is redundant for sampled data, since the Data\n                // chunk indicates the length of the data. The number of samples can be\n                // determined from the length of the data and the container size as determined\n                // from the Format chunk.\n                const numSamples = reader.readUint32();\n                break;\n            }\n            case \"data\": {\n                if (chunkSize === 0) {\n                    // If we run into this, just read the rest of the array.\n                    throw new Error(\"We don't handle 0-sized data\");\n                }\n                samples = reader.readInt16Array(chunkSize);\n                break;\n            }\n        }\n    }\n    if (samples === undefined || rate === undefined) {\n        throw new Error(\"didn't get all the fields we need from WAV file\");\n    }\n    return new AudioFile(rate, samples);\n}\n/**\n * Convert samples to a WAV file.\n *\n * http://soundfile.sapp.org/doc/WaveFormat/\n */\nexport function writeWavFile(samples, sampleRate) {\n    const channelCount = 1;\n    const bitDepth = 16;\n    // Total size of WAV file.\n    const totalSize = 11 * 4 + samples.length * 2;\n    const wav = new ArrayBuffer(totalSize);\n    const wavData = new DataView(wav);\n    let index = 0;\n    const writeString = (s) => {\n        for (let i = 0; i < s.length; i++) {\n            wavData.setUint8(index, s.charCodeAt(i));\n            index += 1;\n        }\n    };\n    const writeUint16 = (n) => {\n        wavData.setUint16(index, n, true);\n        index += 2;\n    };\n    const writeInt16 = (n) => {\n        wavData.setInt16(index, n, true);\n        index += 2;\n    };\n    const writeUint32 = (n) => {\n        wavData.setUint32(index, n, true);\n        index += 4;\n    };\n    // Main header.\n    writeString(\"RIFF\");\n    writeUint32(totalSize - 8);\n    writeString(\"WAVE\");\n    // Format chunk.\n    writeString(\"fmt \");\n    writeUint32(16);\n    writeUint16(WAVE_FORMAT_PCM);\n    writeUint16(channelCount);\n    writeUint32(sampleRate);\n    writeUint32(sampleRate * channelCount * bitDepth / 8); // Byte rate.\n    writeUint16(channelCount * bitDepth / 8); // Block align.\n    writeUint16(bitDepth);\n    // Data chunk.\n    writeString(\"data\");\n    writeUint32(samples.length * 2);\n    for (let i = 0; i < samples.length; i++) {\n        writeInt16(samples[i]);\n    }\n    if (index !== totalSize) {\n        throw new Error(\"wrote \" + index + \" but expected \" + totalSize);\n    }\n    return wav;\n}\n","import { BitType } from \"./BitType\";\nimport { Highlight } from \"./Highlight\";\nimport * as Basic from \"./Basic\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { toHexByte } from \"z80-base\";\nimport { drawBraceAndLabel } from \"./Annotations\";\nimport { clearElement, withCommas } from \"./Utils\";\nimport { frameDurationToString, frameToTimestamp } from \"./AudioUtils\";\nimport { writeWavFile } from \"./WavFile\";\nlet gRadioButtonCounter = 1;\n/**\n * Whether the user is selecting whole bytes or audio samples.\n */\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[SelectionMode[\"BYTES\"] = 0] = \"BYTES\";\n    SelectionMode[SelectionMode[\"SAMPLES\"] = 1] = \"SAMPLES\";\n})(SelectionMode || (SelectionMode = {}));\n/**\n * When adjusting the selection, whether changing one of its ends, or creating it from scratch.\n */\nvar SelectionAdjustMode;\n(function (SelectionAdjustMode) {\n    SelectionAdjustMode[SelectionAdjustMode[\"LEFT\"] = 0] = \"LEFT\";\n    SelectionAdjustMode[SelectionAdjustMode[\"CREATE\"] = 1] = \"CREATE\";\n    SelectionAdjustMode[SelectionAdjustMode[\"RIGHT\"] = 2] = \"RIGHT\";\n})(SelectionAdjustMode || (SelectionAdjustMode = {}));\n/**\n * An individual waveform to be displayed.\n */\nclass Waveform {\n    constructor(canvas, infoPanel, samples) {\n        this.canvas = canvas;\n        this.infoPanel = infoPanel;\n        this.samples = samples;\n    }\n}\n/**\n * Displays a list of different waveforms, synchronizing their pan and zoom.\n */\nexport class WaveformDisplay {\n    constructor(sampleRate) {\n        /**\n         * Dispatchers when the user highlights or selects in the canvas.\n         */\n        this.onHighlight = new SimpleEventDispatcher();\n        this.onSelection = new SimpleEventDispatcher();\n        this.onDoneSelecting = new SimpleEventDispatcher();\n        /**\n         * The width of the canvases, in pixels.\n         */\n        this.displayWidth = 0;\n        /**\n         * The zoom level, where 0 means all the way zoomed in and each original\n         * audio sample maps to one column of pixels on the screen; 1 means\n         * zoomed out from that by a factor of two, etc.\n         */\n        this.zoom = 0; // Initialized in zoomToFitAll()\n        /**\n         * The max value that zoom can have.\n         */\n        this.maxZoom = 0;\n        /**\n         * The sample in the middle of the display, in original samples.\n         */\n        this.centerSample = 0; // Initialized in zoomToFitAll()\n        /**\n         * All the waveforms we're displaying, and their canvases.\n         */\n        this.waveforms = [];\n        /**\n         * All the programs represented on these waveforms.\n         */\n        this.programs = [];\n        /**\n         * Listeners of the maxZoom property.\n         */\n        this.onMaxZoom = new SimpleEventDispatcher();\n        /**\n         * Listeners of the zoom property.\n         */\n        this.onZoom = new SimpleEventDispatcher();\n        /**\n         * What the user wants to select.\n         */\n        this.selectionMode = SelectionMode.BYTES;\n        /**\n         * Waveform annotations to draw.\n         */\n        this.waveformAnnotations = [];\n        /**\n         * Handle to the timeout to redraw.\n         */\n        this.drawTimeout = undefined;\n        this.sampleRate = sampleRate;\n    }\n    /**\n     * Add a waveform to display.\n     */\n    addWaveform(canvas, infoPanel, samples) {\n        const displayWidth = canvas.width;\n        if (this.displayWidth === 0) {\n            this.displayWidth = displayWidth;\n        }\n        else if (this.displayWidth !== displayWidth) {\n            throw new Error(\"Widths of the canvases must match\");\n        }\n        // Compute max display level.\n        let newMaxZoom = samples.samplesList.length - 1;\n        if (newMaxZoom !== this.maxZoom) {\n            this.maxZoom = newMaxZoom;\n            this.onMaxZoom.dispatch(newMaxZoom);\n        }\n        this.waveforms.push(new Waveform(canvas, infoPanel, samples));\n        this.configureCanvas(canvas);\n    }\n    /**\n     * Make the canvas and its surrounding elements to display a waveform.\n     */\n    static makeWaveformDisplay(label, samples, parent, waveformDisplay) {\n        let labelElement = document.createElement(\"p\");\n        labelElement.innerText = label;\n        parent.appendChild(labelElement);\n        let container = document.createElement(\"div\");\n        container.style.display = \"flex\";\n        container.style.flexFlow = \"row nowrap\";\n        container.style.justifyContent = \"flex-start\";\n        container.style.alignItems = \"flex-start\";\n        parent.appendChild(container);\n        let canvas = document.createElement(\"canvas\");\n        canvas.classList.add(\"waveform\");\n        canvas.width = 800;\n        canvas.height = 400;\n        container.appendChild(canvas);\n        let infoPanel = document.createElement(\"div\");\n        infoPanel.style.marginLeft = \"30px\";\n        container.appendChild(infoPanel);\n        waveformDisplay.addWaveform(canvas, infoPanel, samples);\n        waveformDisplay.queueDraw();\n    }\n    /**\n     * Add a program to highlight in the waveform.\n     */\n    addProgram(program) {\n        this.programs.push(program);\n    }\n    /**\n     * Add the list of annotations.\n     */\n    addWaveformAnnotations(waveformAnnotations) {\n        this.waveformAnnotations.push(...waveformAnnotations);\n        this.queueDraw();\n    }\n    /**\n     * Add an annotation to draw.\n     */\n    addWaveformAnnotation(waveformAnnotation) {\n        this.waveformAnnotations.push(waveformAnnotation);\n        this.queueDraw();\n    }\n    /**\n     * Update the current highlight.\n     */\n    setHighlight(highlight) {\n        this.startHighlightFrame = undefined;\n        this.endHighlightFrame = undefined;\n        if (highlight !== undefined) {\n            let byteData = highlight.program.byteData[highlight.firstIndex];\n            if (byteData !== undefined) {\n                this.startHighlightFrame = byteData.startFrame;\n                this.endHighlightFrame = byteData.endFrame;\n            }\n            byteData = highlight.program.byteData[highlight.lastIndex];\n            if (byteData !== undefined) {\n                this.endHighlightFrame = byteData.endFrame;\n            }\n        }\n        this.queueDraw();\n    }\n    /**\n     * Update the current highlight.\n     */\n    setSelection(selection) {\n        this.startSelectionFrame = undefined;\n        this.endSelectionFrame = undefined;\n        if (selection !== undefined) {\n            let byteData = selection.program.byteData[selection.firstIndex];\n            if (byteData !== undefined) {\n                this.startSelectionFrame = byteData.startFrame;\n                this.endSelectionFrame = byteData.endFrame;\n            }\n            byteData = selection.program.byteData[selection.lastIndex];\n            if (byteData !== undefined) {\n                this.endSelectionFrame = byteData.endFrame;\n            }\n        }\n        this.draw();\n        this.updateInfoPanels();\n    }\n    /**\n     * Zoom to fit the current selection, if any.\n     */\n    doneSelecting() {\n        if (this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n            this.zoomToFit(this.startSelectionFrame, this.endSelectionFrame);\n        }\n    }\n    /**\n     * Makes a block element to place above a set of waveform displays.\n     */\n    makeControls(showSelectionType) {\n        const controls = document.createElement(\"div\");\n        // Zoom controls.\n        controls.appendChild(this.makeZoomControls());\n        // Instructions.\n        const instructions = document.createElement(\"span\");\n        instructions.innerHTML = \"<b>Shift</b>: Zoom in&nbsp;&nbsp;&nbsp;&nbsp;<b>Alt-Shift</b>: Zoom out&nbsp;&nbsp;&nbsp;&nbsp;<b>Alt</b>: Select\";\n        instructions.style.marginLeft = \"30px\";\n        controls.appendChild(instructions);\n        // Selection type.\n        if (showSelectionType) {\n            const selectionLabel = document.createElement(\"span\");\n            selectionLabel.innerText = \"Select: \";\n            selectionLabel.style.marginLeft = \"30px\";\n            selectionLabel.style.fontWeight = \"bold\";\n            controls.append(selectionLabel);\n            // Unique name for this group of inputs.\n            const name = \"selection-type-radio-name-\" + gRadioButtonCounter;\n            gRadioButtonCounter += 1;\n            // Options for selection mode.\n            let selectionModes = [\n                {\n                    label: \"Bytes\",\n                    selectionMode: SelectionMode.BYTES,\n                    checked: true,\n                },\n                {\n                    label: \"Samples\",\n                    selectionMode: SelectionMode.SAMPLES,\n                    checked: false,\n                },\n            ];\n            for (const { label, selectionMode, checked } of selectionModes) {\n                const labelNode = document.createElement(\"label\");\n                const radioInput = document.createElement(\"input\");\n                radioInput.type = \"radio\";\n                radioInput.name = name;\n                radioInput.checked = checked;\n                radioInput.addEventListener(\"change\", () => this.setSelectionMode(selectionMode));\n                labelNode.appendChild(radioInput);\n                labelNode.append(\" \" + label);\n                controls.appendChild(labelNode);\n            }\n        }\n        return controls;\n    }\n    /**\n     * Sets the selection mode. Does not update the radio buttons.\n     */\n    setSelectionMode(selectionMode) {\n        this.selectionMode = selectionMode;\n        this.draw();\n        this.updateInfoPanels();\n    }\n    /**\n     * Create zoom control elements, bind them to this waveform display, and return them.\n     * These are not guaranteed to be a block element. Caller should warp them in\n     * a div if that's what they want.\n     */\n    makeZoomControls() {\n        const label = document.createElement(\"label\");\n        label.innerText = \"Zoom: \";\n        const input = document.createElement(\"input\");\n        input.type = \"range\";\n        label.appendChild(input);\n        // We want to flip this horizontally, so make the slider's value\n        // the negative of the real zoom.\n        input.min = (-this.maxZoom).toString();\n        input.max = \"0\";\n        this.onMaxZoom.subscribe(maxZoom => input.min = (-maxZoom).toString());\n        this.onZoom.subscribe(zoom => input.value = (-zoom).toString());\n        input.addEventListener(\"input\", () => {\n            this.setZoom(-parseInt(input.value), undefined);\n        });\n        return label;\n    }\n    /**\n     * Configure the mouse and keyboard events in the canvas.\n     */\n    configureCanvas(canvas) {\n        let dragging = false;\n        let dragInitialX = 0;\n        let dragInitialCenterSample = 0;\n        let inCanvas = false;\n        let holdingShift = false;\n        let holdingAlt = false;\n        let selectionStart = undefined;\n        let selectingSamples = false;\n        let selectionAdjustMode = SelectionAdjustMode.CREATE;\n        let lastSeenMouseX = 0;\n        let lastSeenMouseY = 0;\n        const updateCursor = () => {\n            canvas.style.cursor = holdingShift ? (holdingAlt ? \"zoom-out\" : \"zoom-in\")\n                : holdingAlt ? (selectionAdjustMode === SelectionAdjustMode.CREATE ? \"auto\" : \"col-resize\")\n                    : dragging ? \"grabbing\"\n                        : \"grab\";\n        };\n        updateCursor();\n        // See if we're on the edge of a sample selection area.\n        const updateSelectionAdjustMode = () => {\n            selectionAdjustMode = SelectionAdjustMode.CREATE;\n            if (holdingAlt && this.selectionMode === SelectionMode.SAMPLES &&\n                this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                const startX = this.originalFrameToScreenX(this.startSampleSelectionFrame);\n                if (Math.abs(lastSeenMouseX - startX) < 4) {\n                    selectionAdjustMode = SelectionAdjustMode.LEFT;\n                }\n                const endX = this.originalFrameToScreenX(this.endSampleSelectionFrame);\n                if (Math.abs(lastSeenMouseX - endX) < 4) {\n                    selectionAdjustMode = SelectionAdjustMode.RIGHT;\n                }\n            }\n            updateCursor();\n        };\n        // Mouse enter/leave events.\n        canvas.addEventListener(\"mouseenter\", event => {\n            inCanvas = true;\n            holdingAlt = event.altKey;\n            holdingShift = event.shiftKey;\n            updateSelectionAdjustMode();\n            updateCursor();\n        });\n        canvas.addEventListener(\"mouseleave\", () => {\n            inCanvas = false;\n        });\n        // Mouse click events.\n        canvas.addEventListener(\"mousedown\", event => {\n            if (holdingShift) {\n                // Zoom.\n                if (holdingAlt) {\n                    // Zoom out.\n                    this.setZoom(this.zoom + 1, event.offsetX);\n                }\n                else {\n                    // Zoom in.\n                    this.setZoom(this.zoom - 1, event.offsetX);\n                }\n            }\n            else if (holdingAlt) {\n                // Start selecting.\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                if (this.selectionMode === SelectionMode.BYTES) {\n                    // Selecting bytes.\n                    const highlight = this.highlightAt(frame);\n                    if (highlight !== undefined) {\n                        selectionStart = highlight;\n                        this.onSelection.dispatch(highlight);\n                    }\n                }\n                else {\n                    // Selecting samples.\n                    switch (selectionAdjustMode) {\n                        case SelectionAdjustMode.LEFT:\n                            this.startSampleSelectionFrame = this.endSampleSelectionFrame;\n                            break;\n                        case SelectionAdjustMode.CREATE:\n                            this.startSampleSelectionFrame = frame;\n                            break;\n                        case SelectionAdjustMode.RIGHT:\n                            // Nothing.\n                            break;\n                    }\n                    this.endSampleSelectionFrame = frame;\n                    selectingSamples = true;\n                    this.draw();\n                }\n                this.updateInfoPanels();\n            }\n            else {\n                // Start pan.\n                dragging = true;\n                dragInitialX = event.offsetX;\n                dragInitialCenterSample = this.centerSample;\n                updateCursor();\n            }\n        });\n        window.addEventListener(\"mouseup\", () => {\n            if (dragging) {\n                dragging = false;\n                updateCursor();\n            }\n            else if (selectionStart !== undefined) {\n                this.onDoneSelecting.dispatch(this);\n                this.updateInfoPanels();\n                selectionStart = undefined;\n            }\n            else if (selectingSamples) {\n                // Done selecting samples.\n                if (this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                    if (this.startSampleSelectionFrame === this.endSampleSelectionFrame) {\n                        // Deselect.\n                        this.startSampleSelectionFrame = undefined;\n                        this.endSampleSelectionFrame = undefined;\n                    }\n                    else if (this.startSampleSelectionFrame > this.endSampleSelectionFrame) {\n                        // Put in the right order.\n                        const tmp = this.startSampleSelectionFrame;\n                        this.startSampleSelectionFrame = this.endSampleSelectionFrame;\n                        this.endSampleSelectionFrame = tmp;\n                    }\n                }\n                selectingSamples = false;\n                this.draw();\n                this.updateInfoPanels();\n            }\n        });\n        canvas.addEventListener(\"mousemove\", event => {\n            lastSeenMouseX = event.offsetX;\n            lastSeenMouseY = event.offsetY;\n            if (dragging) {\n                const dx = event.offsetX - dragInitialX;\n                const mag = Math.pow(2, this.zoom);\n                this.centerSample = Math.round(dragInitialCenterSample - dx * mag);\n                this.draw();\n            }\n            else if (selectionStart !== undefined) {\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                const highlight = this.highlightAt(frame);\n                if (highlight !== undefined && highlight.program === selectionStart.program) {\n                    this.onSelection.dispatch(new Highlight(highlight.program, selectionStart.firstIndex, highlight.lastIndex));\n                }\n            }\n            else if (selectingSamples) {\n                this.endSampleSelectionFrame = this.screenXToOriginalFrame(event.offsetX);\n                this.draw();\n                this.updateInfoPanels();\n            }\n            else if (holdingAlt) {\n                const frame = this.screenXToOriginalFrame(event.offsetX);\n                const highlight = this.highlightAt(frame);\n                this.onHighlight.dispatch(highlight);\n                updateSelectionAdjustMode();\n            }\n        });\n        // Keyboard events.\n        document.addEventListener(\"keydown\", event => {\n            if (inCanvas) {\n                if (event.key === \"Alt\") {\n                    holdingAlt = true;\n                    updateSelectionAdjustMode();\n                    updateCursor();\n                }\n                if (event.key === \"Shift\") {\n                    holdingShift = true;\n                    updateCursor();\n                }\n            }\n        });\n        document.addEventListener(\"keyup\", event => {\n            if (inCanvas) {\n                if (event.key === \"Alt\") {\n                    holdingAlt = false;\n                    updateSelectionAdjustMode();\n                    updateCursor();\n                }\n                if (event.key === \"Shift\") {\n                    holdingShift = false;\n                    updateCursor();\n                }\n            }\n        });\n    }\n    /**\n     * Queue a redraw to happen as soon as possible. This is useful if many of these might be called\n     * synchronously -- they will be collapsed.\n     */\n    queueDraw() {\n        this.cancelQueuedDraw();\n        this.drawTimeout = window.setTimeout(() => this.draw(), 0);\n    }\n    /**\n     * Cancel any queued draw.\n     */\n    cancelQueuedDraw() {\n        if (this.drawTimeout !== undefined) {\n            window.clearTimeout(this.drawTimeout);\n            this.drawTimeout = undefined;\n        }\n    }\n    /**\n     * Draw all the waveforms.\n     */\n    draw() {\n        this.cancelQueuedDraw();\n        for (const waveform of this.waveforms) {\n            this.drawInCanvas(waveform.canvas, waveform.samples);\n        }\n    }\n    /**\n     * Compute fit level to fit the specified number of samples.\n     *\n     * @param sampleCount number of samples we want to display.\n     */\n    computeFitLevel(sampleCount) {\n        let zoom = Math.ceil(Math.log2(sampleCount / this.displayWidth));\n        zoom = Math.max(zoom, 0);\n        zoom = Math.min(zoom, sampleCount - 1);\n        return zoom;\n    }\n    /**\n     * @param {HTMLCanvasElement} canvas\n     * @param {DisplaySamples} displaySamples\n     */\n    drawInCanvas(canvas, displaySamples) {\n        const ctx = canvas.getContext(\"2d\");\n        const width = canvas.width;\n        const height = canvas.height;\n        // Get the theme variables.\n        canvas.classList.add(\"dark-mode\");\n        const style = getComputedStyle(canvas);\n        const backgroundColor = style.getPropertyValue(\"--background\");\n        const selectionColor = style.getPropertyValue(\"--background-highlights\");\n        const highlightColor = \"rgba(0, 0, 0, 0.2)\";\n        const braceColor = style.getPropertyValue(\"--foreground-secondary\");\n        const labelColor = style.getPropertyValue(\"--foreground\");\n        const waveformColor = style.getPropertyValue(\"--blue\");\n        const startColor = style.getPropertyValue(\"--cyan\");\n        const badColor = style.getPropertyValue(\"--red\");\n        // Background.\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(0, 0, width, height);\n        const samplesList = displaySamples.samplesList;\n        const samples = samplesList[this.zoom];\n        const mag = Math.pow(2, this.zoom);\n        const centerSample = Math.floor(this.centerSample / mag);\n        // From zoom space sample to X.\n        const frameToX = (i) => Math.floor(width / 2) + (i - centerSample);\n        // Compute viewing window in zoom space.\n        const firstSample = Math.max(centerSample - Math.floor(width / 2), 0);\n        const lastSample = Math.min(centerSample + width - 1, samples.length - 1);\n        // Compute viewing window in original space.\n        const firstOrigSample = Math.floor(firstSample * mag);\n        const lastOrigSample = Math.ceil(lastSample * mag);\n        // Whether we're zoomed in enough to draw and line and individual bits.\n        const drawingLine = this.zoom < 3;\n        if (this.selectionMode === SelectionMode.BYTES) {\n            // Selection.\n            if (this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n                ctx.fillStyle = selectionColor;\n                const x1 = frameToX(this.startSelectionFrame / mag);\n                const x2 = frameToX(this.endSelectionFrame / mag);\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n            }\n            // Highlight.\n            if (this.startHighlightFrame !== undefined && this.endHighlightFrame !== undefined) {\n                ctx.fillStyle = highlightColor;\n                const x1 = frameToX(this.startHighlightFrame / mag);\n                const x2 = frameToX(this.endHighlightFrame / mag);\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n            }\n        }\n        else {\n            // Selecting samples.\n            if (this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n                ctx.fillStyle = selectionColor;\n                let x1 = frameToX(this.startSampleSelectionFrame / mag);\n                let x2 = frameToX(this.endSampleSelectionFrame / mag);\n                if (x2 < x1) {\n                    // Might be backwards while dragging.\n                    const tmp = x1;\n                    x1 = x2;\n                    x2 = tmp;\n                }\n                ctx.fillRect(x1, 0, Math.max(x2 - x1, 1), height);\n                // Highlight center of selection.\n                const midX = (x1 + x2) / 2;\n                ctx.strokeStyle = \"rgba(255, 255, 255, 0.2)\";\n                ctx.beginPath();\n                ctx.moveTo(midX, 0);\n                ctx.lineTo(midX, height);\n                ctx.stroke();\n            }\n        }\n        // Y=0 axis.\n        ctx.strokeStyle = selectionColor;\n        ctx.beginPath();\n        ctx.moveTo(0, height / 2);\n        ctx.lineTo(width, height / 2);\n        ctx.stroke();\n        // Programs and bits.\n        for (const program of this.programs) {\n            if (drawingLine) {\n                // Highlight bits.\n                for (const bitInfo of program.bitData) {\n                    if (bitInfo.endFrame >= firstOrigSample && bitInfo.startFrame <= lastOrigSample) {\n                        const x1 = frameToX(bitInfo.startFrame / mag);\n                        const x2 = frameToX(bitInfo.endFrame / mag);\n                        let bitBraceColor;\n                        let label;\n                        let bitLabelColor;\n                        switch (bitInfo.bitType) {\n                            case BitType.ZERO:\n                                bitBraceColor = braceColor;\n                                bitLabelColor = labelColor;\n                                label = \"0\";\n                                break;\n                            case BitType.ONE:\n                                bitBraceColor = braceColor;\n                                bitLabelColor = labelColor;\n                                label = \"1\";\n                                break;\n                            case BitType.START:\n                                bitBraceColor = startColor;\n                                bitLabelColor = startColor;\n                                label = \"START\";\n                                break;\n                            case BitType.BAD:\n                                bitBraceColor = badColor;\n                                bitLabelColor = badColor;\n                                label = \"BAD\";\n                                break;\n                        }\n                        drawBraceAndLabel(ctx, height, x1, x2, bitBraceColor, label, bitLabelColor, true);\n                    }\n                }\n            }\n            else if (this.zoom < 5) {\n                // Highlight annotations, if we have them.\n                if (program.annotations !== undefined) {\n                    for (const annotation of program.annotations) {\n                        let startFrame = undefined;\n                        let endFrame = undefined;\n                        for (let i = annotation.firstIndex; i <= annotation.lastIndex; i++) {\n                            const byteInfo = program.byteData[i];\n                            if (byteInfo !== undefined) {\n                                if (startFrame === undefined || endFrame === undefined) {\n                                    startFrame = byteInfo.startFrame;\n                                    endFrame = byteInfo.endFrame;\n                                }\n                                else {\n                                    startFrame = Math.min(startFrame, byteInfo.startFrame);\n                                    endFrame = Math.max(endFrame, byteInfo.endFrame);\n                                }\n                            }\n                        }\n                        if (endFrame !== undefined && startFrame !== undefined &&\n                            endFrame >= firstOrigSample && startFrame <= lastOrigSample) {\n                            const x1 = frameToX(startFrame / mag);\n                            const x2 = frameToX(endFrame / mag);\n                            drawBraceAndLabel(ctx, height, x1, x2, braceColor, annotation.text, labelColor, true);\n                        }\n                    }\n                }\n                else {\n                    // Highlight bytes.\n                    for (const byteInfo of program.byteData) {\n                        if (byteInfo.endFrame >= firstOrigSample && byteInfo.startFrame <= lastOrigSample) {\n                            const x1 = frameToX(byteInfo.startFrame / mag);\n                            const x2 = frameToX(byteInfo.endFrame / mag);\n                            let byteValue = byteInfo.value;\n                            const basicToken = Basic.getToken(byteValue);\n                            const label = byteValue < 32 ? \"^\" + String.fromCodePoint(byteValue + 64)\n                                : byteValue === 32 ? '\\u2423' // Open box to represent space.\n                                    : byteValue < 128 ? String.fromCodePoint(byteValue)\n                                        : program.isBasicProgram() && basicToken !== undefined ? basicToken\n                                            : toHexByte(byteValue);\n                            drawBraceAndLabel(ctx, height, x1, x2, braceColor, label, labelColor, true);\n                        }\n                    }\n                }\n            }\n            else {\n                // Highlight the whole program.\n                const x1 = frameToX(program.startFrame / mag);\n                const x2 = frameToX(program.endFrame / mag);\n                drawBraceAndLabel(ctx, height, x1, x2, braceColor, program.getShortLabel(), labelColor, true);\n            }\n        }\n        // Draw waveform.\n        ctx.strokeStyle = waveformColor;\n        if (drawingLine) {\n            ctx.beginPath();\n        }\n        for (let i = firstSample; i <= lastSample; i++) {\n            const value = samples[i];\n            const x = frameToX(i);\n            const y = value * height / 65536;\n            if (drawingLine) {\n                if (i === firstSample) {\n                    ctx.moveTo(x, height / 2 - y);\n                }\n                else {\n                    ctx.lineTo(x, height / 2 - y);\n                }\n            }\n            else {\n                ctx.beginPath();\n                ctx.moveTo(x, height / 2 - y);\n                ctx.lineTo(x, height / 2 + y);\n                ctx.stroke();\n            }\n        }\n        if (drawingLine) {\n            ctx.stroke();\n        }\n        // Draw waveform annotations.\n        const annotationContext = {\n            width: width,\n            height: height,\n            frameToX(frame) {\n                return frameToX(frame / mag);\n            },\n            valueToY(value) {\n                return height / 2 - value * height / 65536;\n            },\n            context: ctx,\n            highlightColor: badColor,\n            foregroundColor: style.getPropertyValue(\"--foreground\"),\n            secondaryForegroundColor: style.getPropertyValue(\"--foreground-secondary\"),\n        };\n        for (const waveformAnnotation of this.waveformAnnotations) {\n            waveformAnnotation.draw(annotationContext);\n        }\n    }\n    /**\n     * Set the zoom level to a particular value.\n     *\n     * @param zoom new zoom level.\n     * @param screenX pixel to keep at the same place, or undefined to mean the horizontal center.\n     */\n    setZoom(zoom, screenX) {\n        if (screenX === undefined) {\n            screenX = Math.round(this.displayWidth / 2);\n        }\n        const newZoom = Math.min(Math.max(0, zoom), this.maxZoom);\n        if (newZoom !== this.zoom) {\n            const frame = this.screenXToOriginalFrame(screenX);\n            this.zoom = newZoom;\n            this.centerSample = frame - Math.round((screenX - this.displayWidth / 2) * Math.pow(2, newZoom));\n            this.onZoom.dispatch(newZoom);\n            this.draw();\n        }\n    }\n    /**\n     * Zoom to fit a particular bit.\n     */\n    zoomToBitData(bitData) {\n        // Show a bit after a many bits before.\n        const startFrame = bitData.startFrame - 1500;\n        const endFrame = bitData.endFrame + 300;\n        this.zoomToFit(startFrame, endFrame);\n    }\n    /**\n     * Zoom to fit a range of samples.\n     */\n    zoomToFit(startFrame, endFrame) {\n        const sampleCount = endFrame - startFrame;\n        // Visually centered sample (in level 0).\n        this.centerSample = Math.floor((startFrame + endFrame) / 2);\n        // Find appropriate zoom.\n        this.setZoom(this.computeFitLevel(sampleCount), undefined);\n        this.draw();\n    }\n    /**\n     * Zoom to fit all samples.\n     */\n    zoomToFitAll() {\n        if (this.waveforms.length > 0 && this.waveforms[0].samples !== undefined) {\n            this.zoomToFit(0, this.waveforms[0].samples.samplesList[0].length);\n        }\n    }\n    /**\n     * Convert a screen (pixel) X location to the frame number in the original waveform.\n     */\n    screenXToOriginalFrame(screenX) {\n        const mag = Math.pow(2, this.zoom);\n        // Offset in pixels from center of canvas.\n        const pixelOffset = screenX - Math.floor(this.displayWidth / 2);\n        // Convert to frame.\n        let frame = this.centerSample + pixelOffset * mag;\n        // Clamp at end.\n        if (this.waveforms.length > 0) {\n            const waveform = this.waveforms[0];\n            if (waveform.samples.samplesList.length > 0) {\n                const maxFrame = waveform.samples.samplesList[0].length - 1;\n                frame = Math.min(frame, maxFrame);\n            }\n        }\n        // Clamp at start.\n        frame = Math.max(frame, 0);\n        return frame;\n    }\n    /**\n     * Convert an original (unzoomed) sample to its X coordinate. Does not clamp to display range.\n     */\n    originalFrameToScreenX(frame) {\n        const mag = Math.pow(2, this.zoom);\n        const centerSample = Math.floor(this.centerSample / mag);\n        return Math.floor(this.displayWidth / 2) + (frame / mag - centerSample);\n    }\n    /**\n     * Return a highlight for the specified frame (in original samples), or undefined\n     * if not found.\n     */\n    highlightAt(frame) {\n        for (const program of this.programs) {\n            for (let byteIndex = 0; byteIndex < program.byteData.length; byteIndex++) {\n                const byteData = program.byteData[byteIndex];\n                if (frame >= byteData.startFrame && frame <= byteData.endFrame) {\n                    return new Highlight(program, byteIndex);\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Update the statistics displayed on the info panels of each waveform.\n     */\n    updateInfoPanels() {\n        let startFrame = undefined;\n        let endFrame = undefined;\n        if (this.selectionMode === SelectionMode.BYTES && this.startSelectionFrame !== undefined && this.endSelectionFrame !== undefined) {\n            // Swap around.\n            startFrame = Math.min(this.startSelectionFrame, this.endSelectionFrame);\n            endFrame = Math.max(this.startSelectionFrame, this.endSelectionFrame);\n        }\n        else if (this.selectionMode === SelectionMode.SAMPLES && this.startSampleSelectionFrame !== undefined && this.endSampleSelectionFrame !== undefined) {\n            // Swap around.\n            startFrame = Math.min(this.startSampleSelectionFrame, this.endSampleSelectionFrame);\n            endFrame = Math.max(this.startSampleSelectionFrame, this.endSampleSelectionFrame);\n        }\n        if (startFrame !== undefined && endFrame !== undefined) {\n            for (const waveform of this.waveforms) {\n                const infoPanel = waveform.infoPanel;\n                const duration = endFrame - startFrame;\n                let minValue = undefined;\n                let maxValue = undefined;\n                let samples = waveform.samples.samplesList[0];\n                for (let frame = startFrame; frame <= endFrame; frame++) {\n                    const value = samples[frame];\n                    if (minValue === undefined || value < minValue) {\n                        minValue = value;\n                    }\n                    if (maxValue === undefined || value > maxValue) {\n                        maxValue = value;\n                    }\n                }\n                const parts = [];\n                parts.push(\"<b>Start frame:</b> \" + frameToTimestamp(startFrame, this.sampleRate) + \"<br>\");\n                parts.push(\"<b>End frame:</b> \" + frameToTimestamp(endFrame, this.sampleRate) + \"<br>\");\n                parts.push(\"<b>Duration:</b> \" + frameDurationToString(duration, this.sampleRate) + \"<br>\");\n                if (maxValue !== undefined) {\n                    parts.push(\"<b>Maximum value:</b> \" + withCommas(maxValue) + \"<br>\");\n                }\n                if (minValue !== undefined) {\n                    parts.push(\"<b>Minimum value:</b> \" + withCommas(minValue) + \"<br>\");\n                }\n                infoPanel.innerHTML = parts.join(\"\");\n                // Button to save WAV file of selection.\n                const saveButton = document.createElement(\"button\");\n                saveButton.innerText = \"Save WAV File\";\n                saveButton.classList.add(\"nice_button\");\n                saveButton.style.marginTop = \"20px\";\n                const constStartFrame = startFrame;\n                const constEndFrame = endFrame;\n                saveButton.addEventListener(\"click\", () => this.saveWavFile(waveform.samples.samplesList[0], constStartFrame, constEndFrame));\n                infoPanel.appendChild(saveButton);\n            }\n        }\n        else {\n            // No selection, erase panel.\n            for (const waveform of this.waveforms) {\n                clearElement(waveform.infoPanel);\n            }\n        }\n    }\n    /**\n     * Create a WAV file and auto-download it to the user.\n     */\n    saveWavFile(samples, startFrame, endFrame) {\n        const wav = writeWavFile(samples.subarray(startFrame, endFrame + 1), this.sampleRate);\n        const a = document.createElement(\"a\");\n        const blob = new Blob([wav], { type: \"audio/wav\" });\n        a.href = window.URL.createObjectURL(blob);\n        a.download = \"clip.wav\";\n        a.click();\n    }\n}\n","// Tools for decoding EDTASM programs.\n//\n// http://www.trs-80.com/wordpress/zaps-patches-pokes-tips/edtasm-file-format/\nimport jss from './Jss';\nimport { Highlightable } from \"./Highlighter\";\n// Stylesheet.\nconst BACKGROUND_COLOR = \"#1E1E1E\";\nconst STYLE = {\n    error: {\n        color: \"#aa0000\",\n        \"&$highlighted\": {\n            backgroundColor: \"#aa0000\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    lineNumber: {\n        color: \"#858585\",\n        \"&$highlighted\": {\n            backgroundColor: \"#858585\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    regular: {\n        color: \"#9CDCFE\",\n        \"&$highlighted\": {\n            backgroundColor: \"#9CDCFE\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    comment: {\n        color: \"#6A9955\",\n        \"&$highlighted\": {\n            backgroundColor: \"#6A9955\",\n            color: BACKGROUND_COLOR,\n        },\n    },\n    selected: {\n        backgroundColor: \"#555555\",\n    },\n    highlighted: {\n    // Empty style that's referenced above as $highlighted.\n    },\n};\nconst sheet = jss.createStyleSheet(STYLE);\nexport const highlightClassName = sheet.classes.highlighted;\nexport const selectClassName = sheet.classes.selected;\n/**\n * TODO share this code with Basic.ts.\n *\n * @param out the enclosing element to add to.\n * @param text the text to add.\n * @param className the name of the class for the item.\n * @return the new element.\n */\nfunction add(out, text, className) {\n    const e = document.createElement(\"span\");\n    e.innerText = text;\n    e.classList.add(className);\n    out.appendChild(e);\n    return e;\n}\n/**\n * Decoded the program into the DIV, returning the program name and array of created elements.\n */\nexport function decodeEdtasm(bytes, out) {\n    sheet.attach();\n    const classes = sheet.classes;\n    const elements = [];\n    let e;\n    // Check magic.\n    if (bytes.length < 7 || bytes[0] !== 0xD3) {\n        add(out, \"EDTASM: missing magic -- not a EDTASM file.\", classes.error);\n        return [\"Error\", elements];\n    }\n    // Read name of program.\n    const name = (String.fromCodePoint(bytes[1]) +\n        String.fromCodePoint(bytes[2]) +\n        String.fromCodePoint(bytes[3]) +\n        String.fromCodePoint(bytes[4]) +\n        String.fromCodePoint(bytes[5]) +\n        String.fromCodePoint(bytes[6])).trim();\n    let i = 7;\n    while (true) {\n        if (bytes.length - i < 5) {\n            // End of program.\n            return [name, elements];\n        }\n        const line = document.createElement(\"div\");\n        // Read line number.\n        for (let j = 0; j < 5; j++) {\n            e = add(line, (bytes[i] - 0xB0).toString(), classes.lineNumber);\n            elements.push(new Highlightable(i, i, e));\n            i++;\n        }\n        // Parse line.\n        let pos = 0;\n        let className = classes.regular;\n        while (i < bytes.length && bytes[i] != 0x0D && bytes[i] !== 0x0A && bytes[i] !== 0x1A) {\n            let text;\n            if (bytes[i] === 0x09) {\n                // Tab.\n                text = \"\";\n                do {\n                    text += \" \";\n                    pos++;\n                } while (pos % 8 !== 0);\n            }\n            else {\n                // Non-tab.\n                text = String.fromCodePoint(bytes[i]);\n                if (text === \";\") {\n                    // Semicolon to end of line is comment.\n                    className = classes.comment;\n                }\n                pos++;\n            }\n            e = add(line, text, className);\n            elements.push(new Highlightable(i, i, e));\n            i++;\n        }\n        // Skip EOL.\n        while (i < bytes.length && (bytes[i] === 0x0D || bytes[i] === 0x0A)) {\n            i++;\n        }\n        out.appendChild(line);\n    }\n}\n","import { frameToTimestamp } from \"./AudioUtils\";\nimport * as Basic from \"./Basic\";\nimport * as BasicRender from \"./BasicRender\";\nimport * as SystemProgramRender from \"./SystemProgramRender\";\nimport * as Hexdump from \"./Hexdump\";\nimport { Program } from \"./Program\";\nimport { Tape } from \"./Tape\";\nimport { Cassette, ControlPanel, CanvasScreen, ProgressBar, Trs80, SettingsPanel, PanelType } from \"trs80-emulator\";\nimport { WaveformDisplay } from \"./WaveformDisplay\";\nimport * as Edtasm from \"./Edtasm\";\nimport { BitType } from \"./BitType\";\nimport { SimpleEventDispatcher } from \"strongly-typed-events\";\nimport { clearElement } from \"./Utils\";\nimport { SystemProgram } from \"./SystemProgram\";\nimport { Highlighter } from \"./Highlighter\";\n/**\n * Generic cassette that reads from a Int16Array.\n */\nclass Int16Cassette extends Cassette {\n    constructor(samples, sampleRate) {\n        super();\n        this.frame = 0;\n        this.motorOn = false;\n        this.rewinding = false;\n        this.samples = samples;\n        this.samplesPerSecond = sampleRate;\n    }\n    rewind() {\n        if (this.progressBar === undefined) {\n            this.frame = 0;\n        }\n        else {\n            this.rewinding = true;\n            this.updateProgressBarVisibility();\n            const updateRewind = () => {\n                var _a;\n                if (this.frame > 0) {\n                    this.frame = Math.max(0, Math.round(this.frame - this.samples.length / 30));\n                    (_a = this.progressBar) === null || _a === void 0 ? void 0 : _a.setValue(this.frame);\n                    window.requestAnimationFrame(updateRewind);\n                }\n                else {\n                    this.rewinding = false;\n                    this.updateProgressBarVisibility();\n                }\n            };\n            // Wait for progress bar to become visible.\n            setTimeout(updateRewind, 150);\n        }\n    }\n    setProgressBar(progressBar) {\n        this.progressBar = progressBar;\n        this.progressBar.setMaxValue(this.samples.length);\n    }\n    onMotorStart() {\n        this.motorOn = true;\n        this.updateProgressBarVisibility();\n    }\n    readSample() {\n        if (this.rewinding) {\n            // Can't read while rewinding.\n            return 0;\n        }\n        else {\n            if (this.frame % this.samplesPerSecond === 0) {\n                console.log(\"Reading tape at \" + frameToTimestamp(this.frame, this.samplesPerSecond));\n            }\n            if (this.progressBar !== undefined &&\n                (this.frame % Math.floor(this.samplesPerSecond / 10) === 0 ||\n                    this.frame == this.samples.length - 1)) {\n                this.progressBar.setValue(this.frame);\n            }\n            return this.frame < this.samples.length ? this.samples[this.frame++] / 32768 : 0;\n        }\n    }\n    onMotorStop() {\n        this.motorOn = false;\n        this.updateProgressBarVisibility();\n    }\n    updateProgressBarVisibility() {\n        if (this.progressBar !== undefined) {\n            if (this.motorOn || this.rewinding) {\n                this.progressBar.show();\n            }\n            else {\n                this.progressBar.hide();\n            }\n        }\n    }\n}\n/**\n * Implementation of Cassette that reads from our displayed data.\n */\nclass TapeCassette extends Int16Cassette {\n    constructor(tape, program) {\n        const samples = tape.originalSamples.samplesList[0];\n        // Start one second before the official program start, so that the machine\n        // can detect the header.\n        const begin = program === undefined ? 0 : Math.max(0, program.startFrame - tape.sampleRate);\n        // Go until one second after the detected end of our program.\n        const end = program === undefined ? samples.length : Math.min(samples.length, program.endFrame + tape.sampleRate);\n        super(samples.subarray(begin, end), tape.sampleRate);\n    }\n}\n/**\n * Implementation of Cassette that reads from our high-speed reconstruction.\n */\nclass ReconstructedCassette extends Int16Cassette {\n    constructor(samples, sampleRate) {\n        super(samples.samplesList[0], sampleRate);\n    }\n}\n/**\n * Class that keeps track of various information about a pane.\n */\nclass Pane {\n    constructor(element) {\n        this.element = element;\n    }\n}\n/**\n * UI for browsing a tape interactively.\n */\nexport class TapeBrowser {\n    constructor(tape, waveforms, originalCanvas, filteredCanvas, lowSpeedCanvas, tapeContents, topData) {\n        /**\n         * All the panes we created in the upper-right (program, etc.).\n         */\n        this.panes = [];\n        /**\n         * Dispatcher for highlight property.\n         */\n        this.onHighlight = new SimpleEventDispatcher();\n        /**\n         * Dispatcher for selection property.\n         */\n        this.onSelection = new SimpleEventDispatcher();\n        /**\n         * Dispatcher for the selection being done. Value is the source of the selecting process.\n         */\n        this.onDoneSelecting = new SimpleEventDispatcher();\n        this.tape = tape;\n        this.waveforms = waveforms;\n        this.tapeContents = tapeContents;\n        this.topData = topData;\n        this.originalWaveformDisplay = new WaveformDisplay(tape.sampleRate);\n        clearElement(tapeContents);\n        clearElement(topData);\n        this.makeOriginalSamplesWaveforms(waveforms);\n        this.tape.programs.forEach(program => this.originalWaveformDisplay.addProgram(program));\n        this.originalWaveformDisplay.draw();\n        // Update left-side panel.\n        this.updateTapeContents();\n    }\n    /**\n     * Update the highlighted byte.\n     */\n    setHighlight(highlight) {\n        this.highlight = highlight;\n        this.onHighlight.dispatch(this.highlight);\n    }\n    /**\n     * Update the selected byte.\n     */\n    setSelection(selection) {\n        this.selection = selection;\n        this.onSelection.dispatch(this.selection);\n    }\n    /**\n     * Called when the user has finished selecting part of the data (releases the mouse button).\n     */\n    doneSelecting(source) {\n        this.onDoneSelecting.dispatch(source);\n    }\n    /**\n     * Fill the parent with the labels and canvases to display the specified waveforms\n     * and their labels.\n     */\n    makeWaveforms(parent, waveformDisplay, showSelectionType, sampleSets) {\n        clearElement(parent);\n        parent.appendChild(waveformDisplay.makeControls(showSelectionType));\n        for (const sampleSet of sampleSets) {\n            WaveformDisplay.makeWaveformDisplay(sampleSet.label, sampleSet.samples, parent, waveformDisplay);\n        }\n        this.onHighlight.subscribe(highlight => waveformDisplay.setHighlight(highlight));\n        this.onSelection.subscribe(selection => waveformDisplay.setSelection(selection));\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== waveformDisplay) {\n                waveformDisplay.doneSelecting();\n            }\n        });\n        waveformDisplay.onHighlight.subscribe(highlight => this.setHighlight(highlight));\n        waveformDisplay.onSelection.subscribe(selection => this.setSelection(selection));\n        waveformDisplay.onDoneSelecting.subscribe(source => this.doneSelecting(source));\n        waveformDisplay.zoomToFitAll();\n        waveformDisplay.queueDraw();\n    }\n    /**\n     * Make the lower-right pane of original waveforms.\n     */\n    makeOriginalSamplesWaveforms(waveforms) {\n        this.originalWaveformDisplay.addWaveformAnnotations(this.tape.waveformAnnotations);\n        this.makeWaveforms(waveforms, this.originalWaveformDisplay, true, [\n            {\n                label: \"Original waveform:\",\n                samples: this.tape.originalSamples,\n            },\n            {\n                label: \"High-pass filtered to get rid of DC:\",\n                samples: this.tape.filteredSamples,\n            },\n            {\n                label: \"Pre-processed for low-speed decoding:\",\n                samples: this.tape.lowSpeedSamples,\n            },\n        ]);\n    }\n    /**\n     * Make pane of metadata for a program.\n     */\n    makeMetadataPane(program, basicPane, systemPane, edtasmPane, onProgramClick) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"metadata\");\n        div.style.display = \"flex\";\n        const textInfoDiv = document.createElement(\"div\");\n        div.appendChild(textInfoDiv);\n        const h1 = document.createElement(\"h1\");\n        h1.innerText = program instanceof Program\n            ? \"Track \" + program.trackNumber + \", copy \" + program.copyNumber\n            : \"Whole Tape\";\n        textInfoDiv.appendChild(h1);\n        const table = document.createElement(\"table\");\n        textInfoDiv.appendChild(table);\n        // Add entry with any data cell for value. Returns the key element.\n        const addKeyElement = (key, valueElement) => {\n            const row = document.createElement(\"tr\");\n            const keyElement = document.createElement(\"td\");\n            keyElement.classList.add(\"key\");\n            keyElement.innerText = key + \":\";\n            row.appendChild(keyElement);\n            row.appendChild(valueElement);\n            table.appendChild(row);\n            return keyElement;\n        };\n        // Add entry with text (possibly clickable) for value.\n        const addKeyValue = (key, value, click) => {\n            const valueElement = document.createElement(\"td\");\n            valueElement.classList.add(\"value\");\n            valueElement.innerText = value;\n            if (click !== undefined) {\n                valueElement.classList.add(\"clickable\");\n                valueElement.addEventListener(\"click\", click);\n            }\n            addKeyElement(key, valueElement);\n        };\n        const addKeyValues = (key, values, click) => {\n            const valuesElement = document.createElement(\"td\");\n            valuesElement.classList.add(\"value\");\n            for (const value of values) {\n                const valueElement = document.createElement(\"span\");\n                valueElement.innerText = value;\n                if (click !== undefined) {\n                    valueElement.classList.add(\"clickable\");\n                    valueElement.addEventListener(\"click\", () => click(value));\n                }\n                valuesElement.appendChild(valueElement);\n            }\n            addKeyElement(key, valuesElement);\n        };\n        if (program instanceof Program) {\n            addKeyValue(\"Decoder\", program.decoder.getName());\n        }\n        const startFrame = program instanceof Program ? program.startFrame : 0;\n        const endFrame = program instanceof Program ? program.endFrame : program.originalSamples.samplesList[0].length;\n        addKeyValue(\"Start time\", frameToTimestamp(startFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToFit(startFrame - 100, startFrame + 100));\n        addKeyValue(\"End time\", frameToTimestamp(endFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToFit(endFrame - 100, endFrame + 100));\n        addKeyValue(\"Duration\", frameToTimestamp(endFrame - startFrame, this.tape.sampleRate, true), () => this.originalWaveformDisplay.zoomToFit(startFrame, endFrame));\n        if (program instanceof Program) {\n            addKeyValues(\"Download\", [\".BIN\", \".CAS\"], (value) => {\n                // Download binary.\n                const a = document.createElement(\"a\");\n                const contents = value === \".BIN\" ? program.binary : program.asCasFile();\n                const blob = new Blob([contents], { type: \"application/octet-stream\" });\n                a.href = window.URL.createObjectURL(blob);\n                a.download = program.getShortLabel().replace(\" \", \"-\") + value.toLowerCase();\n                a.click();\n            });\n            if (basicPane !== undefined) {\n                addKeyValue(\"Type\", \"Basic program\", () => this.showPane(basicPane));\n            }\n            else if (systemPane !== undefined) {\n                addKeyValue(\"Type\", \"System program\" + (systemPane.programName ? \" (\" + systemPane.programName + \")\" : \"\"), () => this.showPane(systemPane));\n            }\n            else if (edtasmPane !== undefined) {\n                addKeyValue(\"Type\", \"Assembly program\" + (edtasmPane.programName ? \" (\" + edtasmPane.programName + \")\" : \"\"), () => this.showPane(edtasmPane));\n            }\n            else {\n                addKeyValue(\"Type\", \"Unknown\");\n            }\n        }\n        // Add editable fields.\n        if (program instanceof Program) {\n            const td = document.createElement(\"td\");\n            td.classList.add(\"value\");\n            const input = document.createElement(\"input\");\n            input.type = \"text\";\n            input.classList.add(\"name\");\n            program.onName.subscribe(name => input.value = name);\n            input.value = program.name;\n            // Spec says \"off\", but Chrome ignores that, so use \"chrome-off\".\n            input.autocomplete = \"chrome-off\";\n            if (program instanceof Tape) {\n                input.disabled = true;\n            }\n            td.appendChild(input);\n            addKeyElement(\"Name\", td);\n            input.addEventListener(\"input\", event => {\n                program.setName(input.value);\n                this.tape.saveUserData();\n            });\n        }\n        {\n            // Show note.\n            const td = document.createElement(\"td\");\n            td.classList.add(\"value\");\n            const input = document.createElement(\"textarea\");\n            input.classList.add(\"notes\");\n            input.rows = 5;\n            program.onNotes.subscribe(notes => input.value = notes);\n            input.value = program.notes;\n            // Spec says \"off\", but Chrome ignores that, so use \"chrome-off\".\n            input.autocomplete = \"chrome-off\";\n            td.appendChild(input);\n            const keyElement = addKeyElement(\"Notes\", td);\n            keyElement.classList.add(\"top\");\n            input.addEventListener(\"input\", event => {\n                program.setNotes(input.value);\n                this.tape.saveUserData();\n            });\n        }\n        if (program instanceof Program) {\n            // Add bit errors.\n            let count = 1;\n            for (const bitData of program.bitData) {\n                if (bitData.bitType === BitType.BAD) {\n                    addKeyValue(\"Bit error \" + count++, frameToTimestamp(bitData.startFrame, this.tape.sampleRate), () => this.originalWaveformDisplay.zoomToBitData(bitData));\n                }\n            }\n            // Add screenshot.\n            const screenshotDiv = document.createElement(\"div\");\n            screenshotDiv.style.marginLeft = \"20pt\";\n            div.appendChild(screenshotDiv);\n            const screenshotScreen = new CanvasScreen(screenshotDiv, false);\n            screenshotScreen.displayScreenshot(program.screenshot);\n            program.onScreenshot.subscribe(screenshot => {\n                screenshotScreen.displayScreenshot(screenshot);\n            });\n        }\n        else {\n            const screenshotsDiv = document.createElement(\"div\");\n            div.appendChild(screenshotsDiv);\n            for (const subprogram of program.programs) {\n                const screenshotDiv = document.createElement(\"div\");\n                screenshotDiv.style.marginLeft = \"20pt\";\n                screenshotDiv.style.marginBottom = \"20pt\";\n                screenshotDiv.style.float = \"left\";\n                if (onProgramClick !== undefined) {\n                    screenshotDiv.style.cursor = \"pointer\";\n                    screenshotDiv.addEventListener(\"click\", () => onProgramClick(subprogram));\n                }\n                screenshotsDiv.appendChild(screenshotDiv);\n                const screenshotScreen = new CanvasScreen(screenshotDiv, true);\n                screenshotScreen.getNode().classList.add(\"thumbnail\");\n                const updateScreenshot = function (screenshot) {\n                    screenshotScreen.displayScreenshot(screenshot);\n                    screenshotDiv.style.display = screenshot === \"\" ? \"none\" : \"block\";\n                };\n                updateScreenshot(subprogram.screenshot);\n                subprogram.onScreenshot.subscribe(screenshot => {\n                    updateScreenshot(screenshot);\n                });\n            }\n        }\n        return new Pane(div);\n    }\n    makeBinaryPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const hexHighlighter = new Highlighter(this, program, div);\n        const asciiHighlighter = new Highlighter(this, program, div);\n        const [hexElements, asciiElements] = Hexdump.create(program.binary, div);\n        hexHighlighter.addHighlightables(hexElements);\n        asciiHighlighter.addHighlightables(asciiElements);\n        this.onHighlight.subscribe(highlight => {\n            hexHighlighter.highlight(highlight, program, Hexdump.highlightClassName);\n            asciiHighlighter.highlight(highlight, program, Hexdump.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            hexHighlighter.select(selection, program, Hexdump.selectClassName);\n            asciiHighlighter.select(selection, program, Hexdump.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== hexHighlighter && source !== asciiHighlighter) {\n                hexHighlighter.doneSelecting();\n                asciiHighlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        pane.didShow = () => {\n            hexHighlighter.didShow();\n            asciiHighlighter.didShow();\n        };\n        return pane;\n    }\n    /**\n     * Make the pane of the audio sample we reconstruct from the bits.\n     */\n    makeReconstructedPane(samples) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"reconstructed_waveform\");\n        this.makeWaveforms(div, new WaveformDisplay(this.tape.sampleRate), false, [\n            {\n                label: \"Reconstructed low-speed waveform:\",\n                samples: samples,\n            }\n        ]);\n        return new Pane(div);\n    }\n    makeBasicPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const highlightables = BasicRender.toDiv(Basic.fromTokenized(program.binary), div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(highlightables);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, BasicRender.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, BasicRender.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeSystemPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        div.classList.add(\"system-program\");\n        const systemProgram = new SystemProgram(program.binary);\n        const [highlightables, annotations] = SystemProgramRender.toDiv(systemProgram, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(highlightables);\n        if (program.annotations === undefined) {\n            program.annotations = [];\n        }\n        program.annotations.push(...systemProgram.annotations, ...annotations);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, SystemProgramRender.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, SystemProgramRender.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        let pane = new Pane(div);\n        if (systemProgram.filename !== \"\") {\n            pane.programName = systemProgram.filename;\n        }\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeEdtasmPane(program) {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"program\");\n        const [name, elements] = Edtasm.decodeEdtasm(program.binary, div);\n        const highlighter = new Highlighter(this, program, div);\n        highlighter.addHighlightables(elements);\n        this.onHighlight.subscribe(highlight => {\n            highlighter.highlight(highlight, program, Edtasm.highlightClassName);\n        });\n        this.onSelection.subscribe(selection => {\n            highlighter.select(selection, program, Edtasm.selectClassName);\n        });\n        this.onDoneSelecting.subscribe(source => {\n            if (source !== highlighter) {\n                highlighter.doneSelecting();\n            }\n        });\n        const pane = new Pane(div);\n        pane.programName = name;\n        pane.didShow = () => {\n            highlighter.didShow();\n        };\n        return pane;\n    }\n    makeEmulatorPane(program, cassette) {\n        const div = document.createElement(\"div\");\n        const screenDiv = document.createElement(\"div\");\n        div.appendChild(screenDiv);\n        const screen = new CanvasScreen(screenDiv, false);\n        const trs80 = new Trs80(screen, cassette);\n        const hardwareSettingsPanel = new SettingsPanel(screen.getNode(), trs80, PanelType.HARDWARE);\n        const viewPanel = new SettingsPanel(screen.getNode(), trs80, PanelType.VIEW);\n        const controlPanel = new ControlPanel(screen.getNode());\n        controlPanel.addResetButton(() => trs80.reset());\n        controlPanel.addTapeRewindButton(() => {\n            cassette.rewind();\n        });\n        if (program !== undefined) {\n            // TODO: Could add screenshot to tape.\n            controlPanel.addScreenshotButton(() => {\n                const screenshot = trs80.getScreenshot();\n                program.setScreenshot(screenshot);\n                this.tape.saveUserData();\n            });\n        }\n        controlPanel.addSettingsButton(hardwareSettingsPanel);\n        controlPanel.addSettingsButton(viewPanel);\n        const progressBar = new ProgressBar(screen.getNode());\n        cassette.setProgressBar(progressBar);\n        trs80.reset();\n        let pane = new Pane(div);\n        pane.didShow = () => trs80.start();\n        pane.didHide = () => trs80.stop();\n        return pane;\n    }\n    /**\n     * Show a particular pane and hide all others.\n     */\n    showPane(pane) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        // Hide all others.\n        for (const otherPane of this.panes) {\n            if (otherPane !== pane) {\n                (_b = (_a = otherPane).willHide) === null || _b === void 0 ? void 0 : _b.call(_a);\n                otherPane.element.classList.add(\"hidden\");\n                (_c = otherPane.row) === null || _c === void 0 ? void 0 : _c.classList.remove(\"selected\");\n                (_e = (_d = otherPane).didHide) === null || _e === void 0 ? void 0 : _e.call(_d);\n            }\n        }\n        // Show this one.\n        (_g = (_f = pane).willShow) === null || _g === void 0 ? void 0 : _g.call(_f);\n        pane.element.classList.remove(\"hidden\");\n        (_h = pane.row) === null || _h === void 0 ? void 0 : _h.classList.add(\"selected\");\n        (_k = (_j = pane).didShow) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    /**\n     * Create the panes and the table of contents for them on the left.\n     */\n    updateTapeContents() {\n        var _a;\n        // Add a new section that we can style all at once.\n        const addSection = () => {\n            const sectionDiv = document.createElement(\"div\");\n            this.tapeContents.appendChild(sectionDiv);\n            return sectionDiv;\n        };\n        let sectionDiv = addSection();\n        // Add a row to the table of contents. Returns the row div.\n        const addRow = (text, onClick) => {\n            const rowDiv = document.createElement(\"div\");\n            rowDiv.classList.add(\"tape_contents_row\");\n            rowDiv.innerText = text;\n            if (onClick !== undefined) {\n                rowDiv.classList.add(\"selectable_row\");\n                rowDiv.onclick = onClick;\n            }\n            sectionDiv.appendChild(rowDiv);\n            return rowDiv;\n        };\n        // Show the name of the whole tape.\n        const title = addRow(this.tape.name);\n        title.classList.add(\"tape_title\");\n        // Create panes for each program.\n        let previousTrackNumber = -1;\n        let firstCopyOfTrack = undefined;\n        // Add a pane to the top-right, register it, and add it to table of contents.\n        const addPane = (label, pane) => {\n            pane.element.classList.add(\"pane\");\n            pane.element.classList.add(\"hidden\");\n            this.topData.appendChild(pane.element);\n            this.panes.push(pane);\n            pane.row = addRow(\"    \" + label, () => {\n                this.showPane(pane);\n            });\n        };\n        // Map from program to action when its screenshot is clicked.\n        const screenshotClickAction = new WeakMap();\n        // Header for tape.\n        const row = addRow(\"Whole tape\");\n        row.classList.add(\"program_title\");\n        let metadataLabel = frameToTimestamp(0, this.tape.sampleRate, true) + \" to \" +\n            frameToTimestamp(this.tape.originalSamples.samplesList[0].length, this.tape.sampleRate, true);\n        addPane(metadataLabel, this.makeMetadataPane(this.tape, undefined, undefined, undefined, (program) => {\n            var _a;\n            (_a = screenshotClickAction.get(program)) === null || _a === void 0 ? void 0 : _a();\n        }));\n        addPane(\"Emulator\", this.makeEmulatorPane(undefined, new TapeCassette(this.tape, undefined)));\n        // Section for each program.\n        for (const program of this.tape.programs) {\n            let duplicateCopy = false;\n            sectionDiv = addSection();\n            // Header for program.\n            const row = addRow(program.name || program.getLabel());\n            program.onName.subscribe(name => row.innerText = program.name || program.getLabel());\n            row.classList.add(\"program_title\");\n            // Dividing line for new tracks.\n            if (program.trackNumber !== previousTrackNumber) {\n                row.classList.add(\"new_track\");\n                previousTrackNumber = program.trackNumber;\n                firstCopyOfTrack = program;\n            }\n            else if (firstCopyOfTrack !== undefined) {\n                // Non-first copies.\n                if (program.sameBinaryAs(firstCopyOfTrack)) {\n                    sectionDiv.classList.add(\"duplicate_copy\");\n                    duplicateCopy = true;\n                }\n            }\n            // Make these panes here so they're accessible from the metadata page.\n            const basicPane = program.isBasicProgram() ? this.makeBasicPane(program) : undefined;\n            const systemPane = program.isSystemProgram() ? this.makeSystemPane(program) : undefined;\n            const edtasmPane = program.isEdtasmProgram() ? this.makeEdtasmPane(program) : undefined;\n            // Metadata pane.\n            let metadataLabel = frameToTimestamp(program.startFrame, this.tape.sampleRate, true) + \" to \" +\n                frameToTimestamp(program.endFrame, this.tape.sampleRate, true) + \" (\" +\n                frameToTimestamp(program.endFrame - program.startFrame, this.tape.sampleRate, true) + \")\";\n            const bitErrorCount = program.countBitErrors();\n            if (bitErrorCount > 0) {\n                metadataLabel += \", \" + bitErrorCount + \" error\" + (bitErrorCount === 1 ? \"\" : \"s\");\n            }\n            let metadataPane = this.makeMetadataPane(program, basicPane, systemPane, edtasmPane, undefined);\n            addPane(metadataLabel, metadataPane);\n            screenshotClickAction.set(program, () => {\n                var _a;\n                this.showPane(metadataPane);\n                (_a = metadataPane.row) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\",\n                });\n            });\n            // Make the various panes.\n            addPane(\"Binary\" + (duplicateCopy ? \" (same as copy \" + ((_a = firstCopyOfTrack) === null || _a === void 0 ? void 0 : _a.copyNumber) + \")\" : \"\"), this.makeBinaryPane(program));\n            if (program.reconstructedSamples !== undefined) {\n                addPane(\"Reconstructed\", this.makeReconstructedPane(program.reconstructedSamples));\n            }\n            if (basicPane !== undefined) {\n                addPane(\"Basic program\", basicPane);\n            }\n            if (systemPane !== undefined) {\n                addPane(\"System program\" + (systemPane.programName ? \" (\" + systemPane.programName + \")\" : \"\"), systemPane);\n            }\n            if (basicPane !== undefined || systemPane !== undefined) {\n                let emulatorLabel = \"Emulator (original, \" + (program.decoder.isHighSpeed() ? \"high\" : \"low\") + \" speed)\";\n                addPane(emulatorLabel, this.makeEmulatorPane(program, new TapeCassette(this.tape, program)));\n                if (program.reconstructedSamples !== undefined) {\n                    addPane(\"Emulator (reconstructed, low speed)\", this.makeEmulatorPane(program, new ReconstructedCassette(program.reconstructedSamples, this.tape.sampleRate)));\n                }\n            }\n            if (edtasmPane !== undefined) {\n                addPane(\"Assembly\" + (edtasmPane.programName ? \" (\" + edtasmPane.programName + \")\" : \"\"), edtasmPane);\n            }\n        }\n        // Show the first pane.\n        if (this.panes.length > 0) {\n            this.showPane(this.panes[0]);\n        }\n    }\n}\n","// Handles uploading WAV files and decoding them.\nimport { AudioFile } from \"./AudioUtils\";\nimport { readWavFile } from \"./WavFile\";\nimport { encodeLowSpeed, wrapLowSpeed } from \"./LowSpeedTapeEncoder\";\nimport { encodeHighSpeed } from \"./HighSpeedTapeEncoder\";\nimport { wrapBasic } from \"./Basic\";\nexport class Uploader {\n    /**\n     * @param dropZone any element where files can be dropped.\n     * @param inputElement file type input element.\n     * @param dropS3 buttons to upload from S3.\n     * @param dropProgress progress bar for loading large files.\n     * @param handleAudioBuffer callback with AudioBuffer parameter.\n     */\n    constructor(dropZone, inputElement, dropS3, dropProgress, handleAudioBuffer) {\n        this.uploadInput = inputElement;\n        this.handleAudioBuffer = handleAudioBuffer;\n        this.progressBar = dropProgress;\n        dropZone.ondrop = (ev) => this.dropHandler(ev);\n        dropZone.ondragover = (ev) => {\n            dropZone.classList.add(\"hover\");\n            // Prevent default behavior (prevent file from being opened).\n            ev.preventDefault();\n        };\n        dropZone.ondragleave = () => dropZone.classList.remove(\"hover\");\n        inputElement.onchange = () => {\n            if (inputElement.files) {\n                const file = inputElement.files[0];\n                if (file) {\n                    this.handleDroppedFile(file);\n                }\n            }\n        };\n        inputElement.onprogress = (event) => this.showProgress(event);\n        dropS3.forEach((node) => {\n            const button = node;\n            button.onclick = () => {\n                const url = button.getAttribute(\"data-src\");\n                const request = new XMLHttpRequest();\n                request.open(\"GET\", url, true);\n                request.responseType = \"arraybuffer\";\n                request.onload = () => this.handleArrayBuffer(url, request.response);\n                request.onprogress = (event) => this.showProgress(event);\n                // For testing progress bar only:\n                /// request.setRequestHeader(\"Cache-Control\", \"no-cache, no-store, must-revalidate\");\n                request.send();\n            };\n        });\n    }\n    reset() {\n        this.progressBar.classList.add(\"hidden\");\n        this.uploadInput.value = \"\";\n    }\n    handleDroppedFile(file) {\n        console.log(\"File \" + file.name + \" has size \" + file.size);\n        // We could use file.arrayBuffer() here, but as of writing it's buggy\n        // in Firefox 70. https://bugzilla.mozilla.org/show_bug.cgi?id=1585284\n        const fileReader = new FileReader();\n        fileReader.addEventListener(\"loadend\", () => {\n            if (fileReader.result instanceof ArrayBuffer) {\n                this.handleArrayBuffer(file.name, fileReader.result);\n            }\n            else {\n                console.log(\"Error: Unexpected type for fileReader.result: \" +\n                    fileReader.result);\n            }\n        });\n        fileReader.addEventListener(\"progress\", (event) => this.showProgress(event));\n        fileReader.readAsArrayBuffer(file);\n    }\n    showProgress(event) {\n        this.progressBar.classList.remove(\"hidden\");\n        this.progressBar.value = event.loaded;\n        this.progressBar.max = event.total;\n    }\n    handleArrayBuffer(pathname, arrayBuffer) {\n        const rate = 44100;\n        let audioFile;\n        if (pathname.toLowerCase().endsWith(\".cas\")) {\n            let bytes = new Uint8Array(arrayBuffer);\n            const highSpeed = bytes.length > 0 && bytes[0] === 0x55;\n            const audio = highSpeed ? encodeHighSpeed(bytes, rate) : encodeLowSpeed(bytes, rate);\n            audioFile = new AudioFile(rate, audio);\n        }\n        else if (pathname.toLowerCase().endsWith(\".bas\")) {\n            audioFile = new AudioFile(rate, encodeLowSpeed(wrapLowSpeed(wrapBasic(new Uint8Array(arrayBuffer))), rate));\n        }\n        else {\n            audioFile = readWavFile(arrayBuffer);\n        }\n        this.handleAudioBuffer(pathname, audioFile);\n    }\n    dropHandler(ev) {\n        // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n        if (ev.dataTransfer) {\n            if (ev.dataTransfer.items) {\n                // Use DataTransferItemList interface to access the files.\n                for (const item of ev.dataTransfer.items) {\n                    // If dropped items aren't files, reject them\n                    if (item.kind === \"file\") {\n                        const file = item.getAsFile();\n                        if (file) {\n                            this.handleDroppedFile(file);\n                        }\n                    }\n                }\n            }\n            else {\n                // Use DataTransfer interface to access the files.\n                for (const file of ev.dataTransfer.files) {\n                    this.handleDroppedFile(file);\n                }\n            }\n        }\n    }\n}\n","// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements, graceful fallback (IE8 is supported)\n// and very few assumptions about the user's page layout.\nvar global = window;\nvar document = global.document;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () { return false; };\n\n// Figure out if we're in IE8 or not. IE8 will still render correctly,\n// but will be static instead of draggable.\nvar isIE8 = global.attachEvent && !global[addEventListener];\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = (['', '-webkit-', '-moz-', '-o-']\n    .filter(function (prefix) {\n        var el = document.createElement('div');\n        el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n\n        return !!el.style.length\n    })\n    .shift()) + \"calc\";\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) { return typeof v === 'string' || v instanceof String; };\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n    if (isString(el)) {\n        var ele = document.querySelector(el);\n        if (!ele) {\n            throw new Error((\"Selector \" + el + \" did not match a DOM element\"))\n        }\n        return ele\n    }\n\n    return el\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n    var value = options[propName];\n    if (value !== undefined) {\n        return value\n    }\n    return def\n};\n\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n    if (isFirst) {\n        if (gutterAlign === 'end') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    } else if (isLast) {\n        if (gutterAlign === 'start') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    }\n\n    return gutterSize\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n    var gut = document.createElement('div');\n    gut.className = \"gutter gutter-\" + gutterDirection;\n    return gut\n};\n\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n    var style = {};\n\n    if (!isString(size)) {\n        if (!isIE8) {\n            style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n        } else {\n            style[dim] = size + \"%\";\n        }\n    } else {\n        style[dim] = size;\n    }\n\n    return style\n};\n\nvar defaultGutterStyleFn = function (dim, gutSize) {\n    var obj;\n\n    return (( obj = {}, obj[dim] = (gutSize + \"px\"), obj ));\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n    if ( options === void 0 ) options = {};\n\n    var ids = idsOption;\n    var dimension;\n    var clientAxis;\n    var position;\n    var positionEnd;\n    var clientSize;\n    var elements;\n\n    // Allow HTMLCollection to be used as an argument when supported\n    if (Array.from) {\n        ids = Array.from(ids);\n    }\n\n    // All DOM elements in the split should have a common parent. We can grab\n    // the first elements parent and hope users read the docs because the\n    // behavior will be whacky otherwise.\n    var firstElement = elementOrSelector(ids[0]);\n    var parent = firstElement.parentNode;\n    var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n    var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n    // Set default options.sizes to equal percentages of the parent element.\n    var sizes = getOption(options, 'sizes') || ids.map(function () { return 100 / ids.length; });\n\n    // Standardize minSize to an array if it isn't already. This allows minSize\n    // to be passed as a number.\n    var minSize = getOption(options, 'minSize', 100);\n    var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () { return minSize; });\n\n    // Get other options\n    var expandToMin = getOption(options, 'expandToMin', false);\n    var gutterSize = getOption(options, 'gutterSize', 10);\n    var gutterAlign = getOption(options, 'gutterAlign', 'center');\n    var snapOffset = getOption(options, 'snapOffset', 30);\n    var dragInterval = getOption(options, 'dragInterval', 1);\n    var direction = getOption(options, 'direction', HORIZONTAL);\n    var cursor = getOption(\n        options,\n        'cursor',\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize'\n    );\n    var gutter = getOption(options, 'gutter', defaultGutterFn);\n    var elementStyle = getOption(\n        options,\n        'elementStyle',\n        defaultElementStyleFn\n    );\n    var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\n    // A lot of the behavior in the rest of the library is paramatized down to\n    // rely on CSS strings and classes.\n    if (direction === HORIZONTAL) {\n        dimension = 'width';\n        clientAxis = 'clientX';\n        position = 'left';\n        positionEnd = 'right';\n        clientSize = 'clientWidth';\n    } else if (direction === 'vertical') {\n        dimension = 'height';\n        clientAxis = 'clientY';\n        position = 'top';\n        positionEnd = 'bottom';\n        clientSize = 'clientHeight';\n    }\n\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\n    // Each helper is bound to a pair object that contains its metadata. This\n    // also makes it easy to store references to listeners that that will be\n    // added and removed.\n    //\n    // Even though there are no other functions contained in them, aliasing\n    // this to self saves 50 bytes or so since it's used so frequently.\n    //\n    // The pair object saves metadata like dragging state, position and\n    // event listener references.\n\n    function setElementSize(el, size, gutSize, i) {\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\n        // by string, like '300px'. This is less than ideal, because it breaks\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n        // make sure you calculate the gutter size by hand.\n        var style = elementStyle(dimension, size, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            el.style[prop] = style[prop];\n        });\n    }\n\n    function setGutterSize(gutterElement, gutSize, i) {\n        var style = gutterStyle(dimension, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            gutterElement.style[prop] = style[prop];\n        });\n    }\n\n    function getSizes() {\n        return elements.map(function (element) { return element.size; })\n    }\n\n    // Supports touch events, but not multitouch, so only the first\n    // finger `touches[0]` is counted.\n    function getMousePosition(e) {\n        if ('touches' in e) { return e.touches[0][clientAxis] }\n        return e[clientAxis]\n    }\n\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n    // which allows the viewport to be resized without additional logic.\n    // Element a's size is the same as offset. b's size is total size - a size.\n    // Both sizes are calculated from the initial parent percentage,\n    // then the gutter size is subtracted.\n    function adjust(offset) {\n        var a = elements[this.a];\n        var b = elements[this.b];\n        var percentage = a.size + b.size;\n\n        a.size = (offset / this.size) * percentage;\n        b.size = percentage - (offset / this.size) * percentage;\n\n        setElementSize(a.element, a.size, this[aGutterSize], a.i);\n        setElementSize(b.element, b.size, this[bGutterSize], b.i);\n    }\n\n    // drag, where all the magic happens. The logic is really quite simple:\n    //\n    // 1. Ignore if the pair is not dragging.\n    // 2. Get the offset of the event.\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\n    // 4. Actually adjust each element in the pair to offset.\n    //\n    // ---------------------------------------------------------------------\n    // |    | <- a.minSize               ||              b.minSize -> |    |\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n    // |    |  |                         ||                        |  |    |\n    // |    |  |                         ||                        |  |    |\n    // ---------------------------------------------------------------------\n    // | <- this.start                                        this.size -> |\n    function drag(e) {\n        var offset;\n        var a = elements[this.a];\n        var b = elements[this.b];\n\n        if (!this.dragging) { return }\n\n        // Get the offset of the event from the first side of the\n        // pair `this.start`. Then offset by the initial position of the\n        // mouse compared to the gutter size.\n        offset =\n            getMousePosition(e) -\n            this.start +\n            (this[aGutterSize] - this.dragOffset);\n\n        if (dragInterval > 1) {\n            offset = Math.round(offset / dragInterval) * dragInterval;\n        }\n\n        // If within snapOffset of min or max, set offset to min or max.\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n        // Include the appropriate gutter sizes to prevent overflows.\n        if (offset <= a.minSize + snapOffset + this[aGutterSize]) {\n            offset = a.minSize + this[aGutterSize];\n        } else if (\n            offset >=\n            this.size - (b.minSize + snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.minSize + this[bGutterSize]);\n        }\n\n        // Actually adjust the size.\n        adjust.call(this, offset);\n\n        // Call the drag callback continously. Don't do anything too intensive\n        // in this callback.\n        getOption(options, 'onDrag', NOOP)();\n    }\n\n    // Cache some important sizes when drag starts, so we don't have to do that\n    // continously:\n    //\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\n    // `start`: The leading side of the first element.\n    //\n    // ------------------------------------------------\n    // |      aGutterSize -> |||                      |\n    // |                     |||                      |\n    // |                     |||                      |\n    // |                     ||| <- bGutterSize       |\n    // ------------------------------------------------\n    // | <- start                             size -> |\n    function calculateSizes() {\n        // Figure out the parent size minus padding.\n        var a = elements[this.a].element;\n        var b = elements[this.b].element;\n\n        var aBounds = a[getBoundingClientRect]();\n        var bBounds = b[getBoundingClientRect]();\n\n        this.size =\n            aBounds[dimension] +\n            bBounds[dimension] +\n            this[aGutterSize] +\n            this[bGutterSize];\n        this.start = aBounds[position];\n        this.end = aBounds[positionEnd];\n    }\n\n    function innerSize(element) {\n        // Return nothing if getComputedStyle is not supported (< IE9)\n        // Or if parent element has no layout yet\n        if (!getComputedStyle) { return null }\n\n        var computedStyle = getComputedStyle(element);\n\n        if (!computedStyle) { return null }\n\n        var size = element[clientSize];\n\n        if (size === 0) { return null }\n\n        if (direction === HORIZONTAL) {\n            size -=\n                parseFloat(computedStyle.paddingLeft) +\n                parseFloat(computedStyle.paddingRight);\n        } else {\n            size -=\n                parseFloat(computedStyle.paddingTop) +\n                parseFloat(computedStyle.paddingBottom);\n        }\n\n        return size\n    }\n\n    // When specifying percentage sizes that are less than the computed\n    // size of the element minus the gutter, the lesser percentages must be increased\n    // (and decreased from the other elements) to make space for the pixels\n    // subtracted by the gutters.\n    function trimToMin(sizesToTrim) {\n        // Try to get inner size of parent element.\n        // If it's no supported, return original sizes.\n        var parentSize = innerSize(parent);\n        if (parentSize === null) {\n            return sizesToTrim\n        }\n\n        if (minSizes.reduce(function (a, b) { return a + b; }, 0) > parentSize) {\n            return sizesToTrim\n        }\n\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\n        var excessPixels = 0;\n        var toSpare = [];\n\n        var pixelSizes = sizesToTrim.map(function (size, i) {\n            // Convert requested percentages to pixel sizes\n            var pixelSize = (parentSize * size) / 100;\n            var elementGutterSize = getGutterSize(\n                gutterSize,\n                i === 0,\n                i === sizesToTrim.length - 1,\n                gutterAlign\n            );\n            var elementMinSize = minSizes[i] + elementGutterSize;\n\n            // If element is too smal, increase excess pixels by the difference\n            // and mark that it has no pixels to spare\n            if (pixelSize < elementMinSize) {\n                excessPixels += elementMinSize - pixelSize;\n                toSpare.push(0);\n                return elementMinSize\n            }\n\n            // Otherwise, mark the pixels it has to spare and return it's original size\n            toSpare.push(pixelSize - elementMinSize);\n            return pixelSize\n        });\n\n        // If nothing was adjusted, return the original sizes\n        if (excessPixels === 0) {\n            return sizesToTrim\n        }\n\n        return pixelSizes.map(function (pixelSize, i) {\n            var newPixelSize = pixelSize;\n\n            // While there's still pixels to take, and there's enough pixels to spare,\n            // take as many as possible up to the total excess pixels\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n                var takenPixels = Math.min(\n                    excessPixels,\n                    toSpare[i] - excessPixels\n                );\n\n                // Subtract the amount taken for the next iteration\n                excessPixels -= takenPixels;\n                newPixelSize = pixelSize - takenPixels;\n            }\n\n            // Return the pixel size adjusted as a percentage\n            return (newPixelSize / parentSize) * 100\n        })\n    }\n\n    // stopDragging is very similar to startDragging in reverse.\n    function stopDragging() {\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        if (self.dragging) {\n            getOption(options, 'onDragEnd', NOOP)(getSizes());\n        }\n\n        self.dragging = false;\n\n        // Remove the stored event listeners. This is why we store them.\n        global[removeEventListener]('mouseup', self.stop);\n        global[removeEventListener]('touchend', self.stop);\n        global[removeEventListener]('touchcancel', self.stop);\n        global[removeEventListener]('mousemove', self.move);\n        global[removeEventListener]('touchmove', self.move);\n\n        // Clear bound function references\n        self.stop = null;\n        self.move = null;\n\n        a[removeEventListener]('selectstart', NOOP);\n        a[removeEventListener]('dragstart', NOOP);\n        b[removeEventListener]('selectstart', NOOP);\n        b[removeEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = '';\n        a.style.webkitUserSelect = '';\n        a.style.MozUserSelect = '';\n        a.style.pointerEvents = '';\n\n        b.style.userSelect = '';\n        b.style.webkitUserSelect = '';\n        b.style.MozUserSelect = '';\n        b.style.pointerEvents = '';\n\n        self.gutter.style.cursor = '';\n        self.parent.style.cursor = '';\n        document.body.style.cursor = '';\n    }\n\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\n    // It also adds event listeners for mouse/touch events,\n    // and prevents selection while dragging so avoid the selecting text.\n    function startDragging(e) {\n        // Right-clicking can't start dragging.\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Alias frequently used variables to save space. 200 bytes.\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        // Call the onDragStart callback.\n        if (!self.dragging) {\n            getOption(options, 'onDragStart', NOOP)(getSizes());\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault();\n\n        // Set the dragging property of the pair object.\n        self.dragging = true;\n\n        // Create two event listeners bound to the same pair object and store\n        // them in the pair object.\n        self.move = drag.bind(self);\n        self.stop = stopDragging.bind(self);\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        global[addEventListener]('mouseup', self.stop);\n        global[addEventListener]('touchend', self.stop);\n        global[addEventListener]('touchcancel', self.stop);\n        global[addEventListener]('mousemove', self.move);\n        global[addEventListener]('touchmove', self.move);\n\n        // Disable selection. Disable!\n        a[addEventListener]('selectstart', NOOP);\n        a[addEventListener]('dragstart', NOOP);\n        b[addEventListener]('selectstart', NOOP);\n        b[addEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = 'none';\n        a.style.webkitUserSelect = 'none';\n        a.style.MozUserSelect = 'none';\n        a.style.pointerEvents = 'none';\n\n        b.style.userSelect = 'none';\n        b.style.webkitUserSelect = 'none';\n        b.style.MozUserSelect = 'none';\n        b.style.pointerEvents = 'none';\n\n        // Set the cursor at multiple levels\n        self.gutter.style.cursor = cursor;\n        self.parent.style.cursor = cursor;\n        document.body.style.cursor = cursor;\n\n        // Cache the initial sizes of the pair.\n        calculateSizes.call(self);\n\n        // Determine the position of the mouse compared to the gutter\n        self.dragOffset = getMousePosition(e) - self.end;\n    }\n\n    // adjust sizes to ensure percentage is within min size and gutter.\n    sizes = trimToMin(sizes);\n\n    // 5. Create pair and element objects. Each pair has an index reference to\n    // elements `a` and `b` of the pair (first and second elements).\n    // Loop through the elements while pairing them off. Every pair gets a\n    // `pair` object and a gutter.\n    //\n    // Basic logic:\n    //\n    // - Starting with the second element `i > 0`, create `pair` objects with\n    //   `a = i - 1` and `b = i`\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n    // - Create gutter elements and add event listeners.\n    // - Set the size of the elements, minus the gutter sizes.\n    //\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    var pairs = [];\n    elements = ids.map(function (id, i) {\n        // Create the element object.\n        var element = {\n            element: elementOrSelector(id),\n            size: sizes[i],\n            minSize: minSizes[i],\n            i: i,\n        };\n\n        var pair;\n\n        if (i > 0) {\n            // Create the pair object with its metadata.\n            pair = {\n                a: i - 1,\n                b: i,\n                dragging: false,\n                direction: direction,\n                parent: parent,\n            };\n\n            pair[aGutterSize] = getGutterSize(\n                gutterSize,\n                i - 1 === 0,\n                false,\n                gutterAlign\n            );\n            pair[bGutterSize] = getGutterSize(\n                gutterSize,\n                false,\n                i === ids.length - 1,\n                gutterAlign\n            );\n\n            // if the parent has a reverse flex-direction, switch the pair elements.\n            if (\n                parentFlexDirection === 'row-reverse' ||\n                parentFlexDirection === 'column-reverse'\n            ) {\n                var temp = pair.a;\n                pair.a = pair.b;\n                pair.b = temp;\n            }\n        }\n\n        // Determine the size of the current element. IE8 is supported by\n        // staticly assigning sizes without draggable gutters. Assigns a string\n        // to `size`.\n        //\n        // IE9 and above\n        if (!isIE8) {\n            // Create gutter elements for each pair.\n            if (i > 0) {\n                var gutterElement = gutter(i, direction, element.element);\n                setGutterSize(gutterElement, gutterSize, i);\n\n                // Save bound event listener for removal later\n                pair[gutterStartDragging] = startDragging.bind(pair);\n\n                // Attach bound event listener\n                gutterElement[addEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                gutterElement[addEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n\n                parent.insertBefore(gutterElement, element.element);\n\n                pair.gutter = gutterElement;\n            }\n        }\n\n        setElementSize(\n            element.element,\n            element.size,\n            getGutterSize(\n                gutterSize,\n                i === 0,\n                i === ids.length - 1,\n                gutterAlign\n            ),\n            i\n        );\n\n        // After the first iteration, and we have a pair object, append it to the\n        // list of pairs.\n        if (i > 0) {\n            pairs.push(pair);\n        }\n\n        return element\n    });\n\n    function adjustToMin(element) {\n        var isLast = element.i === pairs.length;\n        var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n\n        calculateSizes.call(pair);\n\n        var size = isLast\n            ? pair.size - element.minSize - pair[bGutterSize]\n            : element.minSize + pair[aGutterSize];\n\n        adjust.call(pair, size);\n    }\n\n    elements.forEach(function (element) {\n        var computedSize = element.element[getBoundingClientRect]()[dimension];\n\n        if (computedSize < element.minSize) {\n            if (expandToMin) {\n                adjustToMin(element);\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                element.minSize = computedSize;\n            }\n        }\n    });\n\n    function setSizes(newSizes) {\n        var trimmed = trimToMin(newSizes);\n        trimmed.forEach(function (newSize, i) {\n            if (i > 0) {\n                var pair = pairs[i - 1];\n\n                var a = elements[pair.a];\n                var b = elements[pair.b];\n\n                a.size = trimmed[i - 1];\n                b.size = newSize;\n\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n            }\n        });\n    }\n\n    function destroy(preserveStyles, preserveGutter) {\n        pairs.forEach(function (pair) {\n            if (preserveGutter !== true) {\n                pair.parent.removeChild(pair.gutter);\n            } else {\n                pair.gutter[removeEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                pair.gutter[removeEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n            }\n\n            if (preserveStyles !== true) {\n                var style = elementStyle(\n                    dimension,\n                    pair.a.size,\n                    pair[aGutterSize]\n                );\n\n                Object.keys(style).forEach(function (prop) {\n                    elements[pair.a].element.style[prop] = '';\n                    elements[pair.b].element.style[prop] = '';\n                });\n            }\n        });\n    }\n\n    if (isIE8) {\n        return {\n            setSizes: setSizes,\n            destroy: destroy,\n        }\n    }\n\n    return {\n        setSizes: setSizes,\n        getSizes: getSizes,\n        collapse: function collapse(i) {\n            adjustToMin(elements[i]);\n        },\n        destroy: destroy,\n        parent: parent,\n        pairs: pairs,\n    }\n};\n\nexport default Split;\n","export var TestType;\n(function (TestType) {\n    // Expect a pulse half-way through the WAV file.\n    TestType[TestType[\"LOW_SPEED_PULSE\"] = 0] = \"LOW_SPEED_PULSE\";\n    // Expect no pulse half-way through the WAV file.\n    TestType[TestType[\"LOW_SPEED_NO_PULSE\"] = 1] = \"LOW_SPEED_NO_PULSE\";\n    // Expect a sequence of header (zero) bits to be proofed. This is different than reading a bunch of zero bits.\n    TestType[TestType[\"LOW_SPEED_PROOF\"] = 2] = \"LOW_SPEED_PROOF\";\n    // Expect a sequence of bits (in \"bin\" or \"binUrl\"). First sample of WAV is previous bit's clock pulse.\n    TestType[TestType[\"LOW_SPEED_BITS\"] = 3] = \"LOW_SPEED_BITS\";\n    // Expect a sequence of bits (in \"bin\" or \"binUrl\"). Start and end WAV file part-way through pulses.\n    TestType[TestType[\"HIGH_SPEED_BITS\"] = 4] = \"HIGH_SPEED_BITS\";\n})(TestType || (TestType = {}));\nconst STRING_TO_TEST_TYPE = {\n    \"low-speed-pulse\": TestType.LOW_SPEED_PULSE,\n    \"low-speed-no-pulse\": TestType.LOW_SPEED_NO_PULSE,\n    \"low-speed-proof\": TestType.LOW_SPEED_PROOF,\n    \"low-speed-bits\": TestType.LOW_SPEED_BITS,\n    \"high-speed-bits\": TestType.HIGH_SPEED_BITS,\n};\n/**\n * Individual test to run.\n */\nexport class Test {\n    constructor(jsonTest) {\n        this.name = jsonTest.name;\n        this.wavUrl = jsonTest.wavUrl;\n        this.type = STRING_TO_TEST_TYPE[jsonTest.type];\n        this.bin = jsonTest.bin;\n        this.binUrl = jsonTest.binUrl;\n    }\n    isHighSpeed() {\n        return this.type === TestType.HIGH_SPEED_BITS;\n    }\n}\n/**\n * Batch of tests from a file.\n */\nexport class TestFile {\n    constructor(url, json) {\n        this.tests = [];\n        this.includes = [];\n        this.url = url;\n        this.name = json.name;\n        const jsonTests = json.tests;\n        if (jsonTests === undefined) {\n            throw new Error(\"file does not have top-level \\\"tests\\\" key\");\n        }\n        for (const jsonTest of jsonTests) {\n            if (typeof jsonTest === \"string\") {\n                this.includes.push(jsonTest);\n            }\n            else {\n                this.tests.push(new Test(jsonTest));\n            }\n        }\n    }\n}\n","import { Decoder } from \"./Decoder\";\nimport { Tape } from \"./Tape\";\nimport { TapeBrowser } from \"./TapeBrowser\";\nimport { Uploader } from \"./Uploader\";\nimport Split from \"split.js\";\nimport { clearElement, flashNode } from \"./Utils\";\nimport { CanvasScreen } from \"trs80-emulator\";\nimport { TestFile, TestType } from \"./Test\";\nimport { readWavFile } from \"./WavFile\";\nimport { WaveformDisplay } from \"./WaveformDisplay\";\nimport { LowSpeedAnteoTapeDecoder, PulseResultType } from \"./LowSpeedAnteoTapeDecoder\";\nimport { HighSpeedTapeDecoder } from \"./HighSpeedTapeDecoder\";\nfunction nameFromPathname(pathname) {\n    let name = pathname;\n    // Keep only last component.\n    let pos = name.lastIndexOf(\"/\");\n    if (pos >= 0) {\n        name = name.substr(pos + 1);\n    }\n    // Remove extension.\n    pos = name.lastIndexOf(\".\");\n    if (pos >= 0) {\n        name = name.substr(0, pos);\n    }\n    return name;\n}\n/**\n * Show the screen with the specified ID, hide the rest.\n * @return the shown element.\n */\nfunction showScreen(screenId) {\n    const allScreens = document.getElementsByClassName(\"screen\");\n    let shownScreen = undefined;\n    for (const screen of allScreens) {\n        if (screen.id === screenId) {\n            screen.classList.remove(\"hidden\");\n            shownScreen = screen;\n        }\n        else {\n            screen.classList.add(\"hidden\");\n        }\n    }\n    if (shownScreen === undefined) {\n        throw new Error(\"Cannot find screen \" + screenId);\n    }\n    return shownScreen;\n}\n/**\n * Show the user data.\n */\nfunction populateBrowseScreen(browseScreen) {\n    clearElement(browseScreen);\n    const data = Tape.loadAllData();\n    for (const tapeData of data.tapes) {\n        const h1 = document.createElement(\"h1\");\n        h1.textContent = tapeData.name;\n        browseScreen.appendChild(h1);\n        if (tapeData.notes) {\n            const p = document.createElement(\"p\");\n            p.textContent = tapeData.notes;\n            browseScreen.appendChild(p);\n        }\n        for (const programData of tapeData.programs) {\n            const h2 = document.createElement(\"h2\");\n            h2.textContent = programData.name || \"Untitled\";\n            browseScreen.appendChild(h2);\n            if (programData.notes) {\n                const p = document.createElement(\"p\");\n                p.textContent = programData.notes;\n                browseScreen.appendChild(p);\n            }\n            if (programData.screenshot) {\n                const div = document.createElement(\"div\");\n                browseScreen.appendChild(div);\n                const screen = new CanvasScreen(div, false);\n                screen.displayScreenshot(programData.screenshot);\n            }\n        }\n    }\n}\n/**\n * Show the export/import panel and the appropriate set of buttons.\n */\nfunction showExportImport(action) {\n    const exportImport = document.getElementById(\"export_import\");\n    exportImport.classList.remove(\"hidden\");\n    // Hide all button groups.\n    for (const buttonGroup of exportImport.getElementsByClassName(\"button_group\")) {\n        buttonGroup.classList.add(\"hidden\");\n    }\n    // Show our button group.\n    const buttonGroup = document.getElementById(action == \"export\" ? \"export_buttons\" : \"import_buttons\");\n    buttonGroup.classList.remove(\"hidden\");\n}\nfunction showExportData() {\n    showExportImport(\"export\");\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.placeholder = \"\";\n    textArea.value = Tape.getAllDataAsJson();\n    textArea.select();\n}\nfunction showImportData() {\n    showExportImport(\"import\");\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.value = \"\";\n    textArea.placeholder = \"Paste exported data here, then click “Import”.\";\n    textArea.focus();\n}\nfunction copyToClipboard() {\n    const textArea = document.getElementById(\"user_data_field\");\n    textArea.select();\n    document.execCommand(\"copy\");\n    const exportImport = document.getElementById(\"export_import\");\n    flashNode(exportImport);\n}\nfunction importData() {\n    const textArea = document.getElementById(\"user_data_field\");\n    if (textArea) {\n        Tape.saveAllDataAsJson(textArea.value);\n        const exportImport = document.getElementById(\"export_import\");\n        flashNode(exportImport);\n    }\n}\nfunction handleAudioBuffer(pathname, audioFile) {\n    // console.log(\"Audio is \" + audioFile.rate + \" Hz\");\n    // TODO check that there's 1 channel.\n    const tape = new Tape(nameFromPathname(pathname), audioFile);\n    const decoder = new Decoder(tape);\n    decoder.decode();\n    tape.listenForStorageChanges();\n    tape.loadUserData();\n    const tapeBrowser = new TapeBrowser(tape, document.getElementById(\"waveforms\"), document.getElementById(\"original_canvas\"), document.getElementById(\"filtered_canvas\"), document.getElementById(\"low_speed_canvas\"), document.getElementById(\"tape_contents\"), document.getElementById(\"top_data\"));\n    // Switch screens.\n    showScreen(\"data_screen\");\n    /*\n    const loadAnotherButton = document.getElementById(\"load_another_button\") as HTMLButtonElement;\n    loadAnotherButton.onclick = () => {\n        showScreen(\"drop_screen\");\n        if (uploader !== undefined) {\n            uploader.reset();\n        }\n    };\n    */\n    Split([\"#data_screen > nav\", \"#data_screen > main\"], {\n        sizes: [20, 80],\n        minSize: [200, 200],\n        snapOffset: 0,\n    });\n    Split([\"#top_data\", \"#waveforms\"], {\n        sizes: [50, 50],\n        minSize: [100, 100],\n        snapOffset: 0,\n        direction: \"vertical\",\n    });\n}\n// https://stackoverflow.com/a/6234804/211234\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n/**\n * Makes a pill to show pass or fail for a test.\n */\nfunction makePassFailLabel(pass) {\n    const result = document.createElement(\"span\");\n    result.classList.add(\"test_result\");\n    if (pass) {\n        result.innerText = \"Pass\";\n        result.classList.add(\"test_pass\");\n    }\n    else {\n        result.innerText = \"Fail\";\n        result.classList.add(\"test_fail\");\n    }\n    return result;\n}\nfunction runTests(parent, testFile) {\n    if (testFile.name !== undefined) {\n        const pageHeader = document.createElement(\"h2\");\n        pageHeader.innerText = testFile.name;\n        parent.appendChild(pageHeader);\n    }\n    for (const test of testFile.tests) {\n        const testResult = document.createElement(\"div\");\n        testResult.classList.add(\"test\");\n        parent.append(testResult);\n        const url = new URL(test.wavUrl, testFile.url).href;\n        fetch(url, { cache: \"reload\" })\n            .then(response => {\n            if (response.ok) {\n                return response.arrayBuffer();\n            }\n            throw new Error(response.statusText);\n        })\n            .then(arrayBuffer => {\n            const wavFile = readWavFile(arrayBuffer);\n            const tape = new Tape(url, wavFile);\n            const waveformDisplay = new WaveformDisplay(wavFile.rate);\n            const title = document.createElement(\"span\");\n            title.innerText = test.name;\n            const header = document.createElement(\"div\");\n            header.appendChild(title);\n            header.classList.add(\"test_header\");\n            testResult.append(header);\n            const panel = document.createElement(\"div\");\n            panel.classList.add(\"expandable_panel\");\n            testResult.append(panel);\n            const explanation = document.createElement(\"p\");\n            panel.append(explanation);\n            header.addEventListener(\"click\", () => {\n                testResult.classList.toggle(\"expanded\");\n            });\n            WaveformDisplay.makeWaveformDisplay(\"Original samples\", tape.originalSamples, panel, waveformDisplay);\n            if (test.isHighSpeed()) {\n                WaveformDisplay.makeWaveformDisplay(\"High pass filter\", tape.filteredSamples, panel, waveformDisplay);\n            }\n            else {\n                WaveformDisplay.makeWaveformDisplay(\"Low speed filter\", tape.lowSpeedSamples, panel, waveformDisplay);\n            }\n            let pass;\n            switch (test.type) {\n                case TestType.LOW_SPEED_PULSE:\n                case TestType.LOW_SPEED_NO_PULSE: {\n                    const decoder = new LowSpeedAnteoTapeDecoder(tape);\n                    const pulse = decoder.isPulseAt(Math.round(wavFile.samples.length / 2), LowSpeedAnteoTapeDecoder.DEFAULT_THRESHOLD, true);\n                    waveformDisplay.addWaveformAnnotations(pulse.waveformAnnotations);\n                    if (pulse.explanation !== \"\") {\n                        explanation.innerText = pulse.explanation;\n                    }\n                    else {\n                        explanation.remove();\n                    }\n                    pass = pulse.resultType === PulseResultType.PULSE === (test.type === TestType.LOW_SPEED_PULSE);\n                    break;\n                }\n                case TestType.LOW_SPEED_PROOF: {\n                    const decoder = new LowSpeedAnteoTapeDecoder(tape);\n                    const [_, pulse] = decoder.findNextPulse(0, LowSpeedAnteoTapeDecoder.DEFAULT_THRESHOLD);\n                    if (pulse === undefined) {\n                        // Ran off the end of the tape.\n                        pass = false;\n                        explanation.innerText = \"Ran off the end of the tape\";\n                    }\n                    else {\n                        const waveformAnnotations = [];\n                        const success = decoder.proofPulseDistance(pulse.frame, waveformAnnotations);\n                        waveformDisplay.addWaveformAnnotations(waveformAnnotations);\n                        if (success) {\n                            explanation.remove();\n                        }\n                        else {\n                            explanation.innerText = \"Proof failed\";\n                        }\n                        pass = success;\n                    }\n                    break;\n                }\n                case TestType.LOW_SPEED_BITS:\n                case TestType.HIGH_SPEED_BITS: {\n                    const decoder = test.type === TestType.LOW_SPEED_BITS\n                        ? new LowSpeedAnteoTapeDecoder(tape)\n                        : new HighSpeedTapeDecoder(tape);\n                    const [actualBits, waveformAnnotations, explanations] = decoder.readBits(0);\n                    if (test.bin === undefined) {\n                        // We don't yet support binUrl.\n                        throw new Error(\"must define bin for bits test\");\n                    }\n                    const expectBits = test.bin.replace(/ /g, \"\");\n                    waveformDisplay.addWaveformAnnotations(waveformAnnotations);\n                    pass = actualBits === expectBits;\n                    if (!pass) {\n                        explanations.unshift(\"Expected \" + expectBits + \" but got \" + actualBits + \".\");\n                    }\n                    if (explanations.length === 0) {\n                        explanation.remove();\n                    }\n                    else {\n                        let html = \"\";\n                        for (const e of explanations) {\n                            if (html !== \"\") {\n                                html += \"<br>\";\n                            }\n                            html += escapeHtml(e);\n                        }\n                        explanation.innerHTML = html;\n                    }\n                    break;\n                }\n            }\n            header.appendChild(makePassFailLabel(pass));\n        })\n            .catch(reason => {\n            const title = document.createElement(\"span\");\n            title.innerText = test.name + \" (\" + reason + \")\";\n            const header = document.createElement(\"div\");\n            header.appendChild(title);\n            // header.classList.add(\"test_header\");\n            testResult.append(header);\n            header.appendChild(makePassFailLabel(false));\n        });\n    }\n    for (const include of testFile.includes) {\n        const testFileDiv = document.createElement(\"div\");\n        parent.appendChild(testFileDiv);\n        loadTestFile(testFileDiv, include, testFile.url);\n    }\n}\nfunction loadTestFile(parent, relativeUrl, parentUrl) {\n    const url = new URL(relativeUrl, parentUrl).href;\n    fetch(url, { cache: \"reload\" })\n        .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        throw new Error(response.statusText);\n    })\n        .then(json => {\n        runTests(parent, new TestFile(url, json));\n    })\n        .catch(reason => {\n        const title = document.createElement(\"span\");\n        title.innerText = url + \" (\" + reason + \")\";\n        const header = document.createElement(\"div\");\n        header.appendChild(title);\n        // header.classList.add(\"test_header\");\n        parent.append(header);\n        header.appendChild(makePassFailLabel(false));\n    });\n}\n/**\n * Show the test screen and start loading the test JSON file.\n */\nfunction showTestScreen() {\n    const screen = showScreen(\"test_screen\");\n    clearElement(screen);\n    const pageHeader = document.createElement(\"h1\");\n    pageHeader.innerText = \"Test Results\";\n    screen.appendChild(pageHeader);\n    loadTestFile(screen, \"tests/tests.json\", document.baseURI);\n}\n/**\n * Handle the browser's back and forward history buttons.\n */\nfunction handleNewLocation() {\n    const hash = window.location.hash;\n    switch (hash) {\n        case \"\":\n        case \"#\":\n        default:\n            showScreen(\"drop_screen\");\n            break;\n        case \"#test\":\n            showTestScreen();\n            break;\n    }\n}\nexport function main() {\n    showScreen(\"drop_screen\");\n    // Configure uploading box.\n    const dropZone = document.getElementById(\"drop_zone\");\n    const dropUpload = document.getElementById(\"drop_upload\");\n    const dropS3 = document.querySelectorAll(\"#test_files button\");\n    const dropProgress = document.getElementById(\"drop_progress\");\n    const uploader = new Uploader(dropZone, dropUpload, dropS3, dropProgress, handleAudioBuffer);\n    // Configure action buttons.\n    const exportDataButton = document.getElementById(\"export_data_button\");\n    const importDataButton = document.getElementById(\"import_data_button\");\n    const browseDataButton = document.getElementById(\"browse_data_button\");\n    const runTestsButton = document.getElementById(\"run_tests_button\");\n    const copyToClipboardButton = document.getElementById(\"copy_to_clipboard_button\");\n    const importButton = document.getElementById(\"import_button\");\n    exportDataButton.addEventListener(\"click\", event => showExportData());\n    importDataButton.addEventListener(\"click\", event => showImportData());\n    browseDataButton.addEventListener(\"click\", event => {\n        const browseScreen = showScreen(\"browse_screen\");\n        populateBrowseScreen(browseScreen);\n    });\n    runTestsButton.addEventListener(\"click\", () => window.location.href = \"#test\");\n    copyToClipboardButton.addEventListener(\"click\", event => copyToClipboard());\n    importButton.addEventListener(\"click\", event => importData());\n    window.addEventListener(\"popstate\", handleNewLocation);\n}\n","import { main } from \"./Main\";\nmain();\n"],"sourceRoot":""}